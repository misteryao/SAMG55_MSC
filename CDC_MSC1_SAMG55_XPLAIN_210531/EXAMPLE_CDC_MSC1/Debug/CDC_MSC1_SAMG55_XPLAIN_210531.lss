
CDC_MSC1_SAMG55_XPLAIN_210531.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000c1e4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040c1e4  0040c1e4  0001c1e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000bf0  20000000  0040c1ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00019f94  20000bf0  0040cddc  00020bf0  2**2
                  ALLOC
  4 .stack        00003004  2001ab84  00426d70  00020bf0  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  00020bf0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020c1e  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003912c  00000000  00000000  00020c77  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00007afd  00000000  00000000  00059da3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00014b60  00000000  00000000  000618a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000016d0  00000000  00000000  00076400  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001930  00000000  00000000  00077ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00024085  00000000  00000000  00079400  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000211db  00000000  00000000  0009d485  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006923d  00000000  00000000  000be660  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00004720  00000000  00000000  001278a0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	88 db 01 20 c9 59 40 00 c5 59 40 00 c5 59 40 00     ... .Y@..Y@..Y@.
  400010:	c5 59 40 00 c5 59 40 00 c5 59 40 00 00 00 00 00     .Y@..Y@..Y@.....
	...
  40002c:	c5 59 40 00 c5 59 40 00 00 00 00 00 c5 59 40 00     .Y@..Y@......Y@.
  40003c:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
  40004c:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
  40005c:	71 7f 40 00 c5 59 40 00 c5 59 40 00 00 00 00 00     q.@..Y@..Y@.....
  40006c:	45 37 40 00 59 37 40 00 c5 59 40 00 c5 59 40 00     E7@.Y7@..Y@..Y@.
  40007c:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
  40008c:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
  40009c:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
  4000ac:	c5 59 40 00 c5 59 40 00 c5 59 40 00 c5 59 40 00     .Y@..Y@..Y@..Y@.
	...
  4000fc:	c5 59 40 00 7d 42 40 00 c5 59 40 00 00 00 00 00     .Y@.}B@..Y@.....
	...

00400148 <__do_global_dtors_aux>:
  400148:	b510      	push	{r4, lr}
  40014a:	4c05      	ldr	r4, [pc, #20]	; (400160 <__do_global_dtors_aux+0x18>)
  40014c:	7823      	ldrb	r3, [r4, #0]
  40014e:	b933      	cbnz	r3, 40015e <__do_global_dtors_aux+0x16>
  400150:	4b04      	ldr	r3, [pc, #16]	; (400164 <__do_global_dtors_aux+0x1c>)
  400152:	b113      	cbz	r3, 40015a <__do_global_dtors_aux+0x12>
  400154:	4804      	ldr	r0, [pc, #16]	; (400168 <__do_global_dtors_aux+0x20>)
  400156:	f3af 8000 	nop.w
  40015a:	2301      	movs	r3, #1
  40015c:	7023      	strb	r3, [r4, #0]
  40015e:	bd10      	pop	{r4, pc}
  400160:	20000bf0 	.word	0x20000bf0
  400164:	00000000 	.word	0x00000000
  400168:	0040c1ec 	.word	0x0040c1ec

0040016c <frame_dummy>:
  40016c:	4b0c      	ldr	r3, [pc, #48]	; (4001a0 <frame_dummy+0x34>)
  40016e:	b143      	cbz	r3, 400182 <frame_dummy+0x16>
  400170:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x38>)
  400172:	490d      	ldr	r1, [pc, #52]	; (4001a8 <frame_dummy+0x3c>)
  400174:	b510      	push	{r4, lr}
  400176:	f3af 8000 	nop.w
  40017a:	480c      	ldr	r0, [pc, #48]	; (4001ac <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b923      	cbnz	r3, 40018a <frame_dummy+0x1e>
  400180:	bd10      	pop	{r4, pc}
  400182:	480a      	ldr	r0, [pc, #40]	; (4001ac <frame_dummy+0x40>)
  400184:	6803      	ldr	r3, [r0, #0]
  400186:	b933      	cbnz	r3, 400196 <frame_dummy+0x2a>
  400188:	4770      	bx	lr
  40018a:	4b09      	ldr	r3, [pc, #36]	; (4001b0 <frame_dummy+0x44>)
  40018c:	2b00      	cmp	r3, #0
  40018e:	d0f7      	beq.n	400180 <frame_dummy+0x14>
  400190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400194:	4718      	bx	r3
  400196:	4b06      	ldr	r3, [pc, #24]	; (4001b0 <frame_dummy+0x44>)
  400198:	2b00      	cmp	r3, #0
  40019a:	d0f5      	beq.n	400188 <frame_dummy+0x1c>
  40019c:	4718      	bx	r3
  40019e:	bf00      	nop
  4001a0:	00000000 	.word	0x00000000
  4001a4:	0040c1ec 	.word	0x0040c1ec
  4001a8:	20000bf4 	.word	0x20000bf4
  4001ac:	0040c1ec 	.word	0x0040c1ec
  4001b0:	00000000 	.word	0x00000000

004001b4 <sd_mmc_configure_slot>:
  4001b4:	b510      	push	{r4, lr}
  4001b6:	4b07      	ldr	r3, [pc, #28]	; (4001d4 <sd_mmc_configure_slot+0x20>)
  4001b8:	6819      	ldr	r1, [r3, #0]
  4001ba:	f891 3022 	ldrb.w	r3, [r1, #34]	; 0x22
  4001be:	3300      	adds	r3, #0
  4001c0:	bf18      	it	ne
  4001c2:	2301      	movne	r3, #1
  4001c4:	7c4a      	ldrb	r2, [r1, #17]
  4001c6:	6809      	ldr	r1, [r1, #0]
  4001c8:	4803      	ldr	r0, [pc, #12]	; (4001d8 <sd_mmc_configure_slot+0x24>)
  4001ca:	7800      	ldrb	r0, [r0, #0]
  4001cc:	4c03      	ldr	r4, [pc, #12]	; (4001dc <sd_mmc_configure_slot+0x28>)
  4001ce:	47a0      	blx	r4
  4001d0:	bd10      	pop	{r4, pc}
  4001d2:	bf00      	nop
  4001d4:	20000c0c 	.word	0x20000c0c
  4001d8:	20000c15 	.word	0x20000c15
  4001dc:	004011d1 	.word	0x004011d1

004001e0 <sd_mmc_select_slot>:
  4001e0:	b108      	cbz	r0, 4001e6 <sd_mmc_select_slot+0x6>
  4001e2:	2004      	movs	r0, #4
  4001e4:	4770      	bx	lr
  4001e6:	4b33      	ldr	r3, [pc, #204]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  4001e8:	689a      	ldr	r2, [r3, #8]
  4001ea:	0953      	lsrs	r3, r2, #5
  4001ec:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4001f0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4001f4:	025b      	lsls	r3, r3, #9
  4001f6:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
  4001f8:	f002 021f 	and.w	r2, r2, #31
  4001fc:	2301      	movs	r3, #1
  4001fe:	fa03 f202 	lsl.w	r2, r3, r2
  400202:	420a      	tst	r2, r1
  400204:	d010      	beq.n	400228 <sd_mmc_select_slot+0x48>
  400206:	4b2b      	ldr	r3, [pc, #172]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  400208:	7b9b      	ldrb	r3, [r3, #14]
  40020a:	2b01      	cmp	r3, #1
  40020c:	d004      	beq.n	400218 <sd_mmc_select_slot+0x38>
  40020e:	2204      	movs	r2, #4
  400210:	4b28      	ldr	r3, [pc, #160]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  400212:	739a      	strb	r2, [r3, #14]
  400214:	2002      	movs	r0, #2
  400216:	4770      	bx	lr
  400218:	4b27      	ldr	r3, [pc, #156]	; (4002b8 <sd_mmc_select_slot+0xd8>)
  40021a:	781b      	ldrb	r3, [r3, #0]
  40021c:	2b00      	cmp	r3, #0
  40021e:	d0f6      	beq.n	40020e <sd_mmc_select_slot+0x2e>
  400220:	2200      	movs	r2, #0
  400222:	4b26      	ldr	r3, [pc, #152]	; (4002bc <sd_mmc_select_slot+0xdc>)
  400224:	601a      	str	r2, [r3, #0]
  400226:	e7f2      	b.n	40020e <sd_mmc_select_slot+0x2e>
  400228:	b510      	push	{r4, lr}
  40022a:	4b22      	ldr	r3, [pc, #136]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  40022c:	7b9b      	ldrb	r3, [r3, #14]
  40022e:	2b04      	cmp	r3, #4
  400230:	d005      	beq.n	40023e <sd_mmc_select_slot+0x5e>
  400232:	2b01      	cmp	r3, #1
  400234:	d019      	beq.n	40026a <sd_mmc_select_slot+0x8a>
  400236:	2b03      	cmp	r3, #3
  400238:	d12c      	bne.n	400294 <sd_mmc_select_slot+0xb4>
  40023a:	2003      	movs	r0, #3
  40023c:	bd10      	pop	{r4, pc}
  40023e:	2201      	movs	r2, #1
  400240:	4b1c      	ldr	r3, [pc, #112]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  400242:	739a      	strb	r2, [r3, #14]
  400244:	4b1d      	ldr	r3, [pc, #116]	; (4002bc <sd_mmc_select_slot+0xdc>)
  400246:	681b      	ldr	r3, [r3, #0]
  400248:	b93b      	cbnz	r3, 40025a <sd_mmc_select_slot+0x7a>
  40024a:	4b1b      	ldr	r3, [pc, #108]	; (4002b8 <sd_mmc_select_slot+0xd8>)
  40024c:	701a      	strb	r2, [r3, #0]
  40024e:	4b1b      	ldr	r3, [pc, #108]	; (4002bc <sd_mmc_select_slot+0xdc>)
  400250:	491b      	ldr	r1, [pc, #108]	; (4002c0 <sd_mmc_select_slot+0xe0>)
  400252:	6059      	str	r1, [r3, #4]
  400254:	601a      	str	r2, [r3, #0]
  400256:	2002      	movs	r0, #2
  400258:	bd10      	pop	{r4, pc}
  40025a:	2200      	movs	r2, #0
  40025c:	4b16      	ldr	r3, [pc, #88]	; (4002b8 <sd_mmc_select_slot+0xd8>)
  40025e:	701a      	strb	r2, [r3, #0]
  400260:	4818      	ldr	r0, [pc, #96]	; (4002c4 <sd_mmc_select_slot+0xe4>)
  400262:	4b19      	ldr	r3, [pc, #100]	; (4002c8 <sd_mmc_select_slot+0xe8>)
  400264:	4798      	blx	r3
  400266:	2002      	movs	r0, #2
  400268:	bd10      	pop	{r4, pc}
  40026a:	4b13      	ldr	r3, [pc, #76]	; (4002b8 <sd_mmc_select_slot+0xd8>)
  40026c:	781b      	ldrb	r3, [r3, #0]
  40026e:	b13b      	cbz	r3, 400280 <sd_mmc_select_slot+0xa0>
  400270:	4b12      	ldr	r3, [pc, #72]	; (4002bc <sd_mmc_select_slot+0xdc>)
  400272:	681b      	ldr	r3, [r3, #0]
  400274:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400278:	d01a      	beq.n	4002b0 <sd_mmc_select_slot+0xd0>
  40027a:	2200      	movs	r2, #0
  40027c:	4b0f      	ldr	r3, [pc, #60]	; (4002bc <sd_mmc_select_slot+0xdc>)
  40027e:	601a      	str	r2, [r3, #0]
  400280:	4b0c      	ldr	r3, [pc, #48]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  400282:	2202      	movs	r2, #2
  400284:	739a      	strb	r2, [r3, #14]
  400286:	4a11      	ldr	r2, [pc, #68]	; (4002cc <sd_mmc_select_slot+0xec>)
  400288:	601a      	str	r2, [r3, #0]
  40028a:	2201      	movs	r2, #1
  40028c:	745a      	strb	r2, [r3, #17]
  40028e:	2200      	movs	r2, #0
  400290:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
  400294:	2200      	movs	r2, #0
  400296:	4b0e      	ldr	r3, [pc, #56]	; (4002d0 <sd_mmc_select_slot+0xf0>)
  400298:	701a      	strb	r2, [r3, #0]
  40029a:	4c06      	ldr	r4, [pc, #24]	; (4002b4 <sd_mmc_select_slot+0xd4>)
  40029c:	4b0d      	ldr	r3, [pc, #52]	; (4002d4 <sd_mmc_select_slot+0xf4>)
  40029e:	601c      	str	r4, [r3, #0]
  4002a0:	4b0d      	ldr	r3, [pc, #52]	; (4002d8 <sd_mmc_select_slot+0xf8>)
  4002a2:	4798      	blx	r3
  4002a4:	7ba0      	ldrb	r0, [r4, #14]
  4002a6:	2802      	cmp	r0, #2
  4002a8:	bf14      	ite	ne
  4002aa:	2000      	movne	r0, #0
  4002ac:	2001      	moveq	r0, #1
  4002ae:	bd10      	pop	{r4, pc}
  4002b0:	2002      	movs	r0, #2
  4002b2:	bd10      	pop	{r4, pc}
  4002b4:	20000094 	.word	0x20000094
  4002b8:	20000c14 	.word	0x20000c14
  4002bc:	e000e010 	.word	0xe000e010
  4002c0:	00726cf8 	.word	0x00726cf8
  4002c4:	00416493 	.word	0x00416493
  4002c8:	20000001 	.word	0x20000001
  4002cc:	00061a80 	.word	0x00061a80
  4002d0:	20000c15 	.word	0x20000c15
  4002d4:	20000c0c 	.word	0x20000c0c
  4002d8:	004001b5 	.word	0x004001b5

004002dc <sdio_cmd52>:
  4002dc:	b538      	push	{r3, r4, r5, lr}
  4002de:	9c04      	ldr	r4, [sp, #16]
  4002e0:	0252      	lsls	r2, r2, #9
  4002e2:	ea42 62c3 	orr.w	r2, r2, r3, lsl #27
  4002e6:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
  4002ea:	ea42 72c0 	orr.w	r2, r2, r0, lsl #31
  4002ee:	7821      	ldrb	r1, [r4, #0]
  4002f0:	4311      	orrs	r1, r2
  4002f2:	f241 3034 	movw	r0, #4916	; 0x1334
  4002f6:	4b05      	ldr	r3, [pc, #20]	; (40030c <sdio_cmd52+0x30>)
  4002f8:	4798      	blx	r3
  4002fa:	4605      	mov	r5, r0
  4002fc:	b908      	cbnz	r0, 400302 <sdio_cmd52+0x26>
  4002fe:	4628      	mov	r0, r5
  400300:	bd38      	pop	{r3, r4, r5, pc}
  400302:	4b03      	ldr	r3, [pc, #12]	; (400310 <sdio_cmd52+0x34>)
  400304:	4798      	blx	r3
  400306:	7020      	strb	r0, [r4, #0]
  400308:	e7f9      	b.n	4002fe <sdio_cmd52+0x22>
  40030a:	bf00      	nop
  40030c:	004013f9 	.word	0x004013f9
  400310:	00401411 	.word	0x00401411

00400314 <sd_mmc_cmd13>:
  400314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400318:	4c0b      	ldr	r4, [pc, #44]	; (400348 <sd_mmc_cmd13+0x34>)
  40031a:	2700      	movs	r7, #0
  40031c:	4e0b      	ldr	r6, [pc, #44]	; (40034c <sd_mmc_cmd13+0x38>)
  40031e:	4d0c      	ldr	r5, [pc, #48]	; (400350 <sd_mmc_cmd13+0x3c>)
  400320:	4639      	mov	r1, r7
  400322:	f641 300d 	movw	r0, #6925	; 0x1b0d
  400326:	47b0      	blx	r6
  400328:	4680      	mov	r8, r0
  40032a:	b150      	cbz	r0, 400342 <sd_mmc_cmd13+0x2e>
  40032c:	47a8      	blx	r5
  40032e:	b2c0      	uxtb	r0, r0
  400330:	b138      	cbz	r0, 400342 <sd_mmc_cmd13+0x2e>
  400332:	3c01      	subs	r4, #1
  400334:	d1f4      	bne.n	400320 <sd_mmc_cmd13+0xc>
  400336:	4907      	ldr	r1, [pc, #28]	; (400354 <sd_mmc_cmd13+0x40>)
  400338:	4807      	ldr	r0, [pc, #28]	; (400358 <sd_mmc_cmd13+0x44>)
  40033a:	4b08      	ldr	r3, [pc, #32]	; (40035c <sd_mmc_cmd13+0x48>)
  40033c:	4798      	blx	r3
  40033e:	f04f 0800 	mov.w	r8, #0
  400342:	4640      	mov	r0, r8
  400344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400348:	00030d41 	.word	0x00030d41
  40034c:	004013f9 	.word	0x004013f9
  400350:	00401411 	.word	0x00401411
  400354:	0040b300 	.word	0x0040b300
  400358:	0040b4c4 	.word	0x0040b4c4
  40035c:	00408395 	.word	0x00408395

00400360 <sd_mmc_cmd9_spi>:
  400360:	b510      	push	{r4, lr}
  400362:	b082      	sub	sp, #8
  400364:	4b0d      	ldr	r3, [pc, #52]	; (40039c <sd_mmc_cmd9_spi+0x3c>)
  400366:	681b      	ldr	r3, [r3, #0]
  400368:	8999      	ldrh	r1, [r3, #12]
  40036a:	2301      	movs	r3, #1
  40036c:	9300      	str	r3, [sp, #0]
  40036e:	2210      	movs	r2, #16
  400370:	4091      	lsls	r1, r2
  400372:	480b      	ldr	r0, [pc, #44]	; (4003a0 <sd_mmc_cmd9_spi+0x40>)
  400374:	4c0b      	ldr	r4, [pc, #44]	; (4003a4 <sd_mmc_cmd9_spi+0x44>)
  400376:	47a0      	blx	r4
  400378:	4603      	mov	r3, r0
  40037a:	b910      	cbnz	r0, 400382 <sd_mmc_cmd9_spi+0x22>
  40037c:	4618      	mov	r0, r3
  40037e:	b002      	add	sp, #8
  400380:	bd10      	pop	{r4, pc}
  400382:	4b06      	ldr	r3, [pc, #24]	; (40039c <sd_mmc_cmd9_spi+0x3c>)
  400384:	6818      	ldr	r0, [r3, #0]
  400386:	2101      	movs	r1, #1
  400388:	3012      	adds	r0, #18
  40038a:	4b07      	ldr	r3, [pc, #28]	; (4003a8 <sd_mmc_cmd9_spi+0x48>)
  40038c:	4798      	blx	r3
  40038e:	4603      	mov	r3, r0
  400390:	2800      	cmp	r0, #0
  400392:	d0f3      	beq.n	40037c <sd_mmc_cmd9_spi+0x1c>
  400394:	4b05      	ldr	r3, [pc, #20]	; (4003ac <sd_mmc_cmd9_spi+0x4c>)
  400396:	4798      	blx	r3
  400398:	4603      	mov	r3, r0
  40039a:	e7ef      	b.n	40037c <sd_mmc_cmd9_spi+0x1c>
  40039c:	20000c0c 	.word	0x20000c0c
  4003a0:	00081109 	.word	0x00081109
  4003a4:	00401271 	.word	0x00401271
  4003a8:	00401491 	.word	0x00401491
  4003ac:	0040150d 	.word	0x0040150d

004003b0 <sd_mmc_deselect_slot>:
  4003b0:	b508      	push	{r3, lr}
  4003b2:	4b04      	ldr	r3, [pc, #16]	; (4003c4 <sd_mmc_deselect_slot+0x14>)
  4003b4:	781b      	ldrb	r3, [r3, #0]
  4003b6:	b103      	cbz	r3, 4003ba <sd_mmc_deselect_slot+0xa>
  4003b8:	bd08      	pop	{r3, pc}
  4003ba:	2000      	movs	r0, #0
  4003bc:	4b02      	ldr	r3, [pc, #8]	; (4003c8 <sd_mmc_deselect_slot+0x18>)
  4003be:	4798      	blx	r3
  4003c0:	e7fa      	b.n	4003b8 <sd_mmc_deselect_slot+0x8>
  4003c2:	bf00      	nop
  4003c4:	20000c15 	.word	0x20000c15
  4003c8:	00401211 	.word	0x00401211

004003cc <sd_mmc_init>:
  4003cc:	b508      	push	{r3, lr}
  4003ce:	200b      	movs	r0, #11
  4003d0:	4b05      	ldr	r3, [pc, #20]	; (4003e8 <sd_mmc_init+0x1c>)
  4003d2:	4798      	blx	r3
  4003d4:	2204      	movs	r2, #4
  4003d6:	4b05      	ldr	r3, [pc, #20]	; (4003ec <sd_mmc_init+0x20>)
  4003d8:	739a      	strb	r2, [r3, #14]
  4003da:	22ff      	movs	r2, #255	; 0xff
  4003dc:	4b04      	ldr	r3, [pc, #16]	; (4003f0 <sd_mmc_init+0x24>)
  4003de:	701a      	strb	r2, [r3, #0]
  4003e0:	4b04      	ldr	r3, [pc, #16]	; (4003f4 <sd_mmc_init+0x28>)
  4003e2:	4798      	blx	r3
  4003e4:	bd08      	pop	{r3, pc}
  4003e6:	bf00      	nop
  4003e8:	0040384d 	.word	0x0040384d
  4003ec:	20000094 	.word	0x20000094
  4003f0:	20000c15 	.word	0x20000c15
  4003f4:	004011a1 	.word	0x004011a1

004003f8 <sd_mmc_check>:
  4003f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4003fc:	b087      	sub	sp, #28
  4003fe:	4b7d      	ldr	r3, [pc, #500]	; (4005f4 <sd_mmc_check+0x1fc>)
  400400:	4798      	blx	r3
  400402:	4604      	mov	r4, r0
  400404:	2801      	cmp	r0, #1
  400406:	d005      	beq.n	400414 <sd_mmc_check+0x1c>
  400408:	4b7b      	ldr	r3, [pc, #492]	; (4005f8 <sd_mmc_check+0x200>)
  40040a:	4798      	blx	r3
  40040c:	4620      	mov	r0, r4
  40040e:	b007      	add	sp, #28
  400410:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400414:	4b79      	ldr	r3, [pc, #484]	; (4005fc <sd_mmc_check+0x204>)
  400416:	681b      	ldr	r3, [r3, #0]
  400418:	2201      	movs	r2, #1
  40041a:	73da      	strb	r2, [r3, #15]
  40041c:	2500      	movs	r5, #0
  40041e:	741d      	strb	r5, [r3, #16]
  400420:	819d      	strh	r5, [r3, #12]
  400422:	4877      	ldr	r0, [pc, #476]	; (400600 <sd_mmc_check+0x208>)
  400424:	4b77      	ldr	r3, [pc, #476]	; (400604 <sd_mmc_check+0x20c>)
  400426:	4798      	blx	r3
  400428:	4b77      	ldr	r3, [pc, #476]	; (400608 <sd_mmc_check+0x210>)
  40042a:	4798      	blx	r3
  40042c:	4629      	mov	r1, r5
  40042e:	f44f 5088 	mov.w	r0, #4352	; 0x1100
  400432:	4b76      	ldr	r3, [pc, #472]	; (40060c <sd_mmc_check+0x214>)
  400434:	4798      	blx	r3
  400436:	b948      	cbnz	r0, 40044c <sd_mmc_check+0x54>
  400438:	4875      	ldr	r0, [pc, #468]	; (400610 <sd_mmc_check+0x218>)
  40043a:	4b72      	ldr	r3, [pc, #456]	; (400604 <sd_mmc_check+0x20c>)
  40043c:	4798      	blx	r3
  40043e:	4b6f      	ldr	r3, [pc, #444]	; (4005fc <sd_mmc_check+0x204>)
  400440:	681b      	ldr	r3, [r3, #0]
  400442:	2403      	movs	r4, #3
  400444:	739c      	strb	r4, [r3, #14]
  400446:	4b6c      	ldr	r3, [pc, #432]	; (4005f8 <sd_mmc_check+0x200>)
  400448:	4798      	blx	r3
  40044a:	e7df      	b.n	40040c <sd_mmc_check+0x14>
  40044c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
  400450:	f245 5008 	movw	r0, #21768	; 0x5508
  400454:	4b6d      	ldr	r3, [pc, #436]	; (40060c <sd_mmc_check+0x214>)
  400456:	4798      	blx	r3
  400458:	bb18      	cbnz	r0, 4004a2 <sd_mmc_check+0xaa>
  40045a:	f04f 0900 	mov.w	r9, #0
  40045e:	2100      	movs	r1, #0
  400460:	f244 5005 	movw	r0, #17669	; 0x4505
  400464:	4b69      	ldr	r3, [pc, #420]	; (40060c <sd_mmc_check+0x214>)
  400466:	4798      	blx	r3
  400468:	2800      	cmp	r0, #0
  40046a:	d031      	beq.n	4004d0 <sd_mmc_check+0xd8>
  40046c:	4b69      	ldr	r3, [pc, #420]	; (400614 <sd_mmc_check+0x21c>)
  40046e:	4798      	blx	r3
  400470:	f010 4fe0 	tst.w	r0, #1879048192	; 0x70000000
  400474:	d030      	beq.n	4004d8 <sd_mmc_check+0xe0>
  400476:	f241 3589 	movw	r5, #5001	; 0x1389
  40047a:	f244 5805 	movw	r8, #17669	; 0x4505
  40047e:	4e63      	ldr	r6, [pc, #396]	; (40060c <sd_mmc_check+0x214>)
  400480:	4f64      	ldr	r7, [pc, #400]	; (400614 <sd_mmc_check+0x21c>)
  400482:	f400 11fc 	and.w	r1, r0, #2064384	; 0x1f8000
  400486:	4640      	mov	r0, r8
  400488:	47b0      	blx	r6
  40048a:	2800      	cmp	r0, #0
  40048c:	d04f      	beq.n	40052e <sd_mmc_check+0x136>
  40048e:	47b8      	blx	r7
  400490:	2800      	cmp	r0, #0
  400492:	db51      	blt.n	400538 <sd_mmc_check+0x140>
  400494:	3d01      	subs	r5, #1
  400496:	d1f4      	bne.n	400482 <sd_mmc_check+0x8a>
  400498:	495f      	ldr	r1, [pc, #380]	; (400618 <sd_mmc_check+0x220>)
  40049a:	4860      	ldr	r0, [pc, #384]	; (40061c <sd_mmc_check+0x224>)
  40049c:	4b59      	ldr	r3, [pc, #356]	; (400604 <sd_mmc_check+0x20c>)
  40049e:	4798      	blx	r3
  4004a0:	e7ca      	b.n	400438 <sd_mmc_check+0x40>
  4004a2:	4b5c      	ldr	r3, [pc, #368]	; (400614 <sd_mmc_check+0x21c>)
  4004a4:	4798      	blx	r3
  4004a6:	f1b0 3fff 	cmp.w	r0, #4294967295
  4004aa:	f000 82f1 	beq.w	400a90 <sd_mmc_check+0x698>
  4004ae:	f3c0 030b 	ubfx	r3, r0, #0, #12
  4004b2:	f5b3 7fd5 	cmp.w	r3, #426	; 0x1aa
  4004b6:	d005      	beq.n	4004c4 <sd_mmc_check+0xcc>
  4004b8:	4602      	mov	r2, r0
  4004ba:	4959      	ldr	r1, [pc, #356]	; (400620 <sd_mmc_check+0x228>)
  4004bc:	4859      	ldr	r0, [pc, #356]	; (400624 <sd_mmc_check+0x22c>)
  4004be:	4b51      	ldr	r3, [pc, #324]	; (400604 <sd_mmc_check+0x20c>)
  4004c0:	4798      	blx	r3
  4004c2:	e7b9      	b.n	400438 <sd_mmc_check+0x40>
  4004c4:	4858      	ldr	r0, [pc, #352]	; (400628 <sd_mmc_check+0x230>)
  4004c6:	4b4f      	ldr	r3, [pc, #316]	; (400604 <sd_mmc_check+0x20c>)
  4004c8:	4798      	blx	r3
  4004ca:	f04f 0901 	mov.w	r9, #1
  4004ce:	e7c6      	b.n	40045e <sd_mmc_check+0x66>
  4004d0:	4951      	ldr	r1, [pc, #324]	; (400618 <sd_mmc_check+0x220>)
  4004d2:	4856      	ldr	r0, [pc, #344]	; (40062c <sd_mmc_check+0x234>)
  4004d4:	4b4b      	ldr	r3, [pc, #300]	; (400604 <sd_mmc_check+0x20c>)
  4004d6:	4798      	blx	r3
  4004d8:	4b48      	ldr	r3, [pc, #288]	; (4005fc <sd_mmc_check+0x204>)
  4004da:	681b      	ldr	r3, [r3, #0]
  4004dc:	7bdb      	ldrb	r3, [r3, #15]
  4004de:	f013 0f01 	tst.w	r3, #1
  4004e2:	d135      	bne.n	400550 <sd_mmc_check+0x158>
  4004e4:	4b45      	ldr	r3, [pc, #276]	; (4005fc <sd_mmc_check+0x204>)
  4004e6:	681b      	ldr	r3, [r3, #0]
  4004e8:	7bdb      	ldrb	r3, [r3, #15]
  4004ea:	f013 0f04 	tst.w	r3, #4
  4004ee:	f040 8256 	bne.w	40099e <sd_mmc_check+0x5a6>
  4004f2:	4b42      	ldr	r3, [pc, #264]	; (4005fc <sd_mmc_check+0x204>)
  4004f4:	681b      	ldr	r3, [r3, #0]
  4004f6:	7bdb      	ldrb	r3, [r3, #15]
  4004f8:	f003 0309 	and.w	r3, r3, #9
  4004fc:	2b01      	cmp	r3, #1
  4004fe:	f000 82bd 	beq.w	400a7c <sd_mmc_check+0x684>
  400502:	4b3e      	ldr	r3, [pc, #248]	; (4005fc <sd_mmc_check+0x204>)
  400504:	681b      	ldr	r3, [r3, #0]
  400506:	7bdb      	ldrb	r3, [r3, #15]
  400508:	f013 0f01 	tst.w	r3, #1
  40050c:	d003      	beq.n	400516 <sd_mmc_check+0x11e>
  40050e:	4b48      	ldr	r3, [pc, #288]	; (400630 <sd_mmc_check+0x238>)
  400510:	4798      	blx	r3
  400512:	2800      	cmp	r0, #0
  400514:	d090      	beq.n	400438 <sd_mmc_check+0x40>
  400516:	4b47      	ldr	r3, [pc, #284]	; (400634 <sd_mmc_check+0x23c>)
  400518:	4798      	blx	r3
  40051a:	4847      	ldr	r0, [pc, #284]	; (400638 <sd_mmc_check+0x240>)
  40051c:	4b39      	ldr	r3, [pc, #228]	; (400604 <sd_mmc_check+0x20c>)
  40051e:	4798      	blx	r3
  400520:	4b36      	ldr	r3, [pc, #216]	; (4005fc <sd_mmc_check+0x204>)
  400522:	681b      	ldr	r3, [r3, #0]
  400524:	2200      	movs	r2, #0
  400526:	739a      	strb	r2, [r3, #14]
  400528:	4b33      	ldr	r3, [pc, #204]	; (4005f8 <sd_mmc_check+0x200>)
  40052a:	4798      	blx	r3
  40052c:	e76e      	b.n	40040c <sd_mmc_check+0x14>
  40052e:	493a      	ldr	r1, [pc, #232]	; (400618 <sd_mmc_check+0x220>)
  400530:	483e      	ldr	r0, [pc, #248]	; (40062c <sd_mmc_check+0x234>)
  400532:	4b34      	ldr	r3, [pc, #208]	; (400604 <sd_mmc_check+0x20c>)
  400534:	4798      	blx	r3
  400536:	e77f      	b.n	400438 <sd_mmc_check+0x40>
  400538:	f010 6f00 	tst.w	r0, #134217728	; 0x8000000
  40053c:	d104      	bne.n	400548 <sd_mmc_check+0x150>
  40053e:	4b2f      	ldr	r3, [pc, #188]	; (4005fc <sd_mmc_check+0x204>)
  400540:	681b      	ldr	r3, [r3, #0]
  400542:	2204      	movs	r2, #4
  400544:	73da      	strb	r2, [r3, #15]
  400546:	e7cd      	b.n	4004e4 <sd_mmc_check+0xec>
  400548:	4b2c      	ldr	r3, [pc, #176]	; (4005fc <sd_mmc_check+0x204>)
  40054a:	681b      	ldr	r3, [r3, #0]
  40054c:	2205      	movs	r2, #5
  40054e:	73da      	strb	r2, [r3, #15]
  400550:	ea4f 7989 	mov.w	r9, r9, lsl #30
  400554:	f641 35ef 	movw	r5, #7151	; 0x1bef
  400558:	f04f 0800 	mov.w	r8, #0
  40055c:	4e2b      	ldr	r6, [pc, #172]	; (40060c <sd_mmc_check+0x214>)
  40055e:	4f2d      	ldr	r7, [pc, #180]	; (400614 <sd_mmc_check+0x21c>)
  400560:	4641      	mov	r1, r8
  400562:	f241 1037 	movw	r0, #4407	; 0x1137
  400566:	47b0      	blx	r6
  400568:	b188      	cbz	r0, 40058e <sd_mmc_check+0x196>
  40056a:	4649      	mov	r1, r9
  40056c:	f241 1029 	movw	r0, #4393	; 0x1129
  400570:	47b0      	blx	r6
  400572:	2800      	cmp	r0, #0
  400574:	d039      	beq.n	4005ea <sd_mmc_check+0x1f2>
  400576:	47b8      	blx	r7
  400578:	f010 0f01 	tst.w	r0, #1
  40057c:	d06c      	beq.n	400658 <sd_mmc_check+0x260>
  40057e:	3d01      	subs	r5, #1
  400580:	d1ee      	bne.n	400560 <sd_mmc_check+0x168>
  400582:	4602      	mov	r2, r0
  400584:	492d      	ldr	r1, [pc, #180]	; (40063c <sd_mmc_check+0x244>)
  400586:	482e      	ldr	r0, [pc, #184]	; (400640 <sd_mmc_check+0x248>)
  400588:	4b1e      	ldr	r3, [pc, #120]	; (400604 <sd_mmc_check+0x20c>)
  40058a:	4798      	blx	r3
  40058c:	e003      	b.n	400596 <sd_mmc_check+0x19e>
  40058e:	492b      	ldr	r1, [pc, #172]	; (40063c <sd_mmc_check+0x244>)
  400590:	482c      	ldr	r0, [pc, #176]	; (400644 <sd_mmc_check+0x24c>)
  400592:	4b1c      	ldr	r3, [pc, #112]	; (400604 <sd_mmc_check+0x20c>)
  400594:	4798      	blx	r3
  400596:	482c      	ldr	r0, [pc, #176]	; (400648 <sd_mmc_check+0x250>)
  400598:	4b1a      	ldr	r3, [pc, #104]	; (400604 <sd_mmc_check+0x20c>)
  40059a:	4798      	blx	r3
  40059c:	4b17      	ldr	r3, [pc, #92]	; (4005fc <sd_mmc_check+0x204>)
  40059e:	681b      	ldr	r3, [r3, #0]
  4005a0:	2202      	movs	r2, #2
  4005a2:	73da      	strb	r2, [r3, #15]
  4005a4:	2100      	movs	r1, #0
  4005a6:	f44f 5088 	mov.w	r0, #4352	; 0x1100
  4005aa:	4b18      	ldr	r3, [pc, #96]	; (40060c <sd_mmc_check+0x214>)
  4005ac:	4798      	blx	r3
  4005ae:	2800      	cmp	r0, #0
  4005b0:	f43f af42 	beq.w	400438 <sd_mmc_check+0x40>
  4005b4:	f641 35ee 	movw	r5, #7150	; 0x1bee
  4005b8:	f04f 0800 	mov.w	r8, #0
  4005bc:	4e13      	ldr	r6, [pc, #76]	; (40060c <sd_mmc_check+0x214>)
  4005be:	4f15      	ldr	r7, [pc, #84]	; (400614 <sd_mmc_check+0x21c>)
  4005c0:	4641      	mov	r1, r8
  4005c2:	f241 1001 	movw	r0, #4353	; 0x1101
  4005c6:	47b0      	blx	r6
  4005c8:	2800      	cmp	r0, #0
  4005ca:	f000 80d4 	beq.w	400776 <sd_mmc_check+0x37e>
  4005ce:	47b8      	blx	r7
  4005d0:	f010 0f01 	tst.w	r0, #1
  4005d4:	f000 80d7 	beq.w	400786 <sd_mmc_check+0x38e>
  4005d8:	3d01      	subs	r5, #1
  4005da:	f1b5 3fff 	cmp.w	r5, #4294967295
  4005de:	d1ef      	bne.n	4005c0 <sd_mmc_check+0x1c8>
  4005e0:	491a      	ldr	r1, [pc, #104]	; (40064c <sd_mmc_check+0x254>)
  4005e2:	481b      	ldr	r0, [pc, #108]	; (400650 <sd_mmc_check+0x258>)
  4005e4:	4b07      	ldr	r3, [pc, #28]	; (400604 <sd_mmc_check+0x20c>)
  4005e6:	4798      	blx	r3
  4005e8:	e726      	b.n	400438 <sd_mmc_check+0x40>
  4005ea:	4914      	ldr	r1, [pc, #80]	; (40063c <sd_mmc_check+0x244>)
  4005ec:	4819      	ldr	r0, [pc, #100]	; (400654 <sd_mmc_check+0x25c>)
  4005ee:	4b05      	ldr	r3, [pc, #20]	; (400604 <sd_mmc_check+0x20c>)
  4005f0:	4798      	blx	r3
  4005f2:	e7d0      	b.n	400596 <sd_mmc_check+0x19e>
  4005f4:	004001e1 	.word	0x004001e1
  4005f8:	004003b1 	.word	0x004003b1
  4005fc:	20000c0c 	.word	0x20000c0c
  400600:	0040b350 	.word	0x0040b350
  400604:	00408395 	.word	0x00408395
  400608:	00401239 	.word	0x00401239
  40060c:	004013f9 	.word	0x004013f9
  400610:	0040b478 	.word	0x0040b478
  400614:	00401411 	.word	0x00401411
  400618:	0040b2e8 	.word	0x0040b2e8
  40061c:	0040b3b0 	.word	0x0040b3b0
  400620:	0040b2f8 	.word	0x0040b2f8
  400624:	0040b368 	.word	0x0040b368
  400628:	0040b390 	.word	0x0040b390
  40062c:	0040b3a0 	.word	0x0040b3a0
  400630:	00400315 	.word	0x00400315
  400634:	004001b5 	.word	0x004001b5
  400638:	0040b4b0 	.word	0x0040b4b0
  40063c:	0040b2d8 	.word	0x0040b2d8
  400640:	0040b3f4 	.word	0x0040b3f4
  400644:	0040b3cc 	.word	0x0040b3cc
  400648:	0040b49c 	.word	0x0040b49c
  40064c:	0040b2c8 	.word	0x0040b2c8
  400650:	0040b45c 	.word	0x0040b45c
  400654:	0040b3e0 	.word	0x0040b3e0
  400658:	2100      	movs	r1, #0
  40065a:	f240 503a 	movw	r0, #1338	; 0x53a
  40065e:	4bab      	ldr	r3, [pc, #684]	; (40090c <sd_mmc_check+0x514>)
  400660:	4798      	blx	r3
  400662:	2800      	cmp	r0, #0
  400664:	f000 8082 	beq.w	40076c <sd_mmc_check+0x374>
  400668:	4ba9      	ldr	r3, [pc, #676]	; (400910 <sd_mmc_check+0x518>)
  40066a:	4798      	blx	r3
  40066c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
  400670:	d005      	beq.n	40067e <sd_mmc_check+0x286>
  400672:	4ba8      	ldr	r3, [pc, #672]	; (400914 <sd_mmc_check+0x51c>)
  400674:	681a      	ldr	r2, [r3, #0]
  400676:	7bd3      	ldrb	r3, [r2, #15]
  400678:	f043 0308 	orr.w	r3, r3, #8
  40067c:	73d3      	strb	r3, [r2, #15]
  40067e:	2100      	movs	r1, #0
  400680:	f241 103b 	movw	r0, #4411	; 0x113b
  400684:	4ba1      	ldr	r3, [pc, #644]	; (40090c <sd_mmc_check+0x514>)
  400686:	4798      	blx	r3
  400688:	2800      	cmp	r0, #0
  40068a:	f43f aed5 	beq.w	400438 <sd_mmc_check+0x40>
  40068e:	4ba1      	ldr	r3, [pc, #644]	; (400914 <sd_mmc_check+0x51c>)
  400690:	681b      	ldr	r3, [r3, #0]
  400692:	7bdb      	ldrb	r3, [r3, #15]
  400694:	f013 0f01 	tst.w	r3, #1
  400698:	f43f af24 	beq.w	4004e4 <sd_mmc_check+0xec>
  40069c:	4b9e      	ldr	r3, [pc, #632]	; (400918 <sd_mmc_check+0x520>)
  40069e:	4798      	blx	r3
  4006a0:	2800      	cmp	r0, #0
  4006a2:	f43f aec9 	beq.w	400438 <sd_mmc_check+0x40>
  4006a6:	4b9b      	ldr	r3, [pc, #620]	; (400914 <sd_mmc_check+0x51c>)
  4006a8:	681a      	ldr	r2, [r3, #0]
  4006aa:	7d53      	ldrb	r3, [r2, #21]
  4006ac:	f003 0007 	and.w	r0, r3, #7
  4006b0:	499a      	ldr	r1, [pc, #616]	; (40091c <sd_mmc_check+0x524>)
  4006b2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
  4006b6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  4006ba:	fb01 f100 	mul.w	r1, r1, r0
  4006be:	f3c3 03c3 	ubfx	r3, r3, #3, #4
  4006c2:	4897      	ldr	r0, [pc, #604]	; (400920 <sd_mmc_check+0x528>)
  4006c4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  4006c8:	fb03 f301 	mul.w	r3, r3, r1
  4006cc:	6013      	str	r3, [r2, #0]
  4006ce:	7c93      	ldrb	r3, [r2, #18]
  4006d0:	099b      	lsrs	r3, r3, #6
  4006d2:	f040 8143 	bne.w	40095c <sd_mmc_check+0x564>
  4006d6:	7e91      	ldrb	r1, [r2, #26]
  4006d8:	7e50      	ldrb	r0, [r2, #25]
  4006da:	7e13      	ldrb	r3, [r2, #24]
  4006dc:	029b      	lsls	r3, r3, #10
  4006de:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
  4006e2:	ea43 13a1 	orr.w	r3, r3, r1, asr #6
  4006e6:	7f10      	ldrb	r0, [r2, #28]
  4006e8:	7ed1      	ldrb	r1, [r2, #27]
  4006ea:	0049      	lsls	r1, r1, #1
  4006ec:	ea41 11e0 	orr.w	r1, r1, r0, asr #7
  4006f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4006f4:	3301      	adds	r3, #1
  4006f6:	f001 0107 	and.w	r1, r1, #7
  4006fa:	3102      	adds	r1, #2
  4006fc:	408b      	lsls	r3, r1
  4006fe:	7dd1      	ldrb	r1, [r2, #23]
  400700:	f001 010f 	and.w	r1, r1, #15
  400704:	408b      	lsls	r3, r1
  400706:	0a9b      	lsrs	r3, r3, #10
  400708:	6053      	str	r3, [r2, #4]
  40070a:	8991      	ldrh	r1, [r2, #12]
  40070c:	0409      	lsls	r1, r1, #16
  40070e:	f241 1037 	movw	r0, #4407	; 0x1137
  400712:	4b7e      	ldr	r3, [pc, #504]	; (40090c <sd_mmc_check+0x514>)
  400714:	4798      	blx	r3
  400716:	2800      	cmp	r0, #0
  400718:	f43f ae8e 	beq.w	400438 <sd_mmc_check+0x40>
  40071c:	2301      	movs	r3, #1
  40071e:	9300      	str	r3, [sp, #0]
  400720:	2208      	movs	r2, #8
  400722:	2100      	movs	r1, #0
  400724:	487f      	ldr	r0, [pc, #508]	; (400924 <sd_mmc_check+0x52c>)
  400726:	4d80      	ldr	r5, [pc, #512]	; (400928 <sd_mmc_check+0x530>)
  400728:	47a8      	blx	r5
  40072a:	2800      	cmp	r0, #0
  40072c:	f43f ae84 	beq.w	400438 <sd_mmc_check+0x40>
  400730:	2101      	movs	r1, #1
  400732:	a804      	add	r0, sp, #16
  400734:	4b7d      	ldr	r3, [pc, #500]	; (40092c <sd_mmc_check+0x534>)
  400736:	4798      	blx	r3
  400738:	2800      	cmp	r0, #0
  40073a:	f43f ae7d 	beq.w	400438 <sd_mmc_check+0x40>
  40073e:	4b7c      	ldr	r3, [pc, #496]	; (400930 <sd_mmc_check+0x538>)
  400740:	4798      	blx	r3
  400742:	2800      	cmp	r0, #0
  400744:	f43f ae78 	beq.w	400438 <sd_mmc_check+0x40>
  400748:	f89d 3010 	ldrb.w	r3, [sp, #16]
  40074c:	f003 030f 	and.w	r3, r3, #15
  400750:	2b01      	cmp	r3, #1
  400752:	f000 8115 	beq.w	400980 <sd_mmc_check+0x588>
  400756:	2b00      	cmp	r3, #0
  400758:	f000 810d 	beq.w	400976 <sd_mmc_check+0x57e>
  40075c:	2b02      	cmp	r3, #2
  40075e:	f000 8114 	beq.w	40098a <sd_mmc_check+0x592>
  400762:	4b6c      	ldr	r3, [pc, #432]	; (400914 <sd_mmc_check+0x51c>)
  400764:	681b      	ldr	r3, [r3, #0]
  400766:	2210      	movs	r2, #16
  400768:	741a      	strb	r2, [r3, #16]
  40076a:	e6bb      	b.n	4004e4 <sd_mmc_check+0xec>
  40076c:	4971      	ldr	r1, [pc, #452]	; (400934 <sd_mmc_check+0x53c>)
  40076e:	4872      	ldr	r0, [pc, #456]	; (400938 <sd_mmc_check+0x540>)
  400770:	4b72      	ldr	r3, [pc, #456]	; (40093c <sd_mmc_check+0x544>)
  400772:	4798      	blx	r3
  400774:	e70f      	b.n	400596 <sd_mmc_check+0x19e>
  400776:	f5c5 52df 	rsb	r2, r5, #7136	; 0x1be0
  40077a:	320e      	adds	r2, #14
  40077c:	4970      	ldr	r1, [pc, #448]	; (400940 <sd_mmc_check+0x548>)
  40077e:	4871      	ldr	r0, [pc, #452]	; (400944 <sd_mmc_check+0x54c>)
  400780:	4b6e      	ldr	r3, [pc, #440]	; (40093c <sd_mmc_check+0x544>)
  400782:	4798      	blx	r3
  400784:	e658      	b.n	400438 <sd_mmc_check+0x40>
  400786:	2100      	movs	r1, #0
  400788:	f240 503a 	movw	r0, #1338	; 0x53a
  40078c:	4b5f      	ldr	r3, [pc, #380]	; (40090c <sd_mmc_check+0x514>)
  40078e:	4798      	blx	r3
  400790:	b328      	cbz	r0, 4007de <sd_mmc_check+0x3e6>
  400792:	4b5f      	ldr	r3, [pc, #380]	; (400910 <sd_mmc_check+0x518>)
  400794:	4798      	blx	r3
  400796:	f000 40c0 	and.w	r0, r0, #1610612736	; 0x60000000
  40079a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  40079e:	d105      	bne.n	4007ac <sd_mmc_check+0x3b4>
  4007a0:	4b5c      	ldr	r3, [pc, #368]	; (400914 <sd_mmc_check+0x51c>)
  4007a2:	681a      	ldr	r2, [r3, #0]
  4007a4:	7bd3      	ldrb	r3, [r2, #15]
  4007a6:	f043 0308 	orr.w	r3, r3, #8
  4007aa:	73d3      	strb	r3, [r2, #15]
  4007ac:	2100      	movs	r1, #0
  4007ae:	f241 103b 	movw	r0, #4411	; 0x113b
  4007b2:	4b56      	ldr	r3, [pc, #344]	; (40090c <sd_mmc_check+0x514>)
  4007b4:	4798      	blx	r3
  4007b6:	2800      	cmp	r0, #0
  4007b8:	f43f ae3e 	beq.w	400438 <sd_mmc_check+0x40>
  4007bc:	4b56      	ldr	r3, [pc, #344]	; (400918 <sd_mmc_check+0x520>)
  4007be:	4798      	blx	r3
  4007c0:	2800      	cmp	r0, #0
  4007c2:	f43f ae39 	beq.w	400438 <sd_mmc_check+0x40>
  4007c6:	4b53      	ldr	r3, [pc, #332]	; (400914 <sd_mmc_check+0x51c>)
  4007c8:	681a      	ldr	r2, [r3, #0]
  4007ca:	7c93      	ldrb	r3, [r2, #18]
  4007cc:	f3c3 0383 	ubfx	r3, r3, #2, #4
  4007d0:	3b01      	subs	r3, #1
  4007d2:	2b03      	cmp	r3, #3
  4007d4:	d808      	bhi.n	4007e8 <sd_mmc_check+0x3f0>
  4007d6:	e8df f003 	tbb	[pc, r3]
  4007da:	7673      	.short	0x7673
  4007dc:	7c79      	.short	0x7c79
  4007de:	4958      	ldr	r1, [pc, #352]	; (400940 <sd_mmc_check+0x548>)
  4007e0:	4855      	ldr	r0, [pc, #340]	; (400938 <sd_mmc_check+0x540>)
  4007e2:	4b56      	ldr	r3, [pc, #344]	; (40093c <sd_mmc_check+0x544>)
  4007e4:	4798      	blx	r3
  4007e6:	e627      	b.n	400438 <sd_mmc_check+0x40>
  4007e8:	2312      	movs	r3, #18
  4007ea:	7413      	strb	r3, [r2, #16]
  4007ec:	7d53      	ldrb	r3, [r2, #21]
  4007ee:	f3c3 00c3 	ubfx	r0, r3, #3, #4
  4007f2:	f003 0307 	and.w	r3, r3, #7
  4007f6:	4949      	ldr	r1, [pc, #292]	; (40091c <sd_mmc_check+0x524>)
  4007f8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
  4007fc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  400800:	fb03 f301 	mul.w	r3, r3, r1
  400804:	4950      	ldr	r1, [pc, #320]	; (400948 <sd_mmc_check+0x550>)
  400806:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
  40080a:	fb03 f301 	mul.w	r3, r3, r1
  40080e:	6013      	str	r3, [r2, #0]
  400810:	7e91      	ldrb	r1, [r2, #26]
  400812:	7e50      	ldrb	r0, [r2, #25]
  400814:	7e13      	ldrb	r3, [r2, #24]
  400816:	029b      	lsls	r3, r3, #10
  400818:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
  40081c:	ea43 13a1 	orr.w	r3, r3, r1, asr #6
  400820:	f3c3 030b 	ubfx	r3, r3, #0, #12
  400824:	f640 71ff 	movw	r1, #4095	; 0xfff
  400828:	428b      	cmp	r3, r1
  40082a:	d00f      	beq.n	40084c <sd_mmc_check+0x454>
  40082c:	7f10      	ldrb	r0, [r2, #28]
  40082e:	7ed1      	ldrb	r1, [r2, #27]
  400830:	0049      	lsls	r1, r1, #1
  400832:	ea41 11e0 	orr.w	r1, r1, r0, asr #7
  400836:	3301      	adds	r3, #1
  400838:	f001 0107 	and.w	r1, r1, #7
  40083c:	3102      	adds	r1, #2
  40083e:	408b      	lsls	r3, r1
  400840:	7dd1      	ldrb	r1, [r2, #23]
  400842:	f001 010f 	and.w	r1, r1, #15
  400846:	408b      	lsls	r3, r1
  400848:	0a9b      	lsrs	r3, r3, #10
  40084a:	6053      	str	r3, [r2, #4]
  40084c:	7c13      	ldrb	r3, [r2, #16]
  40084e:	2b3f      	cmp	r3, #63	; 0x3f
  400850:	d94b      	bls.n	4008ea <sd_mmc_check+0x4f2>
  400852:	2100      	movs	r1, #0
  400854:	9100      	str	r1, [sp, #0]
  400856:	2301      	movs	r3, #1
  400858:	f44f 7200 	mov.w	r2, #512	; 0x200
  40085c:	483b      	ldr	r0, [pc, #236]	; (40094c <sd_mmc_check+0x554>)
  40085e:	4d32      	ldr	r5, [pc, #200]	; (400928 <sd_mmc_check+0x530>)
  400860:	47a8      	blx	r5
  400862:	2800      	cmp	r0, #0
  400864:	f43f ade8 	beq.w	400438 <sd_mmc_check+0x40>
  400868:	2500      	movs	r5, #0
  40086a:	4e39      	ldr	r6, [pc, #228]	; (400950 <sd_mmc_check+0x558>)
  40086c:	a803      	add	r0, sp, #12
  40086e:	47b0      	blx	r6
  400870:	2800      	cmp	r0, #0
  400872:	f43f ade1 	beq.w	400438 <sd_mmc_check+0x40>
  400876:	3501      	adds	r5, #1
  400878:	b2ad      	uxth	r5, r5
  40087a:	2d32      	cmp	r5, #50	; 0x32
  40087c:	d1f6      	bne.n	40086c <sd_mmc_check+0x474>
  40087e:	4b25      	ldr	r3, [pc, #148]	; (400914 <sd_mmc_check+0x51c>)
  400880:	681b      	ldr	r3, [r3, #0]
  400882:	7e9a      	ldrb	r2, [r3, #26]
  400884:	7e59      	ldrb	r1, [r3, #25]
  400886:	7e1b      	ldrb	r3, [r3, #24]
  400888:	029b      	lsls	r3, r3, #10
  40088a:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
  40088e:	ea43 13a2 	orr.w	r3, r3, r2, asr #6
  400892:	f3c3 030b 	ubfx	r3, r3, #0, #12
  400896:	f640 72ff 	movw	r2, #4095	; 0xfff
  40089a:	4293      	cmp	r3, r2
  40089c:	d10e      	bne.n	4008bc <sd_mmc_check+0x4c4>
  40089e:	4e2c      	ldr	r6, [pc, #176]	; (400950 <sd_mmc_check+0x558>)
  4008a0:	a804      	add	r0, sp, #16
  4008a2:	47b0      	blx	r6
  4008a4:	2800      	cmp	r0, #0
  4008a6:	f43f adc7 	beq.w	400438 <sd_mmc_check+0x40>
  4008aa:	3501      	adds	r5, #1
  4008ac:	b2ad      	uxth	r5, r5
  4008ae:	2d35      	cmp	r5, #53	; 0x35
  4008b0:	d9f6      	bls.n	4008a0 <sd_mmc_check+0x4a8>
  4008b2:	4b18      	ldr	r3, [pc, #96]	; (400914 <sd_mmc_check+0x51c>)
  4008b4:	681a      	ldr	r2, [r3, #0]
  4008b6:	9b04      	ldr	r3, [sp, #16]
  4008b8:	085b      	lsrs	r3, r3, #1
  4008ba:	6053      	str	r3, [r2, #4]
  4008bc:	4e24      	ldr	r6, [pc, #144]	; (400950 <sd_mmc_check+0x558>)
  4008be:	e012      	b.n	4008e6 <sd_mmc_check+0x4ee>
  4008c0:	2314      	movs	r3, #20
  4008c2:	7413      	strb	r3, [r2, #16]
  4008c4:	e792      	b.n	4007ec <sd_mmc_check+0x3f4>
  4008c6:	2322      	movs	r3, #34	; 0x22
  4008c8:	7413      	strb	r3, [r2, #16]
  4008ca:	e78f      	b.n	4007ec <sd_mmc_check+0x3f4>
  4008cc:	2330      	movs	r3, #48	; 0x30
  4008ce:	7413      	strb	r3, [r2, #16]
  4008d0:	e78c      	b.n	4007ec <sd_mmc_check+0x3f4>
  4008d2:	2340      	movs	r3, #64	; 0x40
  4008d4:	7413      	strb	r3, [r2, #16]
  4008d6:	e789      	b.n	4007ec <sd_mmc_check+0x3f4>
  4008d8:	a804      	add	r0, sp, #16
  4008da:	47b0      	blx	r6
  4008dc:	2800      	cmp	r0, #0
  4008de:	f43f adab 	beq.w	400438 <sd_mmc_check+0x40>
  4008e2:	3501      	adds	r5, #1
  4008e4:	b2ad      	uxth	r5, r5
  4008e6:	2d7f      	cmp	r5, #127	; 0x7f
  4008e8:	d9f6      	bls.n	4008d8 <sd_mmc_check+0x4e0>
  4008ea:	f44f 7100 	mov.w	r1, #512	; 0x200
  4008ee:	f241 1010 	movw	r0, #4368	; 0x1110
  4008f2:	4b06      	ldr	r3, [pc, #24]	; (40090c <sd_mmc_check+0x514>)
  4008f4:	4798      	blx	r3
  4008f6:	2800      	cmp	r0, #0
  4008f8:	f43f ad9e 	beq.w	400438 <sd_mmc_check+0x40>
  4008fc:	4b15      	ldr	r3, [pc, #84]	; (400954 <sd_mmc_check+0x55c>)
  4008fe:	4798      	blx	r3
  400900:	2800      	cmp	r0, #0
  400902:	f43f ad99 	beq.w	400438 <sd_mmc_check+0x40>
  400906:	4b14      	ldr	r3, [pc, #80]	; (400958 <sd_mmc_check+0x560>)
  400908:	4798      	blx	r3
  40090a:	e606      	b.n	40051a <sd_mmc_check+0x122>
  40090c:	004013f9 	.word	0x004013f9
  400910:	00401411 	.word	0x00401411
  400914:	20000c0c 	.word	0x20000c0c
  400918:	00400361 	.word	0x00400361
  40091c:	0040b4e0 	.word	0x0040b4e0
  400920:	0040b4fc 	.word	0x0040b4fc
  400924:	00081133 	.word	0x00081133
  400928:	00401271 	.word	0x00401271
  40092c:	00401491 	.word	0x00401491
  400930:	0040150d 	.word	0x0040150d
  400934:	0040b2d8 	.word	0x0040b2d8
  400938:	0040b424 	.word	0x0040b424
  40093c:	00408395 	.word	0x00408395
  400940:	0040b2c8 	.word	0x0040b2c8
  400944:	0040b438 	.word	0x0040b438
  400948:	0040b310 	.word	0x0040b310
  40094c:	00081108 	.word	0x00081108
  400950:	0040141d 	.word	0x0040141d
  400954:	00400315 	.word	0x00400315
  400958:	004001b5 	.word	0x004001b5
  40095c:	7ed1      	ldrb	r1, [r2, #27]
  40095e:	7e90      	ldrb	r0, [r2, #26]
  400960:	7e53      	ldrb	r3, [r2, #25]
  400962:	041b      	lsls	r3, r3, #16
  400964:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  400968:	430b      	orrs	r3, r1
  40096a:	f3c3 0315 	ubfx	r3, r3, #0, #22
  40096e:	3301      	adds	r3, #1
  400970:	025b      	lsls	r3, r3, #9
  400972:	6053      	str	r3, [r2, #4]
  400974:	e6c9      	b.n	40070a <sd_mmc_check+0x312>
  400976:	4b48      	ldr	r3, [pc, #288]	; (400a98 <sd_mmc_check+0x6a0>)
  400978:	681b      	ldr	r3, [r3, #0]
  40097a:	2210      	movs	r2, #16
  40097c:	741a      	strb	r2, [r3, #16]
  40097e:	e5b1      	b.n	4004e4 <sd_mmc_check+0xec>
  400980:	4b45      	ldr	r3, [pc, #276]	; (400a98 <sd_mmc_check+0x6a0>)
  400982:	681b      	ldr	r3, [r3, #0]
  400984:	221a      	movs	r2, #26
  400986:	741a      	strb	r2, [r3, #16]
  400988:	e5ac      	b.n	4004e4 <sd_mmc_check+0xec>
  40098a:	f89d 3012 	ldrb.w	r3, [sp, #18]
  40098e:	09db      	lsrs	r3, r3, #7
  400990:	4b41      	ldr	r3, [pc, #260]	; (400a98 <sd_mmc_check+0x6a0>)
  400992:	681b      	ldr	r3, [r3, #0]
  400994:	bf14      	ite	ne
  400996:	2230      	movne	r2, #48	; 0x30
  400998:	2220      	moveq	r2, #32
  40099a:	741a      	strb	r2, [r3, #16]
  40099c:	e5a2      	b.n	4004e4 <sd_mmc_check+0xec>
  40099e:	2509      	movs	r5, #9
  4009a0:	2700      	movs	r7, #0
  4009a2:	4e3e      	ldr	r6, [pc, #248]	; (400a9c <sd_mmc_check+0x6a4>)
  4009a4:	f1a5 0309 	sub.w	r3, r5, #9
  4009a8:	aa03      	add	r2, sp, #12
  4009aa:	4413      	add	r3, r2
  4009ac:	9300      	str	r3, [sp, #0]
  4009ae:	463b      	mov	r3, r7
  4009b0:	462a      	mov	r2, r5
  4009b2:	4639      	mov	r1, r7
  4009b4:	4638      	mov	r0, r7
  4009b6:	47b0      	blx	r6
  4009b8:	3501      	adds	r5, #1
  4009ba:	2d0d      	cmp	r5, #13
  4009bc:	d1f2      	bne.n	4009a4 <sd_mmc_check+0x5ac>
  4009be:	f89d 300d 	ldrb.w	r3, [sp, #13]
  4009c2:	f89d 900c 	ldrb.w	r9, [sp, #12]
  4009c6:	eb09 2903 	add.w	r9, r9, r3, lsl #8
  4009ca:	f89d 300e 	ldrb.w	r3, [sp, #14]
  4009ce:	eb09 4903 	add.w	r9, r9, r3, lsl #16
  4009d2:	f89d 300f 	ldrb.w	r3, [sp, #15]
  4009d6:	eb09 6903 	add.w	r9, r9, r3, lsl #24
  4009da:	464e      	mov	r6, r9
  4009dc:	f04f 0800 	mov.w	r8, #0
  4009e0:	4f2e      	ldr	r7, [pc, #184]	; (400a9c <sd_mmc_check+0x6a4>)
  4009e2:	e00b      	b.n	4009fc <sd_mmc_check+0x604>
  4009e4:	f89d 3011 	ldrb.w	r3, [sp, #17]
  4009e8:	2b00      	cmp	r3, #0
  4009ea:	f43f ad25 	beq.w	400438 <sd_mmc_check+0x40>
  4009ee:	3302      	adds	r3, #2
  4009f0:	441e      	add	r6, r3
  4009f2:	f509 7380 	add.w	r3, r9, #256	; 0x100
  4009f6:	429e      	cmp	r6, r3
  4009f8:	f63f ad1e 	bhi.w	400438 <sd_mmc_check+0x40>
  4009fc:	2500      	movs	r5, #0
  4009fe:	ab04      	add	r3, sp, #16
  400a00:	442b      	add	r3, r5
  400a02:	9300      	str	r3, [sp, #0]
  400a04:	4643      	mov	r3, r8
  400a06:	19aa      	adds	r2, r5, r6
  400a08:	4641      	mov	r1, r8
  400a0a:	4640      	mov	r0, r8
  400a0c:	47b8      	blx	r7
  400a0e:	3501      	adds	r5, #1
  400a10:	2d03      	cmp	r5, #3
  400a12:	d1f4      	bne.n	4009fe <sd_mmc_check+0x606>
  400a14:	f89d 3010 	ldrb.w	r3, [sp, #16]
  400a18:	2bff      	cmp	r3, #255	; 0xff
  400a1a:	f43f ad0d 	beq.w	400438 <sd_mmc_check+0x40>
  400a1e:	2b22      	cmp	r3, #34	; 0x22
  400a20:	d1e0      	bne.n	4009e4 <sd_mmc_check+0x5ec>
  400a22:	f89d 3012 	ldrb.w	r3, [sp, #18]
  400a26:	2b00      	cmp	r3, #0
  400a28:	d1dc      	bne.n	4009e4 <sd_mmc_check+0x5ec>
  400a2a:	ad04      	add	r5, sp, #16
  400a2c:	f106 0906 	add.w	r9, r6, #6
  400a30:	f04f 0800 	mov.w	r8, #0
  400a34:	4f19      	ldr	r7, [pc, #100]	; (400a9c <sd_mmc_check+0x6a4>)
  400a36:	9500      	str	r5, [sp, #0]
  400a38:	4643      	mov	r3, r8
  400a3a:	4632      	mov	r2, r6
  400a3c:	4641      	mov	r1, r8
  400a3e:	4640      	mov	r0, r8
  400a40:	47b8      	blx	r7
  400a42:	3601      	adds	r6, #1
  400a44:	3501      	adds	r5, #1
  400a46:	454e      	cmp	r6, r9
  400a48:	d1f5      	bne.n	400a36 <sd_mmc_check+0x63e>
  400a4a:	f89d 3015 	ldrb.w	r3, [sp, #21]
  400a4e:	2b32      	cmp	r3, #50	; 0x32
  400a50:	bf28      	it	cs
  400a52:	2332      	movcs	r3, #50	; 0x32
  400a54:	4a10      	ldr	r2, [pc, #64]	; (400a98 <sd_mmc_check+0x6a0>)
  400a56:	6812      	ldr	r2, [r2, #0]
  400a58:	f3c3 00c3 	ubfx	r0, r3, #3, #4
  400a5c:	f003 0307 	and.w	r3, r3, #7
  400a60:	490f      	ldr	r1, [pc, #60]	; (400aa0 <sd_mmc_check+0x6a8>)
  400a62:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
  400a66:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  400a6a:	fb03 f301 	mul.w	r3, r3, r1
  400a6e:	490d      	ldr	r1, [pc, #52]	; (400aa4 <sd_mmc_check+0x6ac>)
  400a70:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
  400a74:	fb03 f301 	mul.w	r3, r3, r1
  400a78:	6013      	str	r3, [r2, #0]
  400a7a:	e53a      	b.n	4004f2 <sd_mmc_check+0xfa>
  400a7c:	f44f 7100 	mov.w	r1, #512	; 0x200
  400a80:	f241 1010 	movw	r0, #4368	; 0x1110
  400a84:	4b08      	ldr	r3, [pc, #32]	; (400aa8 <sd_mmc_check+0x6b0>)
  400a86:	4798      	blx	r3
  400a88:	2800      	cmp	r0, #0
  400a8a:	f47f ad3a 	bne.w	400502 <sd_mmc_check+0x10a>
  400a8e:	e4d3      	b.n	400438 <sd_mmc_check+0x40>
  400a90:	f04f 0900 	mov.w	r9, #0
  400a94:	e4e3      	b.n	40045e <sd_mmc_check+0x66>
  400a96:	bf00      	nop
  400a98:	20000c0c 	.word	0x20000c0c
  400a9c:	004002dd 	.word	0x004002dd
  400aa0:	0040b4e0 	.word	0x0040b4e0
  400aa4:	0040b4fc 	.word	0x0040b4fc
  400aa8:	004013f9 	.word	0x004013f9

00400aac <sd_mmc_get_type>:
  400aac:	b508      	push	{r3, lr}
  400aae:	4b05      	ldr	r3, [pc, #20]	; (400ac4 <sd_mmc_get_type+0x18>)
  400ab0:	4798      	blx	r3
  400ab2:	b108      	cbz	r0, 400ab8 <sd_mmc_get_type+0xc>
  400ab4:	2000      	movs	r0, #0
  400ab6:	bd08      	pop	{r3, pc}
  400ab8:	4b03      	ldr	r3, [pc, #12]	; (400ac8 <sd_mmc_get_type+0x1c>)
  400aba:	4798      	blx	r3
  400abc:	4b03      	ldr	r3, [pc, #12]	; (400acc <sd_mmc_get_type+0x20>)
  400abe:	681b      	ldr	r3, [r3, #0]
  400ac0:	7bd8      	ldrb	r0, [r3, #15]
  400ac2:	bd08      	pop	{r3, pc}
  400ac4:	004001e1 	.word	0x004001e1
  400ac8:	004003b1 	.word	0x004003b1
  400acc:	20000c0c 	.word	0x20000c0c

00400ad0 <sd_mmc_get_capacity>:
  400ad0:	b508      	push	{r3, lr}
  400ad2:	4b05      	ldr	r3, [pc, #20]	; (400ae8 <sd_mmc_get_capacity+0x18>)
  400ad4:	4798      	blx	r3
  400ad6:	b108      	cbz	r0, 400adc <sd_mmc_get_capacity+0xc>
  400ad8:	2000      	movs	r0, #0
  400ada:	bd08      	pop	{r3, pc}
  400adc:	4b03      	ldr	r3, [pc, #12]	; (400aec <sd_mmc_get_capacity+0x1c>)
  400ade:	4798      	blx	r3
  400ae0:	4b03      	ldr	r3, [pc, #12]	; (400af0 <sd_mmc_get_capacity+0x20>)
  400ae2:	681b      	ldr	r3, [r3, #0]
  400ae4:	6858      	ldr	r0, [r3, #4]
  400ae6:	bd08      	pop	{r3, pc}
  400ae8:	004001e1 	.word	0x004001e1
  400aec:	004003b1 	.word	0x004003b1
  400af0:	20000c0c 	.word	0x20000c0c

00400af4 <sd_mmc_is_write_protected>:
  400af4:	2000      	movs	r0, #0
  400af6:	4770      	bx	lr

00400af8 <sd_mmc_init_read_blocks>:
  400af8:	b570      	push	{r4, r5, r6, lr}
  400afa:	b082      	sub	sp, #8
  400afc:	460e      	mov	r6, r1
  400afe:	4615      	mov	r5, r2
  400b00:	4b15      	ldr	r3, [pc, #84]	; (400b58 <sd_mmc_init_read_blocks+0x60>)
  400b02:	4798      	blx	r3
  400b04:	4604      	mov	r4, r0
  400b06:	b110      	cbz	r0, 400b0e <sd_mmc_init_read_blocks+0x16>
  400b08:	4620      	mov	r0, r4
  400b0a:	b002      	add	sp, #8
  400b0c:	bd70      	pop	{r4, r5, r6, pc}
  400b0e:	4b13      	ldr	r3, [pc, #76]	; (400b5c <sd_mmc_init_read_blocks+0x64>)
  400b10:	4798      	blx	r3
  400b12:	b1c8      	cbz	r0, 400b48 <sd_mmc_init_read_blocks+0x50>
  400b14:	4b12      	ldr	r3, [pc, #72]	; (400b60 <sd_mmc_init_read_blocks+0x68>)
  400b16:	4813      	ldr	r0, [pc, #76]	; (400b64 <sd_mmc_init_read_blocks+0x6c>)
  400b18:	2d01      	cmp	r5, #1
  400b1a:	bf98      	it	ls
  400b1c:	4618      	movls	r0, r3
  400b1e:	4b12      	ldr	r3, [pc, #72]	; (400b68 <sd_mmc_init_read_blocks+0x70>)
  400b20:	681b      	ldr	r3, [r3, #0]
  400b22:	7bdb      	ldrb	r3, [r3, #15]
  400b24:	f013 0f08 	tst.w	r3, #8
  400b28:	bf08      	it	eq
  400b2a:	0276      	lsleq	r6, r6, #9
  400b2c:	2301      	movs	r3, #1
  400b2e:	9300      	str	r3, [sp, #0]
  400b30:	462b      	mov	r3, r5
  400b32:	f44f 7200 	mov.w	r2, #512	; 0x200
  400b36:	4631      	mov	r1, r6
  400b38:	4e0c      	ldr	r6, [pc, #48]	; (400b6c <sd_mmc_init_read_blocks+0x74>)
  400b3a:	47b0      	blx	r6
  400b3c:	b140      	cbz	r0, 400b50 <sd_mmc_init_read_blocks+0x58>
  400b3e:	4b0c      	ldr	r3, [pc, #48]	; (400b70 <sd_mmc_init_read_blocks+0x78>)
  400b40:	801d      	strh	r5, [r3, #0]
  400b42:	4b0c      	ldr	r3, [pc, #48]	; (400b74 <sd_mmc_init_read_blocks+0x7c>)
  400b44:	801d      	strh	r5, [r3, #0]
  400b46:	e7df      	b.n	400b08 <sd_mmc_init_read_blocks+0x10>
  400b48:	4b0b      	ldr	r3, [pc, #44]	; (400b78 <sd_mmc_init_read_blocks+0x80>)
  400b4a:	4798      	blx	r3
  400b4c:	2405      	movs	r4, #5
  400b4e:	e7db      	b.n	400b08 <sd_mmc_init_read_blocks+0x10>
  400b50:	4b09      	ldr	r3, [pc, #36]	; (400b78 <sd_mmc_init_read_blocks+0x80>)
  400b52:	4798      	blx	r3
  400b54:	2405      	movs	r4, #5
  400b56:	e7d7      	b.n	400b08 <sd_mmc_init_read_blocks+0x10>
  400b58:	004001e1 	.word	0x004001e1
  400b5c:	00400315 	.word	0x00400315
  400b60:	00081111 	.word	0x00081111
  400b64:	00101112 	.word	0x00101112
  400b68:	20000c0c 	.word	0x20000c0c
  400b6c:	00401271 	.word	0x00401271
  400b70:	20000c10 	.word	0x20000c10
  400b74:	20000c12 	.word	0x20000c12
  400b78:	004003b1 	.word	0x004003b1

00400b7c <sd_mmc_start_read_blocks>:
  400b7c:	b510      	push	{r4, lr}
  400b7e:	460c      	mov	r4, r1
  400b80:	4b06      	ldr	r3, [pc, #24]	; (400b9c <sd_mmc_start_read_blocks+0x20>)
  400b82:	4798      	blx	r3
  400b84:	b920      	cbnz	r0, 400b90 <sd_mmc_start_read_blocks+0x14>
  400b86:	2200      	movs	r2, #0
  400b88:	4b05      	ldr	r3, [pc, #20]	; (400ba0 <sd_mmc_start_read_blocks+0x24>)
  400b8a:	801a      	strh	r2, [r3, #0]
  400b8c:	2005      	movs	r0, #5
  400b8e:	bd10      	pop	{r4, pc}
  400b90:	4a03      	ldr	r2, [pc, #12]	; (400ba0 <sd_mmc_start_read_blocks+0x24>)
  400b92:	8813      	ldrh	r3, [r2, #0]
  400b94:	1b1c      	subs	r4, r3, r4
  400b96:	8014      	strh	r4, [r2, #0]
  400b98:	2000      	movs	r0, #0
  400b9a:	bd10      	pop	{r4, pc}
  400b9c:	00401491 	.word	0x00401491
  400ba0:	20000c10 	.word	0x20000c10

00400ba4 <sd_mmc_wait_end_of_read_blocks>:
  400ba4:	b510      	push	{r4, lr}
  400ba6:	4604      	mov	r4, r0
  400ba8:	4b13      	ldr	r3, [pc, #76]	; (400bf8 <sd_mmc_wait_end_of_read_blocks+0x54>)
  400baa:	4798      	blx	r3
  400bac:	b908      	cbnz	r0, 400bb2 <sd_mmc_wait_end_of_read_blocks+0xe>
  400bae:	2005      	movs	r0, #5
  400bb0:	bd10      	pop	{r4, pc}
  400bb2:	b184      	cbz	r4, 400bd6 <sd_mmc_wait_end_of_read_blocks+0x32>
  400bb4:	2200      	movs	r2, #0
  400bb6:	4b11      	ldr	r3, [pc, #68]	; (400bfc <sd_mmc_wait_end_of_read_blocks+0x58>)
  400bb8:	801a      	strh	r2, [r3, #0]
  400bba:	4b11      	ldr	r3, [pc, #68]	; (400c00 <sd_mmc_wait_end_of_read_blocks+0x5c>)
  400bbc:	881b      	ldrh	r3, [r3, #0]
  400bbe:	2b01      	cmp	r3, #1
  400bc0:	d00f      	beq.n	400be2 <sd_mmc_wait_end_of_read_blocks+0x3e>
  400bc2:	2100      	movs	r1, #0
  400bc4:	f243 100c 	movw	r0, #12556	; 0x310c
  400bc8:	4b0e      	ldr	r3, [pc, #56]	; (400c04 <sd_mmc_wait_end_of_read_blocks+0x60>)
  400bca:	4798      	blx	r3
  400bcc:	b168      	cbz	r0, 400bea <sd_mmc_wait_end_of_read_blocks+0x46>
  400bce:	4b0e      	ldr	r3, [pc, #56]	; (400c08 <sd_mmc_wait_end_of_read_blocks+0x64>)
  400bd0:	4798      	blx	r3
  400bd2:	2000      	movs	r0, #0
  400bd4:	bd10      	pop	{r4, pc}
  400bd6:	4b09      	ldr	r3, [pc, #36]	; (400bfc <sd_mmc_wait_end_of_read_blocks+0x58>)
  400bd8:	881b      	ldrh	r3, [r3, #0]
  400bda:	2b00      	cmp	r3, #0
  400bdc:	d0ed      	beq.n	400bba <sd_mmc_wait_end_of_read_blocks+0x16>
  400bde:	2000      	movs	r0, #0
  400be0:	bd10      	pop	{r4, pc}
  400be2:	4b09      	ldr	r3, [pc, #36]	; (400c08 <sd_mmc_wait_end_of_read_blocks+0x64>)
  400be4:	4798      	blx	r3
  400be6:	2000      	movs	r0, #0
  400be8:	bd10      	pop	{r4, pc}
  400bea:	2100      	movs	r1, #0
  400bec:	f243 100c 	movw	r0, #12556	; 0x310c
  400bf0:	4b04      	ldr	r3, [pc, #16]	; (400c04 <sd_mmc_wait_end_of_read_blocks+0x60>)
  400bf2:	4798      	blx	r3
  400bf4:	e7eb      	b.n	400bce <sd_mmc_wait_end_of_read_blocks+0x2a>
  400bf6:	bf00      	nop
  400bf8:	0040150d 	.word	0x0040150d
  400bfc:	20000c10 	.word	0x20000c10
  400c00:	20000c12 	.word	0x20000c12
  400c04:	004013f9 	.word	0x004013f9
  400c08:	004003b1 	.word	0x004003b1

00400c0c <sd_mmc_init_write_blocks>:
  400c0c:	b570      	push	{r4, r5, r6, lr}
  400c0e:	b082      	sub	sp, #8
  400c10:	460e      	mov	r6, r1
  400c12:	4615      	mov	r5, r2
  400c14:	4b11      	ldr	r3, [pc, #68]	; (400c5c <sd_mmc_init_write_blocks+0x50>)
  400c16:	4798      	blx	r3
  400c18:	4604      	mov	r4, r0
  400c1a:	b9c0      	cbnz	r0, 400c4e <sd_mmc_init_write_blocks+0x42>
  400c1c:	4b10      	ldr	r3, [pc, #64]	; (400c60 <sd_mmc_init_write_blocks+0x54>)
  400c1e:	4811      	ldr	r0, [pc, #68]	; (400c64 <sd_mmc_init_write_blocks+0x58>)
  400c20:	2d01      	cmp	r5, #1
  400c22:	bf98      	it	ls
  400c24:	4618      	movls	r0, r3
  400c26:	4b10      	ldr	r3, [pc, #64]	; (400c68 <sd_mmc_init_write_blocks+0x5c>)
  400c28:	681b      	ldr	r3, [r3, #0]
  400c2a:	7bdb      	ldrb	r3, [r3, #15]
  400c2c:	f013 0f08 	tst.w	r3, #8
  400c30:	bf08      	it	eq
  400c32:	0276      	lsleq	r6, r6, #9
  400c34:	2301      	movs	r3, #1
  400c36:	9300      	str	r3, [sp, #0]
  400c38:	462b      	mov	r3, r5
  400c3a:	f44f 7200 	mov.w	r2, #512	; 0x200
  400c3e:	4631      	mov	r1, r6
  400c40:	4e0a      	ldr	r6, [pc, #40]	; (400c6c <sd_mmc_init_write_blocks+0x60>)
  400c42:	47b0      	blx	r6
  400c44:	b130      	cbz	r0, 400c54 <sd_mmc_init_write_blocks+0x48>
  400c46:	4b0a      	ldr	r3, [pc, #40]	; (400c70 <sd_mmc_init_write_blocks+0x64>)
  400c48:	801d      	strh	r5, [r3, #0]
  400c4a:	4b0a      	ldr	r3, [pc, #40]	; (400c74 <sd_mmc_init_write_blocks+0x68>)
  400c4c:	801d      	strh	r5, [r3, #0]
  400c4e:	4620      	mov	r0, r4
  400c50:	b002      	add	sp, #8
  400c52:	bd70      	pop	{r4, r5, r6, pc}
  400c54:	4b08      	ldr	r3, [pc, #32]	; (400c78 <sd_mmc_init_write_blocks+0x6c>)
  400c56:	4798      	blx	r3
  400c58:	2405      	movs	r4, #5
  400c5a:	e7f8      	b.n	400c4e <sd_mmc_init_write_blocks+0x42>
  400c5c:	004001e1 	.word	0x004001e1
  400c60:	00089118 	.word	0x00089118
  400c64:	00109119 	.word	0x00109119
  400c68:	20000c0c 	.word	0x20000c0c
  400c6c:	00401271 	.word	0x00401271
  400c70:	20000c10 	.word	0x20000c10
  400c74:	20000c12 	.word	0x20000c12
  400c78:	004003b1 	.word	0x004003b1

00400c7c <sd_mmc_start_write_blocks>:
  400c7c:	b510      	push	{r4, lr}
  400c7e:	460c      	mov	r4, r1
  400c80:	4b06      	ldr	r3, [pc, #24]	; (400c9c <sd_mmc_start_write_blocks+0x20>)
  400c82:	4798      	blx	r3
  400c84:	b920      	cbnz	r0, 400c90 <sd_mmc_start_write_blocks+0x14>
  400c86:	2200      	movs	r2, #0
  400c88:	4b05      	ldr	r3, [pc, #20]	; (400ca0 <sd_mmc_start_write_blocks+0x24>)
  400c8a:	801a      	strh	r2, [r3, #0]
  400c8c:	2005      	movs	r0, #5
  400c8e:	bd10      	pop	{r4, pc}
  400c90:	4a03      	ldr	r2, [pc, #12]	; (400ca0 <sd_mmc_start_write_blocks+0x24>)
  400c92:	8813      	ldrh	r3, [r2, #0]
  400c94:	1b1c      	subs	r4, r3, r4
  400c96:	8014      	strh	r4, [r2, #0]
  400c98:	2000      	movs	r0, #0
  400c9a:	bd10      	pop	{r4, pc}
  400c9c:	00401511 	.word	0x00401511
  400ca0:	20000c10 	.word	0x20000c10

00400ca4 <sd_mmc_wait_end_of_write_blocks>:
  400ca4:	b510      	push	{r4, lr}
  400ca6:	4604      	mov	r4, r0
  400ca8:	4b09      	ldr	r3, [pc, #36]	; (400cd0 <sd_mmc_wait_end_of_write_blocks+0x2c>)
  400caa:	4798      	blx	r3
  400cac:	b908      	cbnz	r0, 400cb2 <sd_mmc_wait_end_of_write_blocks+0xe>
  400cae:	2005      	movs	r0, #5
  400cb0:	bd10      	pop	{r4, pc}
  400cb2:	b134      	cbz	r4, 400cc2 <sd_mmc_wait_end_of_write_blocks+0x1e>
  400cb4:	2200      	movs	r2, #0
  400cb6:	4b07      	ldr	r3, [pc, #28]	; (400cd4 <sd_mmc_wait_end_of_write_blocks+0x30>)
  400cb8:	801a      	strh	r2, [r3, #0]
  400cba:	4b07      	ldr	r3, [pc, #28]	; (400cd8 <sd_mmc_wait_end_of_write_blocks+0x34>)
  400cbc:	4798      	blx	r3
  400cbe:	2000      	movs	r0, #0
  400cc0:	bd10      	pop	{r4, pc}
  400cc2:	4b04      	ldr	r3, [pc, #16]	; (400cd4 <sd_mmc_wait_end_of_write_blocks+0x30>)
  400cc4:	881b      	ldrh	r3, [r3, #0]
  400cc6:	2b00      	cmp	r3, #0
  400cc8:	d0f7      	beq.n	400cba <sd_mmc_wait_end_of_write_blocks+0x16>
  400cca:	2000      	movs	r0, #0
  400ccc:	bd10      	pop	{r4, pc}
  400cce:	bf00      	nop
  400cd0:	00401591 	.word	0x00401591
  400cd4:	20000c10 	.word	0x20000c10
  400cd8:	004003b1 	.word	0x004003b1

00400cdc <sd_mmc_test_unit_ready>:
 */

static bool sd_mmc_ejected[2] = {false, false};

Ctrl_status sd_mmc_test_unit_ready(uint8_t slot)
{
  400cdc:	b510      	push	{r4, lr}
  400cde:	4604      	mov	r4, r0
	switch (sd_mmc_check(slot))
  400ce0:	4b0f      	ldr	r3, [pc, #60]	; (400d20 <sd_mmc_test_unit_ready+0x44>)
  400ce2:	4798      	blx	r3
  400ce4:	2801      	cmp	r0, #1
  400ce6:	d018      	beq.n	400d1a <sd_mmc_test_unit_ready+0x3e>
  400ce8:	b118      	cbz	r0, 400cf2 <sd_mmc_test_unit_ready+0x16>
  400cea:	2802      	cmp	r0, #2
  400cec:	d010      	beq.n	400d10 <sd_mmc_test_unit_ready+0x34>
	case SD_MMC_ERR_NO_CARD:
		sd_mmc_ejected[slot] = false;
		return CTRL_NO_PRESENT;

	default:
		return CTRL_FAIL;
  400cee:	2001      	movs	r0, #1
  400cf0:	bd10      	pop	{r4, pc}
		if (sd_mmc_ejected[slot]) {
  400cf2:	4b0c      	ldr	r3, [pc, #48]	; (400d24 <sd_mmc_test_unit_ready+0x48>)
  400cf4:	5d1b      	ldrb	r3, [r3, r4]
  400cf6:	b10b      	cbz	r3, 400cfc <sd_mmc_test_unit_ready+0x20>
			return CTRL_NO_PRESENT;
  400cf8:	2002      	movs	r0, #2
	}
}
  400cfa:	bd10      	pop	{r4, pc}
		if (sd_mmc_get_type(slot) & (CARD_TYPE_SD | CARD_TYPE_MMC)) {
  400cfc:	4620      	mov	r0, r4
  400cfe:	4b0a      	ldr	r3, [pc, #40]	; (400d28 <sd_mmc_test_unit_ready+0x4c>)
  400d00:	4798      	blx	r3
  400d02:	f000 0003 	and.w	r0, r0, #3
		return CTRL_NO_PRESENT;
  400d06:	2800      	cmp	r0, #0
  400d08:	bf14      	ite	ne
  400d0a:	2000      	movne	r0, #0
  400d0c:	2002      	moveq	r0, #2
  400d0e:	bd10      	pop	{r4, pc}
		sd_mmc_ejected[slot] = false;
  400d10:	2200      	movs	r2, #0
  400d12:	4b04      	ldr	r3, [pc, #16]	; (400d24 <sd_mmc_test_unit_ready+0x48>)
  400d14:	551a      	strb	r2, [r3, r4]
		return CTRL_NO_PRESENT;
  400d16:	2002      	movs	r0, #2
  400d18:	bd10      	pop	{r4, pc}
		return CTRL_BUSY;
  400d1a:	2003      	movs	r0, #3
  400d1c:	bd10      	pop	{r4, pc}
  400d1e:	bf00      	nop
  400d20:	004003f9 	.word	0x004003f9
  400d24:	20000c18 	.word	0x20000c18
  400d28:	00400aad 	.word	0x00400aad

00400d2c <sd_mmc_test_unit_ready_0>:

Ctrl_status sd_mmc_test_unit_ready_0(void)
{
  400d2c:	b508      	push	{r3, lr}
	return sd_mmc_test_unit_ready(0);
  400d2e:	2000      	movs	r0, #0
  400d30:	4b01      	ldr	r3, [pc, #4]	; (400d38 <sd_mmc_test_unit_ready_0+0xc>)
  400d32:	4798      	blx	r3
}
  400d34:	bd08      	pop	{r3, pc}
  400d36:	bf00      	nop
  400d38:	00400cdd 	.word	0x00400cdd

00400d3c <sd_mmc_read_capacity>:
{
	return sd_mmc_test_unit_ready(1);
}

Ctrl_status sd_mmc_read_capacity(uint8_t slot, uint32_t *nb_sector)
{
  400d3c:	b538      	push	{r3, r4, r5, lr}
  400d3e:	4604      	mov	r4, r0
  400d40:	460d      	mov	r5, r1
	// Return last sector address (-1)
	*nb_sector = (sd_mmc_get_capacity(slot) * 2) - 1;
  400d42:	4b04      	ldr	r3, [pc, #16]	; (400d54 <sd_mmc_read_capacity+0x18>)
  400d44:	4798      	blx	r3
  400d46:	0040      	lsls	r0, r0, #1
  400d48:	3801      	subs	r0, #1
  400d4a:	6028      	str	r0, [r5, #0]
	return sd_mmc_test_unit_ready(slot);
  400d4c:	4620      	mov	r0, r4
  400d4e:	4b02      	ldr	r3, [pc, #8]	; (400d58 <sd_mmc_read_capacity+0x1c>)
  400d50:	4798      	blx	r3
}
  400d52:	bd38      	pop	{r3, r4, r5, pc}
  400d54:	00400ad1 	.word	0x00400ad1
  400d58:	00400cdd 	.word	0x00400cdd

00400d5c <sd_mmc_read_capacity_0>:

Ctrl_status sd_mmc_read_capacity_0(uint32_t *nb_sector)
{
  400d5c:	b508      	push	{r3, lr}
	return sd_mmc_read_capacity(0, nb_sector);
  400d5e:	4601      	mov	r1, r0
  400d60:	2000      	movs	r0, #0
  400d62:	4b01      	ldr	r3, [pc, #4]	; (400d68 <sd_mmc_read_capacity_0+0xc>)
  400d64:	4798      	blx	r3
}
  400d66:	bd08      	pop	{r3, pc}
  400d68:	00400d3d 	.word	0x00400d3d

00400d6c <sd_mmc_unload_0>:
	return sd_mmc_read_capacity(1, nb_sector);
}

bool sd_mmc_unload(uint8_t slot, bool unload)
{
	sd_mmc_ejected[slot] = unload;
  400d6c:	4b01      	ldr	r3, [pc, #4]	; (400d74 <sd_mmc_unload_0+0x8>)
  400d6e:	7018      	strb	r0, [r3, #0]
}

bool sd_mmc_unload_0(bool unload)
{
	return sd_mmc_unload(0, unload);
}
  400d70:	2001      	movs	r0, #1
  400d72:	4770      	bx	lr
  400d74:	20000c18 	.word	0x20000c18

00400d78 <sd_mmc_wr_protect_0>:
{
	return sd_mmc_is_write_protected(slot);
}

bool sd_mmc_wr_protect_0(void)
{
  400d78:	b508      	push	{r3, lr}
	return sd_mmc_is_write_protected(slot);
  400d7a:	2000      	movs	r0, #0
  400d7c:	4b01      	ldr	r3, [pc, #4]	; (400d84 <sd_mmc_wr_protect_0+0xc>)
  400d7e:	4798      	blx	r3
	return sd_mmc_wr_protect(0);
}
  400d80:	bd08      	pop	{r3, pc}
  400d82:	bf00      	nop
  400d84:	00400af5 	.word	0x00400af5

00400d88 <sd_mmc_removal_0>:
}

bool sd_mmc_removal_0(void)
{
	return sd_mmc_removal(0);
}
  400d88:	2001      	movs	r0, #1
  400d8a:	4770      	bx	lr

00400d8c <sd_mmc_usb_read_10>:

COMPILER_WORD_ALIGNED
uint8_t sector_buf_1[SD_MMC_BLOCK_SIZE];

Ctrl_status sd_mmc_usb_read_10(uint8_t slot, uint32_t addr, uint16_t nb_sector)
{
  400d8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400d90:	4614      	mov	r4, r2
	bool b_first_step = true;
	uint16_t nb_step;

	switch (sd_mmc_init_read_blocks(slot, addr, nb_sector)) {
  400d92:	4b26      	ldr	r3, [pc, #152]	; (400e2c <sd_mmc_usb_read_10+0xa0>)
  400d94:	4798      	blx	r3
  400d96:	b128      	cbz	r0, 400da4 <sd_mmc_usb_read_10+0x18>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
  400d98:	2802      	cmp	r0, #2
  400d9a:	bf0c      	ite	eq
  400d9c:	2002      	moveq	r0, #2
  400d9e:	2001      	movne	r0, #1
  400da0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	}
	// Pipeline the 2 transfer in order to speed-up the performances
	nb_step = nb_sector + 1;
  400da4:	1c63      	adds	r3, r4, #1
  400da6:	b29b      	uxth	r3, r3
	bool b_first_step = true;
  400da8:	2501      	movs	r5, #1
				return CTRL_FAIL;
			}
		}
		if (!b_first_step) { // Skip first step
			// RAM -> USB
			if (!udi_msc_trans_block(true,
  400daa:	4f21      	ldr	r7, [pc, #132]	; (400e30 <sd_mmc_usb_read_10+0xa4>)
  400dac:	f8df 908c 	ldr.w	r9, [pc, #140]	; 400e3c <sd_mmc_usb_read_10+0xb0>
			if (SD_MMC_OK != sd_mmc_start_read_blocks(((nb_step % 2) == 0) ?
  400db0:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400e40 <sd_mmc_usb_read_10+0xb4>
	while (nb_step--) {
  400db4:	e005      	b.n	400dc2 <sd_mmc_usb_read_10+0x36>
			}
		} else {
			b_first_step = false;
		}
		if (nb_step) { // Skip last step
			if (SD_MMC_OK != sd_mmc_wait_end_of_read_blocks(false)) {
  400db6:	2000      	movs	r0, #0
  400db8:	4b1e      	ldr	r3, [pc, #120]	; (400e34 <sd_mmc_usb_read_10+0xa8>)
  400dba:	4798      	blx	r3
  400dbc:	bb40      	cbnz	r0, 400e10 <sd_mmc_usb_read_10+0x84>
  400dbe:	2500      	movs	r5, #0
			if (SD_MMC_OK != sd_mmc_start_read_blocks(((nb_step % 2) == 0) ?
  400dc0:	4623      	mov	r3, r4
	while (nb_step--) {
  400dc2:	1e5c      	subs	r4, r3, #1
  400dc4:	b2a4      	uxth	r4, r4
  400dc6:	b1eb      	cbz	r3, 400e04 <sd_mmc_usb_read_10+0x78>
		if (nb_step) { // Skip last step
  400dc8:	b32c      	cbz	r4, 400e16 <sd_mmc_usb_read_10+0x8a>
			if (SD_MMC_OK != sd_mmc_start_read_blocks(((nb_step % 2) == 0) ?
  400dca:	f004 0601 	and.w	r6, r4, #1
  400dce:	2101      	movs	r1, #1
  400dd0:	2e00      	cmp	r6, #0
  400dd2:	bf0c      	ite	eq
  400dd4:	4640      	moveq	r0, r8
  400dd6:	4638      	movne	r0, r7
  400dd8:	4b17      	ldr	r3, [pc, #92]	; (400e38 <sd_mmc_usb_read_10+0xac>)
  400dda:	4798      	blx	r3
  400ddc:	b9a8      	cbnz	r0, 400e0a <sd_mmc_usb_read_10+0x7e>
		if (!b_first_step) { // Skip first step
  400dde:	2d00      	cmp	r5, #0
  400de0:	d1e9      	bne.n	400db6 <sd_mmc_usb_read_10+0x2a>
			if (!udi_msc_trans_block(true,
  400de2:	2300      	movs	r3, #0
  400de4:	f44f 7200 	mov.w	r2, #512	; 0x200
  400de8:	429e      	cmp	r6, r3
  400dea:	bf0c      	ite	eq
  400dec:	4639      	moveq	r1, r7
  400dee:	4641      	movne	r1, r8
  400df0:	2001      	movs	r0, #1
  400df2:	47c8      	blx	r9
  400df4:	2800      	cmp	r0, #0
  400df6:	d1de      	bne.n	400db6 <sd_mmc_usb_read_10+0x2a>
					sd_mmc_wait_end_of_read_blocks(true);
  400df8:	2001      	movs	r0, #1
  400dfa:	4b0e      	ldr	r3, [pc, #56]	; (400e34 <sd_mmc_usb_read_10+0xa8>)
  400dfc:	4798      	blx	r3
				return CTRL_FAIL;
  400dfe:	2001      	movs	r0, #1
  400e00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				return CTRL_FAIL;
			}
		}
		b_first_step = false;
	}
	return CTRL_GOOD;
  400e04:	2000      	movs	r0, #0
  400e06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				return CTRL_FAIL;
  400e0a:	2001      	movs	r0, #1
  400e0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				return CTRL_FAIL;
  400e10:	2001      	movs	r0, #1
  400e12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		if (!b_first_step) { // Skip first step
  400e16:	2d00      	cmp	r5, #0
  400e18:	d1d1      	bne.n	400dbe <sd_mmc_usb_read_10+0x32>
			if (!udi_msc_trans_block(true,
  400e1a:	2300      	movs	r3, #0
  400e1c:	f44f 7200 	mov.w	r2, #512	; 0x200
  400e20:	4639      	mov	r1, r7
  400e22:	2001      	movs	r0, #1
  400e24:	47c8      	blx	r9
  400e26:	2800      	cmp	r0, #0
  400e28:	d1c9      	bne.n	400dbe <sd_mmc_usb_read_10+0x32>
  400e2a:	e7e5      	b.n	400df8 <sd_mmc_usb_read_10+0x6c>
  400e2c:	00400af9 	.word	0x00400af9
  400e30:	2001a730 	.word	0x2001a730
  400e34:	00400ba5 	.word	0x00400ba5
  400e38:	00400b7d 	.word	0x00400b7d
  400e3c:	00402aa5 	.word	0x00402aa5
  400e40:	2001a930 	.word	0x2001a930

00400e44 <sd_mmc_usb_read_10_0>:
}

Ctrl_status sd_mmc_usb_read_10_0(uint32_t addr, uint16_t nb_sector)
{
  400e44:	b508      	push	{r3, lr}
	return sd_mmc_usb_read_10(0, addr, nb_sector);
  400e46:	460a      	mov	r2, r1
  400e48:	4601      	mov	r1, r0
  400e4a:	2000      	movs	r0, #0
  400e4c:	4b01      	ldr	r3, [pc, #4]	; (400e54 <sd_mmc_usb_read_10_0+0x10>)
  400e4e:	4798      	blx	r3
}
  400e50:	bd08      	pop	{r3, pc}
  400e52:	bf00      	nop
  400e54:	00400d8d 	.word	0x00400d8d

00400e58 <sd_mmc_usb_write_10>:
{
	return sd_mmc_usb_read_10(1, addr, nb_sector);
}

Ctrl_status sd_mmc_usb_write_10(uint8_t slot, uint32_t addr, uint16_t nb_sector)
{
  400e58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400e5c:	4614      	mov	r4, r2
	bool b_first_step = true;
	uint16_t nb_step;

	switch (sd_mmc_init_write_blocks(slot, addr, nb_sector)) {
  400e5e:	4b26      	ldr	r3, [pc, #152]	; (400ef8 <sd_mmc_usb_write_10+0xa0>)
  400e60:	4798      	blx	r3
  400e62:	b178      	cbz	r0, 400e84 <sd_mmc_usb_write_10+0x2c>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
  400e64:	2802      	cmp	r0, #2
  400e66:	bf0c      	ite	eq
  400e68:	2002      	moveq	r0, #2
  400e6a:	2001      	movne	r0, #1
  400e6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			if (!udi_msc_trans_block(false,
					((nb_step % 2) == 0) ?
					sector_buf_1 : sector_buf_0,
					SD_MMC_BLOCK_SIZE,
					NULL)) {
				if (!b_first_step) {
  400e70:	b115      	cbz	r5, 400e78 <sd_mmc_usb_write_10+0x20>
					sd_mmc_wait_end_of_write_blocks(true);
				}
				return CTRL_FAIL;
  400e72:	2001      	movs	r0, #1
  400e74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					sd_mmc_wait_end_of_write_blocks(true);
  400e78:	2001      	movs	r0, #1
  400e7a:	4b20      	ldr	r3, [pc, #128]	; (400efc <sd_mmc_usb_write_10+0xa4>)
  400e7c:	4798      	blx	r3
				return CTRL_FAIL;
  400e7e:	2001      	movs	r0, #1
  400e80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	bool b_first_step = true;
  400e84:	2501      	movs	r5, #1
			}
		}
		if (!b_first_step) { // Skip first step
			if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
  400e86:	f8df 8074 	ldr.w	r8, [pc, #116]	; 400efc <sd_mmc_usb_write_10+0xa4>
			if (!udi_msc_trans_block(false,
  400e8a:	4f1d      	ldr	r7, [pc, #116]	; (400f00 <sd_mmc_usb_write_10+0xa8>)
  400e8c:	4e1d      	ldr	r6, [pc, #116]	; (400f04 <sd_mmc_usb_write_10+0xac>)
  400e8e:	e009      	b.n	400ea4 <sd_mmc_usb_write_10+0x4c>
			}
		} else {
			b_first_step = false;
		}
	}
	return CTRL_GOOD;
  400e90:	2000      	movs	r0, #0
  400e92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				return CTRL_FAIL;
  400e96:	2001      	movs	r0, #1
  400e98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		if (nb_step) { // Skip last step
  400e9c:	b9a4      	cbnz	r4, 400ec8 <sd_mmc_usb_write_10+0x70>
  400e9e:	3c01      	subs	r4, #1
  400ea0:	b2a4      	uxth	r4, r4
  400ea2:	2500      	movs	r5, #0
	while (nb_step--) {
  400ea4:	f64f 73ff 	movw	r3, #65535	; 0xffff
  400ea8:	429c      	cmp	r4, r3
  400eaa:	d0f1      	beq.n	400e90 <sd_mmc_usb_write_10+0x38>
		if (!b_first_step) { // Skip first step
  400eac:	2d00      	cmp	r5, #0
  400eae:	d1f5      	bne.n	400e9c <sd_mmc_usb_write_10+0x44>
			if (SD_MMC_OK != sd_mmc_start_write_blocks(((nb_step % 2) == 0) ?
  400eb0:	f004 0001 	and.w	r0, r4, #1
  400eb4:	2101      	movs	r1, #1
  400eb6:	2800      	cmp	r0, #0
  400eb8:	bf0c      	ite	eq
  400eba:	4630      	moveq	r0, r6
  400ebc:	4638      	movne	r0, r7
  400ebe:	4b12      	ldr	r3, [pc, #72]	; (400f08 <sd_mmc_usb_write_10+0xb0>)
  400ec0:	4798      	blx	r3
  400ec2:	2800      	cmp	r0, #0
  400ec4:	d1e7      	bne.n	400e96 <sd_mmc_usb_write_10+0x3e>
		if (nb_step) { // Skip last step
  400ec6:	b184      	cbz	r4, 400eea <sd_mmc_usb_write_10+0x92>
			if (!udi_msc_trans_block(false,
  400ec8:	f004 0101 	and.w	r1, r4, #1
  400ecc:	2300      	movs	r3, #0
  400ece:	f44f 7200 	mov.w	r2, #512	; 0x200
  400ed2:	4299      	cmp	r1, r3
  400ed4:	bf0c      	ite	eq
  400ed6:	4639      	moveq	r1, r7
  400ed8:	4631      	movne	r1, r6
  400eda:	4618      	mov	r0, r3
  400edc:	f8df 902c 	ldr.w	r9, [pc, #44]	; 400f0c <sd_mmc_usb_write_10+0xb4>
  400ee0:	47c8      	blx	r9
  400ee2:	2800      	cmp	r0, #0
  400ee4:	d0c4      	beq.n	400e70 <sd_mmc_usb_write_10+0x18>
		if (!b_first_step) { // Skip first step
  400ee6:	2d00      	cmp	r5, #0
  400ee8:	d1d9      	bne.n	400e9e <sd_mmc_usb_write_10+0x46>
			if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
  400eea:	2000      	movs	r0, #0
  400eec:	47c0      	blx	r8
  400eee:	2800      	cmp	r0, #0
  400ef0:	d0d5      	beq.n	400e9e <sd_mmc_usb_write_10+0x46>
				return CTRL_FAIL;
  400ef2:	2001      	movs	r0, #1
  400ef4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400ef8:	00400c0d 	.word	0x00400c0d
  400efc:	00400ca5 	.word	0x00400ca5
  400f00:	2001a730 	.word	0x2001a730
  400f04:	2001a930 	.word	0x2001a930
  400f08:	00400c7d 	.word	0x00400c7d
  400f0c:	00402aa5 	.word	0x00402aa5

00400f10 <sd_mmc_usb_write_10_0>:
}

Ctrl_status sd_mmc_usb_write_10_0(uint32_t addr, uint16_t nb_sector)
{
  400f10:	b508      	push	{r3, lr}
	return sd_mmc_usb_write_10(0, addr, nb_sector);
  400f12:	460a      	mov	r2, r1
  400f14:	4601      	mov	r1, r0
  400f16:	2000      	movs	r0, #0
  400f18:	4b01      	ldr	r3, [pc, #4]	; (400f20 <sd_mmc_usb_write_10_0+0x10>)
  400f1a:	4798      	blx	r3
}
  400f1c:	bd08      	pop	{r3, pc}
  400f1e:	bf00      	nop
  400f20:	00400e59 	.word	0x00400e59

00400f24 <sd_mmc_mem_2_ram>:
/**
 * \name MEM <-> RAM Interface
 * @{
 */
Ctrl_status sd_mmc_mem_2_ram(uint8_t slot, uint32_t addr, void *ram)
{
  400f24:	b510      	push	{r4, lr}
  400f26:	4614      	mov	r4, r2
	switch (sd_mmc_init_read_blocks(slot, addr, 1)) {
  400f28:	2201      	movs	r2, #1
  400f2a:	4b0a      	ldr	r3, [pc, #40]	; (400f54 <sd_mmc_mem_2_ram+0x30>)
  400f2c:	4798      	blx	r3
  400f2e:	b120      	cbz	r0, 400f3a <sd_mmc_mem_2_ram+0x16>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
  400f30:	2802      	cmp	r0, #2
  400f32:	bf0c      	ite	eq
  400f34:	2002      	moveq	r0, #2
  400f36:	2001      	movne	r0, #1
  400f38:	bd10      	pop	{r4, pc}
	}
	if (SD_MMC_OK != sd_mmc_start_read_blocks(ram, 1)) {
  400f3a:	2101      	movs	r1, #1
  400f3c:	4620      	mov	r0, r4
  400f3e:	4b06      	ldr	r3, [pc, #24]	; (400f58 <sd_mmc_mem_2_ram+0x34>)
  400f40:	4798      	blx	r3
  400f42:	b108      	cbz	r0, 400f48 <sd_mmc_mem_2_ram+0x24>
		return CTRL_FAIL;
  400f44:	2001      	movs	r0, #1
	}
	if (SD_MMC_OK != sd_mmc_wait_end_of_read_blocks(false)) {
		return CTRL_FAIL;
	}
	return CTRL_GOOD;
}
  400f46:	bd10      	pop	{r4, pc}
	if (SD_MMC_OK != sd_mmc_wait_end_of_read_blocks(false)) {
  400f48:	4b04      	ldr	r3, [pc, #16]	; (400f5c <sd_mmc_mem_2_ram+0x38>)
  400f4a:	4798      	blx	r3
		return CTRL_NO_PRESENT;
  400f4c:	3000      	adds	r0, #0
  400f4e:	bf18      	it	ne
  400f50:	2001      	movne	r0, #1
  400f52:	bd10      	pop	{r4, pc}
  400f54:	00400af9 	.word	0x00400af9
  400f58:	00400b7d 	.word	0x00400b7d
  400f5c:	00400ba5 	.word	0x00400ba5

00400f60 <sd_mmc_mem_2_ram_0>:

Ctrl_status sd_mmc_mem_2_ram_0(uint32_t addr, void *ram)
{
  400f60:	b508      	push	{r3, lr}
	return sd_mmc_mem_2_ram(0, addr, ram);
  400f62:	460a      	mov	r2, r1
  400f64:	4601      	mov	r1, r0
  400f66:	2000      	movs	r0, #0
  400f68:	4b01      	ldr	r3, [pc, #4]	; (400f70 <sd_mmc_mem_2_ram_0+0x10>)
  400f6a:	4798      	blx	r3
}
  400f6c:	bd08      	pop	{r3, pc}
  400f6e:	bf00      	nop
  400f70:	00400f25 	.word	0x00400f25

00400f74 <sd_mmc_ram_2_mem>:
{
	return sd_mmc_mem_2_ram(1, addr, ram);
}

Ctrl_status sd_mmc_ram_2_mem(uint8_t slot, uint32_t addr, const void *ram)
{
  400f74:	b510      	push	{r4, lr}
  400f76:	4614      	mov	r4, r2
	switch (sd_mmc_init_write_blocks(slot, addr, 1)) {
  400f78:	2201      	movs	r2, #1
  400f7a:	4b0a      	ldr	r3, [pc, #40]	; (400fa4 <sd_mmc_ram_2_mem+0x30>)
  400f7c:	4798      	blx	r3
  400f7e:	b120      	cbz	r0, 400f8a <sd_mmc_ram_2_mem+0x16>
	case SD_MMC_OK:
		break;
	case SD_MMC_ERR_NO_CARD:
		return CTRL_NO_PRESENT;
	default:
		return CTRL_FAIL;
  400f80:	2802      	cmp	r0, #2
  400f82:	bf0c      	ite	eq
  400f84:	2002      	moveq	r0, #2
  400f86:	2001      	movne	r0, #1
  400f88:	bd10      	pop	{r4, pc}
	}
	if (SD_MMC_OK != sd_mmc_start_write_blocks(ram, 1)) {
  400f8a:	2101      	movs	r1, #1
  400f8c:	4620      	mov	r0, r4
  400f8e:	4b06      	ldr	r3, [pc, #24]	; (400fa8 <sd_mmc_ram_2_mem+0x34>)
  400f90:	4798      	blx	r3
  400f92:	b108      	cbz	r0, 400f98 <sd_mmc_ram_2_mem+0x24>
		return CTRL_FAIL;
  400f94:	2001      	movs	r0, #1
	}
	if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
		return CTRL_FAIL;
	}
	return CTRL_GOOD;
}
  400f96:	bd10      	pop	{r4, pc}
	if (SD_MMC_OK != sd_mmc_wait_end_of_write_blocks(false)) {
  400f98:	4b04      	ldr	r3, [pc, #16]	; (400fac <sd_mmc_ram_2_mem+0x38>)
  400f9a:	4798      	blx	r3
		return CTRL_NO_PRESENT;
  400f9c:	3000      	adds	r0, #0
  400f9e:	bf18      	it	ne
  400fa0:	2001      	movne	r0, #1
  400fa2:	bd10      	pop	{r4, pc}
  400fa4:	00400c0d 	.word	0x00400c0d
  400fa8:	00400c7d 	.word	0x00400c7d
  400fac:	00400ca5 	.word	0x00400ca5

00400fb0 <sd_mmc_ram_2_mem_0>:

Ctrl_status sd_mmc_ram_2_mem_0(uint32_t addr, const void *ram)
{
  400fb0:	b508      	push	{r3, lr}
	return sd_mmc_ram_2_mem(0, addr, ram);
  400fb2:	460a      	mov	r2, r1
  400fb4:	4601      	mov	r1, r0
  400fb6:	2000      	movs	r0, #0
  400fb8:	4b01      	ldr	r3, [pc, #4]	; (400fc0 <sd_mmc_ram_2_mem_0+0x10>)
  400fba:	4798      	blx	r3
}
  400fbc:	bd08      	pop	{r3, pc}
  400fbe:	bf00      	nop
  400fc0:	00400f75 	.word	0x00400f75

00400fc4 <sd_mmc_spi_start_write_block>:
  400fc4:	b500      	push	{lr}
  400fc6:	b083      	sub	sp, #12
  400fc8:	a902      	add	r1, sp, #8
  400fca:	23ff      	movs	r3, #255	; 0xff
  400fcc:	f801 3d01 	strb.w	r3, [r1, #-1]!
  400fd0:	2201      	movs	r2, #1
  400fd2:	480a      	ldr	r0, [pc, #40]	; (400ffc <sd_mmc_spi_start_write_block+0x38>)
  400fd4:	4b0a      	ldr	r3, [pc, #40]	; (401000 <sd_mmc_spi_start_write_block+0x3c>)
  400fd6:	4798      	blx	r3
  400fd8:	4b0a      	ldr	r3, [pc, #40]	; (401004 <sd_mmc_spi_start_write_block+0x40>)
  400fda:	881b      	ldrh	r3, [r3, #0]
  400fdc:	2b01      	cmp	r3, #1
  400fde:	bf0c      	ite	eq
  400fe0:	23fe      	moveq	r3, #254	; 0xfe
  400fe2:	23fc      	movne	r3, #252	; 0xfc
  400fe4:	f88d 3006 	strb.w	r3, [sp, #6]
  400fe8:	2201      	movs	r2, #1
  400fea:	f10d 0106 	add.w	r1, sp, #6
  400fee:	4803      	ldr	r0, [pc, #12]	; (400ffc <sd_mmc_spi_start_write_block+0x38>)
  400ff0:	4b03      	ldr	r3, [pc, #12]	; (401000 <sd_mmc_spi_start_write_block+0x3c>)
  400ff2:	4798      	blx	r3
  400ff4:	b003      	add	sp, #12
  400ff6:	f85d fb04 	ldr.w	pc, [sp], #4
  400ffa:	bf00      	nop
  400ffc:	40008400 	.word	0x40008400
  401000:	004017f5 	.word	0x004017f5
  401004:	20000c22 	.word	0x20000c22

00401008 <sd_mmc_spi_wait_busy>:
  401008:	b570      	push	{r4, r5, r6, lr}
  40100a:	b082      	sub	sp, #8
  40100c:	ac02      	add	r4, sp, #8
  40100e:	23ff      	movs	r3, #255	; 0xff
  401010:	f804 3d01 	strb.w	r3, [r4, #-1]!
  401014:	4e0f      	ldr	r6, [pc, #60]	; (401054 <sd_mmc_spi_wait_busy+0x4c>)
  401016:	2201      	movs	r2, #1
  401018:	4621      	mov	r1, r4
  40101a:	4630      	mov	r0, r6
  40101c:	4d0e      	ldr	r5, [pc, #56]	; (401058 <sd_mmc_spi_wait_busy+0x50>)
  40101e:	47a8      	blx	r5
  401020:	2201      	movs	r2, #1
  401022:	4621      	mov	r1, r4
  401024:	4630      	mov	r0, r6
  401026:	47a8      	blx	r5
  401028:	2201      	movs	r2, #1
  40102a:	4621      	mov	r1, r4
  40102c:	4630      	mov	r0, r6
  40102e:	47a8      	blx	r5
  401030:	4c0a      	ldr	r4, [pc, #40]	; (40105c <sd_mmc_spi_wait_busy+0x54>)
  401032:	f89d 3007 	ldrb.w	r3, [sp, #7]
  401036:	2bff      	cmp	r3, #255	; 0xff
  401038:	d008      	beq.n	40104c <sd_mmc_spi_wait_busy+0x44>
  40103a:	2201      	movs	r2, #1
  40103c:	f10d 0107 	add.w	r1, sp, #7
  401040:	4630      	mov	r0, r6
  401042:	47a8      	blx	r5
  401044:	3c01      	subs	r4, #1
  401046:	d1f4      	bne.n	401032 <sd_mmc_spi_wait_busy+0x2a>
  401048:	2000      	movs	r0, #0
  40104a:	e000      	b.n	40104e <sd_mmc_spi_wait_busy+0x46>
  40104c:	2001      	movs	r0, #1
  40104e:	b002      	add	sp, #8
  401050:	bd70      	pop	{r4, r5, r6, pc}
  401052:	bf00      	nop
  401054:	40008400 	.word	0x40008400
  401058:	0040182b 	.word	0x0040182b
  40105c:	00030d40 	.word	0x00030d40

00401060 <sd_mmc_spi_stop_multiwrite_block>:
  401060:	4b16      	ldr	r3, [pc, #88]	; (4010bc <sd_mmc_spi_stop_multiwrite_block+0x5c>)
  401062:	881a      	ldrh	r2, [r3, #0]
  401064:	2a01      	cmp	r2, #1
  401066:	d027      	beq.n	4010b8 <sd_mmc_spi_stop_multiwrite_block+0x58>
  401068:	4b15      	ldr	r3, [pc, #84]	; (4010c0 <sd_mmc_spi_stop_multiwrite_block+0x60>)
  40106a:	8819      	ldrh	r1, [r3, #0]
  40106c:	4b15      	ldr	r3, [pc, #84]	; (4010c4 <sd_mmc_spi_stop_multiwrite_block+0x64>)
  40106e:	681b      	ldr	r3, [r3, #0]
  401070:	fbb3 f3f1 	udiv	r3, r3, r1
  401074:	429a      	cmp	r2, r3
  401076:	d902      	bls.n	40107e <sd_mmc_spi_stop_multiwrite_block+0x1e>
  401078:	2301      	movs	r3, #1
  40107a:	4618      	mov	r0, r3
  40107c:	4770      	bx	lr
  40107e:	b570      	push	{r4, r5, r6, lr}
  401080:	b082      	sub	sp, #8
  401082:	ac02      	add	r4, sp, #8
  401084:	23ff      	movs	r3, #255	; 0xff
  401086:	f804 3d01 	strb.w	r3, [r4, #-1]!
  40108a:	4e0f      	ldr	r6, [pc, #60]	; (4010c8 <sd_mmc_spi_stop_multiwrite_block+0x68>)
  40108c:	2201      	movs	r2, #1
  40108e:	4621      	mov	r1, r4
  401090:	4630      	mov	r0, r6
  401092:	4d0e      	ldr	r5, [pc, #56]	; (4010cc <sd_mmc_spi_stop_multiwrite_block+0x6c>)
  401094:	47a8      	blx	r5
  401096:	23fd      	movs	r3, #253	; 0xfd
  401098:	f88d 3007 	strb.w	r3, [sp, #7]
  40109c:	2201      	movs	r2, #1
  40109e:	4621      	mov	r1, r4
  4010a0:	4630      	mov	r0, r6
  4010a2:	47a8      	blx	r5
  4010a4:	4b0a      	ldr	r3, [pc, #40]	; (4010d0 <sd_mmc_spi_stop_multiwrite_block+0x70>)
  4010a6:	4798      	blx	r3
  4010a8:	4603      	mov	r3, r0
  4010aa:	b910      	cbnz	r0, 4010b2 <sd_mmc_spi_stop_multiwrite_block+0x52>
  4010ac:	2105      	movs	r1, #5
  4010ae:	4a09      	ldr	r2, [pc, #36]	; (4010d4 <sd_mmc_spi_stop_multiwrite_block+0x74>)
  4010b0:	7011      	strb	r1, [r2, #0]
  4010b2:	4618      	mov	r0, r3
  4010b4:	b002      	add	sp, #8
  4010b6:	bd70      	pop	{r4, r5, r6, pc}
  4010b8:	2301      	movs	r3, #1
  4010ba:	e7de      	b.n	40107a <sd_mmc_spi_stop_multiwrite_block+0x1a>
  4010bc:	20000c22 	.word	0x20000c22
  4010c0:	20000c1a 	.word	0x20000c1a
  4010c4:	20000c28 	.word	0x20000c28
  4010c8:	40008400 	.word	0x40008400
  4010cc:	004017f5 	.word	0x004017f5
  4010d0:	00401009 	.word	0x00401009
  4010d4:	20000c20 	.word	0x20000c20

004010d8 <sd_mmc_spi_start_read_block>:
  4010d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4010da:	b083      	sub	sp, #12
  4010dc:	ad02      	add	r5, sp, #8
  4010de:	2300      	movs	r3, #0
  4010e0:	f805 3d01 	strb.w	r3, [r5, #-1]!
  4010e4:	4c10      	ldr	r4, [pc, #64]	; (401128 <sd_mmc_spi_start_read_block+0x50>)
  4010e6:	4f11      	ldr	r7, [pc, #68]	; (40112c <sd_mmc_spi_start_read_block+0x54>)
  4010e8:	4e11      	ldr	r6, [pc, #68]	; (401130 <sd_mmc_spi_start_read_block+0x58>)
  4010ea:	2201      	movs	r2, #1
  4010ec:	4629      	mov	r1, r5
  4010ee:	4638      	mov	r0, r7
  4010f0:	47b0      	blx	r6
  4010f2:	f89d 3007 	ldrb.w	r3, [sp, #7]
  4010f6:	f013 0ff0 	tst.w	r3, #240	; 0xf0
  4010fa:	d008      	beq.n	40110e <sd_mmc_spi_start_read_block+0x36>
  4010fc:	2bfe      	cmp	r3, #254	; 0xfe
  4010fe:	d010      	beq.n	401122 <sd_mmc_spi_start_read_block+0x4a>
  401100:	3c01      	subs	r4, #1
  401102:	d1f2      	bne.n	4010ea <sd_mmc_spi_start_read_block+0x12>
  401104:	2204      	movs	r2, #4
  401106:	4b0b      	ldr	r3, [pc, #44]	; (401134 <sd_mmc_spi_start_read_block+0x5c>)
  401108:	701a      	strb	r2, [r3, #0]
  40110a:	2000      	movs	r0, #0
  40110c:	e007      	b.n	40111e <sd_mmc_spi_start_read_block+0x46>
  40110e:	f013 0f07 	tst.w	r3, #7
  401112:	bf14      	ite	ne
  401114:	2207      	movne	r2, #7
  401116:	220b      	moveq	r2, #11
  401118:	4b06      	ldr	r3, [pc, #24]	; (401134 <sd_mmc_spi_start_read_block+0x5c>)
  40111a:	701a      	strb	r2, [r3, #0]
  40111c:	2000      	movs	r0, #0
  40111e:	b003      	add	sp, #12
  401120:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401122:	2001      	movs	r0, #1
  401124:	e7fb      	b.n	40111e <sd_mmc_spi_start_read_block+0x46>
  401126:	bf00      	nop
  401128:	0007a120 	.word	0x0007a120
  40112c:	40008400 	.word	0x40008400
  401130:	0040182b 	.word	0x0040182b
  401134:	20000c20 	.word	0x20000c20

00401138 <sd_mmc_spi_stop_write_block>:
  401138:	b510      	push	{r4, lr}
  40113a:	b082      	sub	sp, #8
  40113c:	a902      	add	r1, sp, #8
  40113e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  401142:	f821 3d04 	strh.w	r3, [r1, #-4]!
  401146:	4c12      	ldr	r4, [pc, #72]	; (401190 <sd_mmc_spi_stop_write_block+0x58>)
  401148:	2202      	movs	r2, #2
  40114a:	4620      	mov	r0, r4
  40114c:	4b11      	ldr	r3, [pc, #68]	; (401194 <sd_mmc_spi_stop_write_block+0x5c>)
  40114e:	4798      	blx	r3
  401150:	2201      	movs	r2, #1
  401152:	f10d 0107 	add.w	r1, sp, #7
  401156:	4620      	mov	r0, r4
  401158:	4b0f      	ldr	r3, [pc, #60]	; (401198 <sd_mmc_spi_stop_write_block+0x60>)
  40115a:	4798      	blx	r3
  40115c:	f89d 3007 	ldrb.w	r3, [sp, #7]
  401160:	f003 0211 	and.w	r2, r3, #17
  401164:	2a01      	cmp	r2, #1
  401166:	d005      	beq.n	401174 <sd_mmc_spi_stop_write_block+0x3c>
  401168:	2201      	movs	r2, #1
  40116a:	4b0c      	ldr	r3, [pc, #48]	; (40119c <sd_mmc_spi_stop_write_block+0x64>)
  40116c:	701a      	strb	r2, [r3, #0]
  40116e:	2000      	movs	r0, #0
  401170:	b002      	add	sp, #8
  401172:	bd10      	pop	{r4, pc}
  401174:	f003 031e 	and.w	r3, r3, #30
  401178:	2b04      	cmp	r3, #4
  40117a:	d007      	beq.n	40118c <sd_mmc_spi_stop_write_block+0x54>
  40117c:	2b0a      	cmp	r3, #10
  40117e:	bf0c      	ite	eq
  401180:	2208      	moveq	r2, #8
  401182:	220a      	movne	r2, #10
  401184:	4b05      	ldr	r3, [pc, #20]	; (40119c <sd_mmc_spi_stop_write_block+0x64>)
  401186:	701a      	strb	r2, [r3, #0]
  401188:	2000      	movs	r0, #0
  40118a:	e7f1      	b.n	401170 <sd_mmc_spi_stop_write_block+0x38>
  40118c:	2001      	movs	r0, #1
  40118e:	e7ef      	b.n	401170 <sd_mmc_spi_stop_write_block+0x38>
  401190:	40008400 	.word	0x40008400
  401194:	004017f5 	.word	0x004017f5
  401198:	0040182b 	.word	0x0040182b
  40119c:	20000c20 	.word	0x20000c20

004011a0 <sd_mmc_spi_init>:
  4011a0:	2200      	movs	r2, #0
  4011a2:	4b08      	ldr	r3, [pc, #32]	; (4011c4 <sd_mmc_spi_init+0x24>)
  4011a4:	701a      	strb	r2, [r3, #0]
  4011a6:	4b08      	ldr	r3, [pc, #32]	; (4011c8 <sd_mmc_spi_init+0x28>)
  4011a8:	691b      	ldr	r3, [r3, #16]
  4011aa:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4011ae:	d000      	beq.n	4011b2 <sd_mmc_spi_init+0x12>
  4011b0:	4770      	bx	lr
  4011b2:	b510      	push	{r4, lr}
  4011b4:	4c04      	ldr	r4, [pc, #16]	; (4011c8 <sd_mmc_spi_init+0x28>)
  4011b6:	4620      	mov	r0, r4
  4011b8:	4b04      	ldr	r3, [pc, #16]	; (4011cc <sd_mmc_spi_init+0x2c>)
  4011ba:	4798      	blx	r3
  4011bc:	2301      	movs	r3, #1
  4011be:	6023      	str	r3, [r4, #0]
  4011c0:	bd10      	pop	{r4, pc}
  4011c2:	bf00      	nop
  4011c4:	20000c20 	.word	0x20000c20
  4011c8:	40008400 	.word	0x40008400
  4011cc:	004016bd 	.word	0x004016bd

004011d0 <sd_mmc_spi_select_device>:
  4011d0:	b570      	push	{r4, r5, r6, lr}
  4011d2:	b082      	sub	sp, #8
  4011d4:	2200      	movs	r2, #0
  4011d6:	4b09      	ldr	r3, [pc, #36]	; (4011fc <sd_mmc_spi_select_device+0x2c>)
  4011d8:	701a      	strb	r2, [r3, #0]
  4011da:	4c09      	ldr	r4, [pc, #36]	; (401200 <sd_mmc_spi_select_device+0x30>)
  4011dc:	eb04 0480 	add.w	r4, r4, r0, lsl #2
  4011e0:	4d08      	ldr	r5, [pc, #32]	; (401204 <sd_mmc_spi_select_device+0x34>)
  4011e2:	9200      	str	r2, [sp, #0]
  4011e4:	460b      	mov	r3, r1
  4011e6:	4621      	mov	r1, r4
  4011e8:	4628      	mov	r0, r5
  4011ea:	4e07      	ldr	r6, [pc, #28]	; (401208 <sd_mmc_spi_select_device+0x38>)
  4011ec:	47b0      	blx	r6
  4011ee:	4621      	mov	r1, r4
  4011f0:	4628      	mov	r0, r5
  4011f2:	4b06      	ldr	r3, [pc, #24]	; (40120c <sd_mmc_spi_select_device+0x3c>)
  4011f4:	4798      	blx	r3
  4011f6:	b002      	add	sp, #8
  4011f8:	bd70      	pop	{r4, r5, r6, pc}
  4011fa:	bf00      	nop
  4011fc:	20000c20 	.word	0x20000c20
  401200:	20000c1c 	.word	0x20000c1c
  401204:	40008400 	.word	0x40008400
  401208:	00401725 	.word	0x00401725
  40120c:	004017a5 	.word	0x004017a5

00401210 <sd_mmc_spi_deselect_device>:
  401210:	b508      	push	{r3, lr}
  401212:	2200      	movs	r2, #0
  401214:	4b04      	ldr	r3, [pc, #16]	; (401228 <sd_mmc_spi_deselect_device+0x18>)
  401216:	701a      	strb	r2, [r3, #0]
  401218:	4904      	ldr	r1, [pc, #16]	; (40122c <sd_mmc_spi_deselect_device+0x1c>)
  40121a:	eb01 0180 	add.w	r1, r1, r0, lsl #2
  40121e:	4804      	ldr	r0, [pc, #16]	; (401230 <sd_mmc_spi_deselect_device+0x20>)
  401220:	4b04      	ldr	r3, [pc, #16]	; (401234 <sd_mmc_spi_deselect_device+0x24>)
  401222:	4798      	blx	r3
  401224:	bd08      	pop	{r3, pc}
  401226:	bf00      	nop
  401228:	20000c20 	.word	0x20000c20
  40122c:	20000c1c 	.word	0x20000c1c
  401230:	40008400 	.word	0x40008400
  401234:	004017d5 	.word	0x004017d5

00401238 <sd_mmc_spi_send_clock>:
  401238:	b5f0      	push	{r4, r5, r6, r7, lr}
  40123a:	b083      	sub	sp, #12
  40123c:	ad02      	add	r5, sp, #8
  40123e:	23ff      	movs	r3, #255	; 0xff
  401240:	f805 3d01 	strb.w	r3, [r5, #-1]!
  401244:	2200      	movs	r2, #0
  401246:	4b07      	ldr	r3, [pc, #28]	; (401264 <sd_mmc_spi_send_clock+0x2c>)
  401248:	701a      	strb	r2, [r3, #0]
  40124a:	240a      	movs	r4, #10
  40124c:	4f06      	ldr	r7, [pc, #24]	; (401268 <sd_mmc_spi_send_clock+0x30>)
  40124e:	4e07      	ldr	r6, [pc, #28]	; (40126c <sd_mmc_spi_send_clock+0x34>)
  401250:	2201      	movs	r2, #1
  401252:	4629      	mov	r1, r5
  401254:	4638      	mov	r0, r7
  401256:	47b0      	blx	r6
  401258:	1e63      	subs	r3, r4, #1
  40125a:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  40125e:	d1f7      	bne.n	401250 <sd_mmc_spi_send_clock+0x18>
  401260:	b003      	add	sp, #12
  401262:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401264:	20000c20 	.word	0x20000c20
  401268:	40008400 	.word	0x40008400
  40126c:	004017f5 	.word	0x004017f5

00401270 <sd_mmc_spi_adtc_start>:
  401270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401274:	b085      	sub	sp, #20
  401276:	4604      	mov	r4, r0
  401278:	4691      	mov	r9, r2
  40127a:	4698      	mov	r8, r3
  40127c:	23ff      	movs	r3, #255	; 0xff
  40127e:	f88d 300f 	strb.w	r3, [sp, #15]
  401282:	2300      	movs	r3, #0
  401284:	4a53      	ldr	r2, [pc, #332]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  401286:	7013      	strb	r3, [r2, #0]
  401288:	f000 023f 	and.w	r2, r0, #63	; 0x3f
  40128c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  401290:	f88d 2008 	strb.w	r2, [sp, #8]
  401294:	0e0a      	lsrs	r2, r1, #24
  401296:	f88d 2009 	strb.w	r2, [sp, #9]
  40129a:	0c0a      	lsrs	r2, r1, #16
  40129c:	f88d 200a 	strb.w	r2, [sp, #10]
  4012a0:	0a0a      	lsrs	r2, r1, #8
  4012a2:	f88d 200b 	strb.w	r2, [sp, #11]
  4012a6:	f88d 100c 	strb.w	r1, [sp, #12]
  4012aa:	af02      	add	r7, sp, #8
  4012ac:	f04f 0c08 	mov.w	ip, #8
  4012b0:	f10d 0e0d 	add.w	lr, sp, #13
  4012b4:	e001      	b.n	4012ba <sd_mmc_spi_adtc_start+0x4a>
  4012b6:	4577      	cmp	r7, lr
  4012b8:	d012      	beq.n	4012e0 <sd_mmc_spi_adtc_start+0x70>
  4012ba:	f817 1b01 	ldrb.w	r1, [r7], #1
  4012be:	4662      	mov	r2, ip
  4012c0:	005b      	lsls	r3, r3, #1
  4012c2:	b2db      	uxtb	r3, r3
  4012c4:	ea83 0001 	eor.w	r0, r3, r1
  4012c8:	f010 0f80 	tst.w	r0, #128	; 0x80
  4012cc:	bf18      	it	ne
  4012ce:	f083 0309 	eorne.w	r3, r3, #9
  4012d2:	0049      	lsls	r1, r1, #1
  4012d4:	b2c9      	uxtb	r1, r1
  4012d6:	3a01      	subs	r2, #1
  4012d8:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
  4012dc:	d1f0      	bne.n	4012c0 <sd_mmc_spi_adtc_start+0x50>
  4012de:	e7ea      	b.n	4012b6 <sd_mmc_spi_adtc_start+0x46>
  4012e0:	005b      	lsls	r3, r3, #1
  4012e2:	f043 0301 	orr.w	r3, r3, #1
  4012e6:	f88d 300d 	strb.w	r3, [sp, #13]
  4012ea:	4f3b      	ldr	r7, [pc, #236]	; (4013d8 <sd_mmc_spi_adtc_start+0x168>)
  4012ec:	2201      	movs	r2, #1
  4012ee:	f10d 010f 	add.w	r1, sp, #15
  4012f2:	4638      	mov	r0, r7
  4012f4:	4d39      	ldr	r5, [pc, #228]	; (4013dc <sd_mmc_spi_adtc_start+0x16c>)
  4012f6:	47a8      	blx	r5
  4012f8:	2206      	movs	r2, #6
  4012fa:	a902      	add	r1, sp, #8
  4012fc:	4638      	mov	r0, r7
  4012fe:	47a8      	blx	r5
  401300:	a904      	add	r1, sp, #16
  401302:	23ff      	movs	r3, #255	; 0xff
  401304:	f801 3d09 	strb.w	r3, [r1, #-9]!
  401308:	2201      	movs	r2, #1
  40130a:	4638      	mov	r0, r7
  40130c:	4b34      	ldr	r3, [pc, #208]	; (4013e0 <sd_mmc_spi_adtc_start+0x170>)
  40130e:	4798      	blx	r3
  401310:	2707      	movs	r7, #7
  401312:	4e31      	ldr	r6, [pc, #196]	; (4013d8 <sd_mmc_spi_adtc_start+0x168>)
  401314:	4d32      	ldr	r5, [pc, #200]	; (4013e0 <sd_mmc_spi_adtc_start+0x170>)
  401316:	2201      	movs	r2, #1
  401318:	f10d 0107 	add.w	r1, sp, #7
  40131c:	4630      	mov	r0, r6
  40131e:	47a8      	blx	r5
  401320:	f89d 3007 	ldrb.w	r3, [sp, #7]
  401324:	f013 0f80 	tst.w	r3, #128	; 0x80
  401328:	d00b      	beq.n	401342 <sd_mmc_spi_adtc_start+0xd2>
  40132a:	1e7b      	subs	r3, r7, #1
  40132c:	f013 07ff 	ands.w	r7, r3, #255	; 0xff
  401330:	d1f1      	bne.n	401316 <sd_mmc_spi_adtc_start+0xa6>
  401332:	2202      	movs	r2, #2
  401334:	4b27      	ldr	r3, [pc, #156]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  401336:	701a      	strb	r2, [r3, #0]
  401338:	2300      	movs	r3, #0
  40133a:	4618      	mov	r0, r3
  40133c:	b005      	add	sp, #20
  40133e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401342:	4a28      	ldr	r2, [pc, #160]	; (4013e4 <sd_mmc_spi_adtc_start+0x174>)
  401344:	6013      	str	r3, [r2, #0]
  401346:	f013 0f08 	tst.w	r3, #8
  40134a:	d119      	bne.n	401380 <sd_mmc_spi_adtc_start+0x110>
  40134c:	f013 0f04 	tst.w	r3, #4
  401350:	d11b      	bne.n	40138a <sd_mmc_spi_adtc_start+0x11a>
  401352:	f033 0301 	bics.w	r3, r3, #1
  401356:	d11d      	bne.n	401394 <sd_mmc_spi_adtc_start+0x124>
  401358:	f414 5f00 	tst.w	r4, #8192	; 0x2000
  40135c:	d11f      	bne.n	40139e <sd_mmc_spi_adtc_start+0x12e>
  40135e:	f414 7f00 	tst.w	r4, #512	; 0x200
  401362:	d125      	bne.n	4013b0 <sd_mmc_spi_adtc_start+0x140>
  401364:	f414 6f80 	tst.w	r4, #1024	; 0x400
  401368:	d12a      	bne.n	4013c0 <sd_mmc_spi_adtc_start+0x150>
  40136a:	4b1f      	ldr	r3, [pc, #124]	; (4013e8 <sd_mmc_spi_adtc_start+0x178>)
  40136c:	f8a3 9000 	strh.w	r9, [r3]
  401370:	4b1e      	ldr	r3, [pc, #120]	; (4013ec <sd_mmc_spi_adtc_start+0x17c>)
  401372:	f8a3 8000 	strh.w	r8, [r3]
  401376:	2200      	movs	r2, #0
  401378:	4b1d      	ldr	r3, [pc, #116]	; (4013f0 <sd_mmc_spi_adtc_start+0x180>)
  40137a:	601a      	str	r2, [r3, #0]
  40137c:	2301      	movs	r3, #1
  40137e:	e7dc      	b.n	40133a <sd_mmc_spi_adtc_start+0xca>
  401380:	2206      	movs	r2, #6
  401382:	4b14      	ldr	r3, [pc, #80]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  401384:	701a      	strb	r2, [r3, #0]
  401386:	2300      	movs	r3, #0
  401388:	e7d7      	b.n	40133a <sd_mmc_spi_adtc_start+0xca>
  40138a:	2209      	movs	r2, #9
  40138c:	4b11      	ldr	r3, [pc, #68]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  40138e:	701a      	strb	r2, [r3, #0]
  401390:	2300      	movs	r3, #0
  401392:	e7d2      	b.n	40133a <sd_mmc_spi_adtc_start+0xca>
  401394:	2201      	movs	r2, #1
  401396:	4b0f      	ldr	r3, [pc, #60]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  401398:	701a      	strb	r2, [r3, #0]
  40139a:	2300      	movs	r3, #0
  40139c:	e7cd      	b.n	40133a <sd_mmc_spi_adtc_start+0xca>
  40139e:	4b15      	ldr	r3, [pc, #84]	; (4013f4 <sd_mmc_spi_adtc_start+0x184>)
  4013a0:	4798      	blx	r3
  4013a2:	4603      	mov	r3, r0
  4013a4:	2800      	cmp	r0, #0
  4013a6:	d1da      	bne.n	40135e <sd_mmc_spi_adtc_start+0xee>
  4013a8:	2103      	movs	r1, #3
  4013aa:	4a0a      	ldr	r2, [pc, #40]	; (4013d4 <sd_mmc_spi_adtc_start+0x164>)
  4013ac:	7011      	strb	r1, [r2, #0]
  4013ae:	e7c4      	b.n	40133a <sd_mmc_spi_adtc_start+0xca>
  4013b0:	490c      	ldr	r1, [pc, #48]	; (4013e4 <sd_mmc_spi_adtc_start+0x174>)
  4013b2:	2300      	movs	r3, #0
  4013b4:	600b      	str	r3, [r1, #0]
  4013b6:	2201      	movs	r2, #1
  4013b8:	4807      	ldr	r0, [pc, #28]	; (4013d8 <sd_mmc_spi_adtc_start+0x168>)
  4013ba:	4b09      	ldr	r3, [pc, #36]	; (4013e0 <sd_mmc_spi_adtc_start+0x170>)
  4013bc:	4798      	blx	r3
  4013be:	e7d1      	b.n	401364 <sd_mmc_spi_adtc_start+0xf4>
  4013c0:	4c08      	ldr	r4, [pc, #32]	; (4013e4 <sd_mmc_spi_adtc_start+0x174>)
  4013c2:	2204      	movs	r2, #4
  4013c4:	4621      	mov	r1, r4
  4013c6:	4804      	ldr	r0, [pc, #16]	; (4013d8 <sd_mmc_spi_adtc_start+0x168>)
  4013c8:	4b05      	ldr	r3, [pc, #20]	; (4013e0 <sd_mmc_spi_adtc_start+0x170>)
  4013ca:	4798      	blx	r3
  4013cc:	6823      	ldr	r3, [r4, #0]
  4013ce:	ba1b      	rev	r3, r3
  4013d0:	6023      	str	r3, [r4, #0]
  4013d2:	e7ca      	b.n	40136a <sd_mmc_spi_adtc_start+0xfa>
  4013d4:	20000c20 	.word	0x20000c20
  4013d8:	40008400 	.word	0x40008400
  4013dc:	004017f5 	.word	0x004017f5
  4013e0:	0040182b 	.word	0x0040182b
  4013e4:	20000c24 	.word	0x20000c24
  4013e8:	20000c1a 	.word	0x20000c1a
  4013ec:	20000c22 	.word	0x20000c22
  4013f0:	20000c28 	.word	0x20000c28
  4013f4:	00401009 	.word	0x00401009

004013f8 <sd_mmc_spi_send_cmd>:
  4013f8:	b510      	push	{r4, lr}
  4013fa:	b082      	sub	sp, #8
  4013fc:	2200      	movs	r2, #0
  4013fe:	9200      	str	r2, [sp, #0]
  401400:	4613      	mov	r3, r2
  401402:	4c02      	ldr	r4, [pc, #8]	; (40140c <sd_mmc_spi_send_cmd+0x14>)
  401404:	47a0      	blx	r4
  401406:	b002      	add	sp, #8
  401408:	bd10      	pop	{r4, pc}
  40140a:	bf00      	nop
  40140c:	00401271 	.word	0x00401271

00401410 <sd_mmc_spi_get_response>:
  401410:	4b01      	ldr	r3, [pc, #4]	; (401418 <sd_mmc_spi_get_response+0x8>)
  401412:	6818      	ldr	r0, [r3, #0]
  401414:	4770      	bx	lr
  401416:	bf00      	nop
  401418:	20000c24 	.word	0x20000c24

0040141c <sd_mmc_spi_read_word>:
  40141c:	b510      	push	{r4, lr}
  40141e:	b082      	sub	sp, #8
  401420:	4604      	mov	r4, r0
  401422:	2200      	movs	r2, #0
  401424:	4b14      	ldr	r3, [pc, #80]	; (401478 <sd_mmc_spi_read_word+0x5c>)
  401426:	701a      	strb	r2, [r3, #0]
  401428:	4b14      	ldr	r3, [pc, #80]	; (40147c <sd_mmc_spi_read_word+0x60>)
  40142a:	881a      	ldrh	r2, [r3, #0]
  40142c:	4b14      	ldr	r3, [pc, #80]	; (401480 <sd_mmc_spi_read_word+0x64>)
  40142e:	6819      	ldr	r1, [r3, #0]
  401430:	fbb1 f3f2 	udiv	r3, r1, r2
  401434:	fb02 1313 	mls	r3, r2, r3, r1
  401438:	b91b      	cbnz	r3, 401442 <sd_mmc_spi_read_word+0x26>
  40143a:	4b12      	ldr	r3, [pc, #72]	; (401484 <sd_mmc_spi_read_word+0x68>)
  40143c:	4798      	blx	r3
  40143e:	4603      	mov	r3, r0
  401440:	b180      	cbz	r0, 401464 <sd_mmc_spi_read_word+0x48>
  401442:	2204      	movs	r2, #4
  401444:	4621      	mov	r1, r4
  401446:	4810      	ldr	r0, [pc, #64]	; (401488 <sd_mmc_spi_read_word+0x6c>)
  401448:	4b10      	ldr	r3, [pc, #64]	; (40148c <sd_mmc_spi_read_word+0x70>)
  40144a:	4798      	blx	r3
  40144c:	4a0c      	ldr	r2, [pc, #48]	; (401480 <sd_mmc_spi_read_word+0x64>)
  40144e:	6813      	ldr	r3, [r2, #0]
  401450:	3304      	adds	r3, #4
  401452:	6013      	str	r3, [r2, #0]
  401454:	4a09      	ldr	r2, [pc, #36]	; (40147c <sd_mmc_spi_read_word+0x60>)
  401456:	8811      	ldrh	r1, [r2, #0]
  401458:	fbb3 f2f1 	udiv	r2, r3, r1
  40145c:	fb01 3312 	mls	r3, r1, r2, r3
  401460:	b11b      	cbz	r3, 40146a <sd_mmc_spi_read_word+0x4e>
  401462:	2301      	movs	r3, #1
  401464:	4618      	mov	r0, r3
  401466:	b002      	add	sp, #8
  401468:	bd10      	pop	{r4, pc}
  40146a:	2202      	movs	r2, #2
  40146c:	a901      	add	r1, sp, #4
  40146e:	4806      	ldr	r0, [pc, #24]	; (401488 <sd_mmc_spi_read_word+0x6c>)
  401470:	4b06      	ldr	r3, [pc, #24]	; (40148c <sd_mmc_spi_read_word+0x70>)
  401472:	4798      	blx	r3
  401474:	2301      	movs	r3, #1
  401476:	e7f5      	b.n	401464 <sd_mmc_spi_read_word+0x48>
  401478:	20000c20 	.word	0x20000c20
  40147c:	20000c1a 	.word	0x20000c1a
  401480:	20000c28 	.word	0x20000c28
  401484:	004010d9 	.word	0x004010d9
  401488:	40008400 	.word	0x40008400
  40148c:	0040182b 	.word	0x0040182b

00401490 <sd_mmc_spi_start_read_blocks>:
  401490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401494:	b083      	sub	sp, #12
  401496:	2200      	movs	r2, #0
  401498:	4b16      	ldr	r3, [pc, #88]	; (4014f4 <sd_mmc_spi_start_read_blocks+0x64>)
  40149a:	701a      	strb	r2, [r3, #0]
  40149c:	b339      	cbz	r1, 4014ee <sd_mmc_spi_start_read_blocks+0x5e>
  40149e:	1e4c      	subs	r4, r1, #1
  4014a0:	b2a4      	uxth	r4, r4
  4014a2:	4681      	mov	r9, r0
  4014a4:	4615      	mov	r5, r2
  4014a6:	f8df b05c 	ldr.w	fp, [pc, #92]	; 401504 <sd_mmc_spi_start_read_blocks+0x74>
  4014aa:	f8df 805c 	ldr.w	r8, [pc, #92]	; 401508 <sd_mmc_spi_start_read_blocks+0x78>
  4014ae:	4f12      	ldr	r7, [pc, #72]	; (4014f8 <sd_mmc_spi_start_read_blocks+0x68>)
  4014b0:	47d8      	blx	fp
  4014b2:	4682      	mov	sl, r0
  4014b4:	b1b8      	cbz	r0, 4014e6 <sd_mmc_spi_start_read_blocks+0x56>
  4014b6:	f8b8 2000 	ldrh.w	r2, [r8]
  4014ba:	eb09 0105 	add.w	r1, r9, r5
  4014be:	4638      	mov	r0, r7
  4014c0:	4e0e      	ldr	r6, [pc, #56]	; (4014fc <sd_mmc_spi_start_read_blocks+0x6c>)
  4014c2:	47b0      	blx	r6
  4014c4:	f8b8 1000 	ldrh.w	r1, [r8]
  4014c8:	440d      	add	r5, r1
  4014ca:	4a0d      	ldr	r2, [pc, #52]	; (401500 <sd_mmc_spi_start_read_blocks+0x70>)
  4014cc:	6813      	ldr	r3, [r2, #0]
  4014ce:	440b      	add	r3, r1
  4014d0:	6013      	str	r3, [r2, #0]
  4014d2:	2202      	movs	r2, #2
  4014d4:	a901      	add	r1, sp, #4
  4014d6:	4638      	mov	r0, r7
  4014d8:	47b0      	blx	r6
  4014da:	3c01      	subs	r4, #1
  4014dc:	b2a4      	uxth	r4, r4
  4014de:	f64f 73ff 	movw	r3, #65535	; 0xffff
  4014e2:	429c      	cmp	r4, r3
  4014e4:	d1e4      	bne.n	4014b0 <sd_mmc_spi_start_read_blocks+0x20>
  4014e6:	4650      	mov	r0, sl
  4014e8:	b003      	add	sp, #12
  4014ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4014ee:	f04f 0a01 	mov.w	sl, #1
  4014f2:	e7f8      	b.n	4014e6 <sd_mmc_spi_start_read_blocks+0x56>
  4014f4:	20000c20 	.word	0x20000c20
  4014f8:	40008400 	.word	0x40008400
  4014fc:	0040182b 	.word	0x0040182b
  401500:	20000c28 	.word	0x20000c28
  401504:	004010d9 	.word	0x004010d9
  401508:	20000c1a 	.word	0x20000c1a

0040150c <sd_mmc_spi_wait_end_of_read_blocks>:
  40150c:	2001      	movs	r0, #1
  40150e:	4770      	bx	lr

00401510 <sd_mmc_spi_start_write_blocks>:
  401510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401514:	4681      	mov	r9, r0
  401516:	2500      	movs	r5, #0
  401518:	4b15      	ldr	r3, [pc, #84]	; (401570 <sd_mmc_spi_start_write_blocks+0x60>)
  40151a:	701d      	strb	r5, [r3, #0]
  40151c:	f8df 806c 	ldr.w	r8, [pc, #108]	; 40158c <sd_mmc_spi_start_write_blocks+0x7c>
  401520:	4e14      	ldr	r6, [pc, #80]	; (401574 <sd_mmc_spi_start_write_blocks+0x64>)
  401522:	4f15      	ldr	r7, [pc, #84]	; (401578 <sd_mmc_spi_start_write_blocks+0x68>)
  401524:	e000      	b.n	401528 <sd_mmc_spi_start_write_blocks+0x18>
  401526:	4621      	mov	r1, r4
  401528:	1e4c      	subs	r4, r1, #1
  40152a:	b2a4      	uxth	r4, r4
  40152c:	b1d9      	cbz	r1, 401566 <sd_mmc_spi_start_write_blocks+0x56>
  40152e:	47c0      	blx	r8
  401530:	8832      	ldrh	r2, [r6, #0]
  401532:	eb09 0105 	add.w	r1, r9, r5
  401536:	4638      	mov	r0, r7
  401538:	4b10      	ldr	r3, [pc, #64]	; (40157c <sd_mmc_spi_start_write_blocks+0x6c>)
  40153a:	4798      	blx	r3
  40153c:	8831      	ldrh	r1, [r6, #0]
  40153e:	440d      	add	r5, r1
  401540:	4a0f      	ldr	r2, [pc, #60]	; (401580 <sd_mmc_spi_start_write_blocks+0x70>)
  401542:	6813      	ldr	r3, [r2, #0]
  401544:	440b      	add	r3, r1
  401546:	6013      	str	r3, [r2, #0]
  401548:	4b0e      	ldr	r3, [pc, #56]	; (401584 <sd_mmc_spi_start_write_blocks+0x74>)
  40154a:	4798      	blx	r3
  40154c:	4603      	mov	r3, r0
  40154e:	b158      	cbz	r0, 401568 <sd_mmc_spi_start_write_blocks+0x58>
  401550:	2c00      	cmp	r4, #0
  401552:	d0e8      	beq.n	401526 <sd_mmc_spi_start_write_blocks+0x16>
  401554:	4b0c      	ldr	r3, [pc, #48]	; (401588 <sd_mmc_spi_start_write_blocks+0x78>)
  401556:	4798      	blx	r3
  401558:	4603      	mov	r3, r0
  40155a:	2800      	cmp	r0, #0
  40155c:	d1e3      	bne.n	401526 <sd_mmc_spi_start_write_blocks+0x16>
  40155e:	2105      	movs	r1, #5
  401560:	4a03      	ldr	r2, [pc, #12]	; (401570 <sd_mmc_spi_start_write_blocks+0x60>)
  401562:	7011      	strb	r1, [r2, #0]
  401564:	e000      	b.n	401568 <sd_mmc_spi_start_write_blocks+0x58>
  401566:	2301      	movs	r3, #1
  401568:	4618      	mov	r0, r3
  40156a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40156e:	bf00      	nop
  401570:	20000c20 	.word	0x20000c20
  401574:	20000c1a 	.word	0x20000c1a
  401578:	40008400 	.word	0x40008400
  40157c:	004017f5 	.word	0x004017f5
  401580:	20000c28 	.word	0x20000c28
  401584:	00401139 	.word	0x00401139
  401588:	00401009 	.word	0x00401009
  40158c:	00400fc5 	.word	0x00400fc5

00401590 <sd_mmc_spi_wait_end_of_write_blocks>:
  401590:	b508      	push	{r3, lr}
  401592:	4b06      	ldr	r3, [pc, #24]	; (4015ac <sd_mmc_spi_wait_end_of_write_blocks+0x1c>)
  401594:	4798      	blx	r3
  401596:	b928      	cbnz	r0, 4015a4 <sd_mmc_spi_wait_end_of_write_blocks+0x14>
  401598:	4603      	mov	r3, r0
  40159a:	2105      	movs	r1, #5
  40159c:	4a04      	ldr	r2, [pc, #16]	; (4015b0 <sd_mmc_spi_wait_end_of_write_blocks+0x20>)
  40159e:	7011      	strb	r1, [r2, #0]
  4015a0:	4618      	mov	r0, r3
  4015a2:	bd08      	pop	{r3, pc}
  4015a4:	4b03      	ldr	r3, [pc, #12]	; (4015b4 <sd_mmc_spi_wait_end_of_write_blocks+0x24>)
  4015a6:	4798      	blx	r3
  4015a8:	4603      	mov	r3, r0
  4015aa:	e7f9      	b.n	4015a0 <sd_mmc_spi_wait_end_of_write_blocks+0x10>
  4015ac:	00401009 	.word	0x00401009
  4015b0:	20000c20 	.word	0x20000c20
  4015b4:	00401061 	.word	0x00401061

004015b8 <usart_serial_read_packet>:
  4015b8:	2a00      	cmp	r2, #0
  4015ba:	d06b      	beq.n	401694 <usart_serial_read_packet+0xdc>
  4015bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4015c0:	b083      	sub	sp, #12
  4015c2:	4605      	mov	r5, r0
  4015c4:	460e      	mov	r6, r1
  4015c6:	4693      	mov	fp, r2
  4015c8:	448b      	add	fp, r1
  4015ca:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 4016b0 <usart_serial_read_packet+0xf8>
  4015ce:	4c32      	ldr	r4, [pc, #200]	; (401698 <usart_serial_read_packet+0xe0>)
  4015d0:	4f32      	ldr	r7, [pc, #200]	; (40169c <usart_serial_read_packet+0xe4>)
  4015d2:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 4016b4 <usart_serial_read_packet+0xfc>
  4015d6:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 4016b8 <usart_serial_read_packet+0x100>
  4015da:	e031      	b.n	401640 <usart_serial_read_packet+0x88>
  4015dc:	a901      	add	r1, sp, #4
  4015de:	4640      	mov	r0, r8
  4015e0:	47a0      	blx	r4
  4015e2:	2800      	cmp	r0, #0
  4015e4:	d1fa      	bne.n	4015dc <usart_serial_read_packet+0x24>
  4015e6:	9b01      	ldr	r3, [sp, #4]
  4015e8:	7033      	strb	r3, [r6, #0]
  4015ea:	e032      	b.n	401652 <usart_serial_read_packet+0x9a>
  4015ec:	a901      	add	r1, sp, #4
  4015ee:	4648      	mov	r0, r9
  4015f0:	47a0      	blx	r4
  4015f2:	2800      	cmp	r0, #0
  4015f4:	d1fa      	bne.n	4015ec <usart_serial_read_packet+0x34>
  4015f6:	9b01      	ldr	r3, [sp, #4]
  4015f8:	7033      	strb	r3, [r6, #0]
  4015fa:	e02d      	b.n	401658 <usart_serial_read_packet+0xa0>
  4015fc:	a901      	add	r1, sp, #4
  4015fe:	4828      	ldr	r0, [pc, #160]	; (4016a0 <usart_serial_read_packet+0xe8>)
  401600:	47a0      	blx	r4
  401602:	2800      	cmp	r0, #0
  401604:	d1fa      	bne.n	4015fc <usart_serial_read_packet+0x44>
  401606:	9b01      	ldr	r3, [sp, #4]
  401608:	7033      	strb	r3, [r6, #0]
  40160a:	e028      	b.n	40165e <usart_serial_read_packet+0xa6>
  40160c:	a901      	add	r1, sp, #4
  40160e:	4825      	ldr	r0, [pc, #148]	; (4016a4 <usart_serial_read_packet+0xec>)
  401610:	47a0      	blx	r4
  401612:	2800      	cmp	r0, #0
  401614:	d1fa      	bne.n	40160c <usart_serial_read_packet+0x54>
  401616:	9b01      	ldr	r3, [sp, #4]
  401618:	7033      	strb	r3, [r6, #0]
  40161a:	e023      	b.n	401664 <usart_serial_read_packet+0xac>
  40161c:	a901      	add	r1, sp, #4
  40161e:	4822      	ldr	r0, [pc, #136]	; (4016a8 <usart_serial_read_packet+0xf0>)
  401620:	47a0      	blx	r4
  401622:	2800      	cmp	r0, #0
  401624:	d1fa      	bne.n	40161c <usart_serial_read_packet+0x64>
  401626:	9b01      	ldr	r3, [sp, #4]
  401628:	7033      	strb	r3, [r6, #0]
  40162a:	e01d      	b.n	401668 <usart_serial_read_packet+0xb0>
  40162c:	a901      	add	r1, sp, #4
  40162e:	481f      	ldr	r0, [pc, #124]	; (4016ac <usart_serial_read_packet+0xf4>)
  401630:	47a0      	blx	r4
  401632:	2800      	cmp	r0, #0
  401634:	d1fa      	bne.n	40162c <usart_serial_read_packet+0x74>
  401636:	9b01      	ldr	r3, [sp, #4]
  401638:	7033      	strb	r3, [r6, #0]
  40163a:	3601      	adds	r6, #1
  40163c:	455e      	cmp	r6, fp
  40163e:	d025      	beq.n	40168c <usart_serial_read_packet+0xd4>
  401640:	2300      	movs	r3, #0
  401642:	9301      	str	r3, [sp, #4]
  401644:	4545      	cmp	r5, r8
  401646:	d0c9      	beq.n	4015dc <usart_serial_read_packet+0x24>
  401648:	454d      	cmp	r5, r9
  40164a:	d0cf      	beq.n	4015ec <usart_serial_read_packet+0x34>
  40164c:	4b14      	ldr	r3, [pc, #80]	; (4016a0 <usart_serial_read_packet+0xe8>)
  40164e:	429d      	cmp	r5, r3
  401650:	d0d4      	beq.n	4015fc <usart_serial_read_packet+0x44>
  401652:	4b14      	ldr	r3, [pc, #80]	; (4016a4 <usart_serial_read_packet+0xec>)
  401654:	429d      	cmp	r5, r3
  401656:	d0d9      	beq.n	40160c <usart_serial_read_packet+0x54>
  401658:	4b13      	ldr	r3, [pc, #76]	; (4016a8 <usart_serial_read_packet+0xf0>)
  40165a:	429d      	cmp	r5, r3
  40165c:	d0de      	beq.n	40161c <usart_serial_read_packet+0x64>
  40165e:	4b13      	ldr	r3, [pc, #76]	; (4016ac <usart_serial_read_packet+0xf4>)
  401660:	429d      	cmp	r5, r3
  401662:	d0e3      	beq.n	40162c <usart_serial_read_packet+0x74>
  401664:	4555      	cmp	r5, sl
  401666:	d009      	beq.n	40167c <usart_serial_read_packet+0xc4>
  401668:	42bd      	cmp	r5, r7
  40166a:	d1e6      	bne.n	40163a <usart_serial_read_packet+0x82>
  40166c:	a901      	add	r1, sp, #4
  40166e:	4638      	mov	r0, r7
  401670:	47a0      	blx	r4
  401672:	2800      	cmp	r0, #0
  401674:	d1fa      	bne.n	40166c <usart_serial_read_packet+0xb4>
  401676:	9b01      	ldr	r3, [sp, #4]
  401678:	7033      	strb	r3, [r6, #0]
  40167a:	e7de      	b.n	40163a <usart_serial_read_packet+0x82>
  40167c:	a901      	add	r1, sp, #4
  40167e:	4650      	mov	r0, sl
  401680:	47a0      	blx	r4
  401682:	2800      	cmp	r0, #0
  401684:	d1fa      	bne.n	40167c <usart_serial_read_packet+0xc4>
  401686:	9b01      	ldr	r3, [sp, #4]
  401688:	7033      	strb	r3, [r6, #0]
  40168a:	e7d6      	b.n	40163a <usart_serial_read_packet+0x82>
  40168c:	2000      	movs	r0, #0
  40168e:	b003      	add	sp, #12
  401690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401694:	2000      	movs	r0, #0
  401696:	4770      	bx	lr
  401698:	004059ad 	.word	0x004059ad
  40169c:	40034200 	.word	0x40034200
  4016a0:	40024200 	.word	0x40024200
  4016a4:	40018200 	.word	0x40018200
  4016a8:	4001c200 	.word	0x4001c200
  4016ac:	40008200 	.word	0x40008200
  4016b0:	4000c200 	.word	0x4000c200
  4016b4:	40040200 	.word	0x40040200
  4016b8:	40020200 	.word	0x40020200

004016bc <spi_master_init>:
  4016bc:	b538      	push	{r3, r4, r5, lr}
  4016be:	4604      	mov	r4, r0
  4016c0:	4d13      	ldr	r5, [pc, #76]	; (401710 <spi_master_init+0x54>)
  4016c2:	4628      	mov	r0, r5
  4016c4:	4b13      	ldr	r3, [pc, #76]	; (401714 <spi_master_init+0x58>)
  4016c6:	4798      	blx	r3
  4016c8:	2102      	movs	r1, #2
  4016ca:	4628      	mov	r0, r5
  4016cc:	4b12      	ldr	r3, [pc, #72]	; (401718 <spi_master_init+0x5c>)
  4016ce:	4798      	blx	r3
  4016d0:	2380      	movs	r3, #128	; 0x80
  4016d2:	6023      	str	r3, [r4, #0]
  4016d4:	6863      	ldr	r3, [r4, #4]
  4016d6:	f043 0301 	orr.w	r3, r3, #1
  4016da:	6063      	str	r3, [r4, #4]
  4016dc:	6863      	ldr	r3, [r4, #4]
  4016de:	f043 0310 	orr.w	r3, r3, #16
  4016e2:	6063      	str	r3, [r4, #4]
  4016e4:	6863      	ldr	r3, [r4, #4]
  4016e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4016ea:	6063      	str	r3, [r4, #4]
  4016ec:	2100      	movs	r1, #0
  4016ee:	4620      	mov	r0, r4
  4016f0:	4b0a      	ldr	r3, [pc, #40]	; (40171c <spi_master_init+0x60>)
  4016f2:	4798      	blx	r3
  4016f4:	6863      	ldr	r3, [r4, #4]
  4016f6:	f023 0302 	bic.w	r3, r3, #2
  4016fa:	6063      	str	r3, [r4, #4]
  4016fc:	6863      	ldr	r3, [r4, #4]
  4016fe:	f023 0304 	bic.w	r3, r3, #4
  401702:	6063      	str	r3, [r4, #4]
  401704:	2100      	movs	r1, #0
  401706:	4620      	mov	r0, r4
  401708:	4b05      	ldr	r3, [pc, #20]	; (401720 <spi_master_init+0x64>)
  40170a:	4798      	blx	r3
  40170c:	bd38      	pop	{r3, r4, r5, pc}
  40170e:	bf00      	nop
  401710:	40008000 	.word	0x40008000
  401714:	004033b5 	.word	0x004033b5
  401718:	00403541 	.word	0x00403541
  40171c:	00403a95 	.word	0x00403a95
  401720:	00403aab 	.word	0x00403aab

00401724 <spi_master_setup_device>:
  401724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401728:	4604      	mov	r4, r0
  40172a:	460d      	mov	r5, r1
  40172c:	4616      	mov	r6, r2
  40172e:	4915      	ldr	r1, [pc, #84]	; (401784 <spi_master_setup_device+0x60>)
  401730:	4618      	mov	r0, r3
  401732:	4b15      	ldr	r3, [pc, #84]	; (401788 <spi_master_setup_device+0x64>)
  401734:	4798      	blx	r3
  401736:	4607      	mov	r7, r0
  401738:	2300      	movs	r3, #0
  40173a:	461a      	mov	r2, r3
  40173c:	6829      	ldr	r1, [r5, #0]
  40173e:	4620      	mov	r0, r4
  401740:	f8df 805c 	ldr.w	r8, [pc, #92]	; 4017a0 <spi_master_setup_device+0x7c>
  401744:	47c0      	blx	r8
  401746:	2208      	movs	r2, #8
  401748:	6829      	ldr	r1, [r5, #0]
  40174a:	4620      	mov	r0, r4
  40174c:	4b0f      	ldr	r3, [pc, #60]	; (40178c <spi_master_setup_device+0x68>)
  40174e:	4798      	blx	r3
  401750:	b2fa      	uxtb	r2, r7
  401752:	6829      	ldr	r1, [r5, #0]
  401754:	4620      	mov	r0, r4
  401756:	4b0e      	ldr	r3, [pc, #56]	; (401790 <spi_master_setup_device+0x6c>)
  401758:	4798      	blx	r3
  40175a:	2208      	movs	r2, #8
  40175c:	6829      	ldr	r1, [r5, #0]
  40175e:	4620      	mov	r0, r4
  401760:	4b0c      	ldr	r3, [pc, #48]	; (401794 <spi_master_setup_device+0x70>)
  401762:	4798      	blx	r3
  401764:	0872      	lsrs	r2, r6, #1
  401766:	6829      	ldr	r1, [r5, #0]
  401768:	4620      	mov	r0, r4
  40176a:	4b0b      	ldr	r3, [pc, #44]	; (401798 <spi_master_setup_device+0x74>)
  40176c:	4798      	blx	r3
  40176e:	f086 0201 	eor.w	r2, r6, #1
  401772:	f002 0201 	and.w	r2, r2, #1
  401776:	6829      	ldr	r1, [r5, #0]
  401778:	4620      	mov	r0, r4
  40177a:	4b08      	ldr	r3, [pc, #32]	; (40179c <spi_master_setup_device+0x78>)
  40177c:	4798      	blx	r3
  40177e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401782:	bf00      	nop
  401784:	03938000 	.word	0x03938000
  401788:	00403b53 	.word	0x00403b53
  40178c:	00403b3f 	.word	0x00403b3f
  401790:	00403b69 	.word	0x00403b69
  401794:	00403af9 	.word	0x00403af9
  401798:	00403abd 	.word	0x00403abd
  40179c:	00403adb 	.word	0x00403adb
  4017a0:	00403b91 	.word	0x00403b91

004017a4 <spi_select_device>:
  4017a4:	b508      	push	{r3, lr}
  4017a6:	6843      	ldr	r3, [r0, #4]
  4017a8:	f013 0f04 	tst.w	r3, #4
  4017ac:	d006      	beq.n	4017bc <spi_select_device+0x18>
  4017ae:	6809      	ldr	r1, [r1, #0]
  4017b0:	290f      	cmp	r1, #15
  4017b2:	d900      	bls.n	4017b6 <spi_select_device+0x12>
  4017b4:	bd08      	pop	{r3, pc}
  4017b6:	4b06      	ldr	r3, [pc, #24]	; (4017d0 <spi_select_device+0x2c>)
  4017b8:	4798      	blx	r3
  4017ba:	bd08      	pop	{r3, pc}
  4017bc:	6809      	ldr	r1, [r1, #0]
  4017be:	2903      	cmp	r1, #3
  4017c0:	d8f8      	bhi.n	4017b4 <spi_select_device+0x10>
  4017c2:	2301      	movs	r3, #1
  4017c4:	fa03 f101 	lsl.w	r1, r3, r1
  4017c8:	43c9      	mvns	r1, r1
  4017ca:	4b01      	ldr	r3, [pc, #4]	; (4017d0 <spi_select_device+0x2c>)
  4017cc:	4798      	blx	r3
  4017ce:	e7f1      	b.n	4017b4 <spi_select_device+0x10>
  4017d0:	00403a95 	.word	0x00403a95

004017d4 <spi_deselect_device>:
  4017d4:	b510      	push	{r4, lr}
  4017d6:	4604      	mov	r4, r0
  4017d8:	6923      	ldr	r3, [r4, #16]
  4017da:	f413 7f00 	tst.w	r3, #512	; 0x200
  4017de:	d0fb      	beq.n	4017d8 <spi_deselect_device+0x4>
  4017e0:	210f      	movs	r1, #15
  4017e2:	4620      	mov	r0, r4
  4017e4:	4b02      	ldr	r3, [pc, #8]	; (4017f0 <spi_deselect_device+0x1c>)
  4017e6:	4798      	blx	r3
  4017e8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  4017ec:	6023      	str	r3, [r4, #0]
  4017ee:	bd10      	pop	{r4, pc}
  4017f0:	00403a95 	.word	0x00403a95

004017f4 <spi_write_packet>:
  4017f4:	b11a      	cbz	r2, 4017fe <spi_write_packet+0xa>
  4017f6:	b410      	push	{r4}
  4017f8:	460c      	mov	r4, r1
  4017fa:	4411      	add	r1, r2
  4017fc:	e006      	b.n	40180c <spi_write_packet+0x18>
  4017fe:	2000      	movs	r0, #0
  401800:	4770      	bx	lr
  401802:	f814 3b01 	ldrb.w	r3, [r4], #1
  401806:	60c3      	str	r3, [r0, #12]
  401808:	42a1      	cmp	r1, r4
  40180a:	d00c      	beq.n	401826 <spi_write_packet+0x32>
  40180c:	f643 2399 	movw	r3, #15001	; 0x3a99
  401810:	6902      	ldr	r2, [r0, #16]
  401812:	f012 0f02 	tst.w	r2, #2
  401816:	d1f4      	bne.n	401802 <spi_write_packet+0xe>
  401818:	3b01      	subs	r3, #1
  40181a:	d1f9      	bne.n	401810 <spi_write_packet+0x1c>
  40181c:	f06f 0002 	mvn.w	r0, #2
  401820:	f85d 4b04 	ldr.w	r4, [sp], #4
  401824:	4770      	bx	lr
  401826:	2000      	movs	r0, #0
  401828:	e7fa      	b.n	401820 <spi_write_packet+0x2c>

0040182a <spi_read_packet>:
  40182a:	b13a      	cbz	r2, 40183c <spi_read_packet+0x12>
  40182c:	b470      	push	{r4, r5, r6}
  40182e:	4615      	mov	r5, r2
  401830:	460c      	mov	r4, r1
  401832:	440d      	add	r5, r1
  401834:	26ff      	movs	r6, #255	; 0xff
  401836:	f240 2101 	movw	r1, #513	; 0x201
  40183a:	e012      	b.n	401862 <spi_read_packet+0x38>
  40183c:	2000      	movs	r0, #0
  40183e:	4770      	bx	lr
  401840:	60c6      	str	r6, [r0, #12]
  401842:	f643 2399 	movw	r3, #15001	; 0x3a99
  401846:	6902      	ldr	r2, [r0, #16]
  401848:	ea31 0202 	bics.w	r2, r1, r2
  40184c:	d004      	beq.n	401858 <spi_read_packet+0x2e>
  40184e:	3b01      	subs	r3, #1
  401850:	d1f9      	bne.n	401846 <spi_read_packet+0x1c>
  401852:	f06f 0002 	mvn.w	r0, #2
  401856:	e00e      	b.n	401876 <spi_read_packet+0x4c>
  401858:	6883      	ldr	r3, [r0, #8]
  40185a:	f804 3b01 	strb.w	r3, [r4], #1
  40185e:	42a5      	cmp	r5, r4
  401860:	d00b      	beq.n	40187a <spi_read_packet+0x50>
  401862:	f643 2399 	movw	r3, #15001	; 0x3a99
  401866:	6902      	ldr	r2, [r0, #16]
  401868:	f012 0f02 	tst.w	r2, #2
  40186c:	d1e8      	bne.n	401840 <spi_read_packet+0x16>
  40186e:	3b01      	subs	r3, #1
  401870:	d1f9      	bne.n	401866 <spi_read_packet+0x3c>
  401872:	f06f 0002 	mvn.w	r0, #2
  401876:	bc70      	pop	{r4, r5, r6}
  401878:	4770      	bx	lr
  40187a:	2000      	movs	r0, #0
  40187c:	e7fb      	b.n	401876 <spi_read_packet+0x4c>
	...

00401880 <ui_init>:
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401880:	2240      	movs	r2, #64	; 0x40
  401882:	4b01      	ldr	r3, [pc, #4]	; (401888 <ui_init+0x8>)
  401884:	631a      	str	r2, [r3, #48]	; 0x30
  401886:	4770      	bx	lr
  401888:	400e0e00 	.word	0x400e0e00

0040188c <ui_powerdown>:
  40188c:	2240      	movs	r2, #64	; 0x40
  40188e:	4b01      	ldr	r3, [pc, #4]	; (401894 <ui_powerdown+0x8>)
  401890:	631a      	str	r2, [r3, #48]	; 0x30
  401892:	4770      	bx	lr
  401894:	400e0e00 	.word	0x400e0e00

00401898 <ui_wakeup>:
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401898:	2240      	movs	r2, #64	; 0x40
  40189a:	4b01      	ldr	r3, [pc, #4]	; (4018a0 <ui_wakeup+0x8>)
  40189c:	635a      	str	r2, [r3, #52]	; 0x34
  40189e:	4770      	bx	lr
  4018a0:	400e0e00 	.word	0x400e0e00

004018a4 <ui_com_open>:
{
	LED_On(LED0);
}

void ui_com_open(uint8_t port)
{
  4018a4:	4770      	bx	lr

004018a6 <ui_com_close>:
	UNUSED(port);
}

void ui_com_close(uint8_t port)
{
  4018a6:	4770      	bx	lr

004018a8 <ui_start_read>:
void ui_com_overflow(void)
{
}

void ui_start_read(void)
{
  4018a8:	4770      	bx	lr

004018aa <ui_stop_read>:
}

void ui_stop_read(void)
{
  4018aa:	4770      	bx	lr

004018ac <ui_start_write>:
}

void ui_start_write(void)
{
  4018ac:	4770      	bx	lr

004018ae <ui_stop_write>:
}

void ui_stop_write(void)
{
  4018ae:	4770      	bx	lr

004018b0 <ui_process>:
}

void ui_process(uint16_t framenumber)
{
	if ((framenumber % 1000) == 0) {
  4018b0:	4b0a      	ldr	r3, [pc, #40]	; (4018dc <ui_process+0x2c>)
  4018b2:	fba3 2300 	umull	r2, r3, r3, r0
  4018b6:	099b      	lsrs	r3, r3, #6
  4018b8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
  4018bc:	fb02 0013 	mls	r0, r2, r3, r0
  4018c0:	b280      	uxth	r0, r0
  4018c2:	b918      	cbnz	r0, 4018cc <ui_process+0x1c>
  4018c4:	2240      	movs	r2, #64	; 0x40
  4018c6:	4b06      	ldr	r3, [pc, #24]	; (4018e0 <ui_process+0x30>)
  4018c8:	635a      	str	r2, [r3, #52]	; 0x34
  4018ca:	4770      	bx	lr
		LED_On(LED0);
	}
	if ((framenumber % 1000) == 500) {
  4018cc:	f5b0 7ffa 	cmp.w	r0, #500	; 0x1f4
  4018d0:	d102      	bne.n	4018d8 <ui_process+0x28>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4018d2:	2240      	movs	r2, #64	; 0x40
  4018d4:	4b02      	ldr	r3, [pc, #8]	; (4018e0 <ui_process+0x30>)
  4018d6:	631a      	str	r2, [r3, #48]	; 0x30
  4018d8:	4770      	bx	lr
  4018da:	bf00      	nop
  4018dc:	10624dd3 	.word	0x10624dd3
  4018e0:	400e0e00 	.word	0x400e0e00

004018e4 <virtual_usb_trans>:
	}
#else
	uint8_t *ptr_cram;
	uint8_t nb_sector_trans;

	if ((addr > VMEM_NB_SECTOR) ||  (addr + nb_sector > VMEM_NB_SECTOR)) {
  4018e4:	28c8      	cmp	r0, #200	; 0xc8
  4018e6:	d822      	bhi.n	40192e <virtual_usb_trans+0x4a>
{
  4018e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4018ec:	460d      	mov	r5, r1
  4018ee:	4690      	mov	r8, r2
	if ((addr > VMEM_NB_SECTOR) ||  (addr + nb_sector > VMEM_NB_SECTOR)) {
  4018f0:	180b      	adds	r3, r1, r0
  4018f2:	2bc8      	cmp	r3, #200	; 0xc8
  4018f4:	d81d      	bhi.n	401932 <virtual_usb_trans+0x4e>
		return CTRL_FAIL;
	}

	while (nb_sector) {
  4018f6:	b1f9      	cbz	r1, 401938 <virtual_usb_trans+0x54>
  4018f8:	4e12      	ldr	r6, [pc, #72]	; (401944 <virtual_usb_trans+0x60>)
  4018fa:	eb06 2640 	add.w	r6, r6, r0, lsl #9
		// udi_msc_trans_block() is limited to 64KB
		nb_sector_trans = min(nb_sector, 64*(1024/VMEM_SECTOR_SIZE));
		ptr_cram = &vmem_data[addr++ * VMEM_SECTOR_SIZE];
		if (!udi_msc_trans_block( b_read, ptr_cram,
  4018fe:	f04f 0900 	mov.w	r9, #0
  401902:	4f11      	ldr	r7, [pc, #68]	; (401948 <virtual_usb_trans+0x64>)
		nb_sector_trans = min(nb_sector, 64*(1024/VMEM_SECTOR_SIZE));
  401904:	2d7f      	cmp	r5, #127	; 0x7f
  401906:	bf94      	ite	ls
  401908:	462c      	movls	r4, r5
  40190a:	2480      	movhi	r4, #128	; 0x80
				nb_sector_trans*VMEM_SECTOR_SIZE, NULL)) {
  40190c:	b2e2      	uxtb	r2, r4
		if (!udi_msc_trans_block( b_read, ptr_cram,
  40190e:	464b      	mov	r3, r9
  401910:	0252      	lsls	r2, r2, #9
  401912:	4631      	mov	r1, r6
  401914:	4640      	mov	r0, r8
  401916:	47b8      	blx	r7
  401918:	b188      	cbz	r0, 40193e <virtual_usb_trans+0x5a>
			return CTRL_FAIL; // transfer aborted
		}
		nb_sector -= nb_sector_trans;
  40191a:	b2e4      	uxtb	r4, r4
  40191c:	1b2c      	subs	r4, r5, r4
  40191e:	b2a5      	uxth	r5, r4
  401920:	f506 7600 	add.w	r6, r6, #512	; 0x200
	while (nb_sector) {
  401924:	2d00      	cmp	r5, #0
  401926:	d1ed      	bne.n	401904 <virtual_usb_trans+0x20>
	}
#endif

	return CTRL_GOOD;
  401928:	2000      	movs	r0, #0
  40192a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		return CTRL_FAIL;
  40192e:	2001      	movs	r0, #1
  401930:	4770      	bx	lr
  401932:	2001      	movs	r0, #1
  401934:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	return CTRL_GOOD;
  401938:	2000      	movs	r0, #0
  40193a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			return CTRL_FAIL; // transfer aborted
  40193e:	2001      	movs	r0, #1
}
  401940:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401944:	20000c30 	.word	0x20000c30
  401948:	00402aa5 	.word	0x00402aa5

0040194c <virtual_test_unit_ready>:
	return b_vmem_unloaded ? CTRL_NO_PRESENT : CTRL_GOOD;
  40194c:	4b03      	ldr	r3, [pc, #12]	; (40195c <virtual_test_unit_ready+0x10>)
  40194e:	781b      	ldrb	r3, [r3, #0]
  401950:	2b00      	cmp	r3, #0
}
  401952:	bf14      	ite	ne
  401954:	2002      	movne	r0, #2
  401956:	2000      	moveq	r0, #0
  401958:	4770      	bx	lr
  40195a:	bf00      	nop
  40195c:	20000c2c 	.word	0x20000c2c

00401960 <virtual_read_capacity>:
	if (b_vmem_unloaded) {
  401960:	4b04      	ldr	r3, [pc, #16]	; (401974 <virtual_read_capacity+0x14>)
  401962:	781b      	ldrb	r3, [r3, #0]
  401964:	b10b      	cbz	r3, 40196a <virtual_read_capacity+0xa>
		return CTRL_NO_PRESENT;
  401966:	2002      	movs	r0, #2
}
  401968:	4770      	bx	lr
		*uint32_t_nb_sector = VMEM_NB_SECTOR- 1;
  40196a:	23c7      	movs	r3, #199	; 0xc7
  40196c:	6003      	str	r3, [r0, #0]
	return CTRL_GOOD;
  40196e:	2000      	movs	r0, #0
  401970:	4770      	bx	lr
  401972:	bf00      	nop
  401974:	20000c2c 	.word	0x20000c2c

00401978 <virtual_wr_protect>:
}
  401978:	2000      	movs	r0, #0
  40197a:	4770      	bx	lr

0040197c <virtual_removal>:
}
  40197c:	2001      	movs	r0, #1
  40197e:	4770      	bx	lr

00401980 <virtual_unload>:
	b_vmem_unloaded = unload;
  401980:	4b01      	ldr	r3, [pc, #4]	; (401988 <virtual_unload+0x8>)
  401982:	7018      	strb	r0, [r3, #0]
}
  401984:	2001      	movs	r0, #1
  401986:	4770      	bx	lr
  401988:	20000c2c 	.word	0x20000c2c

0040198c <virtual_usb_read_10>:
//!   Memory unplug              ->    CTRL_NO_PRESENT
//!   Not initialized or changed ->    CTRL_BUSY
//!   An error occurred          ->    CTRL_FAIL
//!
Ctrl_status virtual_usb_read_10(uint32_t addr, uint16_t nb_sector)
{
  40198c:	b508      	push	{r3, lr}
	return virtual_usb_trans(addr, nb_sector, true);
  40198e:	2201      	movs	r2, #1
  401990:	4b01      	ldr	r3, [pc, #4]	; (401998 <virtual_usb_read_10+0xc>)
  401992:	4798      	blx	r3
}
  401994:	bd08      	pop	{r3, pc}
  401996:	bf00      	nop
  401998:	004018e5 	.word	0x004018e5

0040199c <virtual_usb_write_10>:
//!   Memory unplug              ->    CTRL_NO_PRESENT
//!   Not initialized or changed ->    CTRL_BUSY
//!   An error occurred          ->    CTRL_FAIL
//!
Ctrl_status virtual_usb_write_10(uint32_t addr, uint16_t nb_sector)
{
  40199c:	b508      	push	{r3, lr}
	return virtual_usb_trans(addr, nb_sector, false);
  40199e:	2200      	movs	r2, #0
  4019a0:	4b01      	ldr	r3, [pc, #4]	; (4019a8 <virtual_usb_write_10+0xc>)
  4019a2:	4798      	blx	r3
}
  4019a4:	bd08      	pop	{r3, pc}
  4019a6:	bf00      	nop
  4019a8:	004018e5 	.word	0x004018e5

004019ac <virtual_mem_2_ram>:
//!   Memory unplug              ->    CTRL_NO_PRESENT
//!   Not initialized or changed ->    CTRL_BUSY
//!   An error occurred          ->    CTRL_FAIL
Ctrl_status virtual_mem_2_ram(uint32_t addr, void *ram)
{
	if (addr + 1 > Max(VMEM_NB_SECTOR, 8)) {
  4019ac:	1c43      	adds	r3, r0, #1
  4019ae:	2bc8      	cmp	r3, #200	; 0xc8
  4019b0:	d901      	bls.n	4019b6 <virtual_mem_2_ram+0xa>
		return CTRL_FAIL;
  4019b2:	2001      	movs	r0, #1
  4019b4:	4770      	bx	lr
{
  4019b6:	b510      	push	{r4, lr}
  4019b8:	460c      	mov	r4, r1
  4019ba:	4603      	mov	r3, r0
	}

	// If overflow (possible with size virtual mem < 8 sectors) then read the last sector
	addr = min(addr, VMEM_NB_SECTOR - 1);
  4019bc:	28c7      	cmp	r0, #199	; 0xc7
  4019be:	bf28      	it	cs
  4019c0:	23c7      	movcs	r3, #199	; 0xc7
#if defined(VMEM_ADDRESS) && ((VMEM_ADDRESS + (VMEM_NB_SECTOR * VMEM_SECTOR_SIZE) - 1) > UINTPTR_MAX)
	hugemem_read_block(ram, (hugemem_ptr_t)((uint32_t)vmem_data + addr
				* VMEM_SECTOR_SIZE), VMEM_SECTOR_SIZE);
#else
	memcpy(ram, &vmem_data[addr * VMEM_SECTOR_SIZE], VMEM_SECTOR_SIZE);
  4019c2:	f44f 7200 	mov.w	r2, #512	; 0x200
  4019c6:	4904      	ldr	r1, [pc, #16]	; (4019d8 <virtual_mem_2_ram+0x2c>)
  4019c8:	eb01 2143 	add.w	r1, r1, r3, lsl #9
  4019cc:	4620      	mov	r0, r4
  4019ce:	4b03      	ldr	r3, [pc, #12]	; (4019dc <virtual_mem_2_ram+0x30>)
  4019d0:	4798      	blx	r3
#endif

	return CTRL_GOOD;
  4019d2:	2000      	movs	r0, #0
  4019d4:	bd10      	pop	{r4, pc}
  4019d6:	bf00      	nop
  4019d8:	20000c30 	.word	0x20000c30
  4019dc:	004083bd 	.word	0x004083bd

004019e0 <virtual_ram_2_mem>:
//!   It is ready                ->    CTRL_GOOD
//!   Memory unplug              ->    CTRL_NO_PRESENT
//!   Not initialized or changed ->    CTRL_BUSY
//!   An error occurred          ->    CTRL_FAIL
Ctrl_status virtual_ram_2_mem(uint32_t addr, const void *ram)
{
  4019e0:	b508      	push	{r3, lr}
	if (addr + 1 > VMEM_NB_SECTOR) {
  4019e2:	1c43      	adds	r3, r0, #1
  4019e4:	2bc8      	cmp	r3, #200	; 0xc8
  4019e6:	d901      	bls.n	4019ec <virtual_ram_2_mem+0xc>
		return CTRL_FAIL;
  4019e8:	2001      	movs	r0, #1
				* VMEM_SECTOR_SIZE), ram, VMEM_SECTOR_SIZE);
#else
	memcpy(&vmem_data[addr * VMEM_SECTOR_SIZE], ram, VMEM_SECTOR_SIZE);
#endif
	return CTRL_GOOD;
}
  4019ea:	bd08      	pop	{r3, pc}
	memcpy(&vmem_data[addr * VMEM_SECTOR_SIZE], ram, VMEM_SECTOR_SIZE);
  4019ec:	f44f 7200 	mov.w	r2, #512	; 0x200
  4019f0:	4b03      	ldr	r3, [pc, #12]	; (401a00 <virtual_ram_2_mem+0x20>)
  4019f2:	eb03 2040 	add.w	r0, r3, r0, lsl #9
  4019f6:	4b03      	ldr	r3, [pc, #12]	; (401a04 <virtual_ram_2_mem+0x24>)
  4019f8:	4798      	blx	r3
	return CTRL_GOOD;
  4019fa:	2000      	movs	r0, #0
  4019fc:	bd08      	pop	{r3, pc}
  4019fe:	bf00      	nop
  401a00:	20000c30 	.word	0x20000c30
  401a04:	004083bd 	.word	0x004083bd

00401a08 <sysclk_enable_usb>:
  401a08:	b510      	push	{r4, lr}
  401a0a:	2000      	movs	r0, #0
  401a0c:	4b0a      	ldr	r3, [pc, #40]	; (401a38 <sysclk_enable_usb+0x30>)
  401a0e:	4798      	blx	r3
  401a10:	4c0a      	ldr	r4, [pc, #40]	; (401a3c <sysclk_enable_usb+0x34>)
  401a12:	47a0      	blx	r4
  401a14:	2800      	cmp	r0, #0
  401a16:	d0fc      	beq.n	401a12 <sysclk_enable_usb+0xa>
  401a18:	4b09      	ldr	r3, [pc, #36]	; (401a40 <sysclk_enable_usb+0x38>)
  401a1a:	4798      	blx	r3
  401a1c:	4a09      	ldr	r2, [pc, #36]	; (401a44 <sysclk_enable_usb+0x3c>)
  401a1e:	4b0a      	ldr	r3, [pc, #40]	; (401a48 <sysclk_enable_usb+0x40>)
  401a20:	62da      	str	r2, [r3, #44]	; 0x2c
  401a22:	4c0a      	ldr	r4, [pc, #40]	; (401a4c <sysclk_enable_usb+0x44>)
  401a24:	47a0      	blx	r4
  401a26:	2800      	cmp	r0, #0
  401a28:	d0fc      	beq.n	401a24 <sysclk_enable_usb+0x1c>
  401a2a:	2000      	movs	r0, #0
  401a2c:	4b08      	ldr	r3, [pc, #32]	; (401a50 <sysclk_enable_usb+0x48>)
  401a2e:	4798      	blx	r3
  401a30:	4b08      	ldr	r3, [pc, #32]	; (401a54 <sysclk_enable_usb+0x4c>)
  401a32:	4798      	blx	r3
  401a34:	bd10      	pop	{r4, pc}
  401a36:	bf00      	nop
  401a38:	004037d1 	.word	0x004037d1
  401a3c:	004037f5 	.word	0x004037f5
  401a40:	00403831 	.word	0x00403831
  401a44:	05b83f01 	.word	0x05b83f01
  401a48:	400e0400 	.word	0x400e0400
  401a4c:	0040383d 	.word	0x0040383d
  401a50:	00403985 	.word	0x00403985
  401a54:	00403999 	.word	0x00403999

00401a58 <sysclk_init>:
  401a58:	b510      	push	{r4, lr}
  401a5a:	b0a2      	sub	sp, #136	; 0x88
  401a5c:	4818      	ldr	r0, [pc, #96]	; (401ac0 <sysclk_init+0x68>)
  401a5e:	4b19      	ldr	r3, [pc, #100]	; (401ac4 <sysclk_init+0x6c>)
  401a60:	4798      	blx	r3
  401a62:	2000      	movs	r0, #0
  401a64:	4b18      	ldr	r3, [pc, #96]	; (401ac8 <sysclk_init+0x70>)
  401a66:	4798      	blx	r3
  401a68:	4c18      	ldr	r4, [pc, #96]	; (401acc <sysclk_init+0x74>)
  401a6a:	47a0      	blx	r4
  401a6c:	2800      	cmp	r0, #0
  401a6e:	d0fc      	beq.n	401a6a <sysclk_init+0x12>
  401a70:	4b17      	ldr	r3, [pc, #92]	; (401ad0 <sysclk_init+0x78>)
  401a72:	4798      	blx	r3
  401a74:	4a17      	ldr	r2, [pc, #92]	; (401ad4 <sysclk_init+0x7c>)
  401a76:	4b18      	ldr	r3, [pc, #96]	; (401ad8 <sysclk_init+0x80>)
  401a78:	629a      	str	r2, [r3, #40]	; 0x28
  401a7a:	4c18      	ldr	r4, [pc, #96]	; (401adc <sysclk_init+0x84>)
  401a7c:	47a0      	blx	r4
  401a7e:	2800      	cmp	r0, #0
  401a80:	d0fc      	beq.n	401a7c <sysclk_init+0x24>
  401a82:	2010      	movs	r0, #16
  401a84:	4b16      	ldr	r3, [pc, #88]	; (401ae0 <sysclk_init+0x88>)
  401a86:	4798      	blx	r3
  401a88:	4b16      	ldr	r3, [pc, #88]	; (401ae4 <sysclk_init+0x8c>)
  401a8a:	4798      	blx	r3
  401a8c:	4816      	ldr	r0, [pc, #88]	; (401ae8 <sysclk_init+0x90>)
  401a8e:	4b0d      	ldr	r3, [pc, #52]	; (401ac4 <sysclk_init+0x6c>)
  401a90:	4798      	blx	r3
  401a92:	4b16      	ldr	r3, [pc, #88]	; (401aec <sysclk_init+0x94>)
  401a94:	681a      	ldr	r2, [r3, #0]
  401a96:	4b16      	ldr	r3, [pc, #88]	; (401af0 <sysclk_init+0x98>)
  401a98:	4413      	add	r3, r2
  401a9a:	4a16      	ldr	r2, [pc, #88]	; (401af4 <sysclk_init+0x9c>)
  401a9c:	4293      	cmp	r3, r2
  401a9e:	d901      	bls.n	401aa4 <sysclk_init+0x4c>
  401aa0:	b022      	add	sp, #136	; 0x88
  401aa2:	bd10      	pop	{r4, pc}
  401aa4:	2320      	movs	r3, #32
  401aa6:	9300      	str	r3, [sp, #0]
  401aa8:	ab02      	add	r3, sp, #8
  401aaa:	220f      	movs	r2, #15
  401aac:	210e      	movs	r1, #14
  401aae:	4812      	ldr	r0, [pc, #72]	; (401af8 <sysclk_init+0xa0>)
  401ab0:	4c12      	ldr	r4, [pc, #72]	; (401afc <sysclk_init+0xa4>)
  401ab2:	47a0      	blx	r4
  401ab4:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
  401ab8:	4811      	ldr	r0, [pc, #68]	; (401b00 <sysclk_init+0xa8>)
  401aba:	4b12      	ldr	r3, [pc, #72]	; (401b04 <sysclk_init+0xac>)
  401abc:	4798      	blx	r3
  401abe:	e7ef      	b.n	401aa0 <sysclk_init+0x48>
  401ac0:	07270e00 	.word	0x07270e00
  401ac4:	00405b8d 	.word	0x00405b8d
  401ac8:	004037d1 	.word	0x004037d1
  401acc:	004037f5 	.word	0x004037f5
  401ad0:	00403815 	.word	0x00403815
  401ad4:	0e4d3f01 	.word	0x0e4d3f01
  401ad8:	400e0400 	.word	0x400e0400
  401adc:	00403821 	.word	0x00403821
  401ae0:	0040376d 	.word	0x0040376d
  401ae4:	00405aa5 	.word	0x00405aa5
  401ae8:	03938000 	.word	0x03938000
  401aec:	20000200 	.word	0x20000200
  401af0:	f9bdd3c0 	.word	0xf9bdd3c0
  401af4:	01c9c380 	.word	0x01c9c380
  401af8:	400e0a00 	.word	0x400e0a00
  401afc:	2000000d 	.word	0x2000000d
  401b00:	400e1410 	.word	0x400e1410
  401b04:	00403baf 	.word	0x00403baf

00401b08 <get_nb_lun>:
  401b08:	2002      	movs	r0, #2
  401b0a:	4770      	bx	lr

00401b0c <mem_test_unit_ready>:
  401b0c:	2801      	cmp	r0, #1
  401b0e:	d901      	bls.n	401b14 <mem_test_unit_ready+0x8>
  401b10:	2001      	movs	r0, #1
  401b12:	4770      	bx	lr
  401b14:	b508      	push	{r3, lr}
  401b16:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401b1a:	4b02      	ldr	r3, [pc, #8]	; (401b24 <mem_test_unit_ready+0x18>)
  401b1c:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
  401b20:	4798      	blx	r3
  401b22:	bd08      	pop	{r3, pc}
  401b24:	0040b53c 	.word	0x0040b53c

00401b28 <mem_read_capacity>:
  401b28:	2801      	cmp	r0, #1
  401b2a:	d901      	bls.n	401b30 <mem_read_capacity+0x8>
  401b2c:	2001      	movs	r0, #1
  401b2e:	4770      	bx	lr
  401b30:	b508      	push	{r3, lr}
  401b32:	eb00 0380 	add.w	r3, r0, r0, lsl #2
  401b36:	4803      	ldr	r0, [pc, #12]	; (401b44 <mem_read_capacity+0x1c>)
  401b38:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  401b3c:	685b      	ldr	r3, [r3, #4]
  401b3e:	4608      	mov	r0, r1
  401b40:	4798      	blx	r3
  401b42:	bd08      	pop	{r3, pc}
  401b44:	0040b53c 	.word	0x0040b53c

00401b48 <mem_sector_size>:
  401b48:	2801      	cmp	r0, #1
  401b4a:	bf8c      	ite	hi
  401b4c:	2000      	movhi	r0, #0
  401b4e:	2001      	movls	r0, #1
  401b50:	4770      	bx	lr
	...

00401b54 <mem_unload>:
  401b54:	2801      	cmp	r0, #1
  401b56:	d901      	bls.n	401b5c <mem_unload+0x8>
  401b58:	2000      	movs	r0, #0
  401b5a:	4770      	bx	lr
  401b5c:	b508      	push	{r3, lr}
  401b5e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401b62:	4b05      	ldr	r3, [pc, #20]	; (401b78 <mem_unload+0x24>)
  401b64:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
  401b68:	6883      	ldr	r3, [r0, #8]
  401b6a:	b113      	cbz	r3, 401b72 <mem_unload+0x1e>
  401b6c:	4608      	mov	r0, r1
  401b6e:	4798      	blx	r3
  401b70:	bd08      	pop	{r3, pc}
  401b72:	f081 0001 	eor.w	r0, r1, #1
  401b76:	bd08      	pop	{r3, pc}
  401b78:	0040b53c 	.word	0x0040b53c

00401b7c <mem_wr_protect>:
  401b7c:	2801      	cmp	r0, #1
  401b7e:	d901      	bls.n	401b84 <mem_wr_protect+0x8>
  401b80:	2001      	movs	r0, #1
  401b82:	4770      	bx	lr
  401b84:	b508      	push	{r3, lr}
  401b86:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401b8a:	4b03      	ldr	r3, [pc, #12]	; (401b98 <mem_wr_protect+0x1c>)
  401b8c:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
  401b90:	68c3      	ldr	r3, [r0, #12]
  401b92:	4798      	blx	r3
  401b94:	bd08      	pop	{r3, pc}
  401b96:	bf00      	nop
  401b98:	0040b53c 	.word	0x0040b53c

00401b9c <mem_removal>:
  401b9c:	2801      	cmp	r0, #1
  401b9e:	d901      	bls.n	401ba4 <mem_removal+0x8>
  401ba0:	2001      	movs	r0, #1
  401ba2:	4770      	bx	lr
  401ba4:	b508      	push	{r3, lr}
  401ba6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401baa:	4b03      	ldr	r3, [pc, #12]	; (401bb8 <mem_removal+0x1c>)
  401bac:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
  401bb0:	6903      	ldr	r3, [r0, #16]
  401bb2:	4798      	blx	r3
  401bb4:	bd08      	pop	{r3, pc}
  401bb6:	bf00      	nop
  401bb8:	0040b53c 	.word	0x0040b53c

00401bbc <mem_name>:
  401bbc:	2801      	cmp	r0, #1
  401bbe:	d806      	bhi.n	401bce <mem_name+0x12>
  401bc0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401bc4:	4b03      	ldr	r3, [pc, #12]	; (401bd4 <mem_name+0x18>)
  401bc6:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
  401bca:	6a40      	ldr	r0, [r0, #36]	; 0x24
  401bcc:	4770      	bx	lr
  401bce:	2000      	movs	r0, #0
  401bd0:	4770      	bx	lr
  401bd2:	bf00      	nop
  401bd4:	0040b53c 	.word	0x0040b53c

00401bd8 <memory_2_usb>:
  401bd8:	b570      	push	{r4, r5, r6, lr}
  401bda:	4604      	mov	r4, r0
  401bdc:	460d      	mov	r5, r1
  401bde:	4616      	mov	r6, r2
  401be0:	4b09      	ldr	r3, [pc, #36]	; (401c08 <memory_2_usb+0x30>)
  401be2:	4798      	blx	r3
  401be4:	2c01      	cmp	r4, #1
  401be6:	d904      	bls.n	401bf2 <memory_2_usb+0x1a>
  401be8:	2401      	movs	r4, #1
  401bea:	4b08      	ldr	r3, [pc, #32]	; (401c0c <memory_2_usb+0x34>)
  401bec:	4798      	blx	r3
  401bee:	4620      	mov	r0, r4
  401bf0:	bd70      	pop	{r4, r5, r6, pc}
  401bf2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401bf6:	4b06      	ldr	r3, [pc, #24]	; (401c10 <memory_2_usb+0x38>)
  401bf8:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  401bfc:	6963      	ldr	r3, [r4, #20]
  401bfe:	4631      	mov	r1, r6
  401c00:	4628      	mov	r0, r5
  401c02:	4798      	blx	r3
  401c04:	4604      	mov	r4, r0
  401c06:	e7f0      	b.n	401bea <memory_2_usb+0x12>
  401c08:	004018a9 	.word	0x004018a9
  401c0c:	004018ab 	.word	0x004018ab
  401c10:	0040b53c 	.word	0x0040b53c

00401c14 <usb_2_memory>:
  401c14:	b570      	push	{r4, r5, r6, lr}
  401c16:	4604      	mov	r4, r0
  401c18:	460d      	mov	r5, r1
  401c1a:	4616      	mov	r6, r2
  401c1c:	4b09      	ldr	r3, [pc, #36]	; (401c44 <usb_2_memory+0x30>)
  401c1e:	4798      	blx	r3
  401c20:	2c01      	cmp	r4, #1
  401c22:	d904      	bls.n	401c2e <usb_2_memory+0x1a>
  401c24:	2401      	movs	r4, #1
  401c26:	4b08      	ldr	r3, [pc, #32]	; (401c48 <usb_2_memory+0x34>)
  401c28:	4798      	blx	r3
  401c2a:	4620      	mov	r0, r4
  401c2c:	bd70      	pop	{r4, r5, r6, pc}
  401c2e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401c32:	4b06      	ldr	r3, [pc, #24]	; (401c4c <usb_2_memory+0x38>)
  401c34:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  401c38:	69a3      	ldr	r3, [r4, #24]
  401c3a:	4631      	mov	r1, r6
  401c3c:	4628      	mov	r0, r5
  401c3e:	4798      	blx	r3
  401c40:	4604      	mov	r4, r0
  401c42:	e7f0      	b.n	401c26 <usb_2_memory+0x12>
  401c44:	004018ad 	.word	0x004018ad
  401c48:	004018af 	.word	0x004018af
  401c4c:	0040b53c 	.word	0x0040b53c

00401c50 <memory_2_ram>:
  401c50:	b570      	push	{r4, r5, r6, lr}
  401c52:	4604      	mov	r4, r0
  401c54:	460d      	mov	r5, r1
  401c56:	4616      	mov	r6, r2
  401c58:	4b09      	ldr	r3, [pc, #36]	; (401c80 <memory_2_ram+0x30>)
  401c5a:	4798      	blx	r3
  401c5c:	2c01      	cmp	r4, #1
  401c5e:	d904      	bls.n	401c6a <memory_2_ram+0x1a>
  401c60:	2401      	movs	r4, #1
  401c62:	4b08      	ldr	r3, [pc, #32]	; (401c84 <memory_2_ram+0x34>)
  401c64:	4798      	blx	r3
  401c66:	4620      	mov	r0, r4
  401c68:	bd70      	pop	{r4, r5, r6, pc}
  401c6a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401c6e:	4b06      	ldr	r3, [pc, #24]	; (401c88 <memory_2_ram+0x38>)
  401c70:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  401c74:	69e3      	ldr	r3, [r4, #28]
  401c76:	4631      	mov	r1, r6
  401c78:	4628      	mov	r0, r5
  401c7a:	4798      	blx	r3
  401c7c:	4604      	mov	r4, r0
  401c7e:	e7f0      	b.n	401c62 <memory_2_ram+0x12>
  401c80:	004018a9 	.word	0x004018a9
  401c84:	004018ab 	.word	0x004018ab
  401c88:	0040b53c 	.word	0x0040b53c

00401c8c <ram_2_memory>:
  401c8c:	b570      	push	{r4, r5, r6, lr}
  401c8e:	4604      	mov	r4, r0
  401c90:	460d      	mov	r5, r1
  401c92:	4616      	mov	r6, r2
  401c94:	4b09      	ldr	r3, [pc, #36]	; (401cbc <ram_2_memory+0x30>)
  401c96:	4798      	blx	r3
  401c98:	2c01      	cmp	r4, #1
  401c9a:	d904      	bls.n	401ca6 <ram_2_memory+0x1a>
  401c9c:	2401      	movs	r4, #1
  401c9e:	4b08      	ldr	r3, [pc, #32]	; (401cc0 <ram_2_memory+0x34>)
  401ca0:	4798      	blx	r3
  401ca2:	4620      	mov	r0, r4
  401ca4:	bd70      	pop	{r4, r5, r6, pc}
  401ca6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401caa:	4b06      	ldr	r3, [pc, #24]	; (401cc4 <ram_2_memory+0x38>)
  401cac:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  401cb0:	6a23      	ldr	r3, [r4, #32]
  401cb2:	4631      	mov	r1, r6
  401cb4:	4628      	mov	r0, r5
  401cb6:	4798      	blx	r3
  401cb8:	4604      	mov	r4, r0
  401cba:	e7f0      	b.n	401c9e <ram_2_memory+0x12>
  401cbc:	004018ad 	.word	0x004018ad
  401cc0:	004018af 	.word	0x004018af
  401cc4:	0040b53c 	.word	0x0040b53c

00401cc8 <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
  401cc8:	4a02      	ldr	r2, [pc, #8]	; (401cd4 <udi_cdc_comm_disable+0xc>)
  401cca:	7813      	ldrb	r3, [r2, #0]
  401ccc:	3b01      	subs	r3, #1
  401cce:	b2db      	uxtb	r3, r3
  401cd0:	7013      	strb	r3, [r2, #0]
  401cd2:	4770      	bx	lr
  401cd4:	20019c3b 	.word	0x20019c3b

00401cd8 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
  401cd8:	2000      	movs	r0, #0
  401cda:	4770      	bx	lr

00401cdc <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
  401cdc:	2000      	movs	r0, #0
  401cde:	4770      	bx	lr

00401ce0 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
  401ce0:	4770      	bx	lr
	...

00401ce4 <udi_cdc_comm_enable>:
{
  401ce4:	b508      	push	{r3, lr}
	udi_cdc_nb_comm_enabled = 0;
  401ce6:	2000      	movs	r0, #0
  401ce8:	4b10      	ldr	r3, [pc, #64]	; (401d2c <udi_cdc_comm_enable+0x48>)
  401cea:	7018      	strb	r0, [r3, #0]
	udi_cdc_state[port] = CPU_TO_LE16(0);
  401cec:	4b10      	ldr	r3, [pc, #64]	; (401d30 <udi_cdc_comm_enable+0x4c>)
  401cee:	8018      	strh	r0, [r3, #0]
	uid_cdc_state_msg[port].header.bmRequestType =
  401cf0:	4b10      	ldr	r3, [pc, #64]	; (401d34 <udi_cdc_comm_enable+0x50>)
  401cf2:	22a1      	movs	r2, #161	; 0xa1
  401cf4:	701a      	strb	r2, [r3, #0]
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
  401cf6:	2220      	movs	r2, #32
  401cf8:	705a      	strb	r2, [r3, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
  401cfa:	8058      	strh	r0, [r3, #2]
	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
  401cfc:	8098      	strh	r0, [r3, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
  401cfe:	2202      	movs	r2, #2
  401d00:	80da      	strh	r2, [r3, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
  401d02:	8118      	strh	r0, [r3, #8]
	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
  401d04:	4b0c      	ldr	r3, [pc, #48]	; (401d38 <udi_cdc_comm_enable+0x54>)
  401d06:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
  401d0a:	601a      	str	r2, [r3, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
  401d0c:	7118      	strb	r0, [r3, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
  401d0e:	7158      	strb	r0, [r3, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
  401d10:	2208      	movs	r2, #8
  401d12:	719a      	strb	r2, [r3, #6]
	if (!UDI_CDC_ENABLE_EXT(port)) {
  401d14:	4b09      	ldr	r3, [pc, #36]	; (401d3c <udi_cdc_comm_enable+0x58>)
  401d16:	4798      	blx	r3
  401d18:	4602      	mov	r2, r0
  401d1a:	b120      	cbz	r0, 401d26 <udi_cdc_comm_enable+0x42>
	udi_cdc_nb_comm_enabled++;
  401d1c:	4903      	ldr	r1, [pc, #12]	; (401d2c <udi_cdc_comm_enable+0x48>)
  401d1e:	780b      	ldrb	r3, [r1, #0]
  401d20:	3301      	adds	r3, #1
  401d22:	b2db      	uxtb	r3, r3
  401d24:	700b      	strb	r3, [r1, #0]
}
  401d26:	4610      	mov	r0, r2
  401d28:	bd08      	pop	{r3, pc}
  401d2a:	bf00      	nop
  401d2c:	20019c3b 	.word	0x20019c3b
  401d30:	20019ed0 	.word	0x20019ed0
  401d34:	2001a168 	.word	0x2001a168
  401d38:	20019c34 	.word	0x20019c34
  401d3c:	00408311 	.word	0x00408311

00401d40 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
  401d40:	4b45      	ldr	r3, [pc, #276]	; (401e58 <udi_cdc_tx_send+0x118>)
  401d42:	781b      	ldrb	r3, [r3, #0]
  401d44:	b103      	cbz	r3, 401d48 <udi_cdc_tx_send+0x8>
  401d46:	4770      	bx	lr
{
  401d48:	b570      	push	{r4, r5, r6, lr}
  401d4a:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
  401d4c:	4b43      	ldr	r3, [pc, #268]	; (401e5c <udi_cdc_tx_send+0x11c>)
  401d4e:	4798      	blx	r3
  401d50:	2800      	cmp	r0, #0
  401d52:	d042      	beq.n	401dda <udi_cdc_tx_send+0x9a>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
  401d54:	4b42      	ldr	r3, [pc, #264]	; (401e60 <udi_cdc_tx_send+0x120>)
  401d56:	881c      	ldrh	r4, [r3, #0]
  401d58:	4b42      	ldr	r3, [pc, #264]	; (401e64 <udi_cdc_tx_send+0x124>)
  401d5a:	4798      	blx	r3
  401d5c:	4284      	cmp	r4, r0
  401d5e:	d079      	beq.n	401e54 <udi_cdc_tx_send+0x114>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401d60:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401d64:	fab3 f383 	clz	r3, r3
  401d68:	095b      	lsrs	r3, r3, #5
  401d6a:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  401d6c:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  401d6e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401d72:	2200      	movs	r2, #0
  401d74:	4b3c      	ldr	r3, [pc, #240]	; (401e68 <udi_cdc_tx_send+0x128>)
  401d76:	701a      	strb	r2, [r3, #0]
	return flags;
  401d78:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
  401d7a:	4b3c      	ldr	r3, [pc, #240]	; (401e6c <udi_cdc_tx_send+0x12c>)
  401d7c:	781c      	ldrb	r4, [r3, #0]
  401d7e:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
  401d80:	4b3b      	ldr	r3, [pc, #236]	; (401e70 <udi_cdc_tx_send+0x130>)
  401d82:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  401d86:	2b00      	cmp	r3, #0
  401d88:	d02e      	beq.n	401de8 <udi_cdc_tx_send+0xa8>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
  401d8a:	2200      	movs	r2, #0
  401d8c:	4b39      	ldr	r3, [pc, #228]	; (401e74 <udi_cdc_tx_send+0x134>)
  401d8e:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
  401d90:	4b39      	ldr	r3, [pc, #228]	; (401e78 <udi_cdc_tx_send+0x138>)
  401d92:	781b      	ldrb	r3, [r3, #0]
  401d94:	2b00      	cmp	r3, #0
  401d96:	d143      	bne.n	401e20 <udi_cdc_tx_send+0xe0>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  401d98:	fab4 f384 	clz	r3, r4
  401d9c:	095b      	lsrs	r3, r3, #5
  401d9e:	4a33      	ldr	r2, [pc, #204]	; (401e6c <udi_cdc_tx_send+0x12c>)
  401da0:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
  401da2:	2201      	movs	r2, #1
  401da4:	4b2c      	ldr	r3, [pc, #176]	; (401e58 <udi_cdc_tx_send+0x118>)
  401da6:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401da8:	b125      	cbz	r5, 401db4 <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
  401daa:	4b2f      	ldr	r3, [pc, #188]	; (401e68 <udi_cdc_tx_send+0x128>)
  401dac:	701a      	strb	r2, [r3, #0]
  401dae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401db2:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
  401db4:	4626      	mov	r6, r4
  401db6:	4b2e      	ldr	r3, [pc, #184]	; (401e70 <udi_cdc_tx_send+0x130>)
  401db8:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  401dbc:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
  401dc0:	bf14      	ite	ne
  401dc2:	2501      	movne	r5, #1
  401dc4:	2500      	moveq	r5, #0
	if (b_short_packet) {
  401dc6:	d034      	beq.n	401e32 <udi_cdc_tx_send+0xf2>
		if (udd_is_high_speed()) {
  401dc8:	4b24      	ldr	r3, [pc, #144]	; (401e5c <udi_cdc_tx_send+0x11c>)
  401dca:	4798      	blx	r3
  401dcc:	2800      	cmp	r0, #0
  401dce:	d02b      	beq.n	401e28 <udi_cdc_tx_send+0xe8>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
  401dd0:	4b24      	ldr	r3, [pc, #144]	; (401e64 <udi_cdc_tx_send+0x124>)
  401dd2:	4798      	blx	r3
  401dd4:	4b22      	ldr	r3, [pc, #136]	; (401e60 <udi_cdc_tx_send+0x120>)
  401dd6:	8018      	strh	r0, [r3, #0]
  401dd8:	e02e      	b.n	401e38 <udi_cdc_tx_send+0xf8>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
  401dda:	4b21      	ldr	r3, [pc, #132]	; (401e60 <udi_cdc_tx_send+0x120>)
  401ddc:	881c      	ldrh	r4, [r3, #0]
  401dde:	4b27      	ldr	r3, [pc, #156]	; (401e7c <udi_cdc_tx_send+0x13c>)
  401de0:	4798      	blx	r3
  401de2:	4284      	cmp	r4, r0
  401de4:	d1bc      	bne.n	401d60 <udi_cdc_tx_send+0x20>
  401de6:	e035      	b.n	401e54 <udi_cdc_tx_send+0x114>
		sof_zlp_counter++;
  401de8:	4a22      	ldr	r2, [pc, #136]	; (401e74 <udi_cdc_tx_send+0x134>)
  401dea:	8813      	ldrh	r3, [r2, #0]
  401dec:	3301      	adds	r3, #1
  401dee:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
  401df0:	4b1a      	ldr	r3, [pc, #104]	; (401e5c <udi_cdc_tx_send+0x11c>)
  401df2:	4798      	blx	r3
  401df4:	b918      	cbnz	r0, 401dfe <udi_cdc_tx_send+0xbe>
  401df6:	4b1f      	ldr	r3, [pc, #124]	; (401e74 <udi_cdc_tx_send+0x134>)
  401df8:	881b      	ldrh	r3, [r3, #0]
  401dfa:	2b63      	cmp	r3, #99	; 0x63
  401dfc:	d908      	bls.n	401e10 <udi_cdc_tx_send+0xd0>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
  401dfe:	4b17      	ldr	r3, [pc, #92]	; (401e5c <udi_cdc_tx_send+0x11c>)
  401e00:	4798      	blx	r3
  401e02:	2800      	cmp	r0, #0
  401e04:	d0c1      	beq.n	401d8a <udi_cdc_tx_send+0x4a>
  401e06:	4b1b      	ldr	r3, [pc, #108]	; (401e74 <udi_cdc_tx_send+0x134>)
  401e08:	881b      	ldrh	r3, [r3, #0]
  401e0a:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
  401e0e:	d2bc      	bcs.n	401d8a <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
  401e10:	b305      	cbz	r5, 401e54 <udi_cdc_tx_send+0x114>
		cpu_irq_enable();
  401e12:	2201      	movs	r2, #1
  401e14:	4b14      	ldr	r3, [pc, #80]	; (401e68 <udi_cdc_tx_send+0x128>)
  401e16:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  401e18:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401e1c:	b662      	cpsie	i
  401e1e:	e019      	b.n	401e54 <udi_cdc_tx_send+0x114>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
  401e20:	fab4 f484 	clz	r4, r4
  401e24:	0964      	lsrs	r4, r4, #5
  401e26:	e7bc      	b.n	401da2 <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
  401e28:	4b14      	ldr	r3, [pc, #80]	; (401e7c <udi_cdc_tx_send+0x13c>)
  401e2a:	4798      	blx	r3
  401e2c:	4b0c      	ldr	r3, [pc, #48]	; (401e60 <udi_cdc_tx_send+0x120>)
  401e2e:	8018      	strh	r0, [r3, #0]
  401e30:	e002      	b.n	401e38 <udi_cdc_tx_send+0xf8>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
  401e32:	2200      	movs	r2, #0
  401e34:	4b0a      	ldr	r3, [pc, #40]	; (401e60 <udi_cdc_tx_send+0x120>)
  401e36:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
  401e38:	4b0d      	ldr	r3, [pc, #52]	; (401e70 <udi_cdc_tx_send+0x130>)
	udd_ep_run( ep,
  401e3a:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
			udi_cdc_tx_buf[port][buf_sel_trans],
  401e3e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
	udd_ep_run( ep,
  401e42:	4a0f      	ldr	r2, [pc, #60]	; (401e80 <udi_cdc_tx_send+0x140>)
  401e44:	9200      	str	r2, [sp, #0]
  401e46:	4a0f      	ldr	r2, [pc, #60]	; (401e84 <udi_cdc_tx_send+0x144>)
  401e48:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  401e4c:	4629      	mov	r1, r5
  401e4e:	2084      	movs	r0, #132	; 0x84
  401e50:	4c0d      	ldr	r4, [pc, #52]	; (401e88 <udi_cdc_tx_send+0x148>)
  401e52:	47a0      	blx	r4
			udi_cdc_data_sent);
}
  401e54:	b004      	add	sp, #16
  401e56:	bd70      	pop	{r4, r5, r6, pc}
  401e58:	2001a164 	.word	0x2001a164
  401e5c:	00404f81 	.word	0x00404f81
  401e60:	2001a160 	.word	0x2001a160
  401e64:	00404fed 	.word	0x00404fed
  401e68:	200001fc 	.word	0x200001fc
  401e6c:	2001a15c 	.word	0x2001a15c
  401e70:	2001a158 	.word	0x2001a158
  401e74:	20019c30 	.word	0x20019c30
  401e78:	20019ed4 	.word	0x20019ed4
  401e7c:	00404fdd 	.word	0x00404fdd
  401e80:	00401e8d 	.word	0x00401e8d
  401e84:	20019ed8 	.word	0x20019ed8
  401e88:	004054cd 	.word	0x004054cd

00401e8c <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
  401e8c:	b100      	cbz	r0, 401e90 <udi_cdc_data_sent+0x4>
  401e8e:	4770      	bx	lr
{
  401e90:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
  401e92:	4b07      	ldr	r3, [pc, #28]	; (401eb0 <udi_cdc_data_sent+0x24>)
  401e94:	781b      	ldrb	r3, [r3, #0]
  401e96:	fab3 f383 	clz	r3, r3
  401e9a:	095b      	lsrs	r3, r3, #5
  401e9c:	4a05      	ldr	r2, [pc, #20]	; (401eb4 <udi_cdc_data_sent+0x28>)
  401e9e:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
  401ea2:	4b05      	ldr	r3, [pc, #20]	; (401eb8 <udi_cdc_data_sent+0x2c>)
  401ea4:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  401ea6:	4b05      	ldr	r3, [pc, #20]	; (401ebc <udi_cdc_data_sent+0x30>)
  401ea8:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
  401eaa:	4b05      	ldr	r3, [pc, #20]	; (401ec0 <udi_cdc_data_sent+0x34>)
  401eac:	4798      	blx	r3
  401eae:	bd08      	pop	{r3, pc}
  401eb0:	2001a15c 	.word	0x2001a15c
  401eb4:	2001a158 	.word	0x2001a158
  401eb8:	20019ed4 	.word	0x20019ed4
  401ebc:	2001a164 	.word	0x2001a164
  401ec0:	00401d41 	.word	0x00401d41

00401ec4 <udi_cdc_data_sof_notify>:
{
  401ec4:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
  401ec6:	2000      	movs	r0, #0
  401ec8:	4b01      	ldr	r3, [pc, #4]	; (401ed0 <udi_cdc_data_sof_notify+0xc>)
  401eca:	4798      	blx	r3
  401ecc:	bd08      	pop	{r3, pc}
  401ece:	bf00      	nop
  401ed0:	00401d41 	.word	0x00401d41

00401ed4 <udi_cdc_data_disable>:
{
  401ed4:	b508      	push	{r3, lr}
	udi_cdc_nb_data_enabled--;
  401ed6:	4a06      	ldr	r2, [pc, #24]	; (401ef0 <udi_cdc_data_disable+0x1c>)
  401ed8:	7813      	ldrb	r3, [r2, #0]
  401eda:	3b01      	subs	r3, #1
  401edc:	b2db      	uxtb	r3, r3
  401ede:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
  401ee0:	7810      	ldrb	r0, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
  401ee2:	4b04      	ldr	r3, [pc, #16]	; (401ef4 <udi_cdc_data_disable+0x20>)
  401ee4:	4798      	blx	r3
	udi_cdc_data_running = false;
  401ee6:	2200      	movs	r2, #0
  401ee8:	4b03      	ldr	r3, [pc, #12]	; (401ef8 <udi_cdc_data_disable+0x24>)
  401eea:	701a      	strb	r2, [r3, #0]
  401eec:	bd08      	pop	{r3, pc}
  401eee:	bf00      	nop
  401ef0:	20019c3c 	.word	0x20019c3c
  401ef4:	0040831d 	.word	0x0040831d
  401ef8:	20019c32 	.word	0x20019c32

00401efc <udi_cdc_comm_setup>:
{
  401efc:	b508      	push	{r3, lr}
	if (Udd_setup_is_in()) {
  401efe:	4b22      	ldr	r3, [pc, #136]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f00:	781b      	ldrb	r3, [r3, #0]
  401f02:	f013 0f80 	tst.w	r3, #128	; 0x80
  401f06:	d105      	bne.n	401f14 <udi_cdc_comm_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  401f08:	f003 0360 	and.w	r3, r3, #96	; 0x60
  401f0c:	2b20      	cmp	r3, #32
  401f0e:	d018      	beq.n	401f42 <udi_cdc_comm_setup+0x46>
	return false;  // request Not supported
  401f10:	2000      	movs	r0, #0
  401f12:	bd08      	pop	{r3, pc}
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  401f14:	f003 0360 	and.w	r3, r3, #96	; 0x60
  401f18:	2b20      	cmp	r3, #32
  401f1a:	d001      	beq.n	401f20 <udi_cdc_comm_setup+0x24>
	return false;  // request Not supported
  401f1c:	2000      	movs	r0, #0
  401f1e:	bd08      	pop	{r3, pc}
			switch (udd_g_ctrlreq.req.bRequest) {
  401f20:	4b19      	ldr	r3, [pc, #100]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f22:	785b      	ldrb	r3, [r3, #1]
  401f24:	2b21      	cmp	r3, #33	; 0x21
  401f26:	d12c      	bne.n	401f82 <udi_cdc_comm_setup+0x86>
						udd_g_ctrlreq.req.wLength)
  401f28:	4b17      	ldr	r3, [pc, #92]	; (401f88 <udi_cdc_comm_setup+0x8c>)
				if (sizeof(usb_cdc_line_coding_t) !=
  401f2a:	88db      	ldrh	r3, [r3, #6]
  401f2c:	2b07      	cmp	r3, #7
  401f2e:	d001      	beq.n	401f34 <udi_cdc_comm_setup+0x38>
					return false; // Error for USB host
  401f30:	2000      	movs	r0, #0
  401f32:	bd08      	pop	{r3, pc}
				udd_g_ctrlreq.payload =
  401f34:	4b14      	ldr	r3, [pc, #80]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f36:	4a15      	ldr	r2, [pc, #84]	; (401f8c <udi_cdc_comm_setup+0x90>)
  401f38:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  401f3a:	2207      	movs	r2, #7
  401f3c:	819a      	strh	r2, [r3, #12]
				return true;
  401f3e:	2001      	movs	r0, #1
  401f40:	bd08      	pop	{r3, pc}
			switch (udd_g_ctrlreq.req.bRequest) {
  401f42:	4b11      	ldr	r3, [pc, #68]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f44:	785b      	ldrb	r3, [r3, #1]
  401f46:	2b20      	cmp	r3, #32
  401f48:	d003      	beq.n	401f52 <udi_cdc_comm_setup+0x56>
  401f4a:	2b22      	cmp	r3, #34	; 0x22
  401f4c:	d010      	beq.n	401f70 <udi_cdc_comm_setup+0x74>
	return false;  // request Not supported
  401f4e:	2000      	movs	r0, #0
  401f50:	bd08      	pop	{r3, pc}
						udd_g_ctrlreq.req.wLength)
  401f52:	4b0d      	ldr	r3, [pc, #52]	; (401f88 <udi_cdc_comm_setup+0x8c>)
				if (sizeof(usb_cdc_line_coding_t) !=
  401f54:	88db      	ldrh	r3, [r3, #6]
  401f56:	2b07      	cmp	r3, #7
  401f58:	d001      	beq.n	401f5e <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
  401f5a:	2000      	movs	r0, #0
}
  401f5c:	bd08      	pop	{r3, pc}
				udd_g_ctrlreq.callback =
  401f5e:	4b0a      	ldr	r3, [pc, #40]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f60:	4a0b      	ldr	r2, [pc, #44]	; (401f90 <udi_cdc_comm_setup+0x94>)
  401f62:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
  401f64:	4a09      	ldr	r2, [pc, #36]	; (401f8c <udi_cdc_comm_setup+0x90>)
  401f66:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  401f68:	2207      	movs	r2, #7
  401f6a:	819a      	strh	r2, [r3, #12]
				return true;
  401f6c:	2001      	movs	r0, #1
  401f6e:	bd08      	pop	{r3, pc}
				UDI_CDC_SET_DTR_EXT(port, (0 !=
  401f70:	4b05      	ldr	r3, [pc, #20]	; (401f88 <udi_cdc_comm_setup+0x8c>)
  401f72:	7899      	ldrb	r1, [r3, #2]
  401f74:	f001 0101 	and.w	r1, r1, #1
  401f78:	2000      	movs	r0, #0
  401f7a:	4b06      	ldr	r3, [pc, #24]	; (401f94 <udi_cdc_comm_setup+0x98>)
  401f7c:	4798      	blx	r3
				return true;
  401f7e:	2001      	movs	r0, #1
  401f80:	bd08      	pop	{r3, pc}
	return false;  // request Not supported
  401f82:	2000      	movs	r0, #0
  401f84:	bd08      	pop	{r3, pc}
  401f86:	bf00      	nop
  401f88:	2001ab44 	.word	0x2001ab44
  401f8c:	20019c34 	.word	0x20019c34
  401f90:	00401ce1 	.word	0x00401ce1
  401f94:	00408329 	.word	0x00408329

00401f98 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
  401f98:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401f9a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401f9e:	fab3 f383 	clz	r3, r3
  401fa2:	095b      	lsrs	r3, r3, #5
  401fa4:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401fa6:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401fa8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401fac:	2200      	movs	r2, #0
  401fae:	4b0b      	ldr	r3, [pc, #44]	; (401fdc <udi_cdc_multi_get_nb_received_data+0x44>)
  401fb0:	701a      	strb	r2, [r3, #0]
	return flags;
  401fb2:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  401fb4:	4b0a      	ldr	r3, [pc, #40]	; (401fe0 <udi_cdc_multi_get_nb_received_data+0x48>)
  401fb6:	8818      	ldrh	r0, [r3, #0]
  401fb8:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
  401fba:	4a0a      	ldr	r2, [pc, #40]	; (401fe4 <udi_cdc_multi_get_nb_received_data+0x4c>)
  401fbc:	7812      	ldrb	r2, [r2, #0]
  401fbe:	b2d2      	uxtb	r2, r2
  401fc0:	4809      	ldr	r0, [pc, #36]	; (401fe8 <udi_cdc_multi_get_nb_received_data+0x50>)
  401fc2:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
  401fc6:	b280      	uxth	r0, r0
  401fc8:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
  401fca:	b129      	cbz	r1, 401fd8 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
  401fcc:	2201      	movs	r2, #1
  401fce:	4b03      	ldr	r3, [pc, #12]	; (401fdc <udi_cdc_multi_get_nb_received_data+0x44>)
  401fd0:	701a      	strb	r2, [r3, #0]
  401fd2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401fd6:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
  401fd8:	b002      	add	sp, #8
  401fda:	4770      	bx	lr
  401fdc:	200001fc 	.word	0x200001fc
  401fe0:	20019ec8 	.word	0x20019ec8
  401fe4:	20019ec4 	.word	0x20019ec4
  401fe8:	20019ec0 	.word	0x20019ec0

00401fec <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
  401fec:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
  401fee:	4b03      	ldr	r3, [pc, #12]	; (401ffc <udi_cdc_multi_is_rx_ready+0x10>)
  401ff0:	4798      	blx	r3
}
  401ff2:	3000      	adds	r0, #0
  401ff4:	bf18      	it	ne
  401ff6:	2001      	movne	r0, #1
  401ff8:	bd08      	pop	{r3, pc}
  401ffa:	bf00      	nop
  401ffc:	00401f99 	.word	0x00401f99

00402000 <udi_cdc_rx_start>:
{
  402000:	b510      	push	{r4, lr}
  402002:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  402004:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  402008:	fab3 f383 	clz	r3, r3
  40200c:	095b      	lsrs	r3, r3, #5
  40200e:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  402010:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  402012:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  402016:	2200      	movs	r2, #0
  402018:	4b1f      	ldr	r3, [pc, #124]	; (402098 <udi_cdc_rx_start+0x98>)
  40201a:	701a      	strb	r2, [r3, #0]
	return flags;
  40201c:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
  40201e:	4a1f      	ldr	r2, [pc, #124]	; (40209c <udi_cdc_rx_start+0x9c>)
  402020:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
  402022:	4a1f      	ldr	r2, [pc, #124]	; (4020a0 <udi_cdc_rx_start+0xa0>)
  402024:	7812      	ldrb	r2, [r2, #0]
  402026:	b94a      	cbnz	r2, 40203c <udi_cdc_rx_start+0x3c>
  402028:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
  40202a:	4a1e      	ldr	r2, [pc, #120]	; (4020a4 <udi_cdc_rx_start+0xa4>)
  40202c:	8811      	ldrh	r1, [r2, #0]
  40202e:	b289      	uxth	r1, r1
  402030:	4a1d      	ldr	r2, [pc, #116]	; (4020a8 <udi_cdc_rx_start+0xa8>)
  402032:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
  402036:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
  402038:	4291      	cmp	r1, r2
  40203a:	d209      	bcs.n	402050 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
  40203c:	b353      	cbz	r3, 402094 <udi_cdc_rx_start+0x94>
		cpu_irq_enable();
  40203e:	2201      	movs	r2, #1
  402040:	4b15      	ldr	r3, [pc, #84]	; (402098 <udi_cdc_rx_start+0x98>)
  402042:	701a      	strb	r2, [r3, #0]
  402044:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402048:	b662      	cpsie	i
		return false;
  40204a:	2000      	movs	r0, #0
}
  40204c:	b004      	add	sp, #16
  40204e:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
  402050:	2100      	movs	r1, #0
  402052:	4a14      	ldr	r2, [pc, #80]	; (4020a4 <udi_cdc_rx_start+0xa4>)
  402054:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  402056:	fab4 f284 	clz	r2, r4
  40205a:	0952      	lsrs	r2, r2, #5
  40205c:	490f      	ldr	r1, [pc, #60]	; (40209c <udi_cdc_rx_start+0x9c>)
  40205e:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
  402060:	2101      	movs	r1, #1
  402062:	4a0f      	ldr	r2, [pc, #60]	; (4020a0 <udi_cdc_rx_start+0xa0>)
  402064:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  402066:	b123      	cbz	r3, 402072 <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
  402068:	4b0b      	ldr	r3, [pc, #44]	; (402098 <udi_cdc_rx_start+0x98>)
  40206a:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  40206c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402070:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
  402072:	2000      	movs	r0, #0
  402074:	4b0d      	ldr	r3, [pc, #52]	; (4020ac <udi_cdc_rx_start+0xac>)
  402076:	4798      	blx	r3
			udi_cdc_rx_buf[port][buf_sel_trans],
  402078:	eb04 0484 	add.w	r4, r4, r4, lsl #2
	return udd_ep_run(ep,
  40207c:	4b0c      	ldr	r3, [pc, #48]	; (4020b0 <udi_cdc_rx_start+0xb0>)
  40207e:	9300      	str	r3, [sp, #0]
  402080:	f44f 73a0 	mov.w	r3, #320	; 0x140
  402084:	4a0b      	ldr	r2, [pc, #44]	; (4020b4 <udi_cdc_rx_start+0xb4>)
  402086:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  40208a:	2101      	movs	r1, #1
  40208c:	2005      	movs	r0, #5
  40208e:	4c0a      	ldr	r4, [pc, #40]	; (4020b8 <udi_cdc_rx_start+0xb8>)
  402090:	47a0      	blx	r4
  402092:	e7db      	b.n	40204c <udi_cdc_rx_start+0x4c>
		return false;
  402094:	2000      	movs	r0, #0
  402096:	e7d9      	b.n	40204c <udi_cdc_rx_start+0x4c>
  402098:	200001fc 	.word	0x200001fc
  40209c:	20019ec4 	.word	0x20019ec4
  4020a0:	20019ecc 	.word	0x20019ecc
  4020a4:	20019ec8 	.word	0x20019ec8
  4020a8:	20019ec0 	.word	0x20019ec0
  4020ac:	00401fed 	.word	0x00401fed
  4020b0:	00402151 	.word	0x00402151
  4020b4:	20019c40 	.word	0x20019c40
  4020b8:	004054cd 	.word	0x004054cd

004020bc <udi_cdc_data_enable>:
{
  4020bc:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
  4020be:	2400      	movs	r4, #0
  4020c0:	4b16      	ldr	r3, [pc, #88]	; (40211c <udi_cdc_data_enable+0x60>)
  4020c2:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4020c4:	4b16      	ldr	r3, [pc, #88]	; (402120 <udi_cdc_data_enable+0x64>)
  4020c6:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
  4020c8:	4b16      	ldr	r3, [pc, #88]	; (402124 <udi_cdc_data_enable+0x68>)
  4020ca:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
  4020cc:	4b16      	ldr	r3, [pc, #88]	; (402128 <udi_cdc_data_enable+0x6c>)
  4020ce:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
  4020d0:	4b16      	ldr	r3, [pc, #88]	; (40212c <udi_cdc_data_enable+0x70>)
  4020d2:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
  4020d4:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
  4020d6:	4b16      	ldr	r3, [pc, #88]	; (402130 <udi_cdc_data_enable+0x74>)
  4020d8:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
  4020da:	4620      	mov	r0, r4
  4020dc:	4b15      	ldr	r3, [pc, #84]	; (402134 <udi_cdc_data_enable+0x78>)
  4020de:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
  4020e0:	4b15      	ldr	r3, [pc, #84]	; (402138 <udi_cdc_data_enable+0x7c>)
  4020e2:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
  4020e4:	4b15      	ldr	r3, [pc, #84]	; (40213c <udi_cdc_data_enable+0x80>)
  4020e6:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
  4020e8:	4b15      	ldr	r3, [pc, #84]	; (402140 <udi_cdc_data_enable+0x84>)
  4020ea:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
  4020ec:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
  4020ee:	4b15      	ldr	r3, [pc, #84]	; (402144 <udi_cdc_data_enable+0x88>)
  4020f0:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
  4020f2:	4620      	mov	r0, r4
  4020f4:	4b14      	ldr	r3, [pc, #80]	; (402148 <udi_cdc_data_enable+0x8c>)
  4020f6:	4798      	blx	r3
  4020f8:	4601      	mov	r1, r0
  4020fa:	b140      	cbz	r0, 40210e <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
  4020fc:	4a07      	ldr	r2, [pc, #28]	; (40211c <udi_cdc_data_enable+0x60>)
  4020fe:	7813      	ldrb	r3, [r2, #0]
  402100:	3301      	adds	r3, #1
  402102:	b2db      	uxtb	r3, r3
  402104:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
  402106:	7813      	ldrb	r3, [r2, #0]
  402108:	b2db      	uxtb	r3, r3
  40210a:	2b01      	cmp	r3, #1
  40210c:	d001      	beq.n	402112 <udi_cdc_data_enable+0x56>
}
  40210e:	4608      	mov	r0, r1
  402110:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
  402112:	2201      	movs	r2, #1
  402114:	4b0d      	ldr	r3, [pc, #52]	; (40214c <udi_cdc_data_enable+0x90>)
  402116:	701a      	strb	r2, [r3, #0]
  402118:	e7f9      	b.n	40210e <udi_cdc_data_enable+0x52>
  40211a:	bf00      	nop
  40211c:	20019c3c 	.word	0x20019c3c
  402120:	2001a164 	.word	0x2001a164
  402124:	20019ed4 	.word	0x20019ed4
  402128:	2001a15c 	.word	0x2001a15c
  40212c:	2001a158 	.word	0x2001a158
  402130:	2001a160 	.word	0x2001a160
  402134:	00401d41 	.word	0x00401d41
  402138:	20019ecc 	.word	0x20019ecc
  40213c:	20019ec4 	.word	0x20019ec4
  402140:	20019ec0 	.word	0x20019ec0
  402144:	20019ec8 	.word	0x20019ec8
  402148:	00402001 	.word	0x00402001
  40214c:	20019c32 	.word	0x20019c32

00402150 <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
  402150:	bb00      	cbnz	r0, 402194 <udi_cdc_data_received+0x44>
{
  402152:	b510      	push	{r4, lr}
  402154:	b082      	sub	sp, #8
  402156:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
  402158:	4b0f      	ldr	r3, [pc, #60]	; (402198 <udi_cdc_data_received+0x48>)
  40215a:	781b      	ldrb	r3, [r3, #0]
  40215c:	fab3 f383 	clz	r3, r3
  402160:	095b      	lsrs	r3, r3, #5
	if (!n) {
  402162:	b151      	cbz	r1, 40217a <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
  402164:	b289      	uxth	r1, r1
  402166:	4a0d      	ldr	r2, [pc, #52]	; (40219c <udi_cdc_data_received+0x4c>)
  402168:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
  40216c:	2000      	movs	r0, #0
  40216e:	4b0c      	ldr	r3, [pc, #48]	; (4021a0 <udi_cdc_data_received+0x50>)
  402170:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
  402172:	4b0c      	ldr	r3, [pc, #48]	; (4021a4 <udi_cdc_data_received+0x54>)
  402174:	4798      	blx	r3
}
  402176:	b002      	add	sp, #8
  402178:	bd10      	pop	{r4, pc}
				udi_cdc_rx_buf[port][buf_sel_trans],
  40217a:	009a      	lsls	r2, r3, #2
  40217c:	441a      	add	r2, r3
		udd_ep_run( ep,
  40217e:	4b0a      	ldr	r3, [pc, #40]	; (4021a8 <udi_cdc_data_received+0x58>)
  402180:	9300      	str	r3, [sp, #0]
  402182:	f44f 73a0 	mov.w	r3, #320	; 0x140
  402186:	4909      	ldr	r1, [pc, #36]	; (4021ac <udi_cdc_data_received+0x5c>)
  402188:	eb01 1282 	add.w	r2, r1, r2, lsl #6
  40218c:	2101      	movs	r1, #1
  40218e:	4c08      	ldr	r4, [pc, #32]	; (4021b0 <udi_cdc_data_received+0x60>)
  402190:	47a0      	blx	r4
		return;
  402192:	e7f0      	b.n	402176 <udi_cdc_data_received+0x26>
  402194:	4770      	bx	lr
  402196:	bf00      	nop
  402198:	20019ec4 	.word	0x20019ec4
  40219c:	20019ec0 	.word	0x20019ec0
  4021a0:	20019ecc 	.word	0x20019ecc
  4021a4:	00402001 	.word	0x00402001
  4021a8:	00402151 	.word	0x00402151
  4021ac:	20019c40 	.word	0x20019c40
  4021b0:	004054cd 	.word	0x004054cd

004021b4 <udi_msc_getsetting>:
}

uint8_t udi_msc_getsetting(void)
{
	return 0;	// MSC don't have multiple alternate setting
}
  4021b4:	2000      	movs	r0, #0
  4021b6:	4770      	bx	lr

004021b8 <udi_msc_trans_ack>:
		udd_ep_id_t ep)
{
	UNUSED(ep);
	UNUSED(n);
	// Update variable to signal the end of transfer
	udi_msc_b_abort_trans = (UDD_EP_TRANSFER_OK != status) ? true : false;
  4021b8:	3000      	adds	r0, #0
  4021ba:	bf18      	it	ne
  4021bc:	2001      	movne	r0, #1
  4021be:	4b03      	ldr	r3, [pc, #12]	; (4021cc <udi_msc_trans_ack+0x14>)
  4021c0:	7018      	strb	r0, [r3, #0]
	udi_msc_b_ack_trans = true;
  4021c2:	2201      	movs	r2, #1
  4021c4:	4b02      	ldr	r3, [pc, #8]	; (4021d0 <udi_msc_trans_ack+0x18>)
  4021c6:	701a      	strb	r2, [r3, #0]
  4021c8:	4770      	bx	lr
  4021ca:	bf00      	nop
  4021cc:	2001ab36 	.word	0x2001ab36
  4021d0:	2000018c 	.word	0x2000018c

004021d4 <udi_msc_cbw_wait>:
{
  4021d4:	b510      	push	{r4, lr}
  4021d6:	b082      	sub	sp, #8
	if (!udd_ep_run(UDI_MSC_EP_OUT, true,
  4021d8:	4b07      	ldr	r3, [pc, #28]	; (4021f8 <udi_msc_cbw_wait+0x24>)
  4021da:	9300      	str	r3, [sp, #0]
  4021dc:	231f      	movs	r3, #31
  4021de:	4a07      	ldr	r2, [pc, #28]	; (4021fc <udi_msc_cbw_wait+0x28>)
  4021e0:	2101      	movs	r1, #1
  4021e2:	2002      	movs	r0, #2
  4021e4:	4c06      	ldr	r4, [pc, #24]	; (402200 <udi_msc_cbw_wait+0x2c>)
  4021e6:	47a0      	blx	r4
  4021e8:	b108      	cbz	r0, 4021ee <udi_msc_cbw_wait+0x1a>
}
  4021ea:	b002      	add	sp, #8
  4021ec:	bd10      	pop	{r4, pc}
		udd_ep_wait_stall_clear(UDI_MSC_EP_OUT, udi_msc_cbw_wait);
  4021ee:	4905      	ldr	r1, [pc, #20]	; (402204 <udi_msc_cbw_wait+0x30>)
  4021f0:	2002      	movs	r0, #2
  4021f2:	4b05      	ldr	r3, [pc, #20]	; (402208 <udi_msc_cbw_wait+0x34>)
  4021f4:	4798      	blx	r3
}
  4021f6:	e7f8      	b.n	4021ea <udi_msc_cbw_wait+0x16>
  4021f8:	004025dd 	.word	0x004025dd
  4021fc:	2001a198 	.word	0x2001a198
  402200:	004054cd 	.word	0x004054cd
  402204:	004021d5 	.word	0x004021d5
  402208:	00405841 	.word	0x00405841

0040220c <udi_msc_enable>:
{
  40220c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udi_msc_b_trans_req = false;
  402210:	2300      	movs	r3, #0
  402212:	4a14      	ldr	r2, [pc, #80]	; (402264 <udi_msc_enable+0x58>)
  402214:	7013      	strb	r3, [r2, #0]
	udi_msc_b_cbw_invalid = false;
  402216:	4a14      	ldr	r2, [pc, #80]	; (402268 <udi_msc_enable+0x5c>)
  402218:	7013      	strb	r3, [r2, #0]
	udi_msc_b_ack_trans = true;
  40221a:	2301      	movs	r3, #1
  40221c:	4a13      	ldr	r2, [pc, #76]	; (40226c <udi_msc_enable+0x60>)
  40221e:	7013      	strb	r3, [r2, #0]
	udi_msc_b_reset_trans = true;
  402220:	4a13      	ldr	r2, [pc, #76]	; (402270 <udi_msc_enable+0x64>)
  402222:	7013      	strb	r3, [r2, #0]
	udi_msc_nb_lun = get_nb_lun();
  402224:	4b13      	ldr	r3, [pc, #76]	; (402274 <udi_msc_enable+0x68>)
  402226:	4798      	blx	r3
	if (0 == udi_msc_nb_lun)
  402228:	b928      	cbnz	r0, 402236 <udi_msc_enable+0x2a>
	udi_msc_nb_lun = get_nb_lun();
  40222a:	2500      	movs	r5, #0
  40222c:	4b12      	ldr	r3, [pc, #72]	; (402278 <udi_msc_enable+0x6c>)
  40222e:	701d      	strb	r5, [r3, #0]
}
  402230:	4628      	mov	r0, r5
  402232:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	udi_msc_nb_lun--;
  402236:	1e43      	subs	r3, r0, #1
  402238:	4a0f      	ldr	r2, [pc, #60]	; (402278 <udi_msc_enable+0x6c>)
  40223a:	7013      	strb	r3, [r2, #0]
	if (!UDI_MSC_ENABLE_EXT())
  40223c:	4b0f      	ldr	r3, [pc, #60]	; (40227c <udi_msc_enable+0x70>)
  40223e:	4798      	blx	r3
  402240:	4605      	mov	r5, r0
  402242:	2800      	cmp	r0, #0
  402244:	d0f4      	beq.n	402230 <udi_msc_enable+0x24>
  402246:	2400      	movs	r4, #0
		mem_unload(lun, false);
  402248:	46a0      	mov	r8, r4
  40224a:	4f0d      	ldr	r7, [pc, #52]	; (402280 <udi_msc_enable+0x74>)
	for (lun = 0; lun <= udi_msc_nb_lun; lun ++) {
  40224c:	4e0a      	ldr	r6, [pc, #40]	; (402278 <udi_msc_enable+0x6c>)
		mem_unload(lun, false);
  40224e:	4641      	mov	r1, r8
  402250:	4620      	mov	r0, r4
  402252:	47b8      	blx	r7
	for (lun = 0; lun <= udi_msc_nb_lun; lun ++) {
  402254:	3401      	adds	r4, #1
  402256:	b2e4      	uxtb	r4, r4
  402258:	7833      	ldrb	r3, [r6, #0]
  40225a:	42a3      	cmp	r3, r4
  40225c:	d2f7      	bcs.n	40224e <udi_msc_enable+0x42>
	udi_msc_cbw_wait();
  40225e:	4b09      	ldr	r3, [pc, #36]	; (402284 <udi_msc_enable+0x78>)
  402260:	4798      	blx	r3
	return true;
  402262:	e7e5      	b.n	402230 <udi_msc_enable+0x24>
  402264:	2001a18e 	.word	0x2001a18e
  402268:	2001a18c 	.word	0x2001a18c
  40226c:	2000018c 	.word	0x2000018c
  402270:	2000018d 	.word	0x2000018d
  402274:	00401b09 	.word	0x00401b09
  402278:	2001a1bc 	.word	0x2001a1bc
  40227c:	004082f9 	.word	0x004082f9
  402280:	00401b55 	.word	0x00401b55
  402284:	004021d5 	.word	0x004021d5

00402288 <udi_msc_csw_sent>:
{
  402288:	b508      	push	{r3, lr}
	udi_msc_cbw_wait();
  40228a:	4b01      	ldr	r3, [pc, #4]	; (402290 <udi_msc_csw_sent+0x8>)
  40228c:	4798      	blx	r3
  40228e:	bd08      	pop	{r3, pc}
  402290:	004021d5 	.word	0x004021d5

00402294 <udi_msc_csw_send>:
{
  402294:	b510      	push	{r4, lr}
  402296:	b082      	sub	sp, #8
	if (!udd_ep_run(UDI_MSC_EP_IN, false,
  402298:	4b07      	ldr	r3, [pc, #28]	; (4022b8 <udi_msc_csw_send+0x24>)
  40229a:	9300      	str	r3, [sp, #0]
  40229c:	230d      	movs	r3, #13
  40229e:	4a07      	ldr	r2, [pc, #28]	; (4022bc <udi_msc_csw_send+0x28>)
  4022a0:	2100      	movs	r1, #0
  4022a2:	2081      	movs	r0, #129	; 0x81
  4022a4:	4c06      	ldr	r4, [pc, #24]	; (4022c0 <udi_msc_csw_send+0x2c>)
  4022a6:	47a0      	blx	r4
  4022a8:	b108      	cbz	r0, 4022ae <udi_msc_csw_send+0x1a>
}
  4022aa:	b002      	add	sp, #8
  4022ac:	bd10      	pop	{r4, pc}
		udd_ep_wait_stall_clear(UDI_MSC_EP_IN, udi_msc_csw_send);
  4022ae:	4905      	ldr	r1, [pc, #20]	; (4022c4 <udi_msc_csw_send+0x30>)
  4022b0:	2081      	movs	r0, #129	; 0x81
  4022b2:	4b05      	ldr	r3, [pc, #20]	; (4022c8 <udi_msc_csw_send+0x34>)
  4022b4:	4798      	blx	r3
}
  4022b6:	e7f8      	b.n	4022aa <udi_msc_csw_send+0x16>
  4022b8:	00402289 	.word	0x00402289
  4022bc:	20000190 	.word	0x20000190
  4022c0:	004054cd 	.word	0x004054cd
  4022c4:	00402295 	.word	0x00402295
  4022c8:	00405841 	.word	0x00405841

004022cc <udi_msc_cbw_invalid>:
{
  4022cc:	b508      	push	{r3, lr}
	if (!udi_msc_b_cbw_invalid)
  4022ce:	4b06      	ldr	r3, [pc, #24]	; (4022e8 <udi_msc_cbw_invalid+0x1c>)
  4022d0:	781b      	ldrb	r3, [r3, #0]
  4022d2:	b903      	cbnz	r3, 4022d6 <udi_msc_cbw_invalid+0xa>
  4022d4:	bd08      	pop	{r3, pc}
	udd_ep_set_halt(UDI_MSC_EP_OUT);
  4022d6:	2002      	movs	r0, #2
  4022d8:	4b04      	ldr	r3, [pc, #16]	; (4022ec <udi_msc_cbw_invalid+0x20>)
  4022da:	4798      	blx	r3
	udd_ep_wait_stall_clear(UDI_MSC_EP_OUT, udi_msc_cbw_invalid);
  4022dc:	4904      	ldr	r1, [pc, #16]	; (4022f0 <udi_msc_cbw_invalid+0x24>)
  4022de:	2002      	movs	r0, #2
  4022e0:	4b04      	ldr	r3, [pc, #16]	; (4022f4 <udi_msc_cbw_invalid+0x28>)
  4022e2:	4798      	blx	r3
  4022e4:	e7f6      	b.n	4022d4 <udi_msc_cbw_invalid+0x8>
  4022e6:	bf00      	nop
  4022e8:	2001a18c 	.word	0x2001a18c
  4022ec:	004051ed 	.word	0x004051ed
  4022f0:	004022cd 	.word	0x004022cd
  4022f4:	00405841 	.word	0x00405841

004022f8 <udi_msc_csw_invalid>:
{
  4022f8:	b508      	push	{r3, lr}
	if (!udi_msc_b_cbw_invalid)
  4022fa:	4b06      	ldr	r3, [pc, #24]	; (402314 <udi_msc_csw_invalid+0x1c>)
  4022fc:	781b      	ldrb	r3, [r3, #0]
  4022fe:	b903      	cbnz	r3, 402302 <udi_msc_csw_invalid+0xa>
  402300:	bd08      	pop	{r3, pc}
	udd_ep_set_halt(UDI_MSC_EP_IN);
  402302:	2081      	movs	r0, #129	; 0x81
  402304:	4b04      	ldr	r3, [pc, #16]	; (402318 <udi_msc_csw_invalid+0x20>)
  402306:	4798      	blx	r3
	udd_ep_wait_stall_clear(UDI_MSC_EP_IN, udi_msc_csw_invalid);
  402308:	4904      	ldr	r1, [pc, #16]	; (40231c <udi_msc_csw_invalid+0x24>)
  40230a:	2081      	movs	r0, #129	; 0x81
  40230c:	4b04      	ldr	r3, [pc, #16]	; (402320 <udi_msc_csw_invalid+0x28>)
  40230e:	4798      	blx	r3
  402310:	e7f6      	b.n	402300 <udi_msc_csw_invalid+0x8>
  402312:	bf00      	nop
  402314:	2001a18c 	.word	0x2001a18c
  402318:	004051ed 	.word	0x004051ed
  40231c:	004022f9 	.word	0x004022f9
  402320:	00405841 	.word	0x00405841

00402324 <udi_msc_csw_process>:
{
  402324:	b508      	push	{r3, lr}
	if (0 != udi_msc_csw.dCSWDataResidue) {
  402326:	4b09      	ldr	r3, [pc, #36]	; (40234c <udi_msc_csw_process+0x28>)
  402328:	689b      	ldr	r3, [r3, #8]
  40232a:	b143      	cbz	r3, 40233e <udi_msc_csw_process+0x1a>
		if (udi_msc_cbw.bmCBWFlags & USB_CBW_DIRECTION_IN)
  40232c:	4b08      	ldr	r3, [pc, #32]	; (402350 <udi_msc_csw_process+0x2c>)
  40232e:	f993 300c 	ldrsb.w	r3, [r3, #12]
  402332:	2b00      	cmp	r3, #0
			udd_ep_set_halt(UDI_MSC_EP_IN);
  402334:	bfb4      	ite	lt
  402336:	2081      	movlt	r0, #129	; 0x81
			udd_ep_set_halt(UDI_MSC_EP_OUT);
  402338:	2002      	movge	r0, #2
  40233a:	4b06      	ldr	r3, [pc, #24]	; (402354 <udi_msc_csw_process+0x30>)
  40233c:	4798      	blx	r3
	udi_msc_csw.dCSWTag = udi_msc_cbw.dCBWTag;
  40233e:	4b04      	ldr	r3, [pc, #16]	; (402350 <udi_msc_csw_process+0x2c>)
  402340:	685a      	ldr	r2, [r3, #4]
  402342:	4b02      	ldr	r3, [pc, #8]	; (40234c <udi_msc_csw_process+0x28>)
  402344:	605a      	str	r2, [r3, #4]
	udi_msc_csw_send();
  402346:	4b04      	ldr	r3, [pc, #16]	; (402358 <udi_msc_csw_process+0x34>)
  402348:	4798      	blx	r3
  40234a:	bd08      	pop	{r3, pc}
  40234c:	20000190 	.word	0x20000190
  402350:	2001a198 	.word	0x2001a198
  402354:	004051ed 	.word	0x004051ed
  402358:	00402295 	.word	0x00402295

0040235c <udi_msc_clear_sense>:
	memset((uint8_t*)&udi_msc_sense, 0, sizeof(struct scsi_request_sense_data));
  40235c:	4b05      	ldr	r3, [pc, #20]	; (402374 <udi_msc_clear_sense+0x18>)
  40235e:	2200      	movs	r2, #0
  402360:	601a      	str	r2, [r3, #0]
  402362:	605a      	str	r2, [r3, #4]
  402364:	609a      	str	r2, [r3, #8]
  402366:	60da      	str	r2, [r3, #12]
  402368:	821a      	strh	r2, [r3, #16]
	udi_msc_sense.valid_reponse_code = SCSI_SENSE_VALID | SCSI_SENSE_CURRENT;
  40236a:	22f0      	movs	r2, #240	; 0xf0
  40236c:	701a      	strb	r2, [r3, #0]
	udi_msc_sense.AddSenseLen = SCSI_SENSE_ADDL_LEN(sizeof(udi_msc_sense));
  40236e:	220a      	movs	r2, #10
  402370:	71da      	strb	r2, [r3, #7]
  402372:	4770      	bx	lr
  402374:	2001a1c0 	.word	0x2001a1c0

00402378 <udi_msc_sense_fail>:
{
  402378:	b570      	push	{r4, r5, r6, lr}
  40237a:	4606      	mov	r6, r0
  40237c:	460d      	mov	r5, r1
  40237e:	4614      	mov	r4, r2
	udi_msc_clear_sense();
  402380:	4b08      	ldr	r3, [pc, #32]	; (4023a4 <udi_msc_sense_fail+0x2c>)
  402382:	4798      	blx	r3
	udi_msc_csw.bCSWStatus = USB_CSW_STATUS_FAIL;
  402384:	2201      	movs	r2, #1
  402386:	4b08      	ldr	r3, [pc, #32]	; (4023a8 <udi_msc_sense_fail+0x30>)
  402388:	731a      	strb	r2, [r3, #12]
	udi_msc_sense.sense_flag_key = sense_key;
  40238a:	4b08      	ldr	r3, [pc, #32]	; (4023ac <udi_msc_sense_fail+0x34>)
  40238c:	709e      	strb	r6, [r3, #2]
	udi_msc_sense.information[0] = lba >> 24;
  40238e:	0e22      	lsrs	r2, r4, #24
  402390:	70da      	strb	r2, [r3, #3]
	udi_msc_sense.information[1] = lba >> 16;
  402392:	0c22      	lsrs	r2, r4, #16
  402394:	711a      	strb	r2, [r3, #4]
	udi_msc_sense.information[2] = lba >> 8;
  402396:	0a22      	lsrs	r2, r4, #8
  402398:	715a      	strb	r2, [r3, #5]
	udi_msc_sense.information[3] = lba;
  40239a:	719c      	strb	r4, [r3, #6]
	udi_msc_sense.AddSenseCode = add_sense >> 8;
  40239c:	0a2a      	lsrs	r2, r5, #8
  40239e:	731a      	strb	r2, [r3, #12]
	udi_msc_sense.AddSnsCodeQlfr = add_sense;
  4023a0:	735d      	strb	r5, [r3, #13]
  4023a2:	bd70      	pop	{r4, r5, r6, pc}
  4023a4:	0040235d 	.word	0x0040235d
  4023a8:	20000190 	.word	0x20000190
  4023ac:	2001a1c0 	.word	0x2001a1c0

004023b0 <udi_msc_sense_fail_cdb_invalid>:
{
  4023b0:	b508      	push	{r3, lr}
	udi_msc_sense_fail(SCSI_SK_ILLEGAL_REQUEST,
  4023b2:	2200      	movs	r2, #0
  4023b4:	f44f 5110 	mov.w	r1, #9216	; 0x2400
  4023b8:	2005      	movs	r0, #5
  4023ba:	4b01      	ldr	r3, [pc, #4]	; (4023c0 <udi_msc_sense_fail_cdb_invalid+0x10>)
  4023bc:	4798      	blx	r3
  4023be:	bd08      	pop	{r3, pc}
  4023c0:	00402379 	.word	0x00402379

004023c4 <udi_msc_cbw_validate>:
{
  4023c4:	b508      	push	{r3, lr}
	if (((udi_msc_cbw.bmCBWFlags ^ dir_flag) & USB_CBW_DIRECTION_IN)
  4023c6:	4b09      	ldr	r3, [pc, #36]	; (4023ec <udi_msc_cbw_validate+0x28>)
  4023c8:	7b1b      	ldrb	r3, [r3, #12]
  4023ca:	4059      	eors	r1, r3
  4023cc:	f011 0f80 	tst.w	r1, #128	; 0x80
  4023d0:	d103      	bne.n	4023da <udi_msc_cbw_validate+0x16>
			|| (udi_msc_csw.dCSWDataResidue < alloc_len)) {
  4023d2:	4b07      	ldr	r3, [pc, #28]	; (4023f0 <udi_msc_cbw_validate+0x2c>)
  4023d4:	689b      	ldr	r3, [r3, #8]
  4023d6:	4283      	cmp	r3, r0
  4023d8:	d205      	bcs.n	4023e6 <udi_msc_cbw_validate+0x22>
		udi_msc_sense_fail_cdb_invalid();
  4023da:	4b06      	ldr	r3, [pc, #24]	; (4023f4 <udi_msc_cbw_validate+0x30>)
  4023dc:	4798      	blx	r3
		udi_msc_csw_process();
  4023de:	4b06      	ldr	r3, [pc, #24]	; (4023f8 <udi_msc_cbw_validate+0x34>)
  4023e0:	4798      	blx	r3
		return false;
  4023e2:	2000      	movs	r0, #0
  4023e4:	bd08      	pop	{r3, pc}
	return true;
  4023e6:	2001      	movs	r0, #1
}
  4023e8:	bd08      	pop	{r3, pc}
  4023ea:	bf00      	nop
  4023ec:	2001a198 	.word	0x2001a198
  4023f0:	20000190 	.word	0x20000190
  4023f4:	004023b1 	.word	0x004023b1
  4023f8:	00402325 	.word	0x00402325

004023fc <udi_msc_sense_fail_hardware>:
{
  4023fc:	b508      	push	{r3, lr}
	udi_msc_sense_fail(SCSI_SK_HARDWARE_ERROR,
  4023fe:	2200      	movs	r2, #0
  402400:	4611      	mov	r1, r2
  402402:	2004      	movs	r0, #4
  402404:	4b01      	ldr	r3, [pc, #4]	; (40240c <udi_msc_sense_fail_hardware+0x10>)
  402406:	4798      	blx	r3
  402408:	bd08      	pop	{r3, pc}
  40240a:	bf00      	nop
  40240c:	00402379 	.word	0x00402379

00402410 <udi_msc_data_send>:
{
  402410:	b510      	push	{r4, lr}
  402412:	b082      	sub	sp, #8
	if (!udd_ep_run(UDI_MSC_EP_IN, true,
  402414:	4b07      	ldr	r3, [pc, #28]	; (402434 <udi_msc_data_send+0x24>)
  402416:	9300      	str	r3, [sp, #0]
  402418:	460b      	mov	r3, r1
  40241a:	4602      	mov	r2, r0
  40241c:	2101      	movs	r1, #1
  40241e:	2081      	movs	r0, #129	; 0x81
  402420:	4c05      	ldr	r4, [pc, #20]	; (402438 <udi_msc_data_send+0x28>)
  402422:	47a0      	blx	r4
  402424:	b108      	cbz	r0, 40242a <udi_msc_data_send+0x1a>
}
  402426:	b002      	add	sp, #8
  402428:	bd10      	pop	{r4, pc}
		udi_msc_sense_fail_hardware();
  40242a:	4b04      	ldr	r3, [pc, #16]	; (40243c <udi_msc_data_send+0x2c>)
  40242c:	4798      	blx	r3
		udi_msc_csw_process();
  40242e:	4b04      	ldr	r3, [pc, #16]	; (402440 <udi_msc_data_send+0x30>)
  402430:	4798      	blx	r3
}
  402432:	e7f8      	b.n	402426 <udi_msc_data_send+0x16>
  402434:	00402485 	.word	0x00402485
  402438:	004054cd 	.word	0x004054cd
  40243c:	004023fd 	.word	0x004023fd
  402440:	00402325 	.word	0x00402325

00402444 <udi_msc_sense_fail_busy_or_change>:
{
  402444:	b508      	push	{r3, lr}
	udi_msc_sense_fail(SCSI_SK_UNIT_ATTENTION,
  402446:	2200      	movs	r2, #0
  402448:	f44f 5120 	mov.w	r1, #10240	; 0x2800
  40244c:	2006      	movs	r0, #6
  40244e:	4b01      	ldr	r3, [pc, #4]	; (402454 <udi_msc_sense_fail_busy_or_change+0x10>)
  402450:	4798      	blx	r3
  402452:	bd08      	pop	{r3, pc}
  402454:	00402379 	.word	0x00402379

00402458 <udi_msc_sense_fail_not_present>:
{
  402458:	b508      	push	{r3, lr}
	udi_msc_sense_fail(SCSI_SK_NOT_READY, SCSI_ASC_MEDIUM_NOT_PRESENT, 0);
  40245a:	2200      	movs	r2, #0
  40245c:	f44f 5168 	mov.w	r1, #14848	; 0x3a00
  402460:	2002      	movs	r0, #2
  402462:	4b01      	ldr	r3, [pc, #4]	; (402468 <udi_msc_sense_fail_not_present+0x10>)
  402464:	4798      	blx	r3
  402466:	bd08      	pop	{r3, pc}
  402468:	00402379 	.word	0x00402379

0040246c <udi_msc_sense_pass>:
{
  40246c:	b508      	push	{r3, lr}
	udi_msc_clear_sense();
  40246e:	4b03      	ldr	r3, [pc, #12]	; (40247c <udi_msc_sense_pass+0x10>)
  402470:	4798      	blx	r3
	udi_msc_csw.bCSWStatus = USB_CSW_STATUS_PASS;
  402472:	2200      	movs	r2, #0
  402474:	4b02      	ldr	r3, [pc, #8]	; (402480 <udi_msc_sense_pass+0x14>)
  402476:	731a      	strb	r2, [r3, #12]
  402478:	bd08      	pop	{r3, pc}
  40247a:	bf00      	nop
  40247c:	0040235d 	.word	0x0040235d
  402480:	20000190 	.word	0x20000190

00402484 <udi_msc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
  402484:	b100      	cbz	r0, 402488 <udi_msc_data_sent+0x4>
  402486:	4770      	bx	lr
{
  402488:	b510      	push	{r4, lr}
  40248a:	460c      	mov	r4, r1
	udi_msc_sense_pass();
  40248c:	4b04      	ldr	r3, [pc, #16]	; (4024a0 <udi_msc_data_sent+0x1c>)
  40248e:	4798      	blx	r3
	udi_msc_csw.dCSWDataResidue -= nb_sent;
  402490:	4b04      	ldr	r3, [pc, #16]	; (4024a4 <udi_msc_data_sent+0x20>)
  402492:	6899      	ldr	r1, [r3, #8]
  402494:	1b09      	subs	r1, r1, r4
  402496:	6099      	str	r1, [r3, #8]
	udi_msc_csw_process();
  402498:	4b03      	ldr	r3, [pc, #12]	; (4024a8 <udi_msc_data_sent+0x24>)
  40249a:	4798      	blx	r3
  40249c:	bd10      	pop	{r4, pc}
  40249e:	bf00      	nop
  4024a0:	0040246d 	.word	0x0040246d
  4024a4:	20000190 	.word	0x20000190
  4024a8:	00402325 	.word	0x00402325

004024ac <udi_msc_spc_mode_sense>:
{
  4024ac:	b570      	push	{r4, r5, r6, lr}
	memset(&sense, 0, sizeof(sense));
  4024ae:	4b23      	ldr	r3, [pc, #140]	; (40253c <udi_msc_spc_mode_sense+0x90>)
  4024b0:	2200      	movs	r2, #0
  4024b2:	601a      	str	r2, [r3, #0]
  4024b4:	605a      	str	r2, [r3, #4]
  4024b6:	609a      	str	r2, [r3, #8]
  4024b8:	60da      	str	r2, [r3, #12]
  4024ba:	611a      	str	r2, [r3, #16]
	if (b_sense10) {
  4024bc:	4606      	mov	r6, r0
  4024be:	b1a0      	cbz	r0, 4024ea <udi_msc_spc_mode_sense+0x3e>
		request_lgt = udi_msc_cbw.CDB[8];
  4024c0:	4b1f      	ldr	r3, [pc, #124]	; (402540 <udi_msc_spc_mode_sense+0x94>)
  4024c2:	7ddd      	ldrb	r5, [r3, #23]
		ptr_mode = &sense.s10.sense_data;
  4024c4:	4a1f      	ldr	r2, [pc, #124]	; (402544 <udi_msc_spc_mode_sense+0x98>)
		data_sense_lgt = sizeof(struct scsi_mode_param_header10);
  4024c6:	2408      	movs	r4, #8
	mode = udi_msc_cbw.CDB[2] & SCSI_MS_MODE_ALL;
  4024c8:	4b1d      	ldr	r3, [pc, #116]	; (402540 <udi_msc_spc_mode_sense+0x94>)
  4024ca:	7c5b      	ldrb	r3, [r3, #17]
  4024cc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	if ((SCSI_MS_MODE_INFEXP == mode)
  4024d0:	2b1c      	cmp	r3, #28
  4024d2:	d00f      	beq.n	4024f4 <udi_msc_spc_mode_sense+0x48>
			|| (SCSI_MS_MODE_ALL == mode)) {
  4024d4:	2b3f      	cmp	r3, #63	; 0x3f
  4024d6:	d00d      	beq.n	4024f4 <udi_msc_spc_mode_sense+0x48>
  4024d8:	42a5      	cmp	r5, r4
  4024da:	bf28      	it	cs
  4024dc:	4625      	movcs	r5, r4
	if (!udi_msc_cbw_validate(request_lgt, USB_CBW_DIRECTION_IN))
  4024de:	2180      	movs	r1, #128	; 0x80
  4024e0:	4628      	mov	r0, r5
  4024e2:	4b19      	ldr	r3, [pc, #100]	; (402548 <udi_msc_spc_mode_sense+0x9c>)
  4024e4:	4798      	blx	r3
  4024e6:	b970      	cbnz	r0, 402506 <udi_msc_spc_mode_sense+0x5a>
  4024e8:	bd70      	pop	{r4, r5, r6, pc}
		request_lgt = udi_msc_cbw.CDB[4];
  4024ea:	4b15      	ldr	r3, [pc, #84]	; (402540 <udi_msc_spc_mode_sense+0x94>)
  4024ec:	7cdd      	ldrb	r5, [r3, #19]
		ptr_mode = &sense.s6.sense_data;
  4024ee:	4a17      	ldr	r2, [pc, #92]	; (40254c <udi_msc_spc_mode_sense+0xa0>)
		data_sense_lgt = sizeof(struct scsi_mode_param_header6);
  4024f0:	2404      	movs	r4, #4
  4024f2:	e7e9      	b.n	4024c8 <udi_msc_spc_mode_sense+0x1c>
		ptr_mode->page_code =
  4024f4:	231c      	movs	r3, #28
  4024f6:	7013      	strb	r3, [r2, #0]
		ptr_mode->page_length =
  4024f8:	230a      	movs	r3, #10
  4024fa:	7053      	strb	r3, [r2, #1]
		ptr_mode->mrie =
  4024fc:	2305      	movs	r3, #5
  4024fe:	70d3      	strb	r3, [r2, #3]
		data_sense_lgt += sizeof(struct spc_control_page_info_execpt);
  402500:	340c      	adds	r4, #12
  402502:	b2e4      	uxtb	r4, r4
  402504:	e7e8      	b.n	4024d8 <udi_msc_spc_mode_sense+0x2c>
	wp = (mem_wr_protect(udi_msc_cbw.bCBWLUN)) ? SCSI_MS_SBC_WP : 0;
  402506:	4b0e      	ldr	r3, [pc, #56]	; (402540 <udi_msc_spc_mode_sense+0x94>)
  402508:	7b58      	ldrb	r0, [r3, #13]
  40250a:	4b11      	ldr	r3, [pc, #68]	; (402550 <udi_msc_spc_mode_sense+0xa4>)
  40250c:	4798      	blx	r3
  40250e:	2800      	cmp	r0, #0
  402510:	bf14      	ite	ne
  402512:	2380      	movne	r3, #128	; 0x80
  402514:	2300      	moveq	r3, #0
	if (b_sense10) {
  402516:	b166      	cbz	r6, 402532 <udi_msc_spc_mode_sense+0x86>
				cpu_to_be16((data_sense_lgt - 2));
  402518:	3c02      	subs	r4, #2
  40251a:	b2a4      	uxth	r4, r4
		sense.s10.header.mode_data_length =
  40251c:	4907      	ldr	r1, [pc, #28]	; (40253c <udi_msc_spc_mode_sense+0x90>)
				cpu_to_be16((data_sense_lgt - 2));
  40251e:	0222      	lsls	r2, r4, #8
  402520:	ea42 2414 	orr.w	r4, r2, r4, lsr #8
		sense.s10.header.mode_data_length =
  402524:	800c      	strh	r4, [r1, #0]
		sense.s10.header.device_specific_parameter = wp;
  402526:	70cb      	strb	r3, [r1, #3]
	udi_msc_data_send((uint8_t *) & sense, request_lgt);
  402528:	4629      	mov	r1, r5
  40252a:	4804      	ldr	r0, [pc, #16]	; (40253c <udi_msc_spc_mode_sense+0x90>)
  40252c:	4b09      	ldr	r3, [pc, #36]	; (402554 <udi_msc_spc_mode_sense+0xa8>)
  40252e:	4798      	blx	r3
  402530:	e7da      	b.n	4024e8 <udi_msc_spc_mode_sense+0x3c>
		sense.s6.header.mode_data_length = data_sense_lgt - 1;
  402532:	4a02      	ldr	r2, [pc, #8]	; (40253c <udi_msc_spc_mode_sense+0x90>)
  402534:	3c01      	subs	r4, #1
  402536:	7014      	strb	r4, [r2, #0]
		sense.s6.header.device_specific_parameter = wp;
  402538:	7093      	strb	r3, [r2, #2]
  40253a:	e7f5      	b.n	402528 <udi_msc_spc_mode_sense+0x7c>
  40253c:	2001a174 	.word	0x2001a174
  402540:	2001a198 	.word	0x2001a198
  402544:	2001a17c 	.word	0x2001a17c
  402548:	004023c5 	.word	0x004023c5
  40254c:	2001a178 	.word	0x2001a178
  402550:	00401b7d 	.word	0x00401b7d
  402554:	00402411 	.word	0x00402411

00402558 <udi_msc_sbc_trans>:
{
  402558:	b510      	push	{r4, lr}
	if (!b_read) {
  40255a:	4604      	mov	r4, r0
  40255c:	b1e8      	cbz	r0, 40259a <udi_msc_sbc_trans+0x42>
	MSB0(udi_msc_addr) = udi_msc_cbw.CDB[2];
  40255e:	4a16      	ldr	r2, [pc, #88]	; (4025b8 <udi_msc_sbc_trans+0x60>)
  402560:	4b16      	ldr	r3, [pc, #88]	; (4025bc <udi_msc_sbc_trans+0x64>)
  402562:	7c59      	ldrb	r1, [r3, #17]
  402564:	70d1      	strb	r1, [r2, #3]
	MSB1(udi_msc_addr) = udi_msc_cbw.CDB[3];
  402566:	7c99      	ldrb	r1, [r3, #18]
  402568:	7091      	strb	r1, [r2, #2]
	MSB2(udi_msc_addr) = udi_msc_cbw.CDB[4];
  40256a:	7cd9      	ldrb	r1, [r3, #19]
  40256c:	7051      	strb	r1, [r2, #1]
	MSB3(udi_msc_addr) = udi_msc_cbw.CDB[5];
  40256e:	7d19      	ldrb	r1, [r3, #20]
  402570:	7011      	strb	r1, [r2, #0]
	MSB(udi_msc_nb_block) = udi_msc_cbw.CDB[7];
  402572:	4a13      	ldr	r2, [pc, #76]	; (4025c0 <udi_msc_sbc_trans+0x68>)
  402574:	7d99      	ldrb	r1, [r3, #22]
  402576:	7051      	strb	r1, [r2, #1]
	LSB(udi_msc_nb_block) = udi_msc_cbw.CDB[8];
  402578:	7ddb      	ldrb	r3, [r3, #23]
  40257a:	7013      	strb	r3, [r2, #0]
	trans_size = (uint32_t) udi_msc_nb_block *UDI_MSC_BLOCK_SIZE;
  40257c:	8810      	ldrh	r0, [r2, #0]
	if (!udi_msc_cbw_validate(trans_size,
  40257e:	2c00      	cmp	r4, #0
  402580:	bf14      	ite	ne
  402582:	2180      	movne	r1, #128	; 0x80
  402584:	2100      	moveq	r1, #0
  402586:	0240      	lsls	r0, r0, #9
  402588:	4b0e      	ldr	r3, [pc, #56]	; (4025c4 <udi_msc_sbc_trans+0x6c>)
  40258a:	4798      	blx	r3
  40258c:	b120      	cbz	r0, 402598 <udi_msc_sbc_trans+0x40>
	udi_msc_b_read = b_read;
  40258e:	4b0e      	ldr	r3, [pc, #56]	; (4025c8 <udi_msc_sbc_trans+0x70>)
  402590:	701c      	strb	r4, [r3, #0]
	udi_msc_b_trans_req = true;
  402592:	2201      	movs	r2, #1
  402594:	4b0d      	ldr	r3, [pc, #52]	; (4025cc <udi_msc_sbc_trans+0x74>)
  402596:	701a      	strb	r2, [r3, #0]
  402598:	bd10      	pop	{r4, pc}
		if (mem_wr_protect(udi_msc_cbw.bCBWLUN)) {
  40259a:	4b08      	ldr	r3, [pc, #32]	; (4025bc <udi_msc_sbc_trans+0x64>)
  40259c:	7b58      	ldrb	r0, [r3, #13]
  40259e:	4b0c      	ldr	r3, [pc, #48]	; (4025d0 <udi_msc_sbc_trans+0x78>)
  4025a0:	4798      	blx	r3
  4025a2:	2800      	cmp	r0, #0
  4025a4:	d0db      	beq.n	40255e <udi_msc_sbc_trans+0x6>
	udi_msc_sense_fail(SCSI_SK_DATA_PROTECT, SCSI_ASC_WRITE_PROTECTED, 0);
  4025a6:	2200      	movs	r2, #0
  4025a8:	f44f 511c 	mov.w	r1, #9984	; 0x2700
  4025ac:	2007      	movs	r0, #7
  4025ae:	4b09      	ldr	r3, [pc, #36]	; (4025d4 <udi_msc_sbc_trans+0x7c>)
  4025b0:	4798      	blx	r3
			udi_msc_csw_process();
  4025b2:	4b09      	ldr	r3, [pc, #36]	; (4025d8 <udi_msc_sbc_trans+0x80>)
  4025b4:	4798      	blx	r3
			return;
  4025b6:	bd10      	pop	{r4, pc}
  4025b8:	2001a188 	.word	0x2001a188
  4025bc:	2001a198 	.word	0x2001a198
  4025c0:	2001a1b8 	.word	0x2001a1b8
  4025c4:	004023c5 	.word	0x004023c5
  4025c8:	2001a18d 	.word	0x2001a18d
  4025cc:	2001a18e 	.word	0x2001a18e
  4025d0:	00401b7d 	.word	0x00401b7d
  4025d4:	00402379 	.word	0x00402379
  4025d8:	00402325 	.word	0x00402325

004025dc <udi_msc_cbw_received>:
	if (UDD_EP_TRANSFER_OK != status) {
  4025dc:	2800      	cmp	r0, #0
  4025de:	f040 8190 	bne.w	402902 <udi_msc_cbw_received+0x326>
{
  4025e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if ((sizeof(udi_msc_cbw) != nb_received)
  4025e4:	291f      	cmp	r1, #31
  4025e6:	d104      	bne.n	4025f2 <udi_msc_cbw_received+0x16>
			|| (udi_msc_cbw.dCBWSignature !=
  4025e8:	4b89      	ldr	r3, [pc, #548]	; (402810 <udi_msc_cbw_received+0x234>)
  4025ea:	681a      	ldr	r2, [r3, #0]
  4025ec:	4b89      	ldr	r3, [pc, #548]	; (402814 <udi_msc_cbw_received+0x238>)
  4025ee:	429a      	cmp	r2, r3
  4025f0:	d007      	beq.n	402602 <udi_msc_cbw_received+0x26>
		udi_msc_b_cbw_invalid = true;
  4025f2:	2201      	movs	r2, #1
  4025f4:	4b88      	ldr	r3, [pc, #544]	; (402818 <udi_msc_cbw_received+0x23c>)
  4025f6:	701a      	strb	r2, [r3, #0]
		udi_msc_cbw_invalid();
  4025f8:	4b88      	ldr	r3, [pc, #544]	; (40281c <udi_msc_cbw_received+0x240>)
  4025fa:	4798      	blx	r3
		udi_msc_csw_invalid();
  4025fc:	4b88      	ldr	r3, [pc, #544]	; (402820 <udi_msc_cbw_received+0x244>)
  4025fe:	4798      	blx	r3
		return;
  402600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	udi_msc_cbw.bCBWLUN &= USB_CBW_LUN_MASK;
  402602:	4b83      	ldr	r3, [pc, #524]	; (402810 <udi_msc_cbw_received+0x234>)
  402604:	7b58      	ldrb	r0, [r3, #13]
  402606:	f000 000f 	and.w	r0, r0, #15
  40260a:	7358      	strb	r0, [r3, #13]
	if (udi_msc_cbw.bCBWLUN > udi_msc_nb_lun) {
  40260c:	4b85      	ldr	r3, [pc, #532]	; (402824 <udi_msc_cbw_received+0x248>)
  40260e:	781b      	ldrb	r3, [r3, #0]
  402610:	4283      	cmp	r3, r0
  402612:	d364      	bcc.n	4026de <udi_msc_cbw_received+0x102>
			le32_to_cpu(udi_msc_cbw.dCBWDataTransferLength);
  402614:	4b7e      	ldr	r3, [pc, #504]	; (402810 <udi_msc_cbw_received+0x234>)
	udi_msc_csw.dCSWDataResidue =
  402616:	6899      	ldr	r1, [r3, #8]
  402618:	4a83      	ldr	r2, [pc, #524]	; (402828 <udi_msc_cbw_received+0x24c>)
  40261a:	6091      	str	r1, [r2, #8]
	switch (udi_msc_cbw.CDB[0]) {
  40261c:	7bdb      	ldrb	r3, [r3, #15]
  40261e:	2b5a      	cmp	r3, #90	; 0x5a
  402620:	f200 8158 	bhi.w	4028d4 <udi_msc_cbw_received+0x2f8>
  402624:	e8df f013 	tbh	[pc, r3, lsl #1]
  402628:	015600be 	.word	0x015600be
  40262c:	00600156 	.word	0x00600156
  402630:	01560156 	.word	0x01560156
  402634:	01560156 	.word	0x01560156
  402638:	01560156 	.word	0x01560156
  40263c:	01560156 	.word	0x01560156
  402640:	01560156 	.word	0x01560156
  402644:	01560156 	.word	0x01560156
  402648:	01560156 	.word	0x01560156
  40264c:	01560070 	.word	0x01560070
  402650:	01560156 	.word	0x01560156
  402654:	01560156 	.word	0x01560156
  402658:	01560156 	.word	0x01560156
  40265c:	012d00b6 	.word	0x012d00b6
  402660:	01560156 	.word	0x01560156
  402664:	0156013e 	.word	0x0156013e
  402668:	01560156 	.word	0x01560156
  40266c:	01560156 	.word	0x01560156
  402670:	00d30156 	.word	0x00d30156
  402674:	01560156 	.word	0x01560156
  402678:	0156014e 	.word	0x0156014e
  40267c:	01560152 	.word	0x01560152
  402680:	01560156 	.word	0x01560156
  402684:	01490156 	.word	0x01490156
  402688:	01560156 	.word	0x01560156
  40268c:	01560156 	.word	0x01560156
  402690:	01560156 	.word	0x01560156
  402694:	01560156 	.word	0x01560156
  402698:	01560156 	.word	0x01560156
  40269c:	01560156 	.word	0x01560156
  4026a0:	01560156 	.word	0x01560156
  4026a4:	01560156 	.word	0x01560156
  4026a8:	01560156 	.word	0x01560156
  4026ac:	01560156 	.word	0x01560156
  4026b0:	01560156 	.word	0x01560156
  4026b4:	01560156 	.word	0x01560156
  4026b8:	01560156 	.word	0x01560156
  4026bc:	01560156 	.word	0x01560156
  4026c0:	01560156 	.word	0x01560156
  4026c4:	01560156 	.word	0x01560156
  4026c8:	01560156 	.word	0x01560156
  4026cc:	01560156 	.word	0x01560156
  4026d0:	01560156 	.word	0x01560156
  4026d4:	01560156 	.word	0x01560156
  4026d8:	01560156 	.word	0x01560156
  4026dc:	00ba      	.short	0x00ba
		udi_msc_sense_fail_cdb_invalid();
  4026de:	4b53      	ldr	r3, [pc, #332]	; (40282c <udi_msc_cbw_received+0x250>)
  4026e0:	4798      	blx	r3
		udi_msc_csw_process();
  4026e2:	4b53      	ldr	r3, [pc, #332]	; (402830 <udi_msc_cbw_received+0x254>)
  4026e4:	4798      	blx	r3
		return;
  4026e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	uint8_t length = udi_msc_cbw.CDB[4];
  4026e8:	4b49      	ldr	r3, [pc, #292]	; (402810 <udi_msc_cbw_received+0x234>)
  4026ea:	7cdc      	ldrb	r4, [r3, #19]
  4026ec:	2c12      	cmp	r4, #18
  4026ee:	bf28      	it	cs
  4026f0:	2412      	movcs	r4, #18
	if (!udi_msc_cbw_validate(length, USB_CBW_DIRECTION_IN))
  4026f2:	2180      	movs	r1, #128	; 0x80
  4026f4:	4620      	mov	r0, r4
  4026f6:	4b4f      	ldr	r3, [pc, #316]	; (402834 <udi_msc_cbw_received+0x258>)
  4026f8:	4798      	blx	r3
  4026fa:	b900      	cbnz	r0, 4026fe <udi_msc_cbw_received+0x122>
  4026fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	udi_msc_data_send((uint8_t*)&udi_msc_sense, length);
  4026fe:	4621      	mov	r1, r4
  402700:	484d      	ldr	r0, [pc, #308]	; (402838 <udi_msc_cbw_received+0x25c>)
  402702:	4b4e      	ldr	r3, [pc, #312]	; (40283c <udi_msc_cbw_received+0x260>)
  402704:	4798      	blx	r3
  402706:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	length = udi_msc_cbw.CDB[4];
  402708:	4b41      	ldr	r3, [pc, #260]	; (402810 <udi_msc_cbw_received+0x234>)
  40270a:	7cdc      	ldrb	r4, [r3, #19]
  40270c:	2c24      	cmp	r4, #36	; 0x24
  40270e:	bf28      	it	cs
  402710:	2424      	movcs	r4, #36	; 0x24
	if (!udi_msc_cbw_validate(length, USB_CBW_DIRECTION_IN))
  402712:	2180      	movs	r1, #128	; 0x80
  402714:	4620      	mov	r0, r4
  402716:	4b47      	ldr	r3, [pc, #284]	; (402834 <udi_msc_cbw_received+0x258>)
  402718:	4798      	blx	r3
  40271a:	2800      	cmp	r0, #0
  40271c:	d0ee      	beq.n	4026fc <udi_msc_cbw_received+0x120>
	if ((0 != (udi_msc_cbw.CDB[1] & (SCSI_INQ_REQ_EVPD | SCSI_INQ_REQ_CMDT)))
  40271e:	4b3c      	ldr	r3, [pc, #240]	; (402810 <udi_msc_cbw_received+0x234>)
  402720:	7c1b      	ldrb	r3, [r3, #16]
  402722:	f013 0f03 	tst.w	r3, #3
  402726:	d102      	bne.n	40272e <udi_msc_cbw_received+0x152>
			|| (0 != udi_msc_cbw.CDB[2])) {
  402728:	4b39      	ldr	r3, [pc, #228]	; (402810 <udi_msc_cbw_received+0x234>)
  40272a:	7c5d      	ldrb	r5, [r3, #17]
  40272c:	b125      	cbz	r5, 402738 <udi_msc_cbw_received+0x15c>
		udi_msc_sense_fail_cdb_invalid(); // Command is unsupported
  40272e:	4b3f      	ldr	r3, [pc, #252]	; (40282c <udi_msc_cbw_received+0x250>)
  402730:	4798      	blx	r3
		udi_msc_csw_process();
  402732:	4b3f      	ldr	r3, [pc, #252]	; (402830 <udi_msc_cbw_received+0x254>)
  402734:	4798      	blx	r3
  402736:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	udi_msc_inquiry_data.flags1 = mem_removal(udi_msc_cbw.bCBWLUN) ?
  402738:	4b35      	ldr	r3, [pc, #212]	; (402810 <udi_msc_cbw_received+0x234>)
  40273a:	7b58      	ldrb	r0, [r3, #13]
  40273c:	4b40      	ldr	r3, [pc, #256]	; (402840 <udi_msc_cbw_received+0x264>)
  40273e:	4798      	blx	r3
  402740:	2800      	cmp	r0, #0
  402742:	bf0c      	ite	eq
  402744:	462b      	moveq	r3, r5
  402746:	2380      	movne	r3, #128	; 0x80
  402748:	4f3e      	ldr	r7, [pc, #248]	; (402844 <udi_msc_cbw_received+0x268>)
  40274a:	707b      	strb	r3, [r7, #1]
			mem_name(udi_msc_cbw.bCBWLUN)+1, // To remove first '"'
  40274c:	4b30      	ldr	r3, [pc, #192]	; (402810 <udi_msc_cbw_received+0x234>)
  40274e:	7b58      	ldrb	r0, [r3, #13]
  402750:	4b3d      	ldr	r3, [pc, #244]	; (402848 <udi_msc_cbw_received+0x26c>)
  402752:	4798      	blx	r3
	memcpy(udi_msc_inquiry_data.product_id,
  402754:	f107 0610 	add.w	r6, r7, #16
  402758:	4603      	mov	r3, r0
  40275a:	f853 0f01 	ldr.w	r0, [r3, #1]!
  40275e:	6859      	ldr	r1, [r3, #4]
  402760:	689a      	ldr	r2, [r3, #8]
  402762:	68db      	ldr	r3, [r3, #12]
  402764:	c60f      	stmia	r6!, {r0, r1, r2, r3}
		if ((0 == udi_msc_inquiry_data.product_id[i])
  402766:	7c3b      	ldrb	r3, [r7, #16]
  402768:	2b00      	cmp	r3, #0
  40276a:	f000 80bd 	beq.w	4028e8 <udi_msc_cbw_received+0x30c>
				|| ('"' == udi_msc_inquiry_data.product_id[i])) {
  40276e:	2b22      	cmp	r3, #34	; 0x22
  402770:	f000 80b9 	beq.w	4028e6 <udi_msc_cbw_received+0x30a>
  402774:	f1a6 010f 	sub.w	r1, r6, #15
		i++;
  402778:	2301      	movs	r3, #1
		if ((0 == udi_msc_inquiry_data.product_id[i])
  40277a:	f811 2b01 	ldrb.w	r2, [r1], #1
  40277e:	2a00      	cmp	r2, #0
  402780:	f000 80b2 	beq.w	4028e8 <udi_msc_cbw_received+0x30c>
				|| ('"' == udi_msc_inquiry_data.product_id[i])) {
  402784:	2a22      	cmp	r2, #34	; 0x22
  402786:	f000 80af 	beq.w	4028e8 <udi_msc_cbw_received+0x30c>
		i++;
  40278a:	3301      	adds	r3, #1
  40278c:	b2db      	uxtb	r3, r3
	while (sizeof(udi_msc_inquiry_data.product_id) != i) {
  40278e:	2b10      	cmp	r3, #16
  402790:	d1f3      	bne.n	40277a <udi_msc_cbw_received+0x19e>
  402792:	e0b1      	b.n	4028f8 <udi_msc_cbw_received+0x31c>
		udi_msc_spc_mode_sense(false);
  402794:	2000      	movs	r0, #0
  402796:	4b2d      	ldr	r3, [pc, #180]	; (40284c <udi_msc_cbw_received+0x270>)
  402798:	4798      	blx	r3
		break;
  40279a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_spc_mode_sense(true);
  40279c:	2001      	movs	r0, #1
  40279e:	4b2b      	ldr	r3, [pc, #172]	; (40284c <udi_msc_cbw_received+0x270>)
  4027a0:	4798      	blx	r3
		break;
  4027a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	switch (mem_test_unit_ready(udi_msc_cbw.bCBWLUN)) {
  4027a4:	4b2a      	ldr	r3, [pc, #168]	; (402850 <udi_msc_cbw_received+0x274>)
  4027a6:	4798      	blx	r3
  4027a8:	2802      	cmp	r0, #2
  4027aa:	d008      	beq.n	4027be <udi_msc_cbw_received+0x1e2>
  4027ac:	2803      	cmp	r0, #3
  4027ae:	d003      	beq.n	4027b8 <udi_msc_cbw_received+0x1dc>
  4027b0:	b140      	cbz	r0, 4027c4 <udi_msc_cbw_received+0x1e8>
		udi_msc_sense_fail_hardware();
  4027b2:	4b28      	ldr	r3, [pc, #160]	; (402854 <udi_msc_cbw_received+0x278>)
  4027b4:	4798      	blx	r3
  4027b6:	e007      	b.n	4027c8 <udi_msc_cbw_received+0x1ec>
		udi_msc_sense_fail_busy_or_change();
  4027b8:	4b27      	ldr	r3, [pc, #156]	; (402858 <udi_msc_cbw_received+0x27c>)
  4027ba:	4798      	blx	r3
  4027bc:	e004      	b.n	4027c8 <udi_msc_cbw_received+0x1ec>
		udi_msc_sense_fail_not_present();
  4027be:	4b27      	ldr	r3, [pc, #156]	; (40285c <udi_msc_cbw_received+0x280>)
  4027c0:	4798      	blx	r3
  4027c2:	e001      	b.n	4027c8 <udi_msc_cbw_received+0x1ec>
		udi_msc_sense_pass();
  4027c4:	4b26      	ldr	r3, [pc, #152]	; (402860 <udi_msc_cbw_received+0x284>)
  4027c6:	4798      	blx	r3
	udi_msc_csw_process();
  4027c8:	4b19      	ldr	r3, [pc, #100]	; (402830 <udi_msc_cbw_received+0x254>)
  4027ca:	4798      	blx	r3
  4027cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if (!udi_msc_cbw_validate(sizeof(udi_msc_capacity),
  4027ce:	2180      	movs	r1, #128	; 0x80
  4027d0:	2008      	movs	r0, #8
  4027d2:	4b18      	ldr	r3, [pc, #96]	; (402834 <udi_msc_cbw_received+0x258>)
  4027d4:	4798      	blx	r3
  4027d6:	2800      	cmp	r0, #0
  4027d8:	d090      	beq.n	4026fc <udi_msc_cbw_received+0x120>
	switch (mem_read_capacity(udi_msc_cbw.bCBWLUN,
  4027da:	4922      	ldr	r1, [pc, #136]	; (402864 <udi_msc_cbw_received+0x288>)
  4027dc:	4b0c      	ldr	r3, [pc, #48]	; (402810 <udi_msc_cbw_received+0x234>)
  4027de:	7b58      	ldrb	r0, [r3, #13]
  4027e0:	4b21      	ldr	r3, [pc, #132]	; (402868 <udi_msc_cbw_received+0x28c>)
  4027e2:	4798      	blx	r3
  4027e4:	2802      	cmp	r0, #2
  4027e6:	d00d      	beq.n	402804 <udi_msc_cbw_received+0x228>
  4027e8:	2803      	cmp	r0, #3
  4027ea:	d006      	beq.n	4027fa <udi_msc_cbw_received+0x21e>
  4027ec:	2800      	cmp	r0, #0
  4027ee:	d03d      	beq.n	40286c <udi_msc_cbw_received+0x290>
		udi_msc_sense_fail_hardware();
  4027f0:	4b18      	ldr	r3, [pc, #96]	; (402854 <udi_msc_cbw_received+0x278>)
  4027f2:	4798      	blx	r3
		udi_msc_csw_process();
  4027f4:	4b0e      	ldr	r3, [pc, #56]	; (402830 <udi_msc_cbw_received+0x254>)
  4027f6:	4798      	blx	r3
  4027f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_sense_fail_busy_or_change();
  4027fa:	4b17      	ldr	r3, [pc, #92]	; (402858 <udi_msc_cbw_received+0x27c>)
  4027fc:	4798      	blx	r3
		udi_msc_csw_process();
  4027fe:	4b0c      	ldr	r3, [pc, #48]	; (402830 <udi_msc_cbw_received+0x254>)
  402800:	4798      	blx	r3
  402802:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_sense_fail_not_present();
  402804:	4b15      	ldr	r3, [pc, #84]	; (40285c <udi_msc_cbw_received+0x280>)
  402806:	4798      	blx	r3
		udi_msc_csw_process();
  402808:	4b09      	ldr	r3, [pc, #36]	; (402830 <udi_msc_cbw_received+0x254>)
  40280a:	4798      	blx	r3
  40280c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40280e:	bf00      	nop
  402810:	2001a198 	.word	0x2001a198
  402814:	43425355 	.word	0x43425355
  402818:	2001a18c 	.word	0x2001a18c
  40281c:	004022cd 	.word	0x004022cd
  402820:	004022f9 	.word	0x004022f9
  402824:	2001a1bc 	.word	0x2001a1bc
  402828:	20000190 	.word	0x20000190
  40282c:	004023b1 	.word	0x004023b1
  402830:	00402325 	.word	0x00402325
  402834:	004023c5 	.word	0x004023c5
  402838:	2001a1c0 	.word	0x2001a1c0
  40283c:	00402411 	.word	0x00402411
  402840:	00401b9d 	.word	0x00401b9d
  402844:	200001a0 	.word	0x200001a0
  402848:	00401bbd 	.word	0x00401bbd
  40284c:	004024ad 	.word	0x004024ad
  402850:	00401b0d 	.word	0x00401b0d
  402854:	004023fd 	.word	0x004023fd
  402858:	00402445 	.word	0x00402445
  40285c:	00402459 	.word	0x00402459
  402860:	0040246d 	.word	0x0040246d
  402864:	2001a190 	.word	0x2001a190
  402868:	00401b29 	.word	0x00401b29
	udi_msc_capacity.block_len = CPU_TO_BE32(UDI_MSC_BLOCK_SIZE);
  40286c:	4825      	ldr	r0, [pc, #148]	; (402904 <udi_msc_cbw_received+0x328>)
  40286e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  402872:	6043      	str	r3, [r0, #4]
	udi_msc_capacity.max_lba = cpu_to_be32(udi_msc_capacity.max_lba);
  402874:	6803      	ldr	r3, [r0, #0]
  402876:	ba1b      	rev	r3, r3
  402878:	6003      	str	r3, [r0, #0]
	udi_msc_data_send((uint8_t *) & udi_msc_capacity,
  40287a:	2108      	movs	r1, #8
  40287c:	4b22      	ldr	r3, [pc, #136]	; (402908 <udi_msc_cbw_received+0x32c>)
  40287e:	4798      	blx	r3
  402880:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	bool start = 0x1 & udi_msc_cbw.CDB[4];
  402882:	4b22      	ldr	r3, [pc, #136]	; (40290c <udi_msc_cbw_received+0x330>)
  402884:	7cdb      	ldrb	r3, [r3, #19]
	if (loej) {
  402886:	f013 0f02 	tst.w	r3, #2
  40288a:	d104      	bne.n	402896 <udi_msc_cbw_received+0x2ba>
	udi_msc_sense_pass();
  40288c:	4b20      	ldr	r3, [pc, #128]	; (402910 <udi_msc_cbw_received+0x334>)
  40288e:	4798      	blx	r3
	udi_msc_csw_process();
  402890:	4b20      	ldr	r3, [pc, #128]	; (402914 <udi_msc_cbw_received+0x338>)
  402892:	4798      	blx	r3
  402894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		mem_unload(udi_msc_cbw.bCBWLUN, !start);
  402896:	f083 0301 	eor.w	r3, r3, #1
  40289a:	f003 0101 	and.w	r1, r3, #1
  40289e:	4b1e      	ldr	r3, [pc, #120]	; (402918 <udi_msc_cbw_received+0x33c>)
  4028a0:	4798      	blx	r3
  4028a2:	e7f3      	b.n	40288c <udi_msc_cbw_received+0x2b0>
	uint8_t prevent = udi_msc_cbw.CDB[4];
  4028a4:	4b19      	ldr	r3, [pc, #100]	; (40290c <udi_msc_cbw_received+0x330>)
	if (0 == prevent) {
  4028a6:	7cdb      	ldrb	r3, [r3, #19]
  4028a8:	b123      	cbz	r3, 4028b4 <udi_msc_cbw_received+0x2d8>
		udi_msc_sense_fail_cdb_invalid(); // Command is unsupported
  4028aa:	4b1c      	ldr	r3, [pc, #112]	; (40291c <udi_msc_cbw_received+0x340>)
  4028ac:	4798      	blx	r3
	udi_msc_csw_process();
  4028ae:	4b19      	ldr	r3, [pc, #100]	; (402914 <udi_msc_cbw_received+0x338>)
  4028b0:	4798      	blx	r3
  4028b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_sense_pass();
  4028b4:	4b16      	ldr	r3, [pc, #88]	; (402910 <udi_msc_cbw_received+0x334>)
  4028b6:	4798      	blx	r3
  4028b8:	e7f9      	b.n	4028ae <udi_msc_cbw_received+0x2d2>
		udi_msc_sense_pass();
  4028ba:	4b15      	ldr	r3, [pc, #84]	; (402910 <udi_msc_cbw_received+0x334>)
  4028bc:	4798      	blx	r3
		udi_msc_csw_process();
  4028be:	4b15      	ldr	r3, [pc, #84]	; (402914 <udi_msc_cbw_received+0x338>)
  4028c0:	4798      	blx	r3
		break;
  4028c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_sbc_trans(true);
  4028c4:	2001      	movs	r0, #1
  4028c6:	4b16      	ldr	r3, [pc, #88]	; (402920 <udi_msc_cbw_received+0x344>)
  4028c8:	4798      	blx	r3
		break;
  4028ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		udi_msc_sbc_trans(false);
  4028cc:	2000      	movs	r0, #0
  4028ce:	4b14      	ldr	r3, [pc, #80]	; (402920 <udi_msc_cbw_received+0x344>)
  4028d0:	4798      	blx	r3
		break;
  4028d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	udi_msc_sense_fail(SCSI_SK_ILLEGAL_REQUEST,
  4028d4:	2200      	movs	r2, #0
  4028d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  4028da:	2005      	movs	r0, #5
  4028dc:	4b11      	ldr	r3, [pc, #68]	; (402924 <udi_msc_cbw_received+0x348>)
  4028de:	4798      	blx	r3
		udi_msc_csw_process();
  4028e0:	4b0c      	ldr	r3, [pc, #48]	; (402914 <udi_msc_cbw_received+0x338>)
  4028e2:	4798      	blx	r3
		break;
  4028e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	i = 0;
  4028e6:	462b      	mov	r3, r5
		udi_msc_inquiry_data.product_id[i] = ' ';
  4028e8:	480f      	ldr	r0, [pc, #60]	; (402928 <udi_msc_cbw_received+0x34c>)
  4028ea:	2120      	movs	r1, #32
  4028ec:	18c2      	adds	r2, r0, r3
  4028ee:	7411      	strb	r1, [r2, #16]
		i++;
  4028f0:	3301      	adds	r3, #1
  4028f2:	b2db      	uxtb	r3, r3
	while (sizeof(udi_msc_inquiry_data.product_id) != i) {
  4028f4:	2b10      	cmp	r3, #16
  4028f6:	d1f9      	bne.n	4028ec <udi_msc_cbw_received+0x310>
	udi_msc_data_send((uint8_t *) & udi_msc_inquiry_data, length);
  4028f8:	4621      	mov	r1, r4
  4028fa:	480b      	ldr	r0, [pc, #44]	; (402928 <udi_msc_cbw_received+0x34c>)
  4028fc:	4b02      	ldr	r3, [pc, #8]	; (402908 <udi_msc_cbw_received+0x32c>)
  4028fe:	4798      	blx	r3
  402900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402902:	4770      	bx	lr
  402904:	2001a190 	.word	0x2001a190
  402908:	00402411 	.word	0x00402411
  40290c:	2001a198 	.word	0x2001a198
  402910:	0040246d 	.word	0x0040246d
  402914:	00402325 	.word	0x00402325
  402918:	00401b55 	.word	0x00401b55
  40291c:	004023b1 	.word	0x004023b1
  402920:	00402559 	.word	0x00402559
  402924:	00402379 	.word	0x00402379
  402928:	200001a0 	.word	0x200001a0

0040292c <udi_msc_disable>:
{
  40292c:	b508      	push	{r3, lr}
	udi_msc_b_trans_req = false;
  40292e:	2200      	movs	r2, #0
  402930:	4b04      	ldr	r3, [pc, #16]	; (402944 <udi_msc_disable+0x18>)
  402932:	701a      	strb	r2, [r3, #0]
	udi_msc_b_ack_trans = true;
  402934:	2301      	movs	r3, #1
  402936:	4a04      	ldr	r2, [pc, #16]	; (402948 <udi_msc_disable+0x1c>)
  402938:	7013      	strb	r3, [r2, #0]
	udi_msc_b_reset_trans = true;
  40293a:	4a04      	ldr	r2, [pc, #16]	; (40294c <udi_msc_disable+0x20>)
  40293c:	7013      	strb	r3, [r2, #0]
	UDI_MSC_DISABLE_EXT();
  40293e:	4b04      	ldr	r3, [pc, #16]	; (402950 <udi_msc_disable+0x24>)
  402940:	4798      	blx	r3
  402942:	bd08      	pop	{r3, pc}
  402944:	2001a18e 	.word	0x2001a18e
  402948:	2000018c 	.word	0x2000018c
  40294c:	2000018d 	.word	0x2000018d
  402950:	00408305 	.word	0x00408305

00402954 <udi_msc_setup>:
	if (Udd_setup_is_in()) {
  402954:	4b22      	ldr	r3, [pc, #136]	; (4029e0 <udi_msc_setup+0x8c>)
  402956:	781b      	ldrb	r3, [r3, #0]
  402958:	f013 0f80 	tst.w	r3, #128	; 0x80
  40295c:	d105      	bne.n	40296a <udi_msc_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  40295e:	f003 0360 	and.w	r3, r3, #96	; 0x60
  402962:	2b20      	cmp	r3, #32
  402964:	d01a      	beq.n	40299c <udi_msc_setup+0x48>
	return false;	// Not supported request
  402966:	2000      	movs	r0, #0
  402968:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  40296a:	f003 0360 	and.w	r3, r3, #96	; 0x60
  40296e:	2b20      	cmp	r3, #32
  402970:	d001      	beq.n	402976 <udi_msc_setup+0x22>
	return false;	// Not supported request
  402972:	2000      	movs	r0, #0
  402974:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  402976:	4b1a      	ldr	r3, [pc, #104]	; (4029e0 <udi_msc_setup+0x8c>)
  402978:	785b      	ldrb	r3, [r3, #1]
  40297a:	2bfe      	cmp	r3, #254	; 0xfe
  40297c:	d128      	bne.n	4029d0 <udi_msc_setup+0x7c>
				if (1 != udd_g_ctrlreq.req.wLength)
  40297e:	4b18      	ldr	r3, [pc, #96]	; (4029e0 <udi_msc_setup+0x8c>)
  402980:	88db      	ldrh	r3, [r3, #6]
  402982:	2b01      	cmp	r3, #1
  402984:	d001      	beq.n	40298a <udi_msc_setup+0x36>
					return false;	// Error for USB host
  402986:	2000      	movs	r0, #0
  402988:	4770      	bx	lr
				if (0 != udd_g_ctrlreq.req.wValue)
  40298a:	4b15      	ldr	r3, [pc, #84]	; (4029e0 <udi_msc_setup+0x8c>)
  40298c:	885b      	ldrh	r3, [r3, #2]
  40298e:	bb0b      	cbnz	r3, 4029d4 <udi_msc_setup+0x80>
				udd_g_ctrlreq.payload = &udi_msc_nb_lun;
  402990:	4b13      	ldr	r3, [pc, #76]	; (4029e0 <udi_msc_setup+0x8c>)
  402992:	4a14      	ldr	r2, [pc, #80]	; (4029e4 <udi_msc_setup+0x90>)
  402994:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size = 1;
  402996:	2001      	movs	r0, #1
  402998:	8198      	strh	r0, [r3, #12]
				return true;
  40299a:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  40299c:	4b10      	ldr	r3, [pc, #64]	; (4029e0 <udi_msc_setup+0x8c>)
  40299e:	785b      	ldrb	r3, [r3, #1]
  4029a0:	2bff      	cmp	r3, #255	; 0xff
  4029a2:	d119      	bne.n	4029d8 <udi_msc_setup+0x84>
				if (0 != udd_g_ctrlreq.req.wLength)
  4029a4:	4b0e      	ldr	r3, [pc, #56]	; (4029e0 <udi_msc_setup+0x8c>)
  4029a6:	88db      	ldrh	r3, [r3, #6]
  4029a8:	b9c3      	cbnz	r3, 4029dc <udi_msc_setup+0x88>
				if (0 != udd_g_ctrlreq.req.wValue)
  4029aa:	4b0d      	ldr	r3, [pc, #52]	; (4029e0 <udi_msc_setup+0x8c>)
  4029ac:	885b      	ldrh	r3, [r3, #2]
  4029ae:	b10b      	cbz	r3, 4029b4 <udi_msc_setup+0x60>
					return false;
  4029b0:	2000      	movs	r0, #0
  4029b2:	4770      	bx	lr
{
  4029b4:	b510      	push	{r4, lr}
				udi_msc_b_cbw_invalid = false;
  4029b6:	4a0c      	ldr	r2, [pc, #48]	; (4029e8 <udi_msc_setup+0x94>)
  4029b8:	7013      	strb	r3, [r2, #0]
				udi_msc_b_trans_req = false;
  4029ba:	4a0c      	ldr	r2, [pc, #48]	; (4029ec <udi_msc_setup+0x98>)
  4029bc:	7013      	strb	r3, [r2, #0]
				udd_ep_abort(UDI_MSC_EP_OUT);
  4029be:	2002      	movs	r0, #2
  4029c0:	4c0b      	ldr	r4, [pc, #44]	; (4029f0 <udi_msc_setup+0x9c>)
  4029c2:	47a0      	blx	r4
				udd_ep_abort(UDI_MSC_EP_IN);
  4029c4:	2081      	movs	r0, #129	; 0x81
  4029c6:	47a0      	blx	r4
				udi_msc_cbw_wait();
  4029c8:	4b0a      	ldr	r3, [pc, #40]	; (4029f4 <udi_msc_setup+0xa0>)
  4029ca:	4798      	blx	r3
				return true;
  4029cc:	2001      	movs	r0, #1
  4029ce:	bd10      	pop	{r4, pc}
	return false;	// Not supported request
  4029d0:	2000      	movs	r0, #0
  4029d2:	4770      	bx	lr
					return false;
  4029d4:	2000      	movs	r0, #0
  4029d6:	4770      	bx	lr
	return false;	// Not supported request
  4029d8:	2000      	movs	r0, #0
  4029da:	4770      	bx	lr
					return false;
  4029dc:	2000      	movs	r0, #0
  4029de:	4770      	bx	lr
  4029e0:	2001ab44 	.word	0x2001ab44
  4029e4:	2001a1bc 	.word	0x2001a1bc
  4029e8:	2001a18c 	.word	0x2001a18c
  4029ec:	2001a18e 	.word	0x2001a18e
  4029f0:	00405649 	.word	0x00405649
  4029f4:	004021d5 	.word	0x004021d5

004029f8 <udi_msc_process_trans>:
{
  4029f8:	b510      	push	{r4, lr}
	if (!udi_msc_b_trans_req)
  4029fa:	4b1d      	ldr	r3, [pc, #116]	; (402a70 <udi_msc_process_trans+0x78>)
  4029fc:	781c      	ldrb	r4, [r3, #0]
  4029fe:	2c00      	cmp	r4, #0
  402a00:	d02e      	beq.n	402a60 <udi_msc_process_trans+0x68>
	udi_msc_b_trans_req = false;
  402a02:	2300      	movs	r3, #0
  402a04:	4a1a      	ldr	r2, [pc, #104]	; (402a70 <udi_msc_process_trans+0x78>)
  402a06:	7013      	strb	r3, [r2, #0]
	udi_msc_b_reset_trans = false;
  402a08:	4a1a      	ldr	r2, [pc, #104]	; (402a74 <udi_msc_process_trans+0x7c>)
  402a0a:	7013      	strb	r3, [r2, #0]
	if (udi_msc_b_read) {
  402a0c:	4b1a      	ldr	r3, [pc, #104]	; (402a78 <udi_msc_process_trans+0x80>)
  402a0e:	781b      	ldrb	r3, [r3, #0]
  402a10:	b1a3      	cbz	r3, 402a3c <udi_msc_process_trans+0x44>
		status = memory_2_usb(udi_msc_cbw.bCBWLUN, udi_msc_addr,
  402a12:	4b1a      	ldr	r3, [pc, #104]	; (402a7c <udi_msc_process_trans+0x84>)
  402a14:	881a      	ldrh	r2, [r3, #0]
  402a16:	4b1a      	ldr	r3, [pc, #104]	; (402a80 <udi_msc_process_trans+0x88>)
  402a18:	6819      	ldr	r1, [r3, #0]
  402a1a:	4b1a      	ldr	r3, [pc, #104]	; (402a84 <udi_msc_process_trans+0x8c>)
  402a1c:	7b58      	ldrb	r0, [r3, #13]
  402a1e:	4b1a      	ldr	r3, [pc, #104]	; (402a88 <udi_msc_process_trans+0x90>)
  402a20:	4798      	blx	r3
	if (udi_msc_b_reset_trans) {
  402a22:	4b14      	ldr	r3, [pc, #80]	; (402a74 <udi_msc_process_trans+0x7c>)
  402a24:	781b      	ldrb	r3, [r3, #0]
  402a26:	f003 02ff 	and.w	r2, r3, #255	; 0xff
  402a2a:	b983      	cbnz	r3, 402a4e <udi_msc_process_trans+0x56>
	switch (status) {
  402a2c:	2802      	cmp	r0, #2
  402a2e:	d01c      	beq.n	402a6a <udi_msc_process_trans+0x72>
  402a30:	2803      	cmp	r0, #3
  402a32:	d017      	beq.n	402a64 <udi_msc_process_trans+0x6c>
  402a34:	b180      	cbz	r0, 402a58 <udi_msc_process_trans+0x60>
		udi_msc_sense_fail_hardware();
  402a36:	4b15      	ldr	r3, [pc, #84]	; (402a8c <udi_msc_process_trans+0x94>)
  402a38:	4798      	blx	r3
		break;
  402a3a:	e00f      	b.n	402a5c <udi_msc_process_trans+0x64>
		status = usb_2_memory(udi_msc_cbw.bCBWLUN, udi_msc_addr,
  402a3c:	4b0f      	ldr	r3, [pc, #60]	; (402a7c <udi_msc_process_trans+0x84>)
  402a3e:	881a      	ldrh	r2, [r3, #0]
  402a40:	4b0f      	ldr	r3, [pc, #60]	; (402a80 <udi_msc_process_trans+0x88>)
  402a42:	6819      	ldr	r1, [r3, #0]
  402a44:	4b0f      	ldr	r3, [pc, #60]	; (402a84 <udi_msc_process_trans+0x8c>)
  402a46:	7b58      	ldrb	r0, [r3, #13]
  402a48:	4b11      	ldr	r3, [pc, #68]	; (402a90 <udi_msc_process_trans+0x98>)
  402a4a:	4798      	blx	r3
  402a4c:	e7e9      	b.n	402a22 <udi_msc_process_trans+0x2a>
		udi_msc_b_reset_trans = false;
  402a4e:	2100      	movs	r1, #0
  402a50:	4b08      	ldr	r3, [pc, #32]	; (402a74 <udi_msc_process_trans+0x7c>)
  402a52:	7019      	strb	r1, [r3, #0]
		return true;
  402a54:	4614      	mov	r4, r2
  402a56:	e003      	b.n	402a60 <udi_msc_process_trans+0x68>
		udi_msc_sense_pass();
  402a58:	4b0e      	ldr	r3, [pc, #56]	; (402a94 <udi_msc_process_trans+0x9c>)
  402a5a:	4798      	blx	r3
	udi_msc_csw_process();
  402a5c:	4b0e      	ldr	r3, [pc, #56]	; (402a98 <udi_msc_process_trans+0xa0>)
  402a5e:	4798      	blx	r3
}
  402a60:	4620      	mov	r0, r4
  402a62:	bd10      	pop	{r4, pc}
		udi_msc_sense_fail_busy_or_change();
  402a64:	4b0d      	ldr	r3, [pc, #52]	; (402a9c <udi_msc_process_trans+0xa4>)
  402a66:	4798      	blx	r3
		break;
  402a68:	e7f8      	b.n	402a5c <udi_msc_process_trans+0x64>
		udi_msc_sense_fail_not_present();
  402a6a:	4b0d      	ldr	r3, [pc, #52]	; (402aa0 <udi_msc_process_trans+0xa8>)
  402a6c:	4798      	blx	r3
		break;
  402a6e:	e7f5      	b.n	402a5c <udi_msc_process_trans+0x64>
  402a70:	2001a18e 	.word	0x2001a18e
  402a74:	2000018d 	.word	0x2000018d
  402a78:	2001a18d 	.word	0x2001a18d
  402a7c:	2001a1b8 	.word	0x2001a1b8
  402a80:	2001a188 	.word	0x2001a188
  402a84:	2001a198 	.word	0x2001a198
  402a88:	00401bd9 	.word	0x00401bd9
  402a8c:	004023fd 	.word	0x004023fd
  402a90:	00401c15 	.word	0x00401c15
  402a94:	0040246d 	.word	0x0040246d
  402a98:	00402325 	.word	0x00402325
  402a9c:	00402445 	.word	0x00402445
  402aa0:	00402459 	.word	0x00402459

00402aa4 <udi_msc_trans_block>:
}


bool udi_msc_trans_block(bool b_read, uint8_t * block, iram_size_t block_size,
		void (*callback) (udd_ep_status_t status, iram_size_t n, udd_ep_id_t ep))
{
  402aa4:	b530      	push	{r4, r5, lr}
  402aa6:	b083      	sub	sp, #12
	if (!udi_msc_b_ack_trans)
  402aa8:	4c1d      	ldr	r4, [pc, #116]	; (402b20 <udi_msc_trans_block+0x7c>)
  402aaa:	7824      	ldrb	r4, [r4, #0]
  402aac:	f004 05ff 	and.w	r5, r4, #255	; 0xff
  402ab0:	b1a4      	cbz	r4, 402adc <udi_msc_trans_block+0x38>
  402ab2:	4614      	mov	r4, r2
  402ab4:	460a      	mov	r2, r1
		return false;	// No possible, transfer on going

	// Start transfer Internal RAM<->USB line
	udi_msc_b_ack_trans = false;
  402ab6:	2500      	movs	r5, #0
  402ab8:	4919      	ldr	r1, [pc, #100]	; (402b20 <udi_msc_trans_block+0x7c>)
  402aba:	700d      	strb	r5, [r1, #0]
	if (!udd_ep_run((b_read) ? UDI_MSC_EP_IN : UDI_MSC_EP_OUT,
  402abc:	42a8      	cmp	r0, r5
  402abe:	bf14      	ite	ne
  402ac0:	2081      	movne	r0, #129	; 0x81
  402ac2:	2002      	moveq	r0, #2
  402ac4:	b16b      	cbz	r3, 402ae2 <udi_msc_trans_block+0x3e>
  402ac6:	9300      	str	r3, [sp, #0]
  402ac8:	4623      	mov	r3, r4
  402aca:	2100      	movs	r1, #0
  402acc:	4d15      	ldr	r5, [pc, #84]	; (402b24 <udi_msc_trans_block+0x80>)
  402ace:	47a8      	blx	r5
  402ad0:	4605      	mov	r5, r0
  402ad2:	b1e8      	cbz	r0, 402b10 <udi_msc_trans_block+0x6c>
			return false;
		}
		udi_msc_csw.dCSWDataResidue -= block_size;
		return (!udi_msc_b_abort_trans);
	}
	udi_msc_csw.dCSWDataResidue -= block_size;
  402ad4:	4b14      	ldr	r3, [pc, #80]	; (402b28 <udi_msc_trans_block+0x84>)
  402ad6:	689a      	ldr	r2, [r3, #8]
  402ad8:	1b12      	subs	r2, r2, r4
  402ada:	609a      	str	r2, [r3, #8]
	return true;
}
  402adc:	4628      	mov	r0, r5
  402ade:	b003      	add	sp, #12
  402ae0:	bd30      	pop	{r4, r5, pc}
	if (!udd_ep_run((b_read) ? UDI_MSC_EP_IN : UDI_MSC_EP_OUT,
  402ae2:	4b12      	ldr	r3, [pc, #72]	; (402b2c <udi_msc_trans_block+0x88>)
  402ae4:	9300      	str	r3, [sp, #0]
  402ae6:	4623      	mov	r3, r4
  402ae8:	4629      	mov	r1, r5
  402aea:	4d0e      	ldr	r5, [pc, #56]	; (402b24 <udi_msc_trans_block+0x80>)
  402aec:	47a8      	blx	r5
  402aee:	b178      	cbz	r0, 402b10 <udi_msc_trans_block+0x6c>
		while (!udi_msc_b_ack_trans);
  402af0:	4a0b      	ldr	r2, [pc, #44]	; (402b20 <udi_msc_trans_block+0x7c>)
  402af2:	7813      	ldrb	r3, [r2, #0]
  402af4:	2b00      	cmp	r3, #0
  402af6:	d0fc      	beq.n	402af2 <udi_msc_trans_block+0x4e>
		if (udi_msc_b_abort_trans) {
  402af8:	4b0d      	ldr	r3, [pc, #52]	; (402b30 <udi_msc_trans_block+0x8c>)
  402afa:	781b      	ldrb	r3, [r3, #0]
  402afc:	b96b      	cbnz	r3, 402b1a <udi_msc_trans_block+0x76>
		udi_msc_csw.dCSWDataResidue -= block_size;
  402afe:	4b0a      	ldr	r3, [pc, #40]	; (402b28 <udi_msc_trans_block+0x84>)
  402b00:	689a      	ldr	r2, [r3, #8]
  402b02:	1b12      	subs	r2, r2, r4
  402b04:	609a      	str	r2, [r3, #8]
		return (!udi_msc_b_abort_trans);
  402b06:	4b0a      	ldr	r3, [pc, #40]	; (402b30 <udi_msc_trans_block+0x8c>)
  402b08:	781d      	ldrb	r5, [r3, #0]
  402b0a:	f085 0501 	eor.w	r5, r5, #1
  402b0e:	e7e5      	b.n	402adc <udi_msc_trans_block+0x38>
		udi_msc_b_ack_trans = true;
  402b10:	2201      	movs	r2, #1
  402b12:	4b03      	ldr	r3, [pc, #12]	; (402b20 <udi_msc_trans_block+0x7c>)
  402b14:	701a      	strb	r2, [r3, #0]
		return false;
  402b16:	2500      	movs	r5, #0
  402b18:	e7e0      	b.n	402adc <udi_msc_trans_block+0x38>
			return false;
  402b1a:	2500      	movs	r5, #0
  402b1c:	e7de      	b.n	402adc <udi_msc_trans_block+0x38>
  402b1e:	bf00      	nop
  402b20:	2000018c 	.word	0x2000018c
  402b24:	004054cd 	.word	0x004054cd
  402b28:	20000190 	.word	0x20000190
  402b2c:	004021b9 	.word	0x004021b9
  402b30:	2001ab36 	.word	0x2001ab36

00402b34 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
  402b34:	4b10      	ldr	r3, [pc, #64]	; (402b78 <udc_next_desc_in_iface+0x44>)
  402b36:	681b      	ldr	r3, [r3, #0]
  402b38:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  402b3a:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  402b3c:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
  402b3e:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  402b40:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
  402b42:	4290      	cmp	r0, r2
  402b44:	d211      	bcs.n	402b6a <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  402b46:	7843      	ldrb	r3, [r0, #1]
  402b48:	2b04      	cmp	r3, #4
  402b4a:	d010      	beq.n	402b6e <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
  402b4c:	428b      	cmp	r3, r1
  402b4e:	d009      	beq.n	402b64 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
  402b50:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  402b52:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
  402b54:	4290      	cmp	r0, r2
  402b56:	d206      	bcs.n	402b66 <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  402b58:	7843      	ldrb	r3, [r0, #1]
  402b5a:	2b04      	cmp	r3, #4
  402b5c:	d009      	beq.n	402b72 <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
  402b5e:	428b      	cmp	r3, r1
  402b60:	d1f6      	bne.n	402b50 <udc_next_desc_in_iface+0x1c>
  402b62:	e007      	b.n	402b74 <udc_next_desc_in_iface+0x40>
  402b64:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
  402b66:	2000      	movs	r0, #0
  402b68:	4770      	bx	lr
  402b6a:	2000      	movs	r0, #0
  402b6c:	4770      	bx	lr
  402b6e:	2000      	movs	r0, #0
  402b70:	4770      	bx	lr
  402b72:	2000      	movs	r0, #0
}
  402b74:	4770      	bx	lr
  402b76:	bf00      	nop
  402b78:	2001a1e0 	.word	0x2001a1e0

00402b7c <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
  402b7c:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
  402b7e:	4b03      	ldr	r3, [pc, #12]	; (402b8c <udc_valid_address+0x10>)
  402b80:	7898      	ldrb	r0, [r3, #2]
  402b82:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  402b86:	4b02      	ldr	r3, [pc, #8]	; (402b90 <udc_valid_address+0x14>)
  402b88:	4798      	blx	r3
  402b8a:	bd08      	pop	{r3, pc}
  402b8c:	2001ab44 	.word	0x2001ab44
  402b90:	00404f85 	.word	0x00404f85

00402b94 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
  402b94:	4b19      	ldr	r3, [pc, #100]	; (402bfc <udc_update_iface_desc+0x68>)
  402b96:	781b      	ldrb	r3, [r3, #0]
  402b98:	b34b      	cbz	r3, 402bee <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  402b9a:	4b19      	ldr	r3, [pc, #100]	; (402c00 <udc_update_iface_desc+0x6c>)
  402b9c:	681b      	ldr	r3, [r3, #0]
  402b9e:	681b      	ldr	r3, [r3, #0]
  402ba0:	791a      	ldrb	r2, [r3, #4]
  402ba2:	4282      	cmp	r2, r0
  402ba4:	d925      	bls.n	402bf2 <udc_update_iface_desc+0x5e>
{
  402ba6:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
  402ba8:	4a16      	ldr	r2, [pc, #88]	; (402c04 <udc_update_iface_desc+0x70>)
  402baa:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  402bac:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  402bae:	441c      	add	r4, r3
	while (ptr_end_desc >
  402bb0:	42a3      	cmp	r3, r4
  402bb2:	d220      	bcs.n	402bf6 <udc_update_iface_desc+0x62>
  402bb4:	2500      	movs	r5, #0
  402bb6:	2601      	movs	r6, #1
  402bb8:	e007      	b.n	402bca <udc_update_iface_desc+0x36>
  402bba:	4a12      	ldr	r2, [pc, #72]	; (402c04 <udc_update_iface_desc+0x70>)
  402bbc:	6013      	str	r3, [r2, #0]
  402bbe:	e00f      	b.n	402be0 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
  402bc0:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
  402bc2:	4413      	add	r3, r2
  402bc4:	4635      	mov	r5, r6
	while (ptr_end_desc >
  402bc6:	42a3      	cmp	r3, r4
  402bc8:	d20c      	bcs.n	402be4 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
  402bca:	785a      	ldrb	r2, [r3, #1]
  402bcc:	2a04      	cmp	r2, #4
  402bce:	d1f7      	bne.n	402bc0 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
  402bd0:	789a      	ldrb	r2, [r3, #2]
  402bd2:	4282      	cmp	r2, r0
  402bd4:	d1f4      	bne.n	402bc0 <udc_update_iface_desc+0x2c>
  402bd6:	78da      	ldrb	r2, [r3, #3]
  402bd8:	428a      	cmp	r2, r1
  402bda:	d1f1      	bne.n	402bc0 <udc_update_iface_desc+0x2c>
  402bdc:	2d00      	cmp	r5, #0
  402bde:	d1ec      	bne.n	402bba <udc_update_iface_desc+0x26>
				return true; // Interface found
  402be0:	2001      	movs	r0, #1
  402be2:	e002      	b.n	402bea <udc_update_iface_desc+0x56>
  402be4:	4a07      	ldr	r2, [pc, #28]	; (402c04 <udc_update_iface_desc+0x70>)
  402be6:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
  402be8:	2000      	movs	r0, #0
}
  402bea:	bc70      	pop	{r4, r5, r6}
  402bec:	4770      	bx	lr
		return false;
  402bee:	2000      	movs	r0, #0
  402bf0:	4770      	bx	lr
		return false;
  402bf2:	2000      	movs	r0, #0
  402bf4:	4770      	bx	lr
	return false; // Interface not found
  402bf6:	2000      	movs	r0, #0
  402bf8:	e7f7      	b.n	402bea <udc_update_iface_desc+0x56>
  402bfa:	bf00      	nop
  402bfc:	2001a1dc 	.word	0x2001a1dc
  402c00:	2001a1e0 	.word	0x2001a1e0
  402c04:	2001a1e4 	.word	0x2001a1e4

00402c08 <udc_iface_disable>:
{
  402c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402c0c:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
  402c0e:	2100      	movs	r1, #0
  402c10:	4b13      	ldr	r3, [pc, #76]	; (402c60 <udc_iface_disable+0x58>)
  402c12:	4798      	blx	r3
  402c14:	4680      	mov	r8, r0
  402c16:	b910      	cbnz	r0, 402c1e <udc_iface_disable+0x16>
}
  402c18:	4640      	mov	r0, r8
  402c1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  402c1e:	4b11      	ldr	r3, [pc, #68]	; (402c64 <udc_iface_disable+0x5c>)
  402c20:	681b      	ldr	r3, [r3, #0]
  402c22:	685b      	ldr	r3, [r3, #4]
  402c24:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  402c28:	f8d9 300c 	ldr.w	r3, [r9, #12]
  402c2c:	4798      	blx	r3
  402c2e:	4601      	mov	r1, r0
  402c30:	4620      	mov	r0, r4
  402c32:	4b0b      	ldr	r3, [pc, #44]	; (402c60 <udc_iface_disable+0x58>)
  402c34:	4798      	blx	r3
  402c36:	4680      	mov	r8, r0
  402c38:	2800      	cmp	r0, #0
  402c3a:	d0ed      	beq.n	402c18 <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  402c3c:	4b0a      	ldr	r3, [pc, #40]	; (402c68 <udc_iface_disable+0x60>)
  402c3e:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  402c40:	2605      	movs	r6, #5
  402c42:	4d0a      	ldr	r5, [pc, #40]	; (402c6c <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
  402c44:	4f0a      	ldr	r7, [pc, #40]	; (402c70 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  402c46:	4631      	mov	r1, r6
  402c48:	4620      	mov	r0, r4
  402c4a:	47a8      	blx	r5
			if (NULL == ep_desc) {
  402c4c:	4604      	mov	r4, r0
  402c4e:	b110      	cbz	r0, 402c56 <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
  402c50:	7880      	ldrb	r0, [r0, #2]
  402c52:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  402c54:	e7f7      	b.n	402c46 <udc_iface_disable+0x3e>
	udi_api->disable();
  402c56:	f8d9 3004 	ldr.w	r3, [r9, #4]
  402c5a:	4798      	blx	r3
	return true;
  402c5c:	e7dc      	b.n	402c18 <udc_iface_disable+0x10>
  402c5e:	bf00      	nop
  402c60:	00402b95 	.word	0x00402b95
  402c64:	2001a1e0 	.word	0x2001a1e0
  402c68:	2001a1e4 	.word	0x2001a1e4
  402c6c:	00402b35 	.word	0x00402b35
  402c70:	0040513d 	.word	0x0040513d

00402c74 <udc_iface_enable>:
{
  402c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402c78:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
  402c7a:	4b10      	ldr	r3, [pc, #64]	; (402cbc <udc_iface_enable+0x48>)
  402c7c:	4798      	blx	r3
  402c7e:	4603      	mov	r3, r0
  402c80:	b1c8      	cbz	r0, 402cb6 <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  402c82:	4b0f      	ldr	r3, [pc, #60]	; (402cc0 <udc_iface_enable+0x4c>)
  402c84:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  402c86:	2605      	movs	r6, #5
  402c88:	4d0e      	ldr	r5, [pc, #56]	; (402cc4 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  402c8a:	4f0f      	ldr	r7, [pc, #60]	; (402cc8 <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  402c8c:	4631      	mov	r1, r6
  402c8e:	4620      	mov	r0, r4
  402c90:	47a8      	blx	r5
		if (NULL == ep_desc)
  402c92:	4604      	mov	r4, r0
  402c94:	b138      	cbz	r0, 402ca6 <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  402c96:	8882      	ldrh	r2, [r0, #4]
  402c98:	78c1      	ldrb	r1, [r0, #3]
  402c9a:	7880      	ldrb	r0, [r0, #2]
  402c9c:	47b8      	blx	r7
  402c9e:	4603      	mov	r3, r0
  402ca0:	2800      	cmp	r0, #0
  402ca2:	d1f3      	bne.n	402c8c <udc_iface_enable+0x18>
  402ca4:	e007      	b.n	402cb6 <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
  402ca6:	4b09      	ldr	r3, [pc, #36]	; (402ccc <udc_iface_enable+0x58>)
  402ca8:	681b      	ldr	r3, [r3, #0]
  402caa:	685b      	ldr	r3, [r3, #4]
  402cac:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
  402cb0:	681b      	ldr	r3, [r3, #0]
  402cb2:	4798      	blx	r3
  402cb4:	4603      	mov	r3, r0
}
  402cb6:	4618      	mov	r0, r3
  402cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402cbc:	00402b95 	.word	0x00402b95
  402cc0:	2001a1e4 	.word	0x2001a1e4
  402cc4:	00402b35 	.word	0x00402b35
  402cc8:	00404ffd 	.word	0x00404ffd
  402ccc:	2001a1e0 	.word	0x2001a1e0

00402cd0 <udc_start>:
{
  402cd0:	b508      	push	{r3, lr}
	udd_enable();
  402cd2:	4b01      	ldr	r3, [pc, #4]	; (402cd8 <udc_start+0x8>)
  402cd4:	4798      	blx	r3
  402cd6:	bd08      	pop	{r3, pc}
  402cd8:	00404e9d 	.word	0x00404e9d

00402cdc <udc_reset>:
{
  402cdc:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
  402cde:	4b0d      	ldr	r3, [pc, #52]	; (402d14 <udc_reset+0x38>)
  402ce0:	781b      	ldrb	r3, [r3, #0]
  402ce2:	b183      	cbz	r3, 402d06 <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402ce4:	4b0c      	ldr	r3, [pc, #48]	; (402d18 <udc_reset+0x3c>)
  402ce6:	681b      	ldr	r3, [r3, #0]
  402ce8:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  402cea:	791b      	ldrb	r3, [r3, #4]
  402cec:	b15b      	cbz	r3, 402d06 <udc_reset+0x2a>
  402cee:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
  402cf0:	4e0a      	ldr	r6, [pc, #40]	; (402d1c <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402cf2:	4d09      	ldr	r5, [pc, #36]	; (402d18 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
  402cf4:	4620      	mov	r0, r4
  402cf6:	47b0      	blx	r6
				iface_num++) {
  402cf8:	3401      	adds	r4, #1
  402cfa:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402cfc:	682b      	ldr	r3, [r5, #0]
  402cfe:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  402d00:	791b      	ldrb	r3, [r3, #4]
  402d02:	42a3      	cmp	r3, r4
  402d04:	d8f6      	bhi.n	402cf4 <udc_reset+0x18>
	udc_num_configuration = 0;
  402d06:	2200      	movs	r2, #0
  402d08:	4b02      	ldr	r3, [pc, #8]	; (402d14 <udc_reset+0x38>)
  402d0a:	701a      	strb	r2, [r3, #0]
	udc_device_status =
  402d0c:	2201      	movs	r2, #1
  402d0e:	4b04      	ldr	r3, [pc, #16]	; (402d20 <udc_reset+0x44>)
  402d10:	801a      	strh	r2, [r3, #0]
  402d12:	bd70      	pop	{r4, r5, r6, pc}
  402d14:	2001a1dc 	.word	0x2001a1dc
  402d18:	2001a1e0 	.word	0x2001a1e0
  402d1c:	00402c09 	.word	0x00402c09
  402d20:	2001a1d2 	.word	0x2001a1d2

00402d24 <udc_sof_notify>:
{
  402d24:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
  402d26:	4b0d      	ldr	r3, [pc, #52]	; (402d5c <udc_sof_notify+0x38>)
  402d28:	781b      	ldrb	r3, [r3, #0]
  402d2a:	b1b3      	cbz	r3, 402d5a <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402d2c:	4b0c      	ldr	r3, [pc, #48]	; (402d60 <udc_sof_notify+0x3c>)
  402d2e:	681b      	ldr	r3, [r3, #0]
  402d30:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  402d32:	7912      	ldrb	r2, [r2, #4]
  402d34:	b18a      	cbz	r2, 402d5a <udc_sof_notify+0x36>
  402d36:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402d38:	4d09      	ldr	r5, [pc, #36]	; (402d60 <udc_sof_notify+0x3c>)
  402d3a:	e006      	b.n	402d4a <udc_sof_notify+0x26>
				iface_num++) {
  402d3c:	3401      	adds	r4, #1
  402d3e:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  402d40:	682b      	ldr	r3, [r5, #0]
  402d42:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  402d44:	7912      	ldrb	r2, [r2, #4]
  402d46:	42a2      	cmp	r2, r4
  402d48:	d907      	bls.n	402d5a <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
  402d4a:	685b      	ldr	r3, [r3, #4]
  402d4c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  402d50:	691b      	ldr	r3, [r3, #16]
  402d52:	2b00      	cmp	r3, #0
  402d54:	d0f2      	beq.n	402d3c <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
  402d56:	4798      	blx	r3
  402d58:	e7f0      	b.n	402d3c <udc_sof_notify+0x18>
  402d5a:	bd38      	pop	{r3, r4, r5, pc}
  402d5c:	2001a1dc 	.word	0x2001a1dc
  402d60:	2001a1e0 	.word	0x2001a1e0

00402d64 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
  402d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
  402d66:	4b8d      	ldr	r3, [pc, #564]	; (402f9c <udc_process_setup+0x238>)
  402d68:	2200      	movs	r2, #0
  402d6a:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
  402d6c:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  402d6e:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
  402d70:	781b      	ldrb	r3, [r3, #0]
  402d72:	f013 0f80 	tst.w	r3, #128	; 0x80
  402d76:	d114      	bne.n	402da2 <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  402d78:	f013 0f60 	tst.w	r3, #96	; 0x60
  402d7c:	f000 80df 	beq.w	402f3e <udc_process_setup+0x1da>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
  402d80:	4b86      	ldr	r3, [pc, #536]	; (402f9c <udc_process_setup+0x238>)
  402d82:	781b      	ldrb	r3, [r3, #0]
  402d84:	f003 031f 	and.w	r3, r3, #31
  402d88:	2b01      	cmp	r3, #1
  402d8a:	f000 8178 	beq.w	40307e <udc_process_setup+0x31a>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
  402d8e:	4b83      	ldr	r3, [pc, #524]	; (402f9c <udc_process_setup+0x238>)
  402d90:	781b      	ldrb	r3, [r3, #0]
  402d92:	f003 031f 	and.w	r3, r3, #31
  402d96:	2b02      	cmp	r3, #2
  402d98:	f000 81d3 	beq.w	403142 <udc_process_setup+0x3de>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
  402d9c:	2300      	movs	r3, #0
#endif
}
  402d9e:	4618      	mov	r0, r3
  402da0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
  402da2:	4a7e      	ldr	r2, [pc, #504]	; (402f9c <udc_process_setup+0x238>)
  402da4:	88d2      	ldrh	r2, [r2, #6]
  402da6:	2a00      	cmp	r2, #0
  402da8:	f000 81f4 	beq.w	403194 <udc_process_setup+0x430>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  402dac:	f013 0f60 	tst.w	r3, #96	; 0x60
  402db0:	d1e6      	bne.n	402d80 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  402db2:	f013 031f 	ands.w	r3, r3, #31
  402db6:	d106      	bne.n	402dc6 <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
  402db8:	4978      	ldr	r1, [pc, #480]	; (402f9c <udc_process_setup+0x238>)
  402dba:	7849      	ldrb	r1, [r1, #1]
  402dbc:	2906      	cmp	r1, #6
  402dbe:	d015      	beq.n	402dec <udc_process_setup+0x88>
  402dc0:	2908      	cmp	r1, #8
  402dc2:	d07d      	beq.n	402ec0 <udc_process_setup+0x15c>
  402dc4:	b159      	cbz	r1, 402dde <udc_process_setup+0x7a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  402dc6:	2b01      	cmp	r3, #1
  402dc8:	f000 8082 	beq.w	402ed0 <udc_process_setup+0x16c>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  402dcc:	2b02      	cmp	r3, #2
  402dce:	d1d7      	bne.n	402d80 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  402dd0:	4b72      	ldr	r3, [pc, #456]	; (402f9c <udc_process_setup+0x238>)
  402dd2:	785b      	ldrb	r3, [r3, #1]
  402dd4:	2b00      	cmp	r3, #0
  402dd6:	f000 80a4 	beq.w	402f22 <udc_process_setup+0x1be>
	return false;
  402dda:	2300      	movs	r3, #0
  402ddc:	e193      	b.n	403106 <udc_process_setup+0x3a2>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
  402dde:	2a02      	cmp	r2, #2
  402de0:	d1d5      	bne.n	402d8e <udc_process_setup+0x2a>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
  402de2:	2102      	movs	r1, #2
  402de4:	486e      	ldr	r0, [pc, #440]	; (402fa0 <udc_process_setup+0x23c>)
  402de6:	4b6f      	ldr	r3, [pc, #444]	; (402fa4 <udc_process_setup+0x240>)
  402de8:	4798      	blx	r3
  402dea:	e0c4      	b.n	402f76 <udc_process_setup+0x212>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  402dec:	4b6b      	ldr	r3, [pc, #428]	; (402f9c <udc_process_setup+0x238>)
  402dee:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
  402df0:	0a13      	lsrs	r3, r2, #8
  402df2:	3b01      	subs	r3, #1
  402df4:	2b0e      	cmp	r3, #14
  402df6:	f200 8183 	bhi.w	403100 <udc_process_setup+0x39c>
  402dfa:	e8df f013 	tbh	[pc, r3, lsl #1]
  402dfe:	000f      	.short	0x000f
  402e00:	0037001d 	.word	0x0037001d
  402e04:	01810181 	.word	0x01810181
  402e08:	01810181 	.word	0x01810181
  402e0c:	01810181 	.word	0x01810181
  402e10:	01810181 	.word	0x01810181
  402e14:	01810181 	.word	0x01810181
  402e18:	002f0181 	.word	0x002f0181
				(uint8_t *) udc_config.confdev_lsfs,
  402e1c:	4b62      	ldr	r3, [pc, #392]	; (402fa8 <udc_process_setup+0x244>)
  402e1e:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
  402e20:	7801      	ldrb	r1, [r0, #0]
  402e22:	4b60      	ldr	r3, [pc, #384]	; (402fa4 <udc_process_setup+0x240>)
  402e24:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
  402e26:	4b5d      	ldr	r3, [pc, #372]	; (402f9c <udc_process_setup+0x238>)
  402e28:	88da      	ldrh	r2, [r3, #6]
  402e2a:	899b      	ldrh	r3, [r3, #12]
  402e2c:	4293      	cmp	r3, r2
  402e2e:	f240 80a2 	bls.w	402f76 <udc_process_setup+0x212>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
  402e32:	4b5a      	ldr	r3, [pc, #360]	; (402f9c <udc_process_setup+0x238>)
  402e34:	819a      	strh	r2, [r3, #12]
  402e36:	e09e      	b.n	402f76 <udc_process_setup+0x212>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  402e38:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
  402e3a:	4b5b      	ldr	r3, [pc, #364]	; (402fa8 <udc_process_setup+0x244>)
  402e3c:	681b      	ldr	r3, [r3, #0]
  402e3e:	7c5b      	ldrb	r3, [r3, #17]
  402e40:	4293      	cmp	r3, r2
  402e42:	d9a4      	bls.n	402d8e <udc_process_setup+0x2a>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
  402e44:	4b58      	ldr	r3, [pc, #352]	; (402fa8 <udc_process_setup+0x244>)
  402e46:	685b      	ldr	r3, [r3, #4]
  402e48:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
  402e4c:	8841      	ldrh	r1, [r0, #2]
  402e4e:	4b55      	ldr	r3, [pc, #340]	; (402fa4 <udc_process_setup+0x240>)
  402e50:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
  402e52:	4b52      	ldr	r3, [pc, #328]	; (402f9c <udc_process_setup+0x238>)
  402e54:	689b      	ldr	r3, [r3, #8]
  402e56:	2202      	movs	r2, #2
  402e58:	705a      	strb	r2, [r3, #1]
  402e5a:	e7e4      	b.n	402e26 <udc_process_setup+0xc2>
		if (udc_config.conf_bos == NULL) {
  402e5c:	4b52      	ldr	r3, [pc, #328]	; (402fa8 <udc_process_setup+0x244>)
  402e5e:	6898      	ldr	r0, [r3, #8]
  402e60:	2800      	cmp	r0, #0
  402e62:	d094      	beq.n	402d8e <udc_process_setup+0x2a>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
  402e64:	8841      	ldrh	r1, [r0, #2]
  402e66:	4b4f      	ldr	r3, [pc, #316]	; (402fa4 <udc_process_setup+0x240>)
  402e68:	4798      	blx	r3
  402e6a:	e7dc      	b.n	402e26 <udc_process_setup+0xc2>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
  402e6c:	b2d2      	uxtb	r2, r2
  402e6e:	2a03      	cmp	r2, #3
  402e70:	d80d      	bhi.n	402e8e <udc_process_setup+0x12a>
  402e72:	e8df f012 	tbh	[pc, r2, lsl #1]
  402e76:	0007      	.short	0x0007
  402e78:	01930011 	.word	0x01930011
  402e7c:	0004      	.short	0x0004
		str_length = USB_DEVICE_SERIAL_NAME_SIZE;
  402e7e:	210c      	movs	r1, #12
		str = udc_get_string_serial_name();
  402e80:	4a4a      	ldr	r2, [pc, #296]	; (402fac <udc_process_setup+0x248>)
  402e82:	e00b      	b.n	402e9c <udc_process_setup+0x138>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
  402e84:	2104      	movs	r1, #4
  402e86:	484a      	ldr	r0, [pc, #296]	; (402fb0 <udc_process_setup+0x24c>)
  402e88:	4b46      	ldr	r3, [pc, #280]	; (402fa4 <udc_process_setup+0x240>)
  402e8a:	4798      	blx	r3
  402e8c:	e7cb      	b.n	402e26 <udc_process_setup+0xc2>
		if (UDC_GET_EXTRA_STRING()) {
  402e8e:	4b49      	ldr	r3, [pc, #292]	; (402fb4 <udc_process_setup+0x250>)
  402e90:	4798      	blx	r3
  402e92:	2800      	cmp	r0, #0
  402e94:	d1c7      	bne.n	402e26 <udc_process_setup+0xc2>
  402e96:	e773      	b.n	402d80 <udc_process_setup+0x1c>
		str = udc_string_manufacturer_name;
  402e98:	4a47      	ldr	r2, [pc, #284]	; (402fb8 <udc_process_setup+0x254>)
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
  402e9a:	2109      	movs	r1, #9
  402e9c:	3a01      	subs	r2, #1
  402e9e:	4847      	ldr	r0, [pc, #284]	; (402fbc <udc_process_setup+0x258>)
  402ea0:	2300      	movs	r3, #0
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
  402ea2:	f812 4f01 	ldrb.w	r4, [r2, #1]!
  402ea6:	f820 4f02 	strh.w	r4, [r0, #2]!
		for(i = 0; i < str_length; i++) {
  402eaa:	3301      	adds	r3, #1
  402eac:	b2db      	uxtb	r3, r3
  402eae:	428b      	cmp	r3, r1
  402eb0:	d3f7      	bcc.n	402ea2 <udc_process_setup+0x13e>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
  402eb2:	0049      	lsls	r1, r1, #1
  402eb4:	3102      	adds	r1, #2
  402eb6:	4841      	ldr	r0, [pc, #260]	; (402fbc <udc_process_setup+0x258>)
  402eb8:	7001      	strb	r1, [r0, #0]
		udd_set_setup_payload(
  402eba:	4b3a      	ldr	r3, [pc, #232]	; (402fa4 <udc_process_setup+0x240>)
  402ebc:	4798      	blx	r3
  402ebe:	e7b2      	b.n	402e26 <udc_process_setup+0xc2>
	if (udd_g_ctrlreq.req.wLength != 1) {
  402ec0:	2a01      	cmp	r2, #1
  402ec2:	f47f af64 	bne.w	402d8e <udc_process_setup+0x2a>
	udd_set_setup_payload(&udc_num_configuration,1);
  402ec6:	2101      	movs	r1, #1
  402ec8:	483d      	ldr	r0, [pc, #244]	; (402fc0 <udc_process_setup+0x25c>)
  402eca:	4b36      	ldr	r3, [pc, #216]	; (402fa4 <udc_process_setup+0x240>)
  402ecc:	4798      	blx	r3
  402ece:	e052      	b.n	402f76 <udc_process_setup+0x212>
			switch (udd_g_ctrlreq.req.bRequest) {
  402ed0:	4932      	ldr	r1, [pc, #200]	; (402f9c <udc_process_setup+0x238>)
  402ed2:	7849      	ldrb	r1, [r1, #1]
  402ed4:	290a      	cmp	r1, #10
  402ed6:	f47f af79 	bne.w	402dcc <udc_process_setup+0x68>
	if (udd_g_ctrlreq.req.wLength != 1) {
  402eda:	2a01      	cmp	r2, #1
  402edc:	f040 80cf 	bne.w	40307e <udc_process_setup+0x31a>
	if (!udc_num_configuration) {
  402ee0:	4b37      	ldr	r3, [pc, #220]	; (402fc0 <udc_process_setup+0x25c>)
  402ee2:	781b      	ldrb	r3, [r3, #0]
  402ee4:	2b00      	cmp	r3, #0
  402ee6:	f000 80ca 	beq.w	40307e <udc_process_setup+0x31a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  402eea:	4b2c      	ldr	r3, [pc, #176]	; (402f9c <udc_process_setup+0x238>)
  402eec:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  402eee:	4b35      	ldr	r3, [pc, #212]	; (402fc4 <udc_process_setup+0x260>)
  402ef0:	681d      	ldr	r5, [r3, #0]
  402ef2:	682b      	ldr	r3, [r5, #0]
  402ef4:	791b      	ldrb	r3, [r3, #4]
  402ef6:	42a3      	cmp	r3, r4
  402ef8:	f240 80c1 	bls.w	40307e <udc_process_setup+0x31a>
	if (!udc_update_iface_desc(iface_num, 0)) {
  402efc:	2100      	movs	r1, #0
  402efe:	4620      	mov	r0, r4
  402f00:	4b31      	ldr	r3, [pc, #196]	; (402fc8 <udc_process_setup+0x264>)
  402f02:	4798      	blx	r3
  402f04:	2800      	cmp	r0, #0
  402f06:	f43f af3b 	beq.w	402d80 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  402f0a:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
  402f0c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  402f10:	68db      	ldr	r3, [r3, #12]
  402f12:	4798      	blx	r3
  402f14:	4b2d      	ldr	r3, [pc, #180]	; (402fcc <udc_process_setup+0x268>)
  402f16:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
  402f18:	2101      	movs	r1, #1
  402f1a:	4618      	mov	r0, r3
  402f1c:	4b21      	ldr	r3, [pc, #132]	; (402fa4 <udc_process_setup+0x240>)
  402f1e:	4798      	blx	r3
  402f20:	e029      	b.n	402f76 <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
  402f22:	2a02      	cmp	r2, #2
  402f24:	f47f af33 	bne.w	402d8e <udc_process_setup+0x2a>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
  402f28:	4b1c      	ldr	r3, [pc, #112]	; (402f9c <udc_process_setup+0x238>)
  402f2a:	7918      	ldrb	r0, [r3, #4]
  402f2c:	4b28      	ldr	r3, [pc, #160]	; (402fd0 <udc_process_setup+0x26c>)
  402f2e:	4798      	blx	r3
  402f30:	4b28      	ldr	r3, [pc, #160]	; (402fd4 <udc_process_setup+0x270>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
  402f32:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
  402f34:	2102      	movs	r1, #2
  402f36:	4618      	mov	r0, r3
  402f38:	4b1a      	ldr	r3, [pc, #104]	; (402fa4 <udc_process_setup+0x240>)
  402f3a:	4798      	blx	r3
  402f3c:	e01b      	b.n	402f76 <udc_process_setup+0x212>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  402f3e:	f013 031f 	ands.w	r3, r3, #31
  402f42:	f040 8085 	bne.w	403050 <udc_process_setup+0x2ec>
			switch (udd_g_ctrlreq.req.bRequest) {
  402f46:	4a15      	ldr	r2, [pc, #84]	; (402f9c <udc_process_setup+0x238>)
  402f48:	7852      	ldrb	r2, [r2, #1]
  402f4a:	3a01      	subs	r2, #1
  402f4c:	2a08      	cmp	r2, #8
  402f4e:	d87f      	bhi.n	403050 <udc_process_setup+0x2ec>
  402f50:	e8df f012 	tbh	[pc, r2, lsl #1]
  402f54:	007e0013 	.word	0x007e0013
  402f58:	007e00d8 	.word	0x007e00d8
  402f5c:	007e0009 	.word	0x007e0009
  402f60:	007e007e 	.word	0x007e007e
  402f64:	0044      	.short	0x0044
	if (udd_g_ctrlreq.req.wLength) {
  402f66:	4b0d      	ldr	r3, [pc, #52]	; (402f9c <udc_process_setup+0x238>)
  402f68:	88db      	ldrh	r3, [r3, #6]
  402f6a:	2b00      	cmp	r3, #0
  402f6c:	f47f af0f 	bne.w	402d8e <udc_process_setup+0x2a>
	udd_g_ctrlreq.callback = udc_valid_address;
  402f70:	4a19      	ldr	r2, [pc, #100]	; (402fd8 <udc_process_setup+0x274>)
  402f72:	4b0a      	ldr	r3, [pc, #40]	; (402f9c <udc_process_setup+0x238>)
  402f74:	611a      	str	r2, [r3, #16]
			return true;
  402f76:	2301      	movs	r3, #1
  402f78:	e711      	b.n	402d9e <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
  402f7a:	4b08      	ldr	r3, [pc, #32]	; (402f9c <udc_process_setup+0x238>)
  402f7c:	88db      	ldrh	r3, [r3, #6]
  402f7e:	2b00      	cmp	r3, #0
  402f80:	f47f af05 	bne.w	402d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
  402f84:	4b05      	ldr	r3, [pc, #20]	; (402f9c <udc_process_setup+0x238>)
  402f86:	885b      	ldrh	r3, [r3, #2]
  402f88:	2b01      	cmp	r3, #1
  402f8a:	f47f af00 	bne.w	402d8e <udc_process_setup+0x2a>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
  402f8e:	4a04      	ldr	r2, [pc, #16]	; (402fa0 <udc_process_setup+0x23c>)
  402f90:	8813      	ldrh	r3, [r2, #0]
  402f92:	f023 0302 	bic.w	r3, r3, #2
  402f96:	8013      	strh	r3, [r2, #0]
  402f98:	e7ed      	b.n	402f76 <udc_process_setup+0x212>
  402f9a:	bf00      	nop
  402f9c:	2001ab44 	.word	0x2001ab44
  402fa0:	2001a1d2 	.word	0x2001a1d2
  402fa4:	00404ff1 	.word	0x00404ff1
  402fa8:	200000e0 	.word	0x200000e0
  402fac:	0040b5c0 	.word	0x0040b5c0
  402fb0:	200001e0 	.word	0x200001e0
  402fb4:	004082a1 	.word	0x004082a1
  402fb8:	200001e4 	.word	0x200001e4
  402fbc:	200001c4 	.word	0x200001c4
  402fc0:	2001a1dc 	.word	0x2001a1dc
  402fc4:	2001a1e0 	.word	0x2001a1e0
  402fc8:	00402b95 	.word	0x00402b95
  402fcc:	2001a1d8 	.word	0x2001a1d8
  402fd0:	004051ad 	.word	0x004051ad
  402fd4:	2001a1d4 	.word	0x2001a1d4
  402fd8:	00402b7d 	.word	0x00402b7d
	if (udd_g_ctrlreq.req.wLength) {
  402fdc:	4b71      	ldr	r3, [pc, #452]	; (4031a4 <udc_process_setup+0x440>)
  402fde:	88db      	ldrh	r3, [r3, #6]
  402fe0:	2b00      	cmp	r3, #0
  402fe2:	f47f aed4 	bne.w	402d8e <udc_process_setup+0x2a>
	if (!udd_getaddress()) {
  402fe6:	4b70      	ldr	r3, [pc, #448]	; (4031a8 <udc_process_setup+0x444>)
  402fe8:	4798      	blx	r3
  402fea:	2800      	cmp	r0, #0
  402fec:	f43f aec8 	beq.w	402d80 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  402ff0:	4b6c      	ldr	r3, [pc, #432]	; (4031a4 <udc_process_setup+0x440>)
  402ff2:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
  402ff4:	4b6d      	ldr	r3, [pc, #436]	; (4031ac <udc_process_setup+0x448>)
  402ff6:	681b      	ldr	r3, [r3, #0]
  402ff8:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  402ffa:	429a      	cmp	r2, r3
  402ffc:	f73f aec0 	bgt.w	402d80 <udc_process_setup+0x1c>
	udc_reset();
  403000:	4b6b      	ldr	r3, [pc, #428]	; (4031b0 <udc_process_setup+0x44c>)
  403002:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
  403004:	4b67      	ldr	r3, [pc, #412]	; (4031a4 <udc_process_setup+0x440>)
  403006:	789b      	ldrb	r3, [r3, #2]
  403008:	4a6a      	ldr	r2, [pc, #424]	; (4031b4 <udc_process_setup+0x450>)
  40300a:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
  40300c:	2b00      	cmp	r3, #0
  40300e:	d0b2      	beq.n	402f76 <udc_process_setup+0x212>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
  403010:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
  403014:	3b01      	subs	r3, #1
  403016:	4a65      	ldr	r2, [pc, #404]	; (4031ac <udc_process_setup+0x448>)
  403018:	6852      	ldr	r2, [r2, #4]
  40301a:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
  40301e:	4966      	ldr	r1, [pc, #408]	; (4031b8 <udc_process_setup+0x454>)
  403020:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403022:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
  403026:	791b      	ldrb	r3, [r3, #4]
  403028:	2b00      	cmp	r3, #0
  40302a:	d0a4      	beq.n	402f76 <udc_process_setup+0x212>
  40302c:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
  40302e:	4626      	mov	r6, r4
  403030:	4d62      	ldr	r5, [pc, #392]	; (4031bc <udc_process_setup+0x458>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403032:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
  403034:	4631      	mov	r1, r6
  403036:	4620      	mov	r0, r4
  403038:	47a8      	blx	r5
  40303a:	2800      	cmp	r0, #0
  40303c:	f43f aea0 	beq.w	402d80 <udc_process_setup+0x1c>
			iface_num++) {
  403040:	3401      	adds	r4, #1
  403042:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403044:	683b      	ldr	r3, [r7, #0]
  403046:	681b      	ldr	r3, [r3, #0]
  403048:	791b      	ldrb	r3, [r3, #4]
  40304a:	42a3      	cmp	r3, r4
  40304c:	d8f2      	bhi.n	403034 <udc_process_setup+0x2d0>
  40304e:	e792      	b.n	402f76 <udc_process_setup+0x212>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  403050:	2b01      	cmp	r3, #1
  403052:	d00a      	beq.n	40306a <udc_process_setup+0x306>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  403054:	2b02      	cmp	r3, #2
  403056:	f47f ae93 	bne.w	402d80 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  40305a:	4b52      	ldr	r3, [pc, #328]	; (4031a4 <udc_process_setup+0x440>)
  40305c:	785b      	ldrb	r3, [r3, #1]
  40305e:	2b01      	cmp	r3, #1
  403060:	d02b      	beq.n	4030ba <udc_process_setup+0x356>
  403062:	2b03      	cmp	r3, #3
  403064:	d039      	beq.n	4030da <udc_process_setup+0x376>
	return false;
  403066:	2300      	movs	r3, #0
  403068:	e04d      	b.n	403106 <udc_process_setup+0x3a2>
			switch (udd_g_ctrlreq.req.bRequest) {
  40306a:	4a4e      	ldr	r2, [pc, #312]	; (4031a4 <udc_process_setup+0x440>)
  40306c:	7852      	ldrb	r2, [r2, #1]
  40306e:	2a0b      	cmp	r2, #11
  403070:	d1f0      	bne.n	403054 <udc_process_setup+0x2f0>
	if (udd_g_ctrlreq.req.wLength) {
  403072:	4b4c      	ldr	r3, [pc, #304]	; (4031a4 <udc_process_setup+0x440>)
  403074:	88db      	ldrh	r3, [r3, #6]
  403076:	b913      	cbnz	r3, 40307e <udc_process_setup+0x31a>
	if (!udc_num_configuration) {
  403078:	4b4e      	ldr	r3, [pc, #312]	; (4031b4 <udc_process_setup+0x450>)
  40307a:	781b      	ldrb	r3, [r3, #0]
  40307c:	b973      	cbnz	r3, 40309c <udc_process_setup+0x338>
	if (0 == udc_num_configuration) {
  40307e:	4b4d      	ldr	r3, [pc, #308]	; (4031b4 <udc_process_setup+0x450>)
  403080:	781b      	ldrb	r3, [r3, #0]
  403082:	2b00      	cmp	r3, #0
  403084:	f000 8088 	beq.w	403198 <udc_process_setup+0x434>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  403088:	4b46      	ldr	r3, [pc, #280]	; (4031a4 <udc_process_setup+0x440>)
  40308a:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  40308c:	4b4a      	ldr	r3, [pc, #296]	; (4031b8 <udc_process_setup+0x454>)
  40308e:	681d      	ldr	r5, [r3, #0]
  403090:	682b      	ldr	r3, [r5, #0]
  403092:	791b      	ldrb	r3, [r3, #4]
  403094:	42a3      	cmp	r3, r4
  403096:	d83a      	bhi.n	40310e <udc_process_setup+0x3aa>
	return false;
  403098:	2300      	movs	r3, #0
  40309a:	e680      	b.n	402d9e <udc_process_setup+0x3a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  40309c:	4b41      	ldr	r3, [pc, #260]	; (4031a4 <udc_process_setup+0x440>)
  40309e:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
  4030a0:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
  4030a2:	4620      	mov	r0, r4
  4030a4:	4b46      	ldr	r3, [pc, #280]	; (4031c0 <udc_process_setup+0x45c>)
  4030a6:	4798      	blx	r3
  4030a8:	2800      	cmp	r0, #0
  4030aa:	f43f ae69 	beq.w	402d80 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
  4030ae:	b2e9      	uxtb	r1, r5
  4030b0:	4620      	mov	r0, r4
  4030b2:	4b42      	ldr	r3, [pc, #264]	; (4031bc <udc_process_setup+0x458>)
  4030b4:	4798      	blx	r3
  4030b6:	4603      	mov	r3, r0
  4030b8:	e025      	b.n	403106 <udc_process_setup+0x3a2>
	if (udd_g_ctrlreq.req.wLength) {
  4030ba:	4b3a      	ldr	r3, [pc, #232]	; (4031a4 <udc_process_setup+0x440>)
  4030bc:	88db      	ldrh	r3, [r3, #6]
  4030be:	2b00      	cmp	r3, #0
  4030c0:	f47f ae65 	bne.w	402d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  4030c4:	4b37      	ldr	r3, [pc, #220]	; (4031a4 <udc_process_setup+0x440>)
  4030c6:	885b      	ldrh	r3, [r3, #2]
  4030c8:	2b00      	cmp	r3, #0
  4030ca:	f47f ae60 	bne.w	402d8e <udc_process_setup+0x2a>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  4030ce:	4b35      	ldr	r3, [pc, #212]	; (4031a4 <udc_process_setup+0x440>)
  4030d0:	7918      	ldrb	r0, [r3, #4]
  4030d2:	4b3c      	ldr	r3, [pc, #240]	; (4031c4 <udc_process_setup+0x460>)
  4030d4:	4798      	blx	r3
  4030d6:	4603      	mov	r3, r0
  4030d8:	e015      	b.n	403106 <udc_process_setup+0x3a2>
	if (udd_g_ctrlreq.req.wLength) {
  4030da:	4b32      	ldr	r3, [pc, #200]	; (4031a4 <udc_process_setup+0x440>)
  4030dc:	88db      	ldrh	r3, [r3, #6]
  4030de:	2b00      	cmp	r3, #0
  4030e0:	f47f ae55 	bne.w	402d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  4030e4:	4b2f      	ldr	r3, [pc, #188]	; (4031a4 <udc_process_setup+0x440>)
  4030e6:	885b      	ldrh	r3, [r3, #2]
  4030e8:	2b00      	cmp	r3, #0
  4030ea:	f47f ae50 	bne.w	402d8e <udc_process_setup+0x2a>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
  4030ee:	4c2d      	ldr	r4, [pc, #180]	; (4031a4 <udc_process_setup+0x440>)
  4030f0:	7920      	ldrb	r0, [r4, #4]
  4030f2:	4b35      	ldr	r3, [pc, #212]	; (4031c8 <udc_process_setup+0x464>)
  4030f4:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  4030f6:	7920      	ldrb	r0, [r4, #4]
  4030f8:	4b34      	ldr	r3, [pc, #208]	; (4031cc <udc_process_setup+0x468>)
  4030fa:	4798      	blx	r3
  4030fc:	4603      	mov	r3, r0
  4030fe:	e002      	b.n	403106 <udc_process_setup+0x3a2>
		return false;
  403100:	2300      	movs	r3, #0
  403102:	e000      	b.n	403106 <udc_process_setup+0x3a2>
				return udc_req_std_dev_set_feature();
  403104:	2300      	movs	r3, #0
		if (udc_reqstd()) {
  403106:	2b00      	cmp	r3, #0
  403108:	f47f ae49 	bne.w	402d9e <udc_process_setup+0x3a>
  40310c:	e638      	b.n	402d80 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
  40310e:	2100      	movs	r1, #0
  403110:	4620      	mov	r0, r4
  403112:	4b2f      	ldr	r3, [pc, #188]	; (4031d0 <udc_process_setup+0x46c>)
  403114:	4798      	blx	r3
  403116:	2800      	cmp	r0, #0
  403118:	f43f ae39 	beq.w	402d8e <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  40311c:	686b      	ldr	r3, [r5, #4]
  40311e:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  403122:	68eb      	ldr	r3, [r5, #12]
  403124:	4798      	blx	r3
  403126:	4601      	mov	r1, r0
  403128:	4620      	mov	r0, r4
  40312a:	4b29      	ldr	r3, [pc, #164]	; (4031d0 <udc_process_setup+0x46c>)
  40312c:	4798      	blx	r3
  40312e:	2800      	cmp	r0, #0
  403130:	f43f ae2d 	beq.w	402d8e <udc_process_setup+0x2a>
	return udi_api->setup();
  403134:	68ab      	ldr	r3, [r5, #8]
  403136:	4798      	blx	r3
		if (udc_req_iface()) {
  403138:	4603      	mov	r3, r0
  40313a:	2800      	cmp	r0, #0
  40313c:	f47f ae2f 	bne.w	402d9e <udc_process_setup+0x3a>
  403140:	e625      	b.n	402d8e <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
  403142:	4b1c      	ldr	r3, [pc, #112]	; (4031b4 <udc_process_setup+0x450>)
  403144:	781b      	ldrb	r3, [r3, #0]
  403146:	b30b      	cbz	r3, 40318c <udc_process_setup+0x428>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403148:	4b1b      	ldr	r3, [pc, #108]	; (4031b8 <udc_process_setup+0x454>)
  40314a:	681a      	ldr	r2, [r3, #0]
  40314c:	6813      	ldr	r3, [r2, #0]
  40314e:	791b      	ldrb	r3, [r3, #4]
  403150:	b1f3      	cbz	r3, 403190 <udc_process_setup+0x42c>
  403152:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  403154:	4e1e      	ldr	r6, [pc, #120]	; (4031d0 <udc_process_setup+0x46c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403156:	4f18      	ldr	r7, [pc, #96]	; (4031b8 <udc_process_setup+0x454>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
  403158:	6853      	ldr	r3, [r2, #4]
  40315a:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  40315e:	68eb      	ldr	r3, [r5, #12]
  403160:	4798      	blx	r3
  403162:	4601      	mov	r1, r0
  403164:	4620      	mov	r0, r4
  403166:	47b0      	blx	r6
  403168:	4603      	mov	r3, r0
  40316a:	2800      	cmp	r0, #0
  40316c:	f43f ae17 	beq.w	402d9e <udc_process_setup+0x3a>
		if (udi_api->setup()) {
  403170:	68ab      	ldr	r3, [r5, #8]
  403172:	4798      	blx	r3
  403174:	4603      	mov	r3, r0
  403176:	2800      	cmp	r0, #0
  403178:	f47f ae11 	bne.w	402d9e <udc_process_setup+0x3a>
			iface_num++) {
  40317c:	3401      	adds	r4, #1
  40317e:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  403180:	683a      	ldr	r2, [r7, #0]
  403182:	6811      	ldr	r1, [r2, #0]
  403184:	7909      	ldrb	r1, [r1, #4]
  403186:	42a1      	cmp	r1, r4
  403188:	d8e6      	bhi.n	403158 <udc_process_setup+0x3f4>
  40318a:	e608      	b.n	402d9e <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
  40318c:	2300      	movs	r3, #0
  40318e:	e606      	b.n	402d9e <udc_process_setup+0x3a>
	return false;
  403190:	2300      	movs	r3, #0
  403192:	e604      	b.n	402d9e <udc_process_setup+0x3a>
			return false; // Error from USB host
  403194:	2300      	movs	r3, #0
  403196:	e602      	b.n	402d9e <udc_process_setup+0x3a>
	return false;
  403198:	2300      	movs	r3, #0
  40319a:	e600      	b.n	402d9e <udc_process_setup+0x3a>
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
  40319c:	210b      	movs	r1, #11
		str = udc_string_product_name;
  40319e:	4a0d      	ldr	r2, [pc, #52]	; (4031d4 <udc_process_setup+0x470>)
  4031a0:	e67c      	b.n	402e9c <udc_process_setup+0x138>
  4031a2:	bf00      	nop
  4031a4:	2001ab44 	.word	0x2001ab44
  4031a8:	00404fc1 	.word	0x00404fc1
  4031ac:	200000e0 	.word	0x200000e0
  4031b0:	00402cdd 	.word	0x00402cdd
  4031b4:	2001a1dc 	.word	0x2001a1dc
  4031b8:	2001a1e0 	.word	0x2001a1e0
  4031bc:	00402c75 	.word	0x00402c75
  4031c0:	00402c09 	.word	0x00402c09
  4031c4:	0040531d 	.word	0x0040531d
  4031c8:	00405649 	.word	0x00405649
  4031cc:	004051ed 	.word	0x004051ed
  4031d0:	00402b95 	.word	0x00402b95
  4031d4:	200001f0 	.word	0x200001f0

004031d8 <_read>:
  4031d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4031dc:	b980      	cbnz	r0, 403200 <_read+0x28>
  4031de:	460c      	mov	r4, r1
  4031e0:	4690      	mov	r8, r2
  4031e2:	2a00      	cmp	r2, #0
  4031e4:	dd0f      	ble.n	403206 <_read+0x2e>
  4031e6:	188f      	adds	r7, r1, r2
  4031e8:	4e08      	ldr	r6, [pc, #32]	; (40320c <_read+0x34>)
  4031ea:	4d09      	ldr	r5, [pc, #36]	; (403210 <_read+0x38>)
  4031ec:	6830      	ldr	r0, [r6, #0]
  4031ee:	4621      	mov	r1, r4
  4031f0:	682b      	ldr	r3, [r5, #0]
  4031f2:	4798      	blx	r3
  4031f4:	3401      	adds	r4, #1
  4031f6:	42bc      	cmp	r4, r7
  4031f8:	d1f8      	bne.n	4031ec <_read+0x14>
  4031fa:	4640      	mov	r0, r8
  4031fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403200:	f04f 38ff 	mov.w	r8, #4294967295
  403204:	e7f9      	b.n	4031fa <_read+0x22>
  403206:	4680      	mov	r8, r0
  403208:	e7f7      	b.n	4031fa <_read+0x22>
  40320a:	bf00      	nop
  40320c:	2001ab40 	.word	0x2001ab40
  403210:	2001ab38 	.word	0x2001ab38

00403214 <_write>:
  403214:	3801      	subs	r0, #1
  403216:	2802      	cmp	r0, #2
  403218:	d815      	bhi.n	403246 <_write+0x32>
  40321a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40321e:	460e      	mov	r6, r1
  403220:	4614      	mov	r4, r2
  403222:	b19a      	cbz	r2, 40324c <_write+0x38>
  403224:	460d      	mov	r5, r1
  403226:	f8df 8038 	ldr.w	r8, [pc, #56]	; 403260 <_write+0x4c>
  40322a:	4f0c      	ldr	r7, [pc, #48]	; (40325c <_write+0x48>)
  40322c:	f8d8 0000 	ldr.w	r0, [r8]
  403230:	f815 1b01 	ldrb.w	r1, [r5], #1
  403234:	683b      	ldr	r3, [r7, #0]
  403236:	4798      	blx	r3
  403238:	2800      	cmp	r0, #0
  40323a:	db0a      	blt.n	403252 <_write+0x3e>
  40323c:	1ba8      	subs	r0, r5, r6
  40323e:	3c01      	subs	r4, #1
  403240:	d1f4      	bne.n	40322c <_write+0x18>
  403242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403246:	f04f 30ff 	mov.w	r0, #4294967295
  40324a:	4770      	bx	lr
  40324c:	4610      	mov	r0, r2
  40324e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403252:	f04f 30ff 	mov.w	r0, #4294967295
  403256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40325a:	bf00      	nop
  40325c:	2001ab3c 	.word	0x2001ab3c
  403260:	2001ab40 	.word	0x2001ab40

00403264 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
  403264:	b538      	push	{r3, r4, r5, lr}

#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	WDT->WDT_MR = WDT_MR_WDDIS;
  403266:	f44f 4400 	mov.w	r4, #32768	; 0x8000
  40326a:	4b4e      	ldr	r3, [pc, #312]	; (4033a4 <system_board_init+0x140>)
  40326c:	605c      	str	r4, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40326e:	200b      	movs	r0, #11
  403270:	4d4d      	ldr	r5, [pc, #308]	; (4033a8 <system_board_init+0x144>)
  403272:	47a8      	blx	r5
  403274:	200c      	movs	r0, #12
  403276:	47a8      	blx	r5
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  403278:	4b4c      	ldr	r3, [pc, #304]	; (4033ac <system_board_init+0x148>)
  40327a:	2240      	movs	r2, #64	; 0x40
  40327c:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40327e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  403282:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  403284:	2204      	movs	r2, #4
  403286:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  403288:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40328c:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40328e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403292:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403294:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403296:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40329a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40329c:	f022 0204 	bic.w	r2, r2, #4
  4032a0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4032a2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4032a4:	f022 0204 	bic.w	r2, r2, #4
  4032a8:	675a      	str	r2, [r3, #116]	; 0x74
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4032aa:	2202      	movs	r2, #2
  4032ac:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4032ae:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4032b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4032b4:	493e      	ldr	r1, [pc, #248]	; (4033b0 <system_board_init+0x14c>)
  4032b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4032ba:	630a      	str	r2, [r1, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4032bc:	610a      	str	r2, [r1, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4032be:	f8c1 20a0 	str.w	r2, [r1, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4032c2:	630c      	str	r4, [r1, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4032c4:	610c      	str	r4, [r1, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4032c6:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
		base->PIO_PUDR = mask;
  4032ca:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4032ce:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4032d0:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4032d4:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4032d6:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4032d8:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4032dc:	6f18      	ldr	r0, [r3, #112]	; 0x70
  4032de:	4308      	orrs	r0, r1
  4032e0:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4032e2:	6f58      	ldr	r0, [r3, #116]	; 0x74
  4032e4:	f020 50c0 	bic.w	r0, r0, #402653184	; 0x18000000
  4032e8:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4032ea:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  4032ec:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4032f0:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4032f2:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4032f6:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4032f8:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4032fa:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4032fe:	6f18      	ldr	r0, [r3, #112]	; 0x70
  403300:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
  403304:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403306:	6f58      	ldr	r0, [r3, #116]	; 0x74
  403308:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
  40330c:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40330e:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  403310:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403312:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403316:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403318:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40331a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40331e:	6f19      	ldr	r1, [r3, #112]	; 0x70
  403320:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403324:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403326:	6f59      	ldr	r1, [r3, #116]	; 0x74
  403328:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40332c:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40332e:	605a      	str	r2, [r3, #4]
		base->PIO_PUDR = mask;
  403330:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  403334:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403336:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40333a:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40333c:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40333e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  403342:	6f19      	ldr	r1, [r3, #112]	; 0x70
  403344:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
  403348:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40334a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40334c:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
  403350:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  403352:	605a      	str	r2, [r3, #4]
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  403354:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  403358:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40335a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40335e:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  403360:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403364:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403366:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403368:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40336c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40336e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
  403372:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403374:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  403376:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
  40337a:	675a      	str	r2, [r3, #116]	; 0x74
		base->PIO_PUDR = mask;
  40337c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  403380:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403382:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403386:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403388:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40338a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40338e:	6f19      	ldr	r1, [r3, #112]	; 0x70
  403390:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  403394:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403396:	6f59      	ldr	r1, [r3, #116]	; 0x74
  403398:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  40339c:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40339e:	605a      	str	r2, [r3, #4]
  4033a0:	bd38      	pop	{r3, r4, r5, pc}
  4033a2:	bf00      	nop
  4033a4:	400e1450 	.word	0x400e1450
  4033a8:	0040384d 	.word	0x0040384d
  4033ac:	400e0e00 	.word	0x400e0e00
  4033b0:	400e1000 	.word	0x400e1000

004033b4 <flexcom_enable>:
  4033b4:	4b54      	ldr	r3, [pc, #336]	; (403508 <flexcom_enable+0x154>)
  4033b6:	781b      	ldrb	r3, [r3, #0]
  4033b8:	2bff      	cmp	r3, #255	; 0xff
  4033ba:	d034      	beq.n	403426 <flexcom_enable+0x72>
  4033bc:	b500      	push	{lr}
  4033be:	b083      	sub	sp, #12
  4033c0:	f3ef 8310 	mrs	r3, PRIMASK
  4033c4:	fab3 f383 	clz	r3, r3
  4033c8:	095b      	lsrs	r3, r3, #5
  4033ca:	9301      	str	r3, [sp, #4]
  4033cc:	b672      	cpsid	i
  4033ce:	f3bf 8f5f 	dmb	sy
  4033d2:	2200      	movs	r2, #0
  4033d4:	4b4d      	ldr	r3, [pc, #308]	; (40350c <flexcom_enable+0x158>)
  4033d6:	701a      	strb	r2, [r3, #0]
  4033d8:	9901      	ldr	r1, [sp, #4]
  4033da:	4a4b      	ldr	r2, [pc, #300]	; (403508 <flexcom_enable+0x154>)
  4033dc:	7813      	ldrb	r3, [r2, #0]
  4033de:	3301      	adds	r3, #1
  4033e0:	7013      	strb	r3, [r2, #0]
  4033e2:	b129      	cbz	r1, 4033f0 <flexcom_enable+0x3c>
  4033e4:	2201      	movs	r2, #1
  4033e6:	4b49      	ldr	r3, [pc, #292]	; (40350c <flexcom_enable+0x158>)
  4033e8:	701a      	strb	r2, [r3, #0]
  4033ea:	f3bf 8f5f 	dmb	sy
  4033ee:	b662      	cpsie	i
  4033f0:	4a47      	ldr	r2, [pc, #284]	; (403510 <flexcom_enable+0x15c>)
  4033f2:	4290      	cmp	r0, r2
  4033f4:	d018      	beq.n	403428 <flexcom_enable+0x74>
  4033f6:	4a47      	ldr	r2, [pc, #284]	; (403514 <flexcom_enable+0x160>)
  4033f8:	4290      	cmp	r0, r2
  4033fa:	d023      	beq.n	403444 <flexcom_enable+0x90>
  4033fc:	4a46      	ldr	r2, [pc, #280]	; (403518 <flexcom_enable+0x164>)
  4033fe:	4290      	cmp	r0, r2
  403400:	d02e      	beq.n	403460 <flexcom_enable+0xac>
  403402:	4a46      	ldr	r2, [pc, #280]	; (40351c <flexcom_enable+0x168>)
  403404:	4290      	cmp	r0, r2
  403406:	d039      	beq.n	40347c <flexcom_enable+0xc8>
  403408:	4a45      	ldr	r2, [pc, #276]	; (403520 <flexcom_enable+0x16c>)
  40340a:	4290      	cmp	r0, r2
  40340c:	d044      	beq.n	403498 <flexcom_enable+0xe4>
  40340e:	4a45      	ldr	r2, [pc, #276]	; (403524 <flexcom_enable+0x170>)
  403410:	4290      	cmp	r0, r2
  403412:	d04f      	beq.n	4034b4 <flexcom_enable+0x100>
  403414:	4a44      	ldr	r2, [pc, #272]	; (403528 <flexcom_enable+0x174>)
  403416:	4290      	cmp	r0, r2
  403418:	d05a      	beq.n	4034d0 <flexcom_enable+0x11c>
  40341a:	4a44      	ldr	r2, [pc, #272]	; (40352c <flexcom_enable+0x178>)
  40341c:	4290      	cmp	r0, r2
  40341e:	d065      	beq.n	4034ec <flexcom_enable+0x138>
  403420:	b003      	add	sp, #12
  403422:	f85d fb04 	ldr.w	pc, [sp], #4
  403426:	e7fe      	b.n	403426 <flexcom_enable+0x72>
  403428:	2007      	movs	r0, #7
  40342a:	4b41      	ldr	r3, [pc, #260]	; (403530 <flexcom_enable+0x17c>)
  40342c:	4798      	blx	r3
  40342e:	2007      	movs	r0, #7
  403430:	4b40      	ldr	r3, [pc, #256]	; (403534 <flexcom_enable+0x180>)
  403432:	4798      	blx	r3
  403434:	2100      	movs	r1, #0
  403436:	2007      	movs	r0, #7
  403438:	4b3f      	ldr	r3, [pc, #252]	; (403538 <flexcom_enable+0x184>)
  40343a:	4798      	blx	r3
  40343c:	2007      	movs	r0, #7
  40343e:	4b3f      	ldr	r3, [pc, #252]	; (40353c <flexcom_enable+0x188>)
  403440:	4798      	blx	r3
  403442:	e7ed      	b.n	403420 <flexcom_enable+0x6c>
  403444:	2016      	movs	r0, #22
  403446:	4b3a      	ldr	r3, [pc, #232]	; (403530 <flexcom_enable+0x17c>)
  403448:	4798      	blx	r3
  40344a:	2007      	movs	r0, #7
  40344c:	4b39      	ldr	r3, [pc, #228]	; (403534 <flexcom_enable+0x180>)
  40344e:	4798      	blx	r3
  403450:	2100      	movs	r1, #0
  403452:	2007      	movs	r0, #7
  403454:	4b38      	ldr	r3, [pc, #224]	; (403538 <flexcom_enable+0x184>)
  403456:	4798      	blx	r3
  403458:	2007      	movs	r0, #7
  40345a:	4b38      	ldr	r3, [pc, #224]	; (40353c <flexcom_enable+0x188>)
  40345c:	4798      	blx	r3
  40345e:	e7df      	b.n	403420 <flexcom_enable+0x6c>
  403460:	2015      	movs	r0, #21
  403462:	4b33      	ldr	r3, [pc, #204]	; (403530 <flexcom_enable+0x17c>)
  403464:	4798      	blx	r3
  403466:	2007      	movs	r0, #7
  403468:	4b32      	ldr	r3, [pc, #200]	; (403534 <flexcom_enable+0x180>)
  40346a:	4798      	blx	r3
  40346c:	2100      	movs	r1, #0
  40346e:	2007      	movs	r0, #7
  403470:	4b31      	ldr	r3, [pc, #196]	; (403538 <flexcom_enable+0x184>)
  403472:	4798      	blx	r3
  403474:	2007      	movs	r0, #7
  403476:	4b31      	ldr	r3, [pc, #196]	; (40353c <flexcom_enable+0x188>)
  403478:	4798      	blx	r3
  40347a:	e7d1      	b.n	403420 <flexcom_enable+0x6c>
  40347c:	2014      	movs	r0, #20
  40347e:	4b2c      	ldr	r3, [pc, #176]	; (403530 <flexcom_enable+0x17c>)
  403480:	4798      	blx	r3
  403482:	2007      	movs	r0, #7
  403484:	4b2b      	ldr	r3, [pc, #172]	; (403534 <flexcom_enable+0x180>)
  403486:	4798      	blx	r3
  403488:	2100      	movs	r1, #0
  40348a:	2007      	movs	r0, #7
  40348c:	4b2a      	ldr	r3, [pc, #168]	; (403538 <flexcom_enable+0x184>)
  40348e:	4798      	blx	r3
  403490:	2007      	movs	r0, #7
  403492:	4b2a      	ldr	r3, [pc, #168]	; (40353c <flexcom_enable+0x188>)
  403494:	4798      	blx	r3
  403496:	e7c3      	b.n	403420 <flexcom_enable+0x6c>
  403498:	2013      	movs	r0, #19
  40349a:	4b25      	ldr	r3, [pc, #148]	; (403530 <flexcom_enable+0x17c>)
  40349c:	4798      	blx	r3
  40349e:	2006      	movs	r0, #6
  4034a0:	4b24      	ldr	r3, [pc, #144]	; (403534 <flexcom_enable+0x180>)
  4034a2:	4798      	blx	r3
  4034a4:	2100      	movs	r1, #0
  4034a6:	2006      	movs	r0, #6
  4034a8:	4b23      	ldr	r3, [pc, #140]	; (403538 <flexcom_enable+0x184>)
  4034aa:	4798      	blx	r3
  4034ac:	2006      	movs	r0, #6
  4034ae:	4b23      	ldr	r3, [pc, #140]	; (40353c <flexcom_enable+0x188>)
  4034b0:	4798      	blx	r3
  4034b2:	e7b5      	b.n	403420 <flexcom_enable+0x6c>
  4034b4:	200e      	movs	r0, #14
  4034b6:	4b1e      	ldr	r3, [pc, #120]	; (403530 <flexcom_enable+0x17c>)
  4034b8:	4798      	blx	r3
  4034ba:	2006      	movs	r0, #6
  4034bc:	4b1d      	ldr	r3, [pc, #116]	; (403534 <flexcom_enable+0x180>)
  4034be:	4798      	blx	r3
  4034c0:	2100      	movs	r1, #0
  4034c2:	2006      	movs	r0, #6
  4034c4:	4b1c      	ldr	r3, [pc, #112]	; (403538 <flexcom_enable+0x184>)
  4034c6:	4798      	blx	r3
  4034c8:	2006      	movs	r0, #6
  4034ca:	4b1c      	ldr	r3, [pc, #112]	; (40353c <flexcom_enable+0x188>)
  4034cc:	4798      	blx	r3
  4034ce:	e7a7      	b.n	403420 <flexcom_enable+0x6c>
  4034d0:	2009      	movs	r0, #9
  4034d2:	4b17      	ldr	r3, [pc, #92]	; (403530 <flexcom_enable+0x17c>)
  4034d4:	4798      	blx	r3
  4034d6:	2006      	movs	r0, #6
  4034d8:	4b16      	ldr	r3, [pc, #88]	; (403534 <flexcom_enable+0x180>)
  4034da:	4798      	blx	r3
  4034dc:	2100      	movs	r1, #0
  4034de:	2006      	movs	r0, #6
  4034e0:	4b15      	ldr	r3, [pc, #84]	; (403538 <flexcom_enable+0x184>)
  4034e2:	4798      	blx	r3
  4034e4:	2006      	movs	r0, #6
  4034e6:	4b15      	ldr	r3, [pc, #84]	; (40353c <flexcom_enable+0x188>)
  4034e8:	4798      	blx	r3
  4034ea:	e799      	b.n	403420 <flexcom_enable+0x6c>
  4034ec:	2008      	movs	r0, #8
  4034ee:	4b10      	ldr	r3, [pc, #64]	; (403530 <flexcom_enable+0x17c>)
  4034f0:	4798      	blx	r3
  4034f2:	2006      	movs	r0, #6
  4034f4:	4b0f      	ldr	r3, [pc, #60]	; (403534 <flexcom_enable+0x180>)
  4034f6:	4798      	blx	r3
  4034f8:	2100      	movs	r1, #0
  4034fa:	2006      	movs	r0, #6
  4034fc:	4b0e      	ldr	r3, [pc, #56]	; (403538 <flexcom_enable+0x184>)
  4034fe:	4798      	blx	r3
  403500:	2006      	movs	r0, #6
  403502:	4b0e      	ldr	r3, [pc, #56]	; (40353c <flexcom_enable+0x188>)
  403504:	4798      	blx	r3
  403506:	e78b      	b.n	403420 <flexcom_enable+0x6c>
  403508:	2001ab30 	.word	0x2001ab30
  40350c:	200001fc 	.word	0x200001fc
  403510:	40034000 	.word	0x40034000
  403514:	40040000 	.word	0x40040000
  403518:	40008000 	.word	0x40008000
  40351c:	4001c000 	.word	0x4001c000
  403520:	40018000 	.word	0x40018000
  403524:	40024000 	.word	0x40024000
  403528:	40020000 	.word	0x40020000
  40352c:	4000c000 	.word	0x4000c000
  403530:	0040384d 	.word	0x0040384d
  403534:	00403971 	.word	0x00403971
  403538:	00403921 	.word	0x00403921
  40353c:	0040395d 	.word	0x0040395d

00403540 <flexcom_set_opmode>:
  403540:	6001      	str	r1, [r0, #0]
  403542:	4770      	bx	lr

00403544 <matrix_set_usb_device>:
  403544:	4b06      	ldr	r3, [pc, #24]	; (403560 <matrix_set_usb_device+0x1c>)
  403546:	f8d3 2114 	ldr.w	r2, [r3, #276]	; 0x114
  40354a:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
  40354e:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  403552:	f8d3 2120 	ldr.w	r2, [r3, #288]	; 0x120
  403556:	f042 0201 	orr.w	r2, r2, #1
  40355a:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
  40355e:	4770      	bx	lr
  403560:	400e0200 	.word	0x400e0200

00403564 <pio_set_peripheral>:
  403564:	6442      	str	r2, [r0, #68]	; 0x44
  403566:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  40356a:	d01f      	beq.n	4035ac <pio_set_peripheral+0x48>
  40356c:	d814      	bhi.n	403598 <pio_set_peripheral+0x34>
  40356e:	b191      	cbz	r1, 403596 <pio_set_peripheral+0x32>
  403570:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  403574:	d123      	bne.n	4035be <pio_set_peripheral+0x5a>
  403576:	b410      	push	{r4}
  403578:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40357a:	6f04      	ldr	r4, [r0, #112]	; 0x70
  40357c:	43d3      	mvns	r3, r2
  40357e:	4021      	ands	r1, r4
  403580:	461c      	mov	r4, r3
  403582:	4019      	ands	r1, r3
  403584:	6701      	str	r1, [r0, #112]	; 0x70
  403586:	6f43      	ldr	r3, [r0, #116]	; 0x74
  403588:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40358a:	400b      	ands	r3, r1
  40358c:	4023      	ands	r3, r4
  40358e:	6743      	str	r3, [r0, #116]	; 0x74
  403590:	6042      	str	r2, [r0, #4]
  403592:	f85d 4b04 	ldr.w	r4, [sp], #4
  403596:	4770      	bx	lr
  403598:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  40359c:	d0fb      	beq.n	403596 <pio_set_peripheral+0x32>
  40359e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4035a2:	d0f8      	beq.n	403596 <pio_set_peripheral+0x32>
  4035a4:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4035a8:	d109      	bne.n	4035be <pio_set_peripheral+0x5a>
  4035aa:	4770      	bx	lr
  4035ac:	6f03      	ldr	r3, [r0, #112]	; 0x70
  4035ae:	4313      	orrs	r3, r2
  4035b0:	6703      	str	r3, [r0, #112]	; 0x70
  4035b2:	6f43      	ldr	r3, [r0, #116]	; 0x74
  4035b4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4035b6:	400b      	ands	r3, r1
  4035b8:	ea23 0302 	bic.w	r3, r3, r2
  4035bc:	6743      	str	r3, [r0, #116]	; 0x74
  4035be:	6042      	str	r2, [r0, #4]
  4035c0:	4770      	bx	lr

004035c2 <pio_set_input>:
  4035c2:	6441      	str	r1, [r0, #68]	; 0x44
  4035c4:	f012 0f01 	tst.w	r2, #1
  4035c8:	bf14      	ite	ne
  4035ca:	6641      	strne	r1, [r0, #100]	; 0x64
  4035cc:	6601      	streq	r1, [r0, #96]	; 0x60
  4035ce:	f012 0f0a 	tst.w	r2, #10
  4035d2:	bf14      	ite	ne
  4035d4:	6201      	strne	r1, [r0, #32]
  4035d6:	6241      	streq	r1, [r0, #36]	; 0x24
  4035d8:	f012 0f02 	tst.w	r2, #2
  4035dc:	d107      	bne.n	4035ee <pio_set_input+0x2c>
  4035de:	f012 0f08 	tst.w	r2, #8
  4035e2:	bf18      	it	ne
  4035e4:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
  4035e8:	6141      	str	r1, [r0, #20]
  4035ea:	6001      	str	r1, [r0, #0]
  4035ec:	4770      	bx	lr
  4035ee:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  4035f2:	e7f9      	b.n	4035e8 <pio_set_input+0x26>

004035f4 <pio_set_output>:
  4035f4:	b410      	push	{r4}
  4035f6:	9c01      	ldr	r4, [sp, #4]
  4035f8:	6441      	str	r1, [r0, #68]	; 0x44
  4035fa:	b94c      	cbnz	r4, 403610 <pio_set_output+0x1c>
  4035fc:	6601      	str	r1, [r0, #96]	; 0x60
  4035fe:	b14b      	cbz	r3, 403614 <pio_set_output+0x20>
  403600:	6501      	str	r1, [r0, #80]	; 0x50
  403602:	b94a      	cbnz	r2, 403618 <pio_set_output+0x24>
  403604:	6341      	str	r1, [r0, #52]	; 0x34
  403606:	6101      	str	r1, [r0, #16]
  403608:	6001      	str	r1, [r0, #0]
  40360a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40360e:	4770      	bx	lr
  403610:	6641      	str	r1, [r0, #100]	; 0x64
  403612:	e7f4      	b.n	4035fe <pio_set_output+0xa>
  403614:	6541      	str	r1, [r0, #84]	; 0x54
  403616:	e7f4      	b.n	403602 <pio_set_output+0xe>
  403618:	6301      	str	r1, [r0, #48]	; 0x30
  40361a:	e7f4      	b.n	403606 <pio_set_output+0x12>

0040361c <pio_get_interrupt_status>:
  40361c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
  40361e:	4770      	bx	lr

00403620 <pio_get_interrupt_mask>:
  403620:	6c80      	ldr	r0, [r0, #72]	; 0x48
  403622:	4770      	bx	lr

00403624 <pio_configure_pin>:
  403624:	b570      	push	{r4, r5, r6, lr}
  403626:	b082      	sub	sp, #8
  403628:	460d      	mov	r5, r1
  40362a:	0943      	lsrs	r3, r0, #5
  40362c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  403630:	f203 7307 	addw	r3, r3, #1799	; 0x707
  403634:	025c      	lsls	r4, r3, #9
  403636:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  40363a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40363e:	d031      	beq.n	4036a4 <pio_configure_pin+0x80>
  403640:	d816      	bhi.n	403670 <pio_configure_pin+0x4c>
  403642:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  403646:	d01b      	beq.n	403680 <pio_configure_pin+0x5c>
  403648:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40364c:	d116      	bne.n	40367c <pio_configure_pin+0x58>
  40364e:	f000 001f 	and.w	r0, r0, #31
  403652:	2601      	movs	r6, #1
  403654:	4086      	lsls	r6, r0
  403656:	4632      	mov	r2, r6
  403658:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40365c:	4620      	mov	r0, r4
  40365e:	4b22      	ldr	r3, [pc, #136]	; (4036e8 <pio_configure_pin+0xc4>)
  403660:	4798      	blx	r3
  403662:	f015 0f01 	tst.w	r5, #1
  403666:	bf14      	ite	ne
  403668:	6666      	strne	r6, [r4, #100]	; 0x64
  40366a:	6626      	streq	r6, [r4, #96]	; 0x60
  40366c:	2001      	movs	r0, #1
  40366e:	e017      	b.n	4036a0 <pio_configure_pin+0x7c>
  403670:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  403674:	d021      	beq.n	4036ba <pio_configure_pin+0x96>
  403676:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40367a:	d01e      	beq.n	4036ba <pio_configure_pin+0x96>
  40367c:	2000      	movs	r0, #0
  40367e:	e00f      	b.n	4036a0 <pio_configure_pin+0x7c>
  403680:	f000 001f 	and.w	r0, r0, #31
  403684:	2601      	movs	r6, #1
  403686:	4086      	lsls	r6, r0
  403688:	4632      	mov	r2, r6
  40368a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40368e:	4620      	mov	r0, r4
  403690:	4b15      	ldr	r3, [pc, #84]	; (4036e8 <pio_configure_pin+0xc4>)
  403692:	4798      	blx	r3
  403694:	f015 0f01 	tst.w	r5, #1
  403698:	bf14      	ite	ne
  40369a:	6666      	strne	r6, [r4, #100]	; 0x64
  40369c:	6626      	streq	r6, [r4, #96]	; 0x60
  40369e:	2001      	movs	r0, #1
  4036a0:	b002      	add	sp, #8
  4036a2:	bd70      	pop	{r4, r5, r6, pc}
  4036a4:	f000 011f 	and.w	r1, r0, #31
  4036a8:	2601      	movs	r6, #1
  4036aa:	462a      	mov	r2, r5
  4036ac:	fa06 f101 	lsl.w	r1, r6, r1
  4036b0:	4620      	mov	r0, r4
  4036b2:	4b0e      	ldr	r3, [pc, #56]	; (4036ec <pio_configure_pin+0xc8>)
  4036b4:	4798      	blx	r3
  4036b6:	4630      	mov	r0, r6
  4036b8:	e7f2      	b.n	4036a0 <pio_configure_pin+0x7c>
  4036ba:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  4036be:	f000 011f 	and.w	r1, r0, #31
  4036c2:	2601      	movs	r6, #1
  4036c4:	ea05 0306 	and.w	r3, r5, r6
  4036c8:	9300      	str	r3, [sp, #0]
  4036ca:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4036ce:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4036d2:	bf14      	ite	ne
  4036d4:	2200      	movne	r2, #0
  4036d6:	2201      	moveq	r2, #1
  4036d8:	fa06 f101 	lsl.w	r1, r6, r1
  4036dc:	4620      	mov	r0, r4
  4036de:	4c04      	ldr	r4, [pc, #16]	; (4036f0 <pio_configure_pin+0xcc>)
  4036e0:	47a0      	blx	r4
  4036e2:	4630      	mov	r0, r6
  4036e4:	e7dc      	b.n	4036a0 <pio_configure_pin+0x7c>
  4036e6:	bf00      	nop
  4036e8:	00403565 	.word	0x00403565
  4036ec:	004035c3 	.word	0x004035c3
  4036f0:	004035f5 	.word	0x004035f5

004036f4 <pio_handler_process>:
  4036f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4036f8:	4604      	mov	r4, r0
  4036fa:	4688      	mov	r8, r1
  4036fc:	4b0e      	ldr	r3, [pc, #56]	; (403738 <pio_handler_process+0x44>)
  4036fe:	4798      	blx	r3
  403700:	4605      	mov	r5, r0
  403702:	4620      	mov	r0, r4
  403704:	4b0d      	ldr	r3, [pc, #52]	; (40373c <pio_handler_process+0x48>)
  403706:	4798      	blx	r3
  403708:	4005      	ands	r5, r0
  40370a:	d013      	beq.n	403734 <pio_handler_process+0x40>
  40370c:	4c0c      	ldr	r4, [pc, #48]	; (403740 <pio_handler_process+0x4c>)
  40370e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  403712:	e003      	b.n	40371c <pio_handler_process+0x28>
  403714:	42b4      	cmp	r4, r6
  403716:	d00d      	beq.n	403734 <pio_handler_process+0x40>
  403718:	3410      	adds	r4, #16
  40371a:	b15d      	cbz	r5, 403734 <pio_handler_process+0x40>
  40371c:	6820      	ldr	r0, [r4, #0]
  40371e:	4540      	cmp	r0, r8
  403720:	d1f8      	bne.n	403714 <pio_handler_process+0x20>
  403722:	6861      	ldr	r1, [r4, #4]
  403724:	4229      	tst	r1, r5
  403726:	d0f5      	beq.n	403714 <pio_handler_process+0x20>
  403728:	68e3      	ldr	r3, [r4, #12]
  40372a:	4798      	blx	r3
  40372c:	6863      	ldr	r3, [r4, #4]
  40372e:	ea25 0503 	bic.w	r5, r5, r3
  403732:	e7ef      	b.n	403714 <pio_handler_process+0x20>
  403734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403738:	0040361d 	.word	0x0040361d
  40373c:	00403621 	.word	0x00403621
  403740:	2001a1e8 	.word	0x2001a1e8

00403744 <PIOA_Handler>:
  403744:	b508      	push	{r3, lr}
  403746:	210b      	movs	r1, #11
  403748:	4801      	ldr	r0, [pc, #4]	; (403750 <PIOA_Handler+0xc>)
  40374a:	4b02      	ldr	r3, [pc, #8]	; (403754 <PIOA_Handler+0x10>)
  40374c:	4798      	blx	r3
  40374e:	bd08      	pop	{r3, pc}
  403750:	400e0e00 	.word	0x400e0e00
  403754:	004036f5 	.word	0x004036f5

00403758 <PIOB_Handler>:
  403758:	b508      	push	{r3, lr}
  40375a:	210c      	movs	r1, #12
  40375c:	4801      	ldr	r0, [pc, #4]	; (403764 <PIOB_Handler+0xc>)
  40375e:	4b02      	ldr	r3, [pc, #8]	; (403768 <PIOB_Handler+0x10>)
  403760:	4798      	blx	r3
  403762:	bd08      	pop	{r3, pc}
  403764:	400e1000 	.word	0x400e1000
  403768:	004036f5 	.word	0x004036f5

0040376c <pmc_switch_mck_to_pllack>:
  40376c:	4a17      	ldr	r2, [pc, #92]	; (4037cc <pmc_switch_mck_to_pllack+0x60>)
  40376e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403770:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  403774:	4318      	orrs	r0, r3
  403776:	6310      	str	r0, [r2, #48]	; 0x30
  403778:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40377a:	f013 0f08 	tst.w	r3, #8
  40377e:	d10a      	bne.n	403796 <pmc_switch_mck_to_pllack+0x2a>
  403780:	f44f 6300 	mov.w	r3, #2048	; 0x800
  403784:	4911      	ldr	r1, [pc, #68]	; (4037cc <pmc_switch_mck_to_pllack+0x60>)
  403786:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  403788:	f012 0f08 	tst.w	r2, #8
  40378c:	d103      	bne.n	403796 <pmc_switch_mck_to_pllack+0x2a>
  40378e:	3b01      	subs	r3, #1
  403790:	d1f9      	bne.n	403786 <pmc_switch_mck_to_pllack+0x1a>
  403792:	2001      	movs	r0, #1
  403794:	4770      	bx	lr
  403796:	4a0d      	ldr	r2, [pc, #52]	; (4037cc <pmc_switch_mck_to_pllack+0x60>)
  403798:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40379a:	f023 0303 	bic.w	r3, r3, #3
  40379e:	f043 0302 	orr.w	r3, r3, #2
  4037a2:	6313      	str	r3, [r2, #48]	; 0x30
  4037a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4037a6:	f013 0f08 	tst.w	r3, #8
  4037aa:	d10a      	bne.n	4037c2 <pmc_switch_mck_to_pllack+0x56>
  4037ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4037b0:	4906      	ldr	r1, [pc, #24]	; (4037cc <pmc_switch_mck_to_pllack+0x60>)
  4037b2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4037b4:	f012 0f08 	tst.w	r2, #8
  4037b8:	d105      	bne.n	4037c6 <pmc_switch_mck_to_pllack+0x5a>
  4037ba:	3b01      	subs	r3, #1
  4037bc:	d1f9      	bne.n	4037b2 <pmc_switch_mck_to_pllack+0x46>
  4037be:	2001      	movs	r0, #1
  4037c0:	4770      	bx	lr
  4037c2:	2000      	movs	r0, #0
  4037c4:	4770      	bx	lr
  4037c6:	2000      	movs	r0, #0
  4037c8:	4770      	bx	lr
  4037ca:	bf00      	nop
  4037cc:	400e0400 	.word	0x400e0400

004037d0 <pmc_switch_sclk_to_32kxtal>:
  4037d0:	2801      	cmp	r0, #1
  4037d2:	d003      	beq.n	4037dc <pmc_switch_sclk_to_32kxtal+0xc>
  4037d4:	4a05      	ldr	r2, [pc, #20]	; (4037ec <pmc_switch_sclk_to_32kxtal+0x1c>)
  4037d6:	4b06      	ldr	r3, [pc, #24]	; (4037f0 <pmc_switch_sclk_to_32kxtal+0x20>)
  4037d8:	601a      	str	r2, [r3, #0]
  4037da:	4770      	bx	lr
  4037dc:	4a04      	ldr	r2, [pc, #16]	; (4037f0 <pmc_switch_sclk_to_32kxtal+0x20>)
  4037de:	6893      	ldr	r3, [r2, #8]
  4037e0:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  4037e4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4037e8:	6093      	str	r3, [r2, #8]
  4037ea:	e7f3      	b.n	4037d4 <pmc_switch_sclk_to_32kxtal+0x4>
  4037ec:	a5000008 	.word	0xa5000008
  4037f0:	400e1410 	.word	0x400e1410

004037f4 <pmc_osc_is_ready_32kxtal>:
  4037f4:	4b05      	ldr	r3, [pc, #20]	; (40380c <pmc_osc_is_ready_32kxtal+0x18>)
  4037f6:	695b      	ldr	r3, [r3, #20]
  4037f8:	f013 0f80 	tst.w	r3, #128	; 0x80
  4037fc:	bf1d      	ittte	ne
  4037fe:	4b04      	ldrne	r3, [pc, #16]	; (403810 <pmc_osc_is_ready_32kxtal+0x1c>)
  403800:	6e98      	ldrne	r0, [r3, #104]	; 0x68
  403802:	f3c0 10c0 	ubfxne	r0, r0, #7, #1
  403806:	2000      	moveq	r0, #0
  403808:	4770      	bx	lr
  40380a:	bf00      	nop
  40380c:	400e1410 	.word	0x400e1410
  403810:	400e0400 	.word	0x400e0400

00403814 <pmc_disable_pllack>:
  403814:	2200      	movs	r2, #0
  403816:	4b01      	ldr	r3, [pc, #4]	; (40381c <pmc_disable_pllack+0x8>)
  403818:	629a      	str	r2, [r3, #40]	; 0x28
  40381a:	4770      	bx	lr
  40381c:	400e0400 	.word	0x400e0400

00403820 <pmc_is_locked_pllack>:
  403820:	4b02      	ldr	r3, [pc, #8]	; (40382c <pmc_is_locked_pllack+0xc>)
  403822:	6e98      	ldr	r0, [r3, #104]	; 0x68
  403824:	f000 0002 	and.w	r0, r0, #2
  403828:	4770      	bx	lr
  40382a:	bf00      	nop
  40382c:	400e0400 	.word	0x400e0400

00403830 <pmc_disable_pllbck>:
  403830:	2200      	movs	r2, #0
  403832:	4b01      	ldr	r3, [pc, #4]	; (403838 <pmc_disable_pllbck+0x8>)
  403834:	62da      	str	r2, [r3, #44]	; 0x2c
  403836:	4770      	bx	lr
  403838:	400e0400 	.word	0x400e0400

0040383c <pmc_is_locked_pllbck>:
  40383c:	4b02      	ldr	r3, [pc, #8]	; (403848 <pmc_is_locked_pllbck+0xc>)
  40383e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  403840:	f000 0004 	and.w	r0, r0, #4
  403844:	4770      	bx	lr
  403846:	bf00      	nop
  403848:	400e0400 	.word	0x400e0400

0040384c <pmc_enable_periph_clk>:
  40384c:	2832      	cmp	r0, #50	; 0x32
  40384e:	d81e      	bhi.n	40388e <pmc_enable_periph_clk+0x42>
  403850:	281f      	cmp	r0, #31
  403852:	d80c      	bhi.n	40386e <pmc_enable_periph_clk+0x22>
  403854:	4b11      	ldr	r3, [pc, #68]	; (40389c <pmc_enable_periph_clk+0x50>)
  403856:	699a      	ldr	r2, [r3, #24]
  403858:	2301      	movs	r3, #1
  40385a:	4083      	lsls	r3, r0
  40385c:	4393      	bics	r3, r2
  40385e:	d018      	beq.n	403892 <pmc_enable_periph_clk+0x46>
  403860:	2301      	movs	r3, #1
  403862:	fa03 f000 	lsl.w	r0, r3, r0
  403866:	4b0d      	ldr	r3, [pc, #52]	; (40389c <pmc_enable_periph_clk+0x50>)
  403868:	6118      	str	r0, [r3, #16]
  40386a:	2000      	movs	r0, #0
  40386c:	4770      	bx	lr
  40386e:	3820      	subs	r0, #32
  403870:	4b0a      	ldr	r3, [pc, #40]	; (40389c <pmc_enable_periph_clk+0x50>)
  403872:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  403876:	2301      	movs	r3, #1
  403878:	4083      	lsls	r3, r0
  40387a:	4393      	bics	r3, r2
  40387c:	d00b      	beq.n	403896 <pmc_enable_periph_clk+0x4a>
  40387e:	2301      	movs	r3, #1
  403880:	fa03 f000 	lsl.w	r0, r3, r0
  403884:	4b05      	ldr	r3, [pc, #20]	; (40389c <pmc_enable_periph_clk+0x50>)
  403886:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
  40388a:	2000      	movs	r0, #0
  40388c:	4770      	bx	lr
  40388e:	2001      	movs	r0, #1
  403890:	4770      	bx	lr
  403892:	2000      	movs	r0, #0
  403894:	4770      	bx	lr
  403896:	2000      	movs	r0, #0
  403898:	4770      	bx	lr
  40389a:	bf00      	nop
  40389c:	400e0400 	.word	0x400e0400

004038a0 <pmc_disable_periph_clk>:
  4038a0:	2832      	cmp	r0, #50	; 0x32
  4038a2:	d822      	bhi.n	4038ea <pmc_disable_periph_clk+0x4a>
  4038a4:	281f      	cmp	r0, #31
  4038a6:	d80e      	bhi.n	4038c6 <pmc_disable_periph_clk+0x26>
  4038a8:	4b11      	ldr	r3, [pc, #68]	; (4038f0 <pmc_disable_periph_clk+0x50>)
  4038aa:	699a      	ldr	r2, [r3, #24]
  4038ac:	2301      	movs	r3, #1
  4038ae:	4083      	lsls	r3, r0
  4038b0:	4393      	bics	r3, r2
  4038b2:	d001      	beq.n	4038b8 <pmc_disable_periph_clk+0x18>
  4038b4:	2000      	movs	r0, #0
  4038b6:	4770      	bx	lr
  4038b8:	2301      	movs	r3, #1
  4038ba:	fa03 f000 	lsl.w	r0, r3, r0
  4038be:	4b0c      	ldr	r3, [pc, #48]	; (4038f0 <pmc_disable_periph_clk+0x50>)
  4038c0:	6158      	str	r0, [r3, #20]
  4038c2:	2000      	movs	r0, #0
  4038c4:	4770      	bx	lr
  4038c6:	3820      	subs	r0, #32
  4038c8:	4b09      	ldr	r3, [pc, #36]	; (4038f0 <pmc_disable_periph_clk+0x50>)
  4038ca:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4038ce:	2301      	movs	r3, #1
  4038d0:	4083      	lsls	r3, r0
  4038d2:	4393      	bics	r3, r2
  4038d4:	d001      	beq.n	4038da <pmc_disable_periph_clk+0x3a>
  4038d6:	2000      	movs	r0, #0
  4038d8:	4770      	bx	lr
  4038da:	2301      	movs	r3, #1
  4038dc:	fa03 f000 	lsl.w	r0, r3, r0
  4038e0:	4b03      	ldr	r3, [pc, #12]	; (4038f0 <pmc_disable_periph_clk+0x50>)
  4038e2:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
  4038e6:	2000      	movs	r0, #0
  4038e8:	4770      	bx	lr
  4038ea:	2001      	movs	r0, #1
  4038ec:	4770      	bx	lr
  4038ee:	bf00      	nop
  4038f0:	400e0400 	.word	0x400e0400

004038f4 <pmc_pck_set_source>:
  4038f4:	4a09      	ldr	r2, [pc, #36]	; (40391c <pmc_pck_set_source+0x28>)
  4038f6:	eb02 0280 	add.w	r2, r2, r0, lsl #2
  4038fa:	6c13      	ldr	r3, [r2, #64]	; 0x40
  4038fc:	f023 0307 	bic.w	r3, r3, #7
  403900:	4319      	orrs	r1, r3
  403902:	6411      	str	r1, [r2, #64]	; 0x40
  403904:	f44f 7380 	mov.w	r3, #256	; 0x100
  403908:	fa03 f000 	lsl.w	r0, r3, r0
  40390c:	4b03      	ldr	r3, [pc, #12]	; (40391c <pmc_pck_set_source+0x28>)
  40390e:	681a      	ldr	r2, [r3, #0]
  403910:	4202      	tst	r2, r0
  403912:	d002      	beq.n	40391a <pmc_pck_set_source+0x26>
  403914:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  403916:	4210      	tst	r0, r2
  403918:	d0f9      	beq.n	40390e <pmc_pck_set_source+0x1a>
  40391a:	4770      	bx	lr
  40391c:	400e0400 	.word	0x400e0400

00403920 <pmc_switch_pck_to_mck>:
  403920:	f041 0104 	orr.w	r1, r1, #4
  403924:	4b0c      	ldr	r3, [pc, #48]	; (403958 <pmc_switch_pck_to_mck+0x38>)
  403926:	f100 0210 	add.w	r2, r0, #16
  40392a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40392e:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  403930:	f44f 7380 	mov.w	r3, #256	; 0x100
  403934:	fa03 f000 	lsl.w	r0, r3, r0
  403938:	4202      	tst	r2, r0
  40393a:	d109      	bne.n	403950 <pmc_switch_pck_to_mck+0x30>
  40393c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  403940:	4905      	ldr	r1, [pc, #20]	; (403958 <pmc_switch_pck_to_mck+0x38>)
  403942:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  403944:	4202      	tst	r2, r0
  403946:	d105      	bne.n	403954 <pmc_switch_pck_to_mck+0x34>
  403948:	3b01      	subs	r3, #1
  40394a:	d1fa      	bne.n	403942 <pmc_switch_pck_to_mck+0x22>
  40394c:	2001      	movs	r0, #1
  40394e:	4770      	bx	lr
  403950:	2000      	movs	r0, #0
  403952:	4770      	bx	lr
  403954:	2000      	movs	r0, #0
  403956:	4770      	bx	lr
  403958:	400e0400 	.word	0x400e0400

0040395c <pmc_enable_pck>:
  40395c:	f44f 7380 	mov.w	r3, #256	; 0x100
  403960:	fa03 f000 	lsl.w	r0, r3, r0
  403964:	4b01      	ldr	r3, [pc, #4]	; (40396c <pmc_enable_pck+0x10>)
  403966:	6018      	str	r0, [r3, #0]
  403968:	4770      	bx	lr
  40396a:	bf00      	nop
  40396c:	400e0400 	.word	0x400e0400

00403970 <pmc_disable_pck>:
  403970:	f44f 7380 	mov.w	r3, #256	; 0x100
  403974:	fa03 f000 	lsl.w	r0, r3, r0
  403978:	4b01      	ldr	r3, [pc, #4]	; (403980 <pmc_disable_pck+0x10>)
  40397a:	6058      	str	r0, [r3, #4]
  40397c:	4770      	bx	lr
  40397e:	bf00      	nop
  403980:	400e0400 	.word	0x400e0400

00403984 <pmc_switch_udpck_to_pllbck>:
  403984:	0200      	lsls	r0, r0, #8
  403986:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
  40398a:	f040 0001 	orr.w	r0, r0, #1
  40398e:	4b01      	ldr	r3, [pc, #4]	; (403994 <pmc_switch_udpck_to_pllbck+0x10>)
  403990:	6398      	str	r0, [r3, #56]	; 0x38
  403992:	4770      	bx	lr
  403994:	400e0400 	.word	0x400e0400

00403998 <pmc_enable_udpck>:
  403998:	2280      	movs	r2, #128	; 0x80
  40399a:	4b01      	ldr	r3, [pc, #4]	; (4039a0 <pmc_enable_udpck+0x8>)
  40399c:	601a      	str	r2, [r3, #0]
  40399e:	4770      	bx	lr
  4039a0:	400e0400 	.word	0x400e0400

004039a4 <pmc_set_fast_startup_input>:
  4039a4:	4b03      	ldr	r3, [pc, #12]	; (4039b4 <pmc_set_fast_startup_input+0x10>)
  4039a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4039a8:	f3c0 0012 	ubfx	r0, r0, #0, #19
  4039ac:	4310      	orrs	r0, r2
  4039ae:	6718      	str	r0, [r3, #112]	; 0x70
  4039b0:	4770      	bx	lr
  4039b2:	bf00      	nop
  4039b4:	400e0400 	.word	0x400e0400

004039b8 <pmc_is_wakeup_clocks_restored>:
  4039b8:	4b02      	ldr	r3, [pc, #8]	; (4039c4 <pmc_is_wakeup_clocks_restored+0xc>)
  4039ba:	7818      	ldrb	r0, [r3, #0]
  4039bc:	f080 0001 	eor.w	r0, r0, #1
  4039c0:	4770      	bx	lr
  4039c2:	bf00      	nop
  4039c4:	2001a258 	.word	0x2001a258

004039c8 <rtc_get_time>:
  4039c8:	b430      	push	{r4, r5}
  4039ca:	6885      	ldr	r5, [r0, #8]
  4039cc:	6884      	ldr	r4, [r0, #8]
  4039ce:	42a5      	cmp	r5, r4
  4039d0:	d003      	beq.n	4039da <rtc_get_time+0x12>
  4039d2:	6885      	ldr	r5, [r0, #8]
  4039d4:	6884      	ldr	r4, [r0, #8]
  4039d6:	42ac      	cmp	r4, r5
  4039d8:	d1fb      	bne.n	4039d2 <rtc_get_time+0xa>
  4039da:	b161      	cbz	r1, 4039f6 <rtc_get_time+0x2e>
  4039dc:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4039e0:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4039e4:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4039e8:	eb00 0045 	add.w	r0, r0, r5, lsl #1
  4039ec:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
  4039f0:	bf18      	it	ne
  4039f2:	300c      	addne	r0, #12
  4039f4:	6008      	str	r0, [r1, #0]
  4039f6:	b142      	cbz	r2, 403a0a <rtc_get_time+0x42>
  4039f8:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4039fc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  403a00:	f3c4 2003 	ubfx	r0, r4, #8, #4
  403a04:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  403a08:	6011      	str	r1, [r2, #0]
  403a0a:	b143      	cbz	r3, 403a1e <rtc_get_time+0x56>
  403a0c:	f3c4 1202 	ubfx	r2, r4, #4, #3
  403a10:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  403a14:	f004 040f 	and.w	r4, r4, #15
  403a18:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  403a1c:	601c      	str	r4, [r3, #0]
  403a1e:	bc30      	pop	{r4, r5}
  403a20:	4770      	bx	lr

00403a22 <rtc_get_date>:
  403a22:	b4f0      	push	{r4, r5, r6, r7}
  403a24:	9e04      	ldr	r6, [sp, #16]
  403a26:	68c5      	ldr	r5, [r0, #12]
  403a28:	68c4      	ldr	r4, [r0, #12]
  403a2a:	42a5      	cmp	r5, r4
  403a2c:	d003      	beq.n	403a36 <rtc_get_date+0x14>
  403a2e:	68c5      	ldr	r5, [r0, #12]
  403a30:	68c4      	ldr	r4, [r0, #12]
  403a32:	42ac      	cmp	r4, r5
  403a34:	d1fb      	bne.n	403a2e <rtc_get_date+0xc>
  403a36:	b199      	cbz	r1, 403a60 <rtc_get_date+0x3e>
  403a38:	f3c4 3003 	ubfx	r0, r4, #12, #4
  403a3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  403a40:	f3c4 2703 	ubfx	r7, r4, #8, #4
  403a44:	eb07 0740 	add.w	r7, r7, r0, lsl #1
  403a48:	f3c4 1002 	ubfx	r0, r4, #4, #3
  403a4c:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  403a50:	f004 000f 	and.w	r0, r4, #15
  403a54:	eb00 0045 	add.w	r0, r0, r5, lsl #1
  403a58:	2564      	movs	r5, #100	; 0x64
  403a5a:	fb05 7000 	mla	r0, r5, r0, r7
  403a5e:	6008      	str	r0, [r1, #0]
  403a60:	b142      	cbz	r2, 403a74 <rtc_get_date+0x52>
  403a62:	f3c4 5000 	ubfx	r0, r4, #20, #1
  403a66:	0081      	lsls	r1, r0, #2
  403a68:	4408      	add	r0, r1
  403a6a:	f3c4 4103 	ubfx	r1, r4, #16, #4
  403a6e:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  403a72:	6011      	str	r1, [r2, #0]
  403a74:	b143      	cbz	r3, 403a88 <rtc_get_date+0x66>
  403a76:	f3c4 7201 	ubfx	r2, r4, #28, #2
  403a7a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  403a7e:	f3c4 6103 	ubfx	r1, r4, #24, #4
  403a82:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  403a86:	601a      	str	r2, [r3, #0]
  403a88:	b116      	cbz	r6, 403a90 <rtc_get_date+0x6e>
  403a8a:	f3c4 5442 	ubfx	r4, r4, #21, #3
  403a8e:	6034      	str	r4, [r6, #0]
  403a90:	bcf0      	pop	{r4, r5, r6, r7}
  403a92:	4770      	bx	lr

00403a94 <spi_set_peripheral_chip_select_value>:
  403a94:	6843      	ldr	r3, [r0, #4]
  403a96:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
  403a9a:	6043      	str	r3, [r0, #4]
  403a9c:	6843      	ldr	r3, [r0, #4]
  403a9e:	0409      	lsls	r1, r1, #16
  403aa0:	f401 3140 	and.w	r1, r1, #196608	; 0x30000
  403aa4:	4319      	orrs	r1, r3
  403aa6:	6041      	str	r1, [r0, #4]
  403aa8:	4770      	bx	lr

00403aaa <spi_set_delay_between_chip_select>:
  403aaa:	6843      	ldr	r3, [r0, #4]
  403aac:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  403ab0:	6043      	str	r3, [r0, #4]
  403ab2:	6843      	ldr	r3, [r0, #4]
  403ab4:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  403ab8:	6041      	str	r1, [r0, #4]
  403aba:	4770      	bx	lr

00403abc <spi_set_clock_polarity>:
  403abc:	b932      	cbnz	r2, 403acc <spi_set_clock_polarity+0x10>
  403abe:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403ac2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403ac4:	f023 0301 	bic.w	r3, r3, #1
  403ac8:	6303      	str	r3, [r0, #48]	; 0x30
  403aca:	4770      	bx	lr
  403acc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403ad0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403ad2:	f043 0301 	orr.w	r3, r3, #1
  403ad6:	6303      	str	r3, [r0, #48]	; 0x30
  403ad8:	4770      	bx	lr

00403ada <spi_set_clock_phase>:
  403ada:	b932      	cbnz	r2, 403aea <spi_set_clock_phase+0x10>
  403adc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403ae0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403ae2:	f023 0302 	bic.w	r3, r3, #2
  403ae6:	6303      	str	r3, [r0, #48]	; 0x30
  403ae8:	4770      	bx	lr
  403aea:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403aee:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403af0:	f043 0302 	orr.w	r3, r3, #2
  403af4:	6303      	str	r3, [r0, #48]	; 0x30
  403af6:	4770      	bx	lr

00403af8 <spi_configure_cs_behavior>:
  403af8:	2a04      	cmp	r2, #4
  403afa:	d003      	beq.n	403b04 <spi_configure_cs_behavior+0xc>
  403afc:	b16a      	cbz	r2, 403b1a <spi_configure_cs_behavior+0x22>
  403afe:	2a08      	cmp	r2, #8
  403b00:	d016      	beq.n	403b30 <spi_configure_cs_behavior+0x38>
  403b02:	4770      	bx	lr
  403b04:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403b08:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403b0a:	f023 0308 	bic.w	r3, r3, #8
  403b0e:	6303      	str	r3, [r0, #48]	; 0x30
  403b10:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403b12:	f043 0304 	orr.w	r3, r3, #4
  403b16:	6303      	str	r3, [r0, #48]	; 0x30
  403b18:	4770      	bx	lr
  403b1a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403b1e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403b20:	f023 0308 	bic.w	r3, r3, #8
  403b24:	6303      	str	r3, [r0, #48]	; 0x30
  403b26:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403b28:	f023 0304 	bic.w	r3, r3, #4
  403b2c:	6303      	str	r3, [r0, #48]	; 0x30
  403b2e:	4770      	bx	lr
  403b30:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  403b34:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403b36:	f043 0308 	orr.w	r3, r3, #8
  403b3a:	6303      	str	r3, [r0, #48]	; 0x30
  403b3c:	e7e1      	b.n	403b02 <spi_configure_cs_behavior+0xa>

00403b3e <spi_set_bits_per_transfer>:
  403b3e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  403b42:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  403b44:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  403b48:	630b      	str	r3, [r1, #48]	; 0x30
  403b4a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  403b4c:	431a      	orrs	r2, r3
  403b4e:	630a      	str	r2, [r1, #48]	; 0x30
  403b50:	4770      	bx	lr

00403b52 <spi_calc_baudrate_div>:
  403b52:	1e43      	subs	r3, r0, #1
  403b54:	4419      	add	r1, r3
  403b56:	fbb1 f0f0 	udiv	r0, r1, r0
  403b5a:	1e43      	subs	r3, r0, #1
  403b5c:	2bfe      	cmp	r3, #254	; 0xfe
  403b5e:	bf94      	ite	ls
  403b60:	b200      	sxthls	r0, r0
  403b62:	f04f 30ff 	movhi.w	r0, #4294967295
  403b66:	4770      	bx	lr

00403b68 <spi_set_baudrate_div>:
  403b68:	b17a      	cbz	r2, 403b8a <spi_set_baudrate_div+0x22>
  403b6a:	b410      	push	{r4}
  403b6c:	4614      	mov	r4, r2
  403b6e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  403b72:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  403b74:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  403b78:	630b      	str	r3, [r1, #48]	; 0x30
  403b7a:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  403b7c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  403b80:	630a      	str	r2, [r1, #48]	; 0x30
  403b82:	2000      	movs	r0, #0
  403b84:	f85d 4b04 	ldr.w	r4, [sp], #4
  403b88:	4770      	bx	lr
  403b8a:	f04f 30ff 	mov.w	r0, #4294967295
  403b8e:	4770      	bx	lr

00403b90 <spi_set_transfer_delay>:
  403b90:	b410      	push	{r4}
  403b92:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  403b96:	6b08      	ldr	r0, [r1, #48]	; 0x30
  403b98:	b280      	uxth	r0, r0
  403b9a:	6308      	str	r0, [r1, #48]	; 0x30
  403b9c:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  403b9e:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  403ba2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  403ba6:	630b      	str	r3, [r1, #48]	; 0x30
  403ba8:	f85d 4b04 	ldr.w	r4, [sp], #4
  403bac:	4770      	bx	lr

00403bae <supc_set_regulator_trim_user>:
  403bae:	69c3      	ldr	r3, [r0, #28]
  403bb0:	0249      	lsls	r1, r1, #9
  403bb2:	f401 51f0 	and.w	r1, r1, #7680	; 0x1e00
  403bb6:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
  403bba:	f441 7180 	orr.w	r1, r1, #256	; 0x100
  403bbe:	f423 53f0 	bic.w	r3, r3, #7680	; 0x1e00
  403bc2:	4319      	orrs	r1, r3
  403bc4:	61c1      	str	r1, [r0, #28]
  403bc6:	4770      	bx	lr

00403bc8 <udd_sleep_mode>:
/*! \brief Authorize or not the CPU powerdown mode
 *
 * \param b_enable   true to authorize idle mode
 */
static void udd_sleep_mode(bool b_idle)
{
  403bc8:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
  403bca:	4601      	mov	r1, r0
  403bcc:	bb28      	cbnz	r0, 403c1a <udd_sleep_mode+0x52>
  403bce:	4b24      	ldr	r3, [pc, #144]	; (403c60 <udd_sleep_mode+0x98>)
  403bd0:	781b      	ldrb	r3, [r3, #0]
  403bd2:	b91b      	cbnz	r3, 403bdc <udd_sleep_mode+0x14>
		sleepmgr_unlock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	if (b_idle && !udd_b_idle) {
		sleepmgr_lock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	udd_b_idle = b_idle;
  403bd4:	4b22      	ldr	r3, [pc, #136]	; (403c60 <udd_sleep_mode+0x98>)
  403bd6:	7019      	strb	r1, [r3, #0]
}
  403bd8:	b002      	add	sp, #8
  403bda:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
  403bdc:	4b21      	ldr	r3, [pc, #132]	; (403c64 <udd_sleep_mode+0x9c>)
  403bde:	781b      	ldrb	r3, [r3, #0]
  403be0:	b903      	cbnz	r3, 403be4 <udd_sleep_mode+0x1c>
  403be2:	e7fe      	b.n	403be2 <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  403be4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  403be8:	fab3 f383 	clz	r3, r3
  403bec:	095b      	lsrs	r3, r3, #5
  403bee:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  403bf0:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  403bf2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  403bf6:	2200      	movs	r2, #0
  403bf8:	4b1b      	ldr	r3, [pc, #108]	; (403c68 <udd_sleep_mode+0xa0>)
  403bfa:	701a      	strb	r2, [r3, #0]
	return flags;
  403bfc:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
  403bfe:	4a19      	ldr	r2, [pc, #100]	; (403c64 <udd_sleep_mode+0x9c>)
  403c00:	7813      	ldrb	r3, [r2, #0]
  403c02:	3b01      	subs	r3, #1
  403c04:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  403c06:	2800      	cmp	r0, #0
  403c08:	d0e4      	beq.n	403bd4 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  403c0a:	2201      	movs	r2, #1
  403c0c:	4b16      	ldr	r3, [pc, #88]	; (403c68 <udd_sleep_mode+0xa0>)
  403c0e:	701a      	strb	r2, [r3, #0]
  403c10:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  403c14:	b662      	cpsie	i
  403c16:	e7dd      	b.n	403bd4 <udd_sleep_mode+0xc>
  403c18:	e7fe      	b.n	403c18 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
  403c1a:	4b11      	ldr	r3, [pc, #68]	; (403c60 <udd_sleep_mode+0x98>)
  403c1c:	781b      	ldrb	r3, [r3, #0]
  403c1e:	2b00      	cmp	r3, #0
  403c20:	d1d8      	bne.n	403bd4 <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
  403c22:	4b10      	ldr	r3, [pc, #64]	; (403c64 <udd_sleep_mode+0x9c>)
  403c24:	781b      	ldrb	r3, [r3, #0]
  403c26:	2bff      	cmp	r3, #255	; 0xff
  403c28:	d0f6      	beq.n	403c18 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  403c2a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  403c2e:	fab3 f383 	clz	r3, r3
  403c32:	095b      	lsrs	r3, r3, #5
  403c34:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  403c36:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  403c38:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  403c3c:	2200      	movs	r2, #0
  403c3e:	4b0a      	ldr	r3, [pc, #40]	; (403c68 <udd_sleep_mode+0xa0>)
  403c40:	701a      	strb	r2, [r3, #0]
	return flags;
  403c42:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
  403c44:	4a07      	ldr	r2, [pc, #28]	; (403c64 <udd_sleep_mode+0x9c>)
  403c46:	7813      	ldrb	r3, [r2, #0]
  403c48:	3301      	adds	r3, #1
  403c4a:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  403c4c:	2800      	cmp	r0, #0
  403c4e:	d0c1      	beq.n	403bd4 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  403c50:	2201      	movs	r2, #1
  403c52:	4b05      	ldr	r3, [pc, #20]	; (403c68 <udd_sleep_mode+0xa0>)
  403c54:	701a      	strb	r2, [r3, #0]
  403c56:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  403c5a:	b662      	cpsie	i
  403c5c:	e7ba      	b.n	403bd4 <udd_sleep_mode+0xc>
  403c5e:	bf00      	nop
  403c60:	2001a25a 	.word	0x2001a25a
  403c64:	2001ab30 	.word	0x2001ab30
  403c68:	200001fc 	.word	0x200001fc

00403c6c <udd_ctrl_init>:
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
	udd_g_ctrlreq.callback = NULL;
  403c6c:	4a03      	ldr	r2, [pc, #12]	; (403c7c <udd_ctrl_init+0x10>)
  403c6e:	2300      	movs	r3, #0
  403c70:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  403c72:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
  403c74:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
  403c76:	4a02      	ldr	r2, [pc, #8]	; (403c80 <udd_ctrl_init+0x14>)
  403c78:	7013      	strb	r3, [r2, #0]
  403c7a:	4770      	bx	lr
  403c7c:	2001ab44 	.word	0x2001ab44
  403c80:	2001a260 	.word	0x2001a260

00403c84 <udd_ctrl_stall_data>:
	udd_ack_bank0_received(0);
}


static void udd_ctrl_stall_data(void)
{
  403c84:	b082      	sub	sp, #8
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
  403c86:	2205      	movs	r2, #5
  403c88:	4b10      	ldr	r3, [pc, #64]	; (403ccc <udd_ctrl_stall_data+0x48>)
  403c8a:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
  403c8c:	4a10      	ldr	r2, [pc, #64]	; (403cd0 <udd_ctrl_stall_data+0x4c>)
  403c8e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403c90:	9300      	str	r3, [sp, #0]
  403c92:	9b00      	ldr	r3, [sp, #0]
  403c94:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403c98:	9300      	str	r3, [sp, #0]
  403c9a:	9b00      	ldr	r3, [sp, #0]
  403c9c:	f043 0320 	orr.w	r3, r3, #32
  403ca0:	9300      	str	r3, [sp, #0]
  403ca2:	9b00      	ldr	r3, [sp, #0]
  403ca4:	6313      	str	r3, [r2, #48]	; 0x30
  403ca6:	2300      	movs	r3, #0
  403ca8:	9301      	str	r3, [sp, #4]
  403caa:	9b01      	ldr	r3, [sp, #4]
  403cac:	2b13      	cmp	r3, #19
  403cae:	d806      	bhi.n	403cbe <udd_ctrl_stall_data+0x3a>
  403cb0:	bf00      	nop
  403cb2:	9b01      	ldr	r3, [sp, #4]
  403cb4:	3301      	adds	r3, #1
  403cb6:	9301      	str	r3, [sp, #4]
  403cb8:	9b01      	ldr	r3, [sp, #4]
  403cba:	2b13      	cmp	r3, #19
  403cbc:	d9f8      	bls.n	403cb0 <udd_ctrl_stall_data+0x2c>
  403cbe:	4a04      	ldr	r2, [pc, #16]	; (403cd0 <udd_ctrl_stall_data+0x4c>)
  403cc0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403cc2:	f013 0f20 	tst.w	r3, #32
  403cc6:	d0fb      	beq.n	403cc0 <udd_ctrl_stall_data+0x3c>
}
  403cc8:	b002      	add	sp, #8
  403cca:	4770      	bx	lr
  403ccc:	2001a260 	.word	0x2001a260
  403cd0:	40044000 	.word	0x40044000

00403cd4 <udd_ctrl_send_zlp_in>:


static void udd_ctrl_send_zlp_in(void)
{
  403cd4:	b082      	sub	sp, #8
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
  403cd6:	2203      	movs	r2, #3
  403cd8:	4b10      	ldr	r3, [pc, #64]	; (403d1c <udd_ctrl_send_zlp_in+0x48>)
  403cda:	701a      	strb	r2, [r3, #0]
	// Validate and send empty IN packet on control endpoint
	// Send ZLP on IN endpoint
	udd_set_transmit_ready(0);
  403cdc:	4a10      	ldr	r2, [pc, #64]	; (403d20 <udd_ctrl_send_zlp_in+0x4c>)
  403cde:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403ce0:	9300      	str	r3, [sp, #0]
  403ce2:	9b00      	ldr	r3, [sp, #0]
  403ce4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403ce8:	9300      	str	r3, [sp, #0]
  403cea:	9b00      	ldr	r3, [sp, #0]
  403cec:	f043 0310 	orr.w	r3, r3, #16
  403cf0:	9300      	str	r3, [sp, #0]
  403cf2:	9b00      	ldr	r3, [sp, #0]
  403cf4:	6313      	str	r3, [r2, #48]	; 0x30
  403cf6:	2300      	movs	r3, #0
  403cf8:	9301      	str	r3, [sp, #4]
  403cfa:	9b01      	ldr	r3, [sp, #4]
  403cfc:	2b13      	cmp	r3, #19
  403cfe:	d806      	bhi.n	403d0e <udd_ctrl_send_zlp_in+0x3a>
  403d00:	bf00      	nop
  403d02:	9b01      	ldr	r3, [sp, #4]
  403d04:	3301      	adds	r3, #1
  403d06:	9301      	str	r3, [sp, #4]
  403d08:	9b01      	ldr	r3, [sp, #4]
  403d0a:	2b13      	cmp	r3, #19
  403d0c:	d9f8      	bls.n	403d00 <udd_ctrl_send_zlp_in+0x2c>
  403d0e:	4a04      	ldr	r2, [pc, #16]	; (403d20 <udd_ctrl_send_zlp_in+0x4c>)
  403d10:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403d12:	f013 0f10 	tst.w	r3, #16
  403d16:	d0fb      	beq.n	403d10 <udd_ctrl_send_zlp_in+0x3c>
}
  403d18:	b002      	add	sp, #8
  403d1a:	4770      	bx	lr
  403d1c:	2001a260 	.word	0x2001a260
  403d20:	40044000 	.word	0x40044000

00403d24 <udd_ctrl_endofrequest>:
	// because the buffer of control endpoint is already free
}


static void udd_ctrl_endofrequest(void)
{
  403d24:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
  403d26:	4b02      	ldr	r3, [pc, #8]	; (403d30 <udd_ctrl_endofrequest+0xc>)
  403d28:	691b      	ldr	r3, [r3, #16]
  403d2a:	b103      	cbz	r3, 403d2e <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
  403d2c:	4798      	blx	r3
  403d2e:	bd08      	pop	{r3, pc}
  403d30:	2001ab44 	.word	0x2001ab44

00403d34 <udd_ctrl_in_sent>:
{
  403d34:	b530      	push	{r4, r5, lr}
  403d36:	b08d      	sub	sp, #52	; 0x34
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
  403d38:	4b83      	ldr	r3, [pc, #524]	; (403f48 <udd_ctrl_in_sent+0x214>)
  403d3a:	781b      	ldrb	r3, [r3, #0]
  403d3c:	2b03      	cmp	r3, #3
  403d3e:	d036      	beq.n	403dae <udd_ctrl_in_sent+0x7a>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
  403d40:	4b82      	ldr	r3, [pc, #520]	; (403f4c <udd_ctrl_in_sent+0x218>)
  403d42:	881b      	ldrh	r3, [r3, #0]
  403d44:	4a82      	ldr	r2, [pc, #520]	; (403f50 <udd_ctrl_in_sent+0x21c>)
  403d46:	8994      	ldrh	r4, [r2, #12]
  403d48:	1ae4      	subs	r4, r4, r3
  403d4a:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
  403d4c:	2c00      	cmp	r4, #0
  403d4e:	d15e      	bne.n	403e0e <udd_ctrl_in_sent+0xda>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  403d50:	4a80      	ldr	r2, [pc, #512]	; (403f54 <udd_ctrl_in_sent+0x220>)
  403d52:	8811      	ldrh	r1, [r2, #0]
  403d54:	440b      	add	r3, r1
  403d56:	b29b      	uxth	r3, r3
  403d58:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans)
  403d5a:	4a7d      	ldr	r2, [pc, #500]	; (403f50 <udd_ctrl_in_sent+0x21c>)
  403d5c:	88d2      	ldrh	r2, [r2, #6]
  403d5e:	429a      	cmp	r2, r3
  403d60:	d003      	beq.n	403d6a <udd_ctrl_in_sent+0x36>
				|| b_shortpacket) {
  403d62:	4b7d      	ldr	r3, [pc, #500]	; (403f58 <udd_ctrl_in_sent+0x224>)
  403d64:	781b      	ldrb	r3, [r3, #0]
  403d66:	2b00      	cmp	r3, #0
  403d68:	d045      	beq.n	403df6 <udd_ctrl_in_sent+0xc2>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  403d6a:	2204      	movs	r2, #4
  403d6c:	4b76      	ldr	r3, [pc, #472]	; (403f48 <udd_ctrl_in_sent+0x214>)
  403d6e:	701a      	strb	r2, [r3, #0]
			udd_ack_in_sent(0);
  403d70:	4a7a      	ldr	r2, [pc, #488]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403d72:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403d74:	9303      	str	r3, [sp, #12]
  403d76:	9b03      	ldr	r3, [sp, #12]
  403d78:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403d7c:	9303      	str	r3, [sp, #12]
  403d7e:	9b03      	ldr	r3, [sp, #12]
  403d80:	f023 0301 	bic.w	r3, r3, #1
  403d84:	9303      	str	r3, [sp, #12]
  403d86:	9b03      	ldr	r3, [sp, #12]
  403d88:	6313      	str	r3, [r2, #48]	; 0x30
  403d8a:	2300      	movs	r3, #0
  403d8c:	9304      	str	r3, [sp, #16]
  403d8e:	9b04      	ldr	r3, [sp, #16]
  403d90:	2b13      	cmp	r3, #19
  403d92:	d806      	bhi.n	403da2 <udd_ctrl_in_sent+0x6e>
  403d94:	bf00      	nop
  403d96:	9b04      	ldr	r3, [sp, #16]
  403d98:	3301      	adds	r3, #1
  403d9a:	9304      	str	r3, [sp, #16]
  403d9c:	9b04      	ldr	r3, [sp, #16]
  403d9e:	2b13      	cmp	r3, #19
  403da0:	d9f8      	bls.n	403d94 <udd_ctrl_in_sent+0x60>
  403da2:	4a6e      	ldr	r2, [pc, #440]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403da4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403da6:	f013 0f01 	tst.w	r3, #1
  403daa:	d1fb      	bne.n	403da4 <udd_ctrl_in_sent+0x70>
  403dac:	e021      	b.n	403df2 <udd_ctrl_in_sent+0xbe>
		udd_ack_in_sent(0);
  403dae:	4a6b      	ldr	r2, [pc, #428]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403db0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403db2:	9301      	str	r3, [sp, #4]
  403db4:	9b01      	ldr	r3, [sp, #4]
  403db6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403dba:	9301      	str	r3, [sp, #4]
  403dbc:	9b01      	ldr	r3, [sp, #4]
  403dbe:	f023 0301 	bic.w	r3, r3, #1
  403dc2:	9301      	str	r3, [sp, #4]
  403dc4:	9b01      	ldr	r3, [sp, #4]
  403dc6:	6313      	str	r3, [r2, #48]	; 0x30
  403dc8:	2300      	movs	r3, #0
  403dca:	9302      	str	r3, [sp, #8]
  403dcc:	9b02      	ldr	r3, [sp, #8]
  403dce:	2b13      	cmp	r3, #19
  403dd0:	d806      	bhi.n	403de0 <udd_ctrl_in_sent+0xac>
  403dd2:	bf00      	nop
  403dd4:	9b02      	ldr	r3, [sp, #8]
  403dd6:	3301      	adds	r3, #1
  403dd8:	9302      	str	r3, [sp, #8]
  403dda:	9b02      	ldr	r3, [sp, #8]
  403ddc:	2b13      	cmp	r3, #19
  403dde:	d9f8      	bls.n	403dd2 <udd_ctrl_in_sent+0x9e>
  403de0:	4a5e      	ldr	r2, [pc, #376]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403de2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403de4:	f013 0f01 	tst.w	r3, #1
  403de8:	d1fb      	bne.n	403de2 <udd_ctrl_in_sent+0xae>
		udd_ctrl_endofrequest();
  403dea:	4b5d      	ldr	r3, [pc, #372]	; (403f60 <udd_ctrl_in_sent+0x22c>)
  403dec:	4798      	blx	r3
		udd_ctrl_init();
  403dee:	4b5d      	ldr	r3, [pc, #372]	; (403f64 <udd_ctrl_in_sent+0x230>)
  403df0:	4798      	blx	r3
}
  403df2:	b00d      	add	sp, #52	; 0x34
  403df4:	bd30      	pop	{r4, r5, pc}
		if ((!udd_g_ctrlreq.over_under_run)
  403df6:	4b56      	ldr	r3, [pc, #344]	; (403f50 <udd_ctrl_in_sent+0x21c>)
  403df8:	695b      	ldr	r3, [r3, #20]
  403dfa:	2b00      	cmp	r3, #0
  403dfc:	d077      	beq.n	403eee <udd_ctrl_in_sent+0x1ba>
				|| (!udd_g_ctrlreq.over_under_run())) {
  403dfe:	4798      	blx	r3
  403e00:	2800      	cmp	r0, #0
  403e02:	d074      	beq.n	403eee <udd_ctrl_in_sent+0x1ba>
			udd_ctrl_payload_nb_trans = 0;
  403e04:	2200      	movs	r2, #0
  403e06:	4b51      	ldr	r3, [pc, #324]	; (403f4c <udd_ctrl_in_sent+0x218>)
  403e08:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
  403e0a:	4b51      	ldr	r3, [pc, #324]	; (403f50 <udd_ctrl_in_sent+0x21c>)
  403e0c:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
  403e0e:	2c3f      	cmp	r4, #63	; 0x3f
  403e10:	d96d      	bls.n	403eee <udd_ctrl_in_sent+0x1ba>
		b_shortpacket = false;
  403e12:	2200      	movs	r2, #0
  403e14:	4b50      	ldr	r3, [pc, #320]	; (403f58 <udd_ctrl_in_sent+0x224>)
  403e16:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
  403e18:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  403e1a:	4b4d      	ldr	r3, [pc, #308]	; (403f50 <udd_ctrl_in_sent+0x21c>)
  403e1c:	6898      	ldr	r0, [r3, #8]
  403e1e:	4b4b      	ldr	r3, [pc, #300]	; (403f4c <udd_ctrl_in_sent+0x218>)
  403e20:	881d      	ldrh	r5, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  403e22:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  403e26:	fab3 f383 	clz	r3, r3
  403e2a:	095b      	lsrs	r3, r3, #5
  403e2c:	930b      	str	r3, [sp, #44]	; 0x2c
  __ASM volatile ("cpsid i" : : : "memory");
  403e2e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  403e30:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  403e34:	2200      	movs	r2, #0
  403e36:	4b4c      	ldr	r3, [pc, #304]	; (403f68 <udd_ctrl_in_sent+0x234>)
  403e38:	701a      	strb	r2, [r3, #0]
	return flags;
  403e3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
	if (Is_udd_bank0_received(0)) {
  403e3c:	4b47      	ldr	r3, [pc, #284]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403e3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  403e40:	f013 0f02 	tst.w	r3, #2
  403e44:	d157      	bne.n	403ef6 <udd_ctrl_in_sent+0x1c2>
	for (i = 0; i < nb_remain; i++) {
  403e46:	b14c      	cbz	r4, 403e5c <udd_ctrl_in_sent+0x128>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  403e48:	4428      	add	r0, r5
  403e4a:	4602      	mov	r2, r0
		udd_endpoint_fifo_write(0, *ptr_src++);
  403e4c:	4d43      	ldr	r5, [pc, #268]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403e4e:	f812 3b01 	ldrb.w	r3, [r2], #1
  403e52:	652b      	str	r3, [r5, #80]	; 0x50
	for (i = 0; i < nb_remain; i++) {
  403e54:	1a13      	subs	r3, r2, r0
  403e56:	b2db      	uxtb	r3, r3
  403e58:	42a3      	cmp	r3, r4
  403e5a:	d3f8      	bcc.n	403e4e <udd_ctrl_in_sent+0x11a>
	udd_ctrl_payload_nb_trans += nb_remain;
  403e5c:	4b3b      	ldr	r3, [pc, #236]	; (403f4c <udd_ctrl_in_sent+0x218>)
  403e5e:	881a      	ldrh	r2, [r3, #0]
  403e60:	4414      	add	r4, r2
  403e62:	801c      	strh	r4, [r3, #0]
	udd_set_transmit_ready(0);
  403e64:	4a3d      	ldr	r2, [pc, #244]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403e66:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403e68:	9307      	str	r3, [sp, #28]
  403e6a:	9b07      	ldr	r3, [sp, #28]
  403e6c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403e70:	9307      	str	r3, [sp, #28]
  403e72:	9b07      	ldr	r3, [sp, #28]
  403e74:	f043 0310 	orr.w	r3, r3, #16
  403e78:	9307      	str	r3, [sp, #28]
  403e7a:	9b07      	ldr	r3, [sp, #28]
  403e7c:	6313      	str	r3, [r2, #48]	; 0x30
  403e7e:	2300      	movs	r3, #0
  403e80:	9308      	str	r3, [sp, #32]
  403e82:	9b08      	ldr	r3, [sp, #32]
  403e84:	2b13      	cmp	r3, #19
  403e86:	d806      	bhi.n	403e96 <udd_ctrl_in_sent+0x162>
  403e88:	bf00      	nop
  403e8a:	9b08      	ldr	r3, [sp, #32]
  403e8c:	3301      	adds	r3, #1
  403e8e:	9308      	str	r3, [sp, #32]
  403e90:	9b08      	ldr	r3, [sp, #32]
  403e92:	2b13      	cmp	r3, #19
  403e94:	d9f8      	bls.n	403e88 <udd_ctrl_in_sent+0x154>
  403e96:	4a31      	ldr	r2, [pc, #196]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403e98:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403e9a:	f013 0f10 	tst.w	r3, #16
  403e9e:	d0fb      	beq.n	403e98 <udd_ctrl_in_sent+0x164>
	udd_ack_in_sent(0);
  403ea0:	4a2e      	ldr	r2, [pc, #184]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403ea2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403ea4:	9309      	str	r3, [sp, #36]	; 0x24
  403ea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403ea8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403eac:	9309      	str	r3, [sp, #36]	; 0x24
  403eae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403eb0:	f023 0301 	bic.w	r3, r3, #1
  403eb4:	9309      	str	r3, [sp, #36]	; 0x24
  403eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403eb8:	6313      	str	r3, [r2, #48]	; 0x30
  403eba:	2300      	movs	r3, #0
  403ebc:	930a      	str	r3, [sp, #40]	; 0x28
  403ebe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ec0:	2b13      	cmp	r3, #19
  403ec2:	d806      	bhi.n	403ed2 <udd_ctrl_in_sent+0x19e>
  403ec4:	bf00      	nop
  403ec6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ec8:	3301      	adds	r3, #1
  403eca:	930a      	str	r3, [sp, #40]	; 0x28
  403ecc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ece:	2b13      	cmp	r3, #19
  403ed0:	d9f8      	bls.n	403ec4 <udd_ctrl_in_sent+0x190>
  403ed2:	4a22      	ldr	r2, [pc, #136]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403ed4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403ed6:	f013 0f01 	tst.w	r3, #1
  403eda:	d1fb      	bne.n	403ed4 <udd_ctrl_in_sent+0x1a0>
	if (cpu_irq_is_enabled_flags(flags))
  403edc:	2900      	cmp	r1, #0
  403ede:	d088      	beq.n	403df2 <udd_ctrl_in_sent+0xbe>
		cpu_irq_enable();
  403ee0:	2201      	movs	r2, #1
  403ee2:	4b21      	ldr	r3, [pc, #132]	; (403f68 <udd_ctrl_in_sent+0x234>)
  403ee4:	701a      	strb	r2, [r3, #0]
  403ee6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  403eea:	b662      	cpsie	i
  403eec:	e781      	b.n	403df2 <udd_ctrl_in_sent+0xbe>
		b_shortpacket = true;
  403eee:	2201      	movs	r2, #1
  403ef0:	4b19      	ldr	r3, [pc, #100]	; (403f58 <udd_ctrl_in_sent+0x224>)
  403ef2:	701a      	strb	r2, [r3, #0]
  403ef4:	e791      	b.n	403e1a <udd_ctrl_in_sent+0xe6>
	if (cpu_irq_is_enabled_flags(flags))
  403ef6:	b129      	cbz	r1, 403f04 <udd_ctrl_in_sent+0x1d0>
		cpu_irq_enable();
  403ef8:	2201      	movs	r2, #1
  403efa:	4b1b      	ldr	r3, [pc, #108]	; (403f68 <udd_ctrl_in_sent+0x234>)
  403efc:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  403efe:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  403f02:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  403f04:	2204      	movs	r2, #4
  403f06:	4b10      	ldr	r3, [pc, #64]	; (403f48 <udd_ctrl_in_sent+0x214>)
  403f08:	701a      	strb	r2, [r3, #0]
		udd_ack_in_sent(0);
  403f0a:	4a14      	ldr	r2, [pc, #80]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403f0c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403f0e:	9305      	str	r3, [sp, #20]
  403f10:	9b05      	ldr	r3, [sp, #20]
  403f12:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403f16:	9305      	str	r3, [sp, #20]
  403f18:	9b05      	ldr	r3, [sp, #20]
  403f1a:	f023 0301 	bic.w	r3, r3, #1
  403f1e:	9305      	str	r3, [sp, #20]
  403f20:	9b05      	ldr	r3, [sp, #20]
  403f22:	6313      	str	r3, [r2, #48]	; 0x30
  403f24:	2300      	movs	r3, #0
  403f26:	9306      	str	r3, [sp, #24]
  403f28:	9b06      	ldr	r3, [sp, #24]
  403f2a:	2b13      	cmp	r3, #19
  403f2c:	d806      	bhi.n	403f3c <udd_ctrl_in_sent+0x208>
  403f2e:	bf00      	nop
  403f30:	9b06      	ldr	r3, [sp, #24]
  403f32:	3301      	adds	r3, #1
  403f34:	9306      	str	r3, [sp, #24]
  403f36:	9b06      	ldr	r3, [sp, #24]
  403f38:	2b13      	cmp	r3, #19
  403f3a:	d9f8      	bls.n	403f2e <udd_ctrl_in_sent+0x1fa>
  403f3c:	4a07      	ldr	r2, [pc, #28]	; (403f5c <udd_ctrl_in_sent+0x228>)
  403f3e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403f40:	f013 0f01 	tst.w	r3, #1
  403f44:	d1fb      	bne.n	403f3e <udd_ctrl_in_sent+0x20a>
  403f46:	e754      	b.n	403df2 <udd_ctrl_in_sent+0xbe>
  403f48:	2001a260 	.word	0x2001a260
  403f4c:	2001a25c 	.word	0x2001a25c
  403f50:	2001ab44 	.word	0x2001ab44
  403f54:	2001a25e 	.word	0x2001a25e
  403f58:	2001a259 	.word	0x2001a259
  403f5c:	40044000 	.word	0x40044000
  403f60:	00403d25 	.word	0x00403d25
  403f64:	00403c6d 	.word	0x00403c6d
  403f68:	200001fc 	.word	0x200001fc

00403f6c <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, int status,
		uint8_t ep_num)
{
  403f6c:	b538      	push	{r3, r4, r5, lr}
	if (ptr_job->busy == false) {
  403f6e:	7c43      	ldrb	r3, [r0, #17]
  403f70:	f013 0f10 	tst.w	r3, #16
  403f74:	d016      	beq.n	403fa4 <udd_ep_finish_job+0x38>
  403f76:	460d      	mov	r5, r1
		return; // No on-going job
	}
	ptr_job->busy = false;
  403f78:	7c43      	ldrb	r3, [r0, #17]
  403f7a:	f36f 1304 	bfc	r3, #4, #1
  403f7e:	7443      	strb	r3, [r0, #17]
	if (NULL == ptr_job->call_trans) {
  403f80:	6804      	ldr	r4, [r0, #0]
  403f82:	b17c      	cbz	r4, 403fa4 <udd_ep_finish_job+0x38>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_type_in(ep_num)) {
  403f84:	f102 030c 	add.w	r3, r2, #12
  403f88:	4907      	ldr	r1, [pc, #28]	; (403fa8 <udd_ep_finish_job+0x3c>)
  403f8a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  403f8e:	f413 6f80 	tst.w	r3, #1024	; 0x400
		ep_num |= USB_EP_DIR_IN;
  403f92:	bf18      	it	ne
  403f94:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((status == UDD_EP_TRANSFER_ABORT) ?
  403f98:	6881      	ldr	r1, [r0, #8]
  403f9a:	2d01      	cmp	r5, #1
  403f9c:	bf14      	ite	ne
  403f9e:	2000      	movne	r0, #0
  403fa0:	2001      	moveq	r0, #1
  403fa2:	47a0      	blx	r4
  403fa4:	bd38      	pop	{r3, r4, r5, pc}
  403fa6:	bf00      	nop
  403fa8:	40044000 	.word	0x40044000

00403fac <udd_ep_ack_out_received>:
		UDD_EP_TRANSFER_ABORT : UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}


static void udd_ep_ack_out_received(udd_ep_id_t ep)
{
  403fac:	b430      	push	{r4, r5}
  403fae:	b084      	sub	sp, #16
	bool bank0_received, bank1_received;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  403fb0:	1e41      	subs	r1, r0, #1
  403fb2:	0082      	lsls	r2, r0, #2
  403fb4:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  403fb8:	f502 2280 	add.w	r2, r2, #262144	; 0x40000

	bank0_received = Is_udd_bank0_received(ep);
  403fbc:	6b13      	ldr	r3, [r2, #48]	; 0x30
	bank1_received = Is_udd_bank1_received(ep);
  403fbe:	6b14      	ldr	r4, [r2, #48]	; 0x30

	if (bank0_received && bank1_received) {
  403fc0:	f013 0f02 	tst.w	r3, #2
  403fc4:	d03f      	beq.n	404046 <udd_ep_ack_out_received+0x9a>
  403fc6:	f014 0f40 	tst.w	r4, #64	; 0x40
  403fca:	d108      	bne.n	403fde <udd_ep_ack_out_received+0x32>
		// The only way is to use ptr_job->bank
	} else if (bank0_received) {
		// Must be bank0
		ptr_job->bank = 0;
  403fcc:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  403fd0:	4c36      	ldr	r4, [pc, #216]	; (4040ac <udd_ep_ack_out_received+0x100>)
  403fd2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  403fd6:	7c5c      	ldrb	r4, [r3, #17]
  403fd8:	f36f 0483 	bfc	r4, #2, #2
  403fdc:	745c      	strb	r4, [r3, #17]
	} else {
		// Must be bank1
		ptr_job->bank = 1;
	}
	if (ptr_job->bank == 0) {
  403fde:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  403fe2:	4c32      	ldr	r4, [pc, #200]	; (4040ac <udd_ep_ack_out_received+0x100>)
  403fe4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  403fe8:	7c5b      	ldrb	r3, [r3, #17]
  403fea:	f013 0f0c 	tst.w	r3, #12
  403fee:	d135      	bne.n	40405c <udd_ep_ack_out_received+0xb0>
		udd_ack_bank0_received(ep);
  403ff0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403ff2:	9300      	str	r3, [sp, #0]
  403ff4:	9b00      	ldr	r3, [sp, #0]
  403ff6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  403ffa:	9300      	str	r3, [sp, #0]
  403ffc:	9b00      	ldr	r3, [sp, #0]
  403ffe:	f023 0302 	bic.w	r3, r3, #2
  404002:	9300      	str	r3, [sp, #0]
  404004:	9b00      	ldr	r3, [sp, #0]
  404006:	6313      	str	r3, [r2, #48]	; 0x30
  404008:	2300      	movs	r3, #0
  40400a:	9301      	str	r3, [sp, #4]
  40400c:	9b01      	ldr	r3, [sp, #4]
  40400e:	2b13      	cmp	r3, #19
  404010:	d806      	bhi.n	404020 <udd_ep_ack_out_received+0x74>
  404012:	bf00      	nop
  404014:	9b01      	ldr	r3, [sp, #4]
  404016:	3301      	adds	r3, #1
  404018:	9301      	str	r3, [sp, #4]
  40401a:	9b01      	ldr	r3, [sp, #4]
  40401c:	2b13      	cmp	r3, #19
  40401e:	d9f8      	bls.n	404012 <udd_ep_ack_out_received+0x66>
  404020:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404022:	f013 0f02 	tst.w	r3, #2
  404026:	d1fb      	bne.n	404020 <udd_ep_ack_out_received+0x74>
		if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
  404028:	2800      	cmp	r0, #0
  40402a:	d03c      	beq.n	4040a6 <udd_ep_ack_out_received+0xfa>
  40402c:	2803      	cmp	r0, #3
  40402e:	d03a      	beq.n	4040a6 <udd_ep_ack_out_received+0xfa>
			ptr_job->bank = 1;
  404030:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  404034:	4b1d      	ldr	r3, [pc, #116]	; (4040ac <udd_ep_ack_out_received+0x100>)
  404036:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  40403a:	7c5a      	ldrb	r2, [r3, #17]
  40403c:	2101      	movs	r1, #1
  40403e:	f361 0283 	bfi	r2, r1, #2, #2
  404042:	745a      	strb	r2, [r3, #17]
  404044:	e02f      	b.n	4040a6 <udd_ep_ack_out_received+0xfa>
		ptr_job->bank = 1;
  404046:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  40404a:	4c18      	ldr	r4, [pc, #96]	; (4040ac <udd_ep_ack_out_received+0x100>)
  40404c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  404050:	7c5c      	ldrb	r4, [r3, #17]
  404052:	2501      	movs	r5, #1
  404054:	f365 0483 	bfi	r4, r5, #2, #2
  404058:	745c      	strb	r4, [r3, #17]
  40405a:	e7c0      	b.n	403fde <udd_ep_ack_out_received+0x32>
		}
	} else {
		udd_ack_bank1_received(ep);
  40405c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40405e:	9302      	str	r3, [sp, #8]
  404060:	9b02      	ldr	r3, [sp, #8]
  404062:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404066:	9302      	str	r3, [sp, #8]
  404068:	9b02      	ldr	r3, [sp, #8]
  40406a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  40406e:	9302      	str	r3, [sp, #8]
  404070:	9b02      	ldr	r3, [sp, #8]
  404072:	6313      	str	r3, [r2, #48]	; 0x30
  404074:	2300      	movs	r3, #0
  404076:	9303      	str	r3, [sp, #12]
  404078:	9b03      	ldr	r3, [sp, #12]
  40407a:	2b13      	cmp	r3, #19
  40407c:	d806      	bhi.n	40408c <udd_ep_ack_out_received+0xe0>
  40407e:	bf00      	nop
  404080:	9b03      	ldr	r3, [sp, #12]
  404082:	3301      	adds	r3, #1
  404084:	9303      	str	r3, [sp, #12]
  404086:	9b03      	ldr	r3, [sp, #12]
  404088:	2b13      	cmp	r3, #19
  40408a:	d9f8      	bls.n	40407e <udd_ep_ack_out_received+0xd2>
  40408c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40408e:	f013 0f40 	tst.w	r3, #64	; 0x40
  404092:	d1fb      	bne.n	40408c <udd_ep_ack_out_received+0xe0>
		ptr_job->bank = 0;
  404094:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  404098:	4b04      	ldr	r3, [pc, #16]	; (4040ac <udd_ep_ack_out_received+0x100>)
  40409a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  40409e:	7c4b      	ldrb	r3, [r1, #17]
  4040a0:	f36f 0383 	bfc	r3, #2, #2
  4040a4:	744b      	strb	r3, [r1, #17]
	}
}
  4040a6:	b004      	add	sp, #16
  4040a8:	bc30      	pop	{r4, r5}
  4040aa:	4770      	bx	lr
  4040ac:	2001a264 	.word	0x2001a264

004040b0 <udd_ep_in_sent>:
	return is_short_pkt;
}


static bool udd_ep_in_sent(udd_ep_id_t ep, bool b_tx)
{
  4040b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4040b4:	b082      	sub	sp, #8
  4040b6:	468c      	mov	ip, r1
	bool b_shortpacket;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  4040b8:	4680      	mov	r8, r0
  4040ba:	1e46      	subs	r6, r0, #1

	// All banks are full
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  4040bc:	eb06 0286 	add.w	r2, r6, r6, lsl #2
  4040c0:	4b6c      	ldr	r3, [pc, #432]	; (404274 <udd_ep_in_sent+0x1c4>)
  4040c2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4040c6:	7c5b      	ldrb	r3, [r3, #17]
  4040c8:	f3c3 0381 	ubfx	r3, r3, #2, #2
  4040cc:	2800      	cmp	r0, #0
  4040ce:	f000 80c4 	beq.w	40425a <udd_ep_in_sent+0x1aa>
  4040d2:	2803      	cmp	r0, #3
  4040d4:	bf0c      	ite	eq
  4040d6:	2201      	moveq	r2, #1
  4040d8:	2202      	movne	r2, #2
  4040da:	429a      	cmp	r2, r3
  4040dc:	f340 80bf 	ble.w	40425e <udd_ep_in_sent+0x1ae>
		return true; // Data pending
	}

	// No more data in buffer
	if (ptr_job->buf_cnt >= ptr_job->buf_size && !ptr_job->b_shortpacket) {
  4040e0:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4040e4:	4a63      	ldr	r2, [pc, #396]	; (404274 <udd_ep_in_sent+0x1c4>)
  4040e6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4040ea:	68da      	ldr	r2, [r3, #12]
  4040ec:	689b      	ldr	r3, [r3, #8]
  4040ee:	429a      	cmp	r2, r3
  4040f0:	d309      	bcc.n	404106 <udd_ep_in_sent+0x56>
  4040f2:	eb06 0186 	add.w	r1, r6, r6, lsl #2
  4040f6:	4c5f      	ldr	r4, [pc, #380]	; (404274 <udd_ep_in_sent+0x1c4>)
  4040f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
  4040fc:	7c49      	ldrb	r1, [r1, #17]
  4040fe:	f011 0f40 	tst.w	r1, #64	; 0x40
  404102:	f000 80b0 	beq.w	404266 <udd_ep_in_sent+0x1b6>
	uint8_t *ptr_src = &ptr_job->buf[ptr_job->buf_cnt];
  404106:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  40410a:	495a      	ldr	r1, [pc, #360]	; (404274 <udd_ep_in_sent+0x1c4>)
  40410c:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  404110:	686c      	ldr	r4, [r5, #4]
  404112:	4414      	add	r4, r2
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  404114:	1a99      	subs	r1, r3, r2
	uint32_t pkt_size = ptr_job->size;
  404116:	8a2b      	ldrh	r3, [r5, #16]
  404118:	f3c3 0709 	ubfx	r7, r3, #0, #10
	if (nb_remain < pkt_size) {
  40411c:	42b9      	cmp	r1, r7
		pkt_size = nb_remain;
  40411e:	bf3a      	itte	cc
  404120:	460f      	movcc	r7, r1
		is_short_pkt = true;
  404122:	f04f 0e01 	movcc.w	lr, #1
	bool is_short_pkt = false;
  404126:	f04f 0e00 	movcs.w	lr, #0
	ptr_job->buf_cnt += pkt_size;
  40412a:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  40412e:	4951      	ldr	r1, [pc, #324]	; (404274 <udd_ep_in_sent+0x1c4>)
  404130:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  404134:	443a      	add	r2, r7
  404136:	60da      	str	r2, [r3, #12]
	for (; pkt_size >= 8; pkt_size -= 8) {
  404138:	2f07      	cmp	r7, #7
  40413a:	d92b      	bls.n	404194 <udd_ep_in_sent+0xe4>
  40413c:	f104 0308 	add.w	r3, r4, #8
  404140:	463d      	mov	r5, r7
  404142:	0082      	lsls	r2, r0, #2
  404144:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  404148:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40414c:	f813 1c08 	ldrb.w	r1, [r3, #-8]
  404150:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404152:	f813 1c07 	ldrb.w	r1, [r3, #-7]
  404156:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404158:	f813 1c06 	ldrb.w	r1, [r3, #-6]
  40415c:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40415e:	f813 1c05 	ldrb.w	r1, [r3, #-5]
  404162:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404164:	f813 1c04 	ldrb.w	r1, [r3, #-4]
  404168:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40416a:	f813 1c03 	ldrb.w	r1, [r3, #-3]
  40416e:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404170:	f813 1c02 	ldrb.w	r1, [r3, #-2]
  404174:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404176:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  40417a:	6511      	str	r1, [r2, #80]	; 0x50
	for (; pkt_size >= 8; pkt_size -= 8) {
  40417c:	3d08      	subs	r5, #8
  40417e:	3308      	adds	r3, #8
  404180:	2d07      	cmp	r5, #7
  404182:	d8e3      	bhi.n	40414c <udd_ep_in_sent+0x9c>
  404184:	f1a7 0308 	sub.w	r3, r7, #8
  404188:	f023 0307 	bic.w	r3, r3, #7
  40418c:	3308      	adds	r3, #8
  40418e:	441c      	add	r4, r3
  404190:	f007 0707 	and.w	r7, r7, #7
	for (; pkt_size; pkt_size--) {
  404194:	b14f      	cbz	r7, 4041aa <udd_ep_in_sent+0xfa>
  404196:	19e3      	adds	r3, r4, r7
		udd_endpoint_fifo_write(ep, *ptr_src++);
  404198:	4937      	ldr	r1, [pc, #220]	; (404278 <udd_ep_in_sent+0x1c8>)
  40419a:	f108 0814 	add.w	r8, r8, #20
  40419e:	f814 2b01 	ldrb.w	r2, [r4], #1
  4041a2:	f841 2028 	str.w	r2, [r1, r8, lsl #2]
	for (; pkt_size; pkt_size--) {
  4041a6:	429c      	cmp	r4, r3
  4041a8:	d1f9      	bne.n	40419e <udd_ep_in_sent+0xee>
	ptr_job->bank++;
  4041aa:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4041ae:	4a31      	ldr	r2, [pc, #196]	; (404274 <udd_ep_in_sent+0x1c4>)
  4041b0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4041b4:	7c5a      	ldrb	r2, [r3, #17]
  4041b6:	f3c2 0181 	ubfx	r1, r2, #2, #2
  4041ba:	3101      	adds	r1, #1
  4041bc:	f361 0283 	bfi	r2, r1, #2, #2
  4041c0:	745a      	strb	r2, [r3, #17]

	// Fill FIFO
	b_shortpacket = udd_ep_write_fifo(ep);

	// Data is ready to send
	if (b_tx) {
  4041c2:	f1bc 0f00 	cmp.w	ip, #0
  4041c6:	d020      	beq.n	40420a <udd_ep_in_sent+0x15a>
  4041c8:	0080      	lsls	r0, r0, #2
  4041ca:	f100 2040 	add.w	r0, r0, #1073758208	; 0x40004000
  4041ce:	f500 2080 	add.w	r0, r0, #262144	; 0x40000
		udd_set_transmit_ready(ep);
  4041d2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4041d4:	9300      	str	r3, [sp, #0]
  4041d6:	9b00      	ldr	r3, [sp, #0]
  4041d8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4041dc:	9300      	str	r3, [sp, #0]
  4041de:	9b00      	ldr	r3, [sp, #0]
  4041e0:	f043 0310 	orr.w	r3, r3, #16
  4041e4:	9300      	str	r3, [sp, #0]
  4041e6:	9b00      	ldr	r3, [sp, #0]
  4041e8:	6303      	str	r3, [r0, #48]	; 0x30
  4041ea:	2300      	movs	r3, #0
  4041ec:	9301      	str	r3, [sp, #4]
  4041ee:	9b01      	ldr	r3, [sp, #4]
  4041f0:	2b13      	cmp	r3, #19
  4041f2:	d806      	bhi.n	404202 <udd_ep_in_sent+0x152>
  4041f4:	bf00      	nop
  4041f6:	9b01      	ldr	r3, [sp, #4]
  4041f8:	3301      	adds	r3, #1
  4041fa:	9301      	str	r3, [sp, #4]
  4041fc:	9b01      	ldr	r3, [sp, #4]
  4041fe:	2b13      	cmp	r3, #19
  404200:	d9f8      	bls.n	4041f4 <udd_ep_in_sent+0x144>
  404202:	6b03      	ldr	r3, [r0, #48]	; 0x30
  404204:	f013 0f10 	tst.w	r3, #16
  404208:	d0fb      	beq.n	404202 <udd_ep_in_sent+0x152>
	}
	// Short PKT? no need to send it again.
	if (b_shortpacket) {
  40420a:	f1be 0f00 	cmp.w	lr, #0
  40420e:	d008      	beq.n	404222 <udd_ep_in_sent+0x172>
		ptr_job->b_shortpacket = false;
  404210:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  404214:	4a17      	ldr	r2, [pc, #92]	; (404274 <udd_ep_in_sent+0x1c4>)
  404216:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40421a:	7c5a      	ldrb	r2, [r3, #17]
  40421c:	f36f 1286 	bfc	r2, #6, #1
  404220:	745a      	strb	r2, [r3, #17]
	}
	// All transfer done, including ZLP, Finish Job
	if ((ptr_job->buf_cnt >= ptr_job->buf_size)
  404222:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  404226:	4a13      	ldr	r2, [pc, #76]	; (404274 <udd_ep_in_sent+0x1c4>)
  404228:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40422c:	68da      	ldr	r2, [r3, #12]
  40422e:	689b      	ldr	r3, [r3, #8]
  404230:	429a      	cmp	r2, r3
  404232:	d31a      	bcc.n	40426a <udd_ep_in_sent+0x1ba>
			&& (!ptr_job->b_shortpacket)) {
  404234:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  404238:	4a0e      	ldr	r2, [pc, #56]	; (404274 <udd_ep_in_sent+0x1c4>)
  40423a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40423e:	7c5b      	ldrb	r3, [r3, #17]
  404240:	f013 0f40 	tst.w	r3, #64	; 0x40
  404244:	d113      	bne.n	40426e <udd_ep_in_sent+0x1be>
		ptr_job->b_buf_end = true;
  404246:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40424a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  40424e:	7c73      	ldrb	r3, [r6, #17]
  404250:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404254:	7473      	strb	r3, [r6, #17]
		return false;
  404256:	2000      	movs	r0, #0
  404258:	e002      	b.n	404260 <udd_ep_in_sent+0x1b0>
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  40425a:	2201      	movs	r2, #1
  40425c:	e73d      	b.n	4040da <udd_ep_in_sent+0x2a>
		return true; // Data pending
  40425e:	2001      	movs	r0, #1
	}
	return true; // Pending
}
  404260:	b002      	add	sp, #8
  404262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
  404266:	2000      	movs	r0, #0
  404268:	e7fa      	b.n	404260 <udd_ep_in_sent+0x1b0>
	return true; // Pending
  40426a:	2001      	movs	r0, #1
  40426c:	e7f8      	b.n	404260 <udd_ep_in_sent+0x1b0>
  40426e:	2001      	movs	r0, #1
  404270:	e7f6      	b.n	404260 <udd_ep_in_sent+0x1b0>
  404272:	bf00      	nop
  404274:	2001a264 	.word	0x2001a264
  404278:	40044000 	.word	0x40044000

0040427c <UDP_Handler>:
{
  40427c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404280:	b0b3      	sub	sp, #204	; 0xcc
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
  404282:	4b77      	ldr	r3, [pc, #476]	; (404460 <UDP_Handler+0x1e4>)
  404284:	4798      	blx	r3
  404286:	b920      	cbnz	r0, 404292 <UDP_Handler+0x16>
  404288:	4b76      	ldr	r3, [pc, #472]	; (404464 <UDP_Handler+0x1e8>)
  40428a:	69db      	ldr	r3, [r3, #28]
  40428c:	f413 7f80 	tst.w	r3, #256	; 0x100
  404290:	d048      	beq.n	404324 <UDP_Handler+0xa8>
	udd_enable_periph_ck();
  404292:	2030      	movs	r0, #48	; 0x30
  404294:	4b74      	ldr	r3, [pc, #464]	; (404468 <UDP_Handler+0x1ec>)
  404296:	4798      	blx	r3
	if (Is_udd_sof_interrupt_enabled() && Is_udd_sof()) {
  404298:	4b72      	ldr	r3, [pc, #456]	; (404464 <UDP_Handler+0x1e8>)
  40429a:	699b      	ldr	r3, [r3, #24]
  40429c:	f413 6f00 	tst.w	r3, #2048	; 0x800
  4042a0:	d004      	beq.n	4042ac <UDP_Handler+0x30>
  4042a2:	4b70      	ldr	r3, [pc, #448]	; (404464 <UDP_Handler+0x1e8>)
  4042a4:	69db      	ldr	r3, [r3, #28]
  4042a6:	f413 6f00 	tst.w	r3, #2048	; 0x800
  4042aa:	d144      	bne.n	404336 <UDP_Handler+0xba>
	if (!Is_udd_endpoint_interrupt(0))
  4042ac:	4b6d      	ldr	r3, [pc, #436]	; (404464 <UDP_Handler+0x1e8>)
  4042ae:	69db      	ldr	r3, [r3, #28]
  4042b0:	f013 0f01 	tst.w	r3, #1
  4042b4:	f000 8266 	beq.w	404784 <UDP_Handler+0x508>
	if (Is_udd_setup_received(0)) {
  4042b8:	4b6a      	ldr	r3, [pc, #424]	; (404464 <UDP_Handler+0x1e8>)
  4042ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4042bc:	f013 0f04 	tst.w	r3, #4
  4042c0:	d142      	bne.n	404348 <UDP_Handler+0xcc>
	if (Is_udd_in_sent(0)) {
  4042c2:	4b68      	ldr	r3, [pc, #416]	; (404464 <UDP_Handler+0x1e8>)
  4042c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4042c6:	f013 0f01 	tst.w	r3, #1
  4042ca:	f040 8131 	bne.w	404530 <UDP_Handler+0x2b4>
	if (Is_udd_bank0_received(0)) {
  4042ce:	4b65      	ldr	r3, [pc, #404]	; (404464 <UDP_Handler+0x1e8>)
  4042d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4042d2:	f013 0f02 	tst.w	r3, #2
  4042d6:	f040 812e 	bne.w	404536 <UDP_Handler+0x2ba>
	if (Is_udd_stall(0)) {
  4042da:	4b62      	ldr	r3, [pc, #392]	; (404464 <UDP_Handler+0x1e8>)
  4042dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4042de:	f013 0f08 	tst.w	r3, #8
  4042e2:	f000 824f 	beq.w	404784 <UDP_Handler+0x508>
		udd_ack_stall(0);
  4042e6:	4a5f      	ldr	r2, [pc, #380]	; (404464 <UDP_Handler+0x1e8>)
  4042e8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4042ea:	9300      	str	r3, [sp, #0]
  4042ec:	9b00      	ldr	r3, [sp, #0]
  4042ee:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4042f2:	9300      	str	r3, [sp, #0]
  4042f4:	9b00      	ldr	r3, [sp, #0]
  4042f6:	f023 0308 	bic.w	r3, r3, #8
  4042fa:	9300      	str	r3, [sp, #0]
  4042fc:	9b00      	ldr	r3, [sp, #0]
  4042fe:	6313      	str	r3, [r2, #48]	; 0x30
  404300:	2300      	movs	r3, #0
  404302:	9301      	str	r3, [sp, #4]
  404304:	9b01      	ldr	r3, [sp, #4]
  404306:	2b13      	cmp	r3, #19
  404308:	d806      	bhi.n	404318 <UDP_Handler+0x9c>
  40430a:	bf00      	nop
  40430c:	9b01      	ldr	r3, [sp, #4]
  40430e:	3301      	adds	r3, #1
  404310:	9301      	str	r3, [sp, #4]
  404312:	9b01      	ldr	r3, [sp, #4]
  404314:	2b13      	cmp	r3, #19
  404316:	d9f8      	bls.n	40430a <UDP_Handler+0x8e>
  404318:	4a52      	ldr	r2, [pc, #328]	; (404464 <UDP_Handler+0x1e8>)
  40431a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40431c:	f013 0f08 	tst.w	r3, #8
  404320:	d1fb      	bne.n	40431a <UDP_Handler+0x9e>
  404322:	e005      	b.n	404330 <UDP_Handler+0xb4>
  __ASM volatile ("cpsid i" : : : "memory");
  404324:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404326:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
  40432a:	2200      	movs	r2, #0
  40432c:	4b4f      	ldr	r3, [pc, #316]	; (40446c <UDP_Handler+0x1f0>)
  40432e:	701a      	strb	r2, [r3, #0]
}
  404330:	b033      	add	sp, #204	; 0xcc
  404332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		udd_ack_sof();
  404336:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40433a:	4b4a      	ldr	r3, [pc, #296]	; (404464 <UDP_Handler+0x1e8>)
  40433c:	621a      	str	r2, [r3, #32]
		udc_sof_notify();
  40433e:	4b4c      	ldr	r3, [pc, #304]	; (404470 <UDP_Handler+0x1f4>)
  404340:	4798      	blx	r3
		UDC_SOF_EVENT();
  404342:	4b4c      	ldr	r3, [pc, #304]	; (404474 <UDP_Handler+0x1f8>)
  404344:	4798      	blx	r3
		goto udd_interrupt_sof_end;
  404346:	e7f3      	b.n	404330 <UDP_Handler+0xb4>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
  404348:	4b4b      	ldr	r3, [pc, #300]	; (404478 <UDP_Handler+0x1fc>)
  40434a:	781b      	ldrb	r3, [r3, #0]
  40434c:	bb33      	cbnz	r3, 40439c <UDP_Handler+0x120>
	if (8 != udd_byte_count(0)) {
  40434e:	4b45      	ldr	r3, [pc, #276]	; (404464 <UDP_Handler+0x1e8>)
  404350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  404352:	f3c3 430a 	ubfx	r3, r3, #16, #11
  404356:	2b08      	cmp	r3, #8
  404358:	d025      	beq.n	4043a6 <UDP_Handler+0x12a>
		udd_ack_setup_received(0);
  40435a:	4a42      	ldr	r2, [pc, #264]	; (404464 <UDP_Handler+0x1e8>)
  40435c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40435e:	9302      	str	r3, [sp, #8]
  404360:	9b02      	ldr	r3, [sp, #8]
  404362:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404366:	9302      	str	r3, [sp, #8]
  404368:	9b02      	ldr	r3, [sp, #8]
  40436a:	f023 0304 	bic.w	r3, r3, #4
  40436e:	9302      	str	r3, [sp, #8]
  404370:	9b02      	ldr	r3, [sp, #8]
  404372:	6313      	str	r3, [r2, #48]	; 0x30
  404374:	2300      	movs	r3, #0
  404376:	9303      	str	r3, [sp, #12]
  404378:	9b03      	ldr	r3, [sp, #12]
  40437a:	2b13      	cmp	r3, #19
  40437c:	d806      	bhi.n	40438c <UDP_Handler+0x110>
  40437e:	bf00      	nop
  404380:	9b03      	ldr	r3, [sp, #12]
  404382:	3301      	adds	r3, #1
  404384:	9303      	str	r3, [sp, #12]
  404386:	9b03      	ldr	r3, [sp, #12]
  404388:	2b13      	cmp	r3, #19
  40438a:	d9f8      	bls.n	40437e <UDP_Handler+0x102>
  40438c:	4a35      	ldr	r2, [pc, #212]	; (404464 <UDP_Handler+0x1e8>)
  40438e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404390:	f013 0f04 	tst.w	r3, #4
  404394:	d1fb      	bne.n	40438e <UDP_Handler+0x112>
		udd_ctrl_stall_data();
  404396:	4b39      	ldr	r3, [pc, #228]	; (40447c <UDP_Handler+0x200>)
  404398:	4798      	blx	r3
  40439a:	e7c9      	b.n	404330 <UDP_Handler+0xb4>
		udd_ctrl_endofrequest();
  40439c:	4b38      	ldr	r3, [pc, #224]	; (404480 <UDP_Handler+0x204>)
  40439e:	4798      	blx	r3
		udd_ctrl_init();
  4043a0:	4b38      	ldr	r3, [pc, #224]	; (404484 <UDP_Handler+0x208>)
  4043a2:	4798      	blx	r3
  4043a4:	e7d3      	b.n	40434e <UDP_Handler+0xd2>
  4043a6:	4b38      	ldr	r3, [pc, #224]	; (404488 <UDP_Handler+0x20c>)
  4043a8:	f103 0008 	add.w	r0, r3, #8
			udd_endpoint_fifo_read(0);
  4043ac:	492d      	ldr	r1, [pc, #180]	; (404464 <UDP_Handler+0x1e8>)
  4043ae:	6d0a      	ldr	r2, [r1, #80]	; 0x50
		((uint8_t *) & udd_g_ctrlreq.req)[i] =
  4043b0:	f803 2f01 	strb.w	r2, [r3, #1]!
	for (i = 0; i < 8; i++) {
  4043b4:	4283      	cmp	r3, r0
  4043b6:	d1fa      	bne.n	4043ae <UDP_Handler+0x132>
	if (udc_process_setup() == false) {
  4043b8:	4b34      	ldr	r3, [pc, #208]	; (40448c <UDP_Handler+0x210>)
  4043ba:	4798      	blx	r3
  4043bc:	bb00      	cbnz	r0, 404400 <UDP_Handler+0x184>
		udd_ack_setup_received(0);
  4043be:	4a29      	ldr	r2, [pc, #164]	; (404464 <UDP_Handler+0x1e8>)
  4043c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4043c2:	9304      	str	r3, [sp, #16]
  4043c4:	9b04      	ldr	r3, [sp, #16]
  4043c6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4043ca:	9304      	str	r3, [sp, #16]
  4043cc:	9b04      	ldr	r3, [sp, #16]
  4043ce:	f023 0304 	bic.w	r3, r3, #4
  4043d2:	9304      	str	r3, [sp, #16]
  4043d4:	9b04      	ldr	r3, [sp, #16]
  4043d6:	6313      	str	r3, [r2, #48]	; 0x30
  4043d8:	2300      	movs	r3, #0
  4043da:	9305      	str	r3, [sp, #20]
  4043dc:	9b05      	ldr	r3, [sp, #20]
  4043de:	2b13      	cmp	r3, #19
  4043e0:	d806      	bhi.n	4043f0 <UDP_Handler+0x174>
  4043e2:	bf00      	nop
  4043e4:	9b05      	ldr	r3, [sp, #20]
  4043e6:	3301      	adds	r3, #1
  4043e8:	9305      	str	r3, [sp, #20]
  4043ea:	9b05      	ldr	r3, [sp, #20]
  4043ec:	2b13      	cmp	r3, #19
  4043ee:	d9f8      	bls.n	4043e2 <UDP_Handler+0x166>
  4043f0:	4a1c      	ldr	r2, [pc, #112]	; (404464 <UDP_Handler+0x1e8>)
  4043f2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4043f4:	f013 0f04 	tst.w	r3, #4
  4043f8:	d1fb      	bne.n	4043f2 <UDP_Handler+0x176>
		udd_ctrl_stall_data();
  4043fa:	4b20      	ldr	r3, [pc, #128]	; (40447c <UDP_Handler+0x200>)
  4043fc:	4798      	blx	r3
  4043fe:	e797      	b.n	404330 <UDP_Handler+0xb4>
	if (Udd_setup_is_in()) {
  404400:	4b23      	ldr	r3, [pc, #140]	; (404490 <UDP_Handler+0x214>)
  404402:	f993 3000 	ldrsb.w	r3, [r3]
  404406:	2b00      	cmp	r3, #0
  404408:	db48      	blt.n	40449c <UDP_Handler+0x220>
		udd_ack_setup_received(0);
  40440a:	4a16      	ldr	r2, [pc, #88]	; (404464 <UDP_Handler+0x1e8>)
  40440c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40440e:	930a      	str	r3, [sp, #40]	; 0x28
  404410:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404412:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404416:	930a      	str	r3, [sp, #40]	; 0x28
  404418:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40441a:	f023 0304 	bic.w	r3, r3, #4
  40441e:	930a      	str	r3, [sp, #40]	; 0x28
  404420:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404422:	6313      	str	r3, [r2, #48]	; 0x30
  404424:	2300      	movs	r3, #0
  404426:	930b      	str	r3, [sp, #44]	; 0x2c
  404428:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40442a:	2b13      	cmp	r3, #19
  40442c:	d806      	bhi.n	40443c <UDP_Handler+0x1c0>
  40442e:	bf00      	nop
  404430:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404432:	3301      	adds	r3, #1
  404434:	930b      	str	r3, [sp, #44]	; 0x2c
  404436:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404438:	2b13      	cmp	r3, #19
  40443a:	d9f8      	bls.n	40442e <UDP_Handler+0x1b2>
  40443c:	4a09      	ldr	r2, [pc, #36]	; (404464 <UDP_Handler+0x1e8>)
  40443e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404440:	f013 0f04 	tst.w	r3, #4
  404444:	d1fb      	bne.n	40443e <UDP_Handler+0x1c2>
		if (0 == udd_g_ctrlreq.req.wLength) {
  404446:	4b12      	ldr	r3, [pc, #72]	; (404490 <UDP_Handler+0x214>)
  404448:	88db      	ldrh	r3, [r3, #6]
  40444a:	2b00      	cmp	r3, #0
  40444c:	d06d      	beq.n	40452a <UDP_Handler+0x2ae>
		udd_ctrl_prev_payload_nb_trans = 0;
  40444e:	2300      	movs	r3, #0
  404450:	4a10      	ldr	r2, [pc, #64]	; (404494 <UDP_Handler+0x218>)
  404452:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  404454:	4a10      	ldr	r2, [pc, #64]	; (404498 <UDP_Handler+0x21c>)
  404456:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
  404458:	2201      	movs	r2, #1
  40445a:	4b07      	ldr	r3, [pc, #28]	; (404478 <UDP_Handler+0x1fc>)
  40445c:	701a      	strb	r2, [r3, #0]
  40445e:	e767      	b.n	404330 <UDP_Handler+0xb4>
  404460:	004039b9 	.word	0x004039b9
  404464:	40044000 	.word	0x40044000
  404468:	0040384d 	.word	0x0040384d
  40446c:	200001fc 	.word	0x200001fc
  404470:	00402d25 	.word	0x00402d25
  404474:	00408275 	.word	0x00408275
  404478:	2001a260 	.word	0x2001a260
  40447c:	00403c85 	.word	0x00403c85
  404480:	00403d25 	.word	0x00403d25
  404484:	00403c6d 	.word	0x00403c6d
  404488:	2001ab43 	.word	0x2001ab43
  40448c:	00402d65 	.word	0x00402d65
  404490:	2001ab44 	.word	0x2001ab44
  404494:	2001a25e 	.word	0x2001a25e
  404498:	2001a25c 	.word	0x2001a25c
		udd_set_endpoint_direction_in(0);
  40449c:	4a8e      	ldr	r2, [pc, #568]	; (4046d8 <UDP_Handler+0x45c>)
  40449e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4044a0:	9306      	str	r3, [sp, #24]
  4044a2:	9b06      	ldr	r3, [sp, #24]
  4044a4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4044a8:	9306      	str	r3, [sp, #24]
  4044aa:	9b06      	ldr	r3, [sp, #24]
  4044ac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4044b0:	9306      	str	r3, [sp, #24]
  4044b2:	9b06      	ldr	r3, [sp, #24]
  4044b4:	6313      	str	r3, [r2, #48]	; 0x30
  4044b6:	2300      	movs	r3, #0
  4044b8:	9307      	str	r3, [sp, #28]
  4044ba:	9b07      	ldr	r3, [sp, #28]
  4044bc:	2b13      	cmp	r3, #19
  4044be:	d806      	bhi.n	4044ce <UDP_Handler+0x252>
  4044c0:	bf00      	nop
  4044c2:	9b07      	ldr	r3, [sp, #28]
  4044c4:	3301      	adds	r3, #1
  4044c6:	9307      	str	r3, [sp, #28]
  4044c8:	9b07      	ldr	r3, [sp, #28]
  4044ca:	2b13      	cmp	r3, #19
  4044cc:	d9f8      	bls.n	4044c0 <UDP_Handler+0x244>
  4044ce:	4a82      	ldr	r2, [pc, #520]	; (4046d8 <UDP_Handler+0x45c>)
  4044d0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4044d2:	f013 0f80 	tst.w	r3, #128	; 0x80
  4044d6:	d0fb      	beq.n	4044d0 <UDP_Handler+0x254>
		udd_ack_setup_received(0);
  4044d8:	4a7f      	ldr	r2, [pc, #508]	; (4046d8 <UDP_Handler+0x45c>)
  4044da:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4044dc:	9308      	str	r3, [sp, #32]
  4044de:	9b08      	ldr	r3, [sp, #32]
  4044e0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4044e4:	9308      	str	r3, [sp, #32]
  4044e6:	9b08      	ldr	r3, [sp, #32]
  4044e8:	f023 0304 	bic.w	r3, r3, #4
  4044ec:	9308      	str	r3, [sp, #32]
  4044ee:	9b08      	ldr	r3, [sp, #32]
  4044f0:	6313      	str	r3, [r2, #48]	; 0x30
  4044f2:	2300      	movs	r3, #0
  4044f4:	9309      	str	r3, [sp, #36]	; 0x24
  4044f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4044f8:	2b13      	cmp	r3, #19
  4044fa:	d806      	bhi.n	40450a <UDP_Handler+0x28e>
  4044fc:	bf00      	nop
  4044fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404500:	3301      	adds	r3, #1
  404502:	9309      	str	r3, [sp, #36]	; 0x24
  404504:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404506:	2b13      	cmp	r3, #19
  404508:	d9f8      	bls.n	4044fc <UDP_Handler+0x280>
  40450a:	4a73      	ldr	r2, [pc, #460]	; (4046d8 <UDP_Handler+0x45c>)
  40450c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40450e:	f013 0f04 	tst.w	r3, #4
  404512:	d1fb      	bne.n	40450c <UDP_Handler+0x290>
		udd_ctrl_prev_payload_nb_trans = 0;
  404514:	2300      	movs	r3, #0
  404516:	4a71      	ldr	r2, [pc, #452]	; (4046dc <UDP_Handler+0x460>)
  404518:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  40451a:	4a71      	ldr	r2, [pc, #452]	; (4046e0 <UDP_Handler+0x464>)
  40451c:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
  40451e:	2202      	movs	r2, #2
  404520:	4b70      	ldr	r3, [pc, #448]	; (4046e4 <UDP_Handler+0x468>)
  404522:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
  404524:	4b70      	ldr	r3, [pc, #448]	; (4046e8 <UDP_Handler+0x46c>)
  404526:	4798      	blx	r3
  404528:	e702      	b.n	404330 <UDP_Handler+0xb4>
			udd_ctrl_send_zlp_in();
  40452a:	4b70      	ldr	r3, [pc, #448]	; (4046ec <UDP_Handler+0x470>)
  40452c:	4798      	blx	r3
  40452e:	e6ff      	b.n	404330 <UDP_Handler+0xb4>
		udd_ctrl_in_sent();
  404530:	4b6d      	ldr	r3, [pc, #436]	; (4046e8 <UDP_Handler+0x46c>)
  404532:	4798      	blx	r3
  404534:	e6fc      	b.n	404330 <UDP_Handler+0xb4>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
  404536:	4b6b      	ldr	r3, [pc, #428]	; (4046e4 <UDP_Handler+0x468>)
  404538:	781b      	ldrb	r3, [r3, #0]
  40453a:	2b01      	cmp	r3, #1
  40453c:	d029      	beq.n	404592 <UDP_Handler+0x316>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
  40453e:	2b02      	cmp	r3, #2
  404540:	d004      	beq.n	40454c <UDP_Handler+0x2d0>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
  404542:	2b04      	cmp	r3, #4
  404544:	d002      	beq.n	40454c <UDP_Handler+0x2d0>
			udd_ctrl_stall_data();
  404546:	4b6a      	ldr	r3, [pc, #424]	; (4046f0 <UDP_Handler+0x474>)
  404548:	4798      	blx	r3
  40454a:	e001      	b.n	404550 <UDP_Handler+0x2d4>
			udd_ctrl_endofrequest();
  40454c:	4b69      	ldr	r3, [pc, #420]	; (4046f4 <UDP_Handler+0x478>)
  40454e:	4798      	blx	r3
		udd_ack_bank0_received(0);
  404550:	4a61      	ldr	r2, [pc, #388]	; (4046d8 <UDP_Handler+0x45c>)
  404552:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404554:	930c      	str	r3, [sp, #48]	; 0x30
  404556:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404558:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40455c:	930c      	str	r3, [sp, #48]	; 0x30
  40455e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404560:	f023 0302 	bic.w	r3, r3, #2
  404564:	930c      	str	r3, [sp, #48]	; 0x30
  404566:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404568:	6313      	str	r3, [r2, #48]	; 0x30
  40456a:	2300      	movs	r3, #0
  40456c:	930d      	str	r3, [sp, #52]	; 0x34
  40456e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404570:	2b13      	cmp	r3, #19
  404572:	d806      	bhi.n	404582 <UDP_Handler+0x306>
  404574:	bf00      	nop
  404576:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404578:	3301      	adds	r3, #1
  40457a:	930d      	str	r3, [sp, #52]	; 0x34
  40457c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40457e:	2b13      	cmp	r3, #19
  404580:	d9f8      	bls.n	404574 <UDP_Handler+0x2f8>
  404582:	4a55      	ldr	r2, [pc, #340]	; (4046d8 <UDP_Handler+0x45c>)
  404584:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404586:	f013 0f02 	tst.w	r3, #2
  40458a:	d1fb      	bne.n	404584 <UDP_Handler+0x308>
		udd_ctrl_init();
  40458c:	4b5a      	ldr	r3, [pc, #360]	; (4046f8 <UDP_Handler+0x47c>)
  40458e:	4798      	blx	r3
  404590:	e6ce      	b.n	404330 <UDP_Handler+0xb4>
	nb_data = udd_byte_count(0);
  404592:	4b51      	ldr	r3, [pc, #324]	; (4046d8 <UDP_Handler+0x45c>)
  404594:	6b19      	ldr	r1, [r3, #48]	; 0x30
  404596:	f3c1 410a 	ubfx	r1, r1, #16, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
  40459a:	4b58      	ldr	r3, [pc, #352]	; (4046fc <UDP_Handler+0x480>)
  40459c:	899b      	ldrh	r3, [r3, #12]
  40459e:	4a50      	ldr	r2, [pc, #320]	; (4046e0 <UDP_Handler+0x464>)
  4045a0:	8815      	ldrh	r5, [r2, #0]
  4045a2:	186a      	adds	r2, r5, r1
  4045a4:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size -
  4045a6:	bfbc      	itt	lt
  4045a8:	1b5b      	sublt	r3, r3, r5
  4045aa:	b299      	uxthlt	r1, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  4045ac:	4b53      	ldr	r3, [pc, #332]	; (4046fc <UDP_Handler+0x480>)
  4045ae:	6898      	ldr	r0, [r3, #8]
  4045b0:	4428      	add	r0, r5
	for (i = 0; i < nb_data; i++) {
  4045b2:	b171      	cbz	r1, 4045d2 <UDP_Handler+0x356>
  4045b4:	4602      	mov	r2, r0
		*ptr_dest++ = udd_endpoint_fifo_read(0);
  4045b6:	4c48      	ldr	r4, [pc, #288]	; (4046d8 <UDP_Handler+0x45c>)
  4045b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4045ba:	f802 3b01 	strb.w	r3, [r2], #1
	for (i = 0; i < nb_data; i++) {
  4045be:	1a13      	subs	r3, r2, r0
  4045c0:	b2db      	uxtb	r3, r3
  4045c2:	428b      	cmp	r3, r1
  4045c4:	d3f8      	bcc.n	4045b8 <UDP_Handler+0x33c>
	udd_ctrl_payload_nb_trans += nb_data;
  4045c6:	440d      	add	r5, r1
  4045c8:	b2ad      	uxth	r5, r5
  4045ca:	4b45      	ldr	r3, [pc, #276]	; (4046e0 <UDP_Handler+0x464>)
  4045cc:	801d      	strh	r5, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
  4045ce:	2940      	cmp	r1, #64	; 0x40
  4045d0:	d027      	beq.n	404622 <UDP_Handler+0x3a6>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
  4045d2:	4b4a      	ldr	r3, [pc, #296]	; (4046fc <UDP_Handler+0x480>)
  4045d4:	819d      	strh	r5, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
  4045d6:	695b      	ldr	r3, [r3, #20]
  4045d8:	b113      	cbz	r3, 4045e0 <UDP_Handler+0x364>
			if (!udd_g_ctrlreq.over_under_run()) {
  4045da:	4798      	blx	r3
  4045dc:	2800      	cmp	r0, #0
  4045de:	d04a      	beq.n	404676 <UDP_Handler+0x3fa>
		udd_ack_bank0_received(0);
  4045e0:	4a3d      	ldr	r2, [pc, #244]	; (4046d8 <UDP_Handler+0x45c>)
  4045e2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4045e4:	9310      	str	r3, [sp, #64]	; 0x40
  4045e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4045e8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4045ec:	9310      	str	r3, [sp, #64]	; 0x40
  4045ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4045f0:	f023 0302 	bic.w	r3, r3, #2
  4045f4:	9310      	str	r3, [sp, #64]	; 0x40
  4045f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4045f8:	6313      	str	r3, [r2, #48]	; 0x30
  4045fa:	2300      	movs	r3, #0
  4045fc:	9311      	str	r3, [sp, #68]	; 0x44
  4045fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404600:	2b13      	cmp	r3, #19
  404602:	d806      	bhi.n	404612 <UDP_Handler+0x396>
  404604:	bf00      	nop
  404606:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404608:	3301      	adds	r3, #1
  40460a:	9311      	str	r3, [sp, #68]	; 0x44
  40460c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40460e:	2b13      	cmp	r3, #19
  404610:	d9f8      	bls.n	404604 <UDP_Handler+0x388>
  404612:	4a31      	ldr	r2, [pc, #196]	; (4046d8 <UDP_Handler+0x45c>)
  404614:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404616:	f013 0f02 	tst.w	r3, #2
  40461a:	d1fb      	bne.n	404614 <UDP_Handler+0x398>
		udd_ctrl_send_zlp_in();
  40461c:	4b33      	ldr	r3, [pc, #204]	; (4046ec <UDP_Handler+0x470>)
  40461e:	4798      	blx	r3
  404620:	e686      	b.n	404330 <UDP_Handler+0xb4>
			|| (udd_g_ctrlreq.req.wLength <=
  404622:	4b36      	ldr	r3, [pc, #216]	; (4046fc <UDP_Handler+0x480>)
  404624:	88da      	ldrh	r2, [r3, #6]
			(udd_ctrl_prev_payload_nb_trans +
  404626:	4b2d      	ldr	r3, [pc, #180]	; (4046dc <UDP_Handler+0x460>)
  404628:	881b      	ldrh	r3, [r3, #0]
  40462a:	442b      	add	r3, r5
			|| (udd_g_ctrlreq.req.wLength <=
  40462c:	429a      	cmp	r2, r3
  40462e:	ddd0      	ble.n	4045d2 <UDP_Handler+0x356>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
  404630:	4b32      	ldr	r3, [pc, #200]	; (4046fc <UDP_Handler+0x480>)
  404632:	899b      	ldrh	r3, [r3, #12]
  404634:	42ab      	cmp	r3, r5
  404636:	d03f      	beq.n	4046b8 <UDP_Handler+0x43c>
	udd_ack_bank0_received(0);
  404638:	4a27      	ldr	r2, [pc, #156]	; (4046d8 <UDP_Handler+0x45c>)
  40463a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40463c:	9316      	str	r3, [sp, #88]	; 0x58
  40463e:	9b16      	ldr	r3, [sp, #88]	; 0x58
  404640:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404644:	9316      	str	r3, [sp, #88]	; 0x58
  404646:	9b16      	ldr	r3, [sp, #88]	; 0x58
  404648:	f023 0302 	bic.w	r3, r3, #2
  40464c:	9316      	str	r3, [sp, #88]	; 0x58
  40464e:	9b16      	ldr	r3, [sp, #88]	; 0x58
  404650:	6313      	str	r3, [r2, #48]	; 0x30
  404652:	2300      	movs	r3, #0
  404654:	9317      	str	r3, [sp, #92]	; 0x5c
  404656:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404658:	2b13      	cmp	r3, #19
  40465a:	d806      	bhi.n	40466a <UDP_Handler+0x3ee>
  40465c:	bf00      	nop
  40465e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404660:	3301      	adds	r3, #1
  404662:	9317      	str	r3, [sp, #92]	; 0x5c
  404664:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404666:	2b13      	cmp	r3, #19
  404668:	d9f8      	bls.n	40465c <UDP_Handler+0x3e0>
  40466a:	4a1b      	ldr	r2, [pc, #108]	; (4046d8 <UDP_Handler+0x45c>)
  40466c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40466e:	f013 0f02 	tst.w	r3, #2
  404672:	d1fb      	bne.n	40466c <UDP_Handler+0x3f0>
  404674:	e65c      	b.n	404330 <UDP_Handler+0xb4>
				udd_ctrl_stall_data();
  404676:	4b1e      	ldr	r3, [pc, #120]	; (4046f0 <UDP_Handler+0x474>)
  404678:	4798      	blx	r3
				udd_ack_bank0_received(0);
  40467a:	4a17      	ldr	r2, [pc, #92]	; (4046d8 <UDP_Handler+0x45c>)
  40467c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40467e:	930e      	str	r3, [sp, #56]	; 0x38
  404680:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404682:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404686:	930e      	str	r3, [sp, #56]	; 0x38
  404688:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40468a:	f023 0302 	bic.w	r3, r3, #2
  40468e:	930e      	str	r3, [sp, #56]	; 0x38
  404690:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404692:	6313      	str	r3, [r2, #48]	; 0x30
  404694:	2300      	movs	r3, #0
  404696:	930f      	str	r3, [sp, #60]	; 0x3c
  404698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40469a:	2b13      	cmp	r3, #19
  40469c:	d806      	bhi.n	4046ac <UDP_Handler+0x430>
  40469e:	bf00      	nop
  4046a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046a2:	3301      	adds	r3, #1
  4046a4:	930f      	str	r3, [sp, #60]	; 0x3c
  4046a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046a8:	2b13      	cmp	r3, #19
  4046aa:	d9f8      	bls.n	40469e <UDP_Handler+0x422>
  4046ac:	4a0a      	ldr	r2, [pc, #40]	; (4046d8 <UDP_Handler+0x45c>)
  4046ae:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4046b0:	f013 0f02 	tst.w	r3, #2
  4046b4:	d1fb      	bne.n	4046ae <UDP_Handler+0x432>
  4046b6:	e63b      	b.n	404330 <UDP_Handler+0xb4>
		if (!udd_g_ctrlreq.over_under_run) {
  4046b8:	4b10      	ldr	r3, [pc, #64]	; (4046fc <UDP_Handler+0x480>)
  4046ba:	695b      	ldr	r3, [r3, #20]
  4046bc:	b303      	cbz	r3, 404700 <UDP_Handler+0x484>
		if (!udd_g_ctrlreq.over_under_run()) {
  4046be:	4798      	blx	r3
  4046c0:	2800      	cmp	r0, #0
  4046c2:	d03e      	beq.n	404742 <UDP_Handler+0x4c6>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  4046c4:	4905      	ldr	r1, [pc, #20]	; (4046dc <UDP_Handler+0x460>)
  4046c6:	4a06      	ldr	r2, [pc, #24]	; (4046e0 <UDP_Handler+0x464>)
  4046c8:	880b      	ldrh	r3, [r1, #0]
  4046ca:	8810      	ldrh	r0, [r2, #0]
  4046cc:	4403      	add	r3, r0
  4046ce:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
  4046d0:	2300      	movs	r3, #0
  4046d2:	8013      	strh	r3, [r2, #0]
  4046d4:	e7b0      	b.n	404638 <UDP_Handler+0x3bc>
  4046d6:	bf00      	nop
  4046d8:	40044000 	.word	0x40044000
  4046dc:	2001a25e 	.word	0x2001a25e
  4046e0:	2001a25c 	.word	0x2001a25c
  4046e4:	2001a260 	.word	0x2001a260
  4046e8:	00403d35 	.word	0x00403d35
  4046ec:	00403cd5 	.word	0x00403cd5
  4046f0:	00403c85 	.word	0x00403c85
  4046f4:	00403d25 	.word	0x00403d25
  4046f8:	00403c6d 	.word	0x00403c6d
  4046fc:	2001ab44 	.word	0x2001ab44
			udd_ctrl_stall_data();
  404700:	4b91      	ldr	r3, [pc, #580]	; (404948 <UDP_Handler+0x6cc>)
  404702:	4798      	blx	r3
			udd_ack_bank0_received(0);
  404704:	4a91      	ldr	r2, [pc, #580]	; (40494c <UDP_Handler+0x6d0>)
  404706:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404708:	9312      	str	r3, [sp, #72]	; 0x48
  40470a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40470c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404710:	9312      	str	r3, [sp, #72]	; 0x48
  404712:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404714:	f023 0302 	bic.w	r3, r3, #2
  404718:	9312      	str	r3, [sp, #72]	; 0x48
  40471a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40471c:	6313      	str	r3, [r2, #48]	; 0x30
  40471e:	2300      	movs	r3, #0
  404720:	9313      	str	r3, [sp, #76]	; 0x4c
  404722:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404724:	2b13      	cmp	r3, #19
  404726:	d806      	bhi.n	404736 <UDP_Handler+0x4ba>
  404728:	bf00      	nop
  40472a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40472c:	3301      	adds	r3, #1
  40472e:	9313      	str	r3, [sp, #76]	; 0x4c
  404730:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404732:	2b13      	cmp	r3, #19
  404734:	d9f8      	bls.n	404728 <UDP_Handler+0x4ac>
  404736:	4b85      	ldr	r3, [pc, #532]	; (40494c <UDP_Handler+0x6d0>)
  404738:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40473a:	f012 0f02 	tst.w	r2, #2
  40473e:	d1fb      	bne.n	404738 <UDP_Handler+0x4bc>
  404740:	e5f6      	b.n	404330 <UDP_Handler+0xb4>
			udd_ctrl_stall_data();
  404742:	4b81      	ldr	r3, [pc, #516]	; (404948 <UDP_Handler+0x6cc>)
  404744:	4798      	blx	r3
			udd_ack_bank0_received(0);
  404746:	4a81      	ldr	r2, [pc, #516]	; (40494c <UDP_Handler+0x6d0>)
  404748:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40474a:	9314      	str	r3, [sp, #80]	; 0x50
  40474c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40474e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404752:	9314      	str	r3, [sp, #80]	; 0x50
  404754:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404756:	f023 0302 	bic.w	r3, r3, #2
  40475a:	9314      	str	r3, [sp, #80]	; 0x50
  40475c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40475e:	6313      	str	r3, [r2, #48]	; 0x30
  404760:	2300      	movs	r3, #0
  404762:	9315      	str	r3, [sp, #84]	; 0x54
  404764:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404766:	2b13      	cmp	r3, #19
  404768:	d806      	bhi.n	404778 <UDP_Handler+0x4fc>
  40476a:	bf00      	nop
  40476c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40476e:	3301      	adds	r3, #1
  404770:	9315      	str	r3, [sp, #84]	; 0x54
  404772:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404774:	2b13      	cmp	r3, #19
  404776:	d9f8      	bls.n	40476a <UDP_Handler+0x4ee>
  404778:	4b74      	ldr	r3, [pc, #464]	; (40494c <UDP_Handler+0x6d0>)
  40477a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40477c:	f012 0f02 	tst.w	r2, #2
  404780:	d1fb      	bne.n	40477a <UDP_Handler+0x4fe>
  404782:	e5d5      	b.n	404330 <UDP_Handler+0xb4>
  404784:	4f72      	ldr	r7, [pc, #456]	; (404950 <UDP_Handler+0x6d4>)
	for (i = 0; i < nb_data; i++) {
  404786:	463a      	mov	r2, r7
  404788:	2301      	movs	r3, #1
	//printf("\r\nEnter udd_ep_interrupt(void)!\r\n");

	// For each endpoint different of control endpoint (0)
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Check RXRDY and TXEMPTY event for none DMA endpoints
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  40478a:	f8df e1c0 	ldr.w	lr, [pc, #448]	; 40494c <UDP_Handler+0x6d0>
  40478e:	4618      	mov	r0, r3
  404790:	e1ed      	b.n	404b6e <UDP_Handler+0x8f2>
	uint32_t pkt_size = ptr_job->size;
  404792:	eb08 0388 	add.w	r3, r8, r8, lsl #2
  404796:	4a6e      	ldr	r2, [pc, #440]	; (404950 <UDP_Handler+0x6d4>)
  404798:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40479c:	f8b3 a010 	ldrh.w	sl, [r3, #16]
  4047a0:	f3ca 0a09 	ubfx	sl, sl, #0, #10
	nb_data = udd_byte_count(ep);
  4047a4:	6b27      	ldr	r7, [r4, #48]	; 0x30
  4047a6:	f3c7 470a 	ubfx	r7, r7, #16, #11
	if (nb_data > 0) {
  4047aa:	2f00      	cmp	r7, #0
  4047ac:	f000 826c 	beq.w	404c88 <UDP_Handler+0xa0c>
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  4047b0:	eb08 0288 	add.w	r2, r8, r8, lsl #2
  4047b4:	4b66      	ldr	r3, [pc, #408]	; (404950 <UDP_Handler+0x6d4>)
  4047b6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4047ba:	f8d3 e008 	ldr.w	lr, [r3, #8]
  4047be:	68da      	ldr	r2, [r3, #12]
  4047c0:	ebae 0002 	sub.w	r0, lr, r2
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  4047c4:	6859      	ldr	r1, [r3, #4]
		if (nb_data >= nb_remain) {
  4047c6:	42b8      	cmp	r0, r7
  4047c8:	f240 8252 	bls.w	404c70 <UDP_Handler+0x9f4>
		ptr_job->buf_cnt += nb_data;
  4047cc:	eb08 0088 	add.w	r0, r8, r8, lsl #2
  4047d0:	4b5f      	ldr	r3, [pc, #380]	; (404950 <UDP_Handler+0x6d4>)
  4047d2:	eb03 0380 	add.w	r3, r3, r0, lsl #2
  4047d6:	19d0      	adds	r0, r2, r7
  4047d8:	60d8      	str	r0, [r3, #12]
	nb_data = udd_byte_count(ep);
  4047da:	4638      	mov	r0, r7
	bool b_full = false, b_short;
  4047dc:	f04f 0b00 	mov.w	fp, #0
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  4047e0:	4411      	add	r1, r2
  4047e2:	460b      	mov	r3, r1
			*ptr_dst++ = udd_endpoint_fifo_read(ep);
  4047e4:	6d22      	ldr	r2, [r4, #80]	; 0x50
  4047e6:	f803 2b01 	strb.w	r2, [r3], #1
		for (i = 0; i < nb_data; i++) {
  4047ea:	1a5a      	subs	r2, r3, r1
  4047ec:	4282      	cmp	r2, r0
  4047ee:	d3f9      	bcc.n	4047e4 <UDP_Handler+0x568>
	udd_ep_ack_out_received(ep);
  4047f0:	4630      	mov	r0, r6
  4047f2:	4b58      	ldr	r3, [pc, #352]	; (404954 <UDP_Handler+0x6d8>)
  4047f4:	4798      	blx	r3
	if ((b_full || b_short) &&
  4047f6:	f1bb 0f00 	cmp.w	fp, #0
  4047fa:	f000 8248 	beq.w	404c8e <UDP_Handler+0xa12>
			!Is_udd_endpoint_stall_requested(ep)) {
  4047fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
	if ((b_full || b_short) &&
  404800:	f013 0f20 	tst.w	r3, #32
  404804:	f47f ad94 	bne.w	404330 <UDP_Handler+0xb4>
		udd_disable_endpoint_interrupt(ep);
  404808:	4b50      	ldr	r3, [pc, #320]	; (40494c <UDP_Handler+0x6d0>)
  40480a:	615d      	str	r5, [r3, #20]
		ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  40480c:	4b50      	ldr	r3, [pc, #320]	; (404950 <UDP_Handler+0x6d4>)
  40480e:	ea4f 0288 	mov.w	r2, r8, lsl #2
  404812:	eb02 0108 	add.w	r1, r2, r8
  404816:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  40481a:	68cb      	ldr	r3, [r1, #12]
  40481c:	608b      	str	r3, [r1, #8]
		udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  40481e:	4632      	mov	r2, r6
  404820:	2100      	movs	r1, #0
  404822:	4648      	mov	r0, r9
  404824:	4b4c      	ldr	r3, [pc, #304]	; (404958 <UDP_Handler+0x6dc>)
  404826:	4798      	blx	r3
  404828:	e582      	b.n	404330 <UDP_Handler+0xb4>
			return true;
		}
		// TXIN: packet sent
		if (Is_udd_in_sent(ep)) {

			ptr_job->bank--;
  40482a:	eb08 0288 	add.w	r2, r8, r8, lsl #2
  40482e:	4b48      	ldr	r3, [pc, #288]	; (404950 <UDP_Handler+0x6d4>)
  404830:	eb03 0282 	add.w	r2, r3, r2, lsl #2
  404834:	7c53      	ldrb	r3, [r2, #17]
  404836:	f3c3 0181 	ubfx	r1, r3, #2, #2
  40483a:	3103      	adds	r1, #3
  40483c:	f361 0383 	bfi	r3, r1, #2, #2
  404840:	7453      	strb	r3, [r2, #17]
			// Stall when all banks free
			if (ptr_job->b_stall_requested) {
  404842:	7c53      	ldrb	r3, [r2, #17]
  404844:	f013 0f20 	tst.w	r3, #32
  404848:	f000 8088 	beq.w	40495c <UDP_Handler+0x6e0>
				if (ptr_job->bank) {
  40484c:	f013 0f0c 	tst.w	r3, #12
  404850:	d038      	beq.n	4048c4 <UDP_Handler+0x648>
					// Send remaining
					udd_set_transmit_ready(ep);
  404852:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404854:	9318      	str	r3, [sp, #96]	; 0x60
  404856:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404858:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40485c:	9318      	str	r3, [sp, #96]	; 0x60
  40485e:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404860:	f043 0310 	orr.w	r3, r3, #16
  404864:	9318      	str	r3, [sp, #96]	; 0x60
  404866:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404868:	6323      	str	r3, [r4, #48]	; 0x30
  40486a:	2300      	movs	r3, #0
  40486c:	9319      	str	r3, [sp, #100]	; 0x64
  40486e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404870:	2b13      	cmp	r3, #19
  404872:	d806      	bhi.n	404882 <UDP_Handler+0x606>
  404874:	bf00      	nop
  404876:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404878:	3301      	adds	r3, #1
  40487a:	9319      	str	r3, [sp, #100]	; 0x64
  40487c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40487e:	2b13      	cmp	r3, #19
  404880:	d9f8      	bls.n	404874 <UDP_Handler+0x5f8>
  404882:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404884:	f013 0f10 	tst.w	r3, #16
  404888:	d0fb      	beq.n	404882 <UDP_Handler+0x606>
					udd_ack_in_sent(ep);
  40488a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40488c:	931a      	str	r3, [sp, #104]	; 0x68
  40488e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  404890:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404894:	931a      	str	r3, [sp, #104]	; 0x68
  404896:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  404898:	f023 0301 	bic.w	r3, r3, #1
  40489c:	931a      	str	r3, [sp, #104]	; 0x68
  40489e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4048a0:	6323      	str	r3, [r4, #48]	; 0x30
  4048a2:	2300      	movs	r3, #0
  4048a4:	931b      	str	r3, [sp, #108]	; 0x6c
  4048a6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4048a8:	2b13      	cmp	r3, #19
  4048aa:	d806      	bhi.n	4048ba <UDP_Handler+0x63e>
  4048ac:	bf00      	nop
  4048ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4048b0:	3301      	adds	r3, #1
  4048b2:	931b      	str	r3, [sp, #108]	; 0x6c
  4048b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4048b6:	2b13      	cmp	r3, #19
  4048b8:	d9f8      	bls.n	4048ac <UDP_Handler+0x630>
  4048ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4048bc:	f013 0f01 	tst.w	r3, #1
  4048c0:	d1fb      	bne.n	4048ba <UDP_Handler+0x63e>
  4048c2:	e535      	b.n	404330 <UDP_Handler+0xb4>
				} else {
					// Ack last packet
					udd_ack_in_sent(ep);
  4048c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4048c6:	931c      	str	r3, [sp, #112]	; 0x70
  4048c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4048ca:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4048ce:	931c      	str	r3, [sp, #112]	; 0x70
  4048d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4048d2:	f023 0301 	bic.w	r3, r3, #1
  4048d6:	931c      	str	r3, [sp, #112]	; 0x70
  4048d8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4048da:	6323      	str	r3, [r4, #48]	; 0x30
  4048dc:	2300      	movs	r3, #0
  4048de:	931d      	str	r3, [sp, #116]	; 0x74
  4048e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4048e2:	2b13      	cmp	r3, #19
  4048e4:	d806      	bhi.n	4048f4 <UDP_Handler+0x678>
  4048e6:	bf00      	nop
  4048e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4048ea:	3301      	adds	r3, #1
  4048ec:	931d      	str	r3, [sp, #116]	; 0x74
  4048ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4048f0:	2b13      	cmp	r3, #19
  4048f2:	d9f8      	bls.n	4048e6 <UDP_Handler+0x66a>
  4048f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4048f6:	f013 0f01 	tst.w	r3, #1
  4048fa:	d1fb      	bne.n	4048f4 <UDP_Handler+0x678>
					// Enable stall
					udd_enable_stall_handshake(ep);
  4048fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4048fe:	931e      	str	r3, [sp, #120]	; 0x78
  404900:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404902:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404906:	931e      	str	r3, [sp, #120]	; 0x78
  404908:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  40490a:	f043 0320 	orr.w	r3, r3, #32
  40490e:	931e      	str	r3, [sp, #120]	; 0x78
  404910:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404912:	6323      	str	r3, [r4, #48]	; 0x30
  404914:	2300      	movs	r3, #0
  404916:	931f      	str	r3, [sp, #124]	; 0x7c
  404918:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40491a:	2b13      	cmp	r3, #19
  40491c:	d806      	bhi.n	40492c <UDP_Handler+0x6b0>
  40491e:	bf00      	nop
  404920:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404922:	3301      	adds	r3, #1
  404924:	931f      	str	r3, [sp, #124]	; 0x7c
  404926:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404928:	2b13      	cmp	r3, #19
  40492a:	d9f8      	bls.n	40491e <UDP_Handler+0x6a2>
  40492c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40492e:	f013 0f20 	tst.w	r3, #32
  404932:	d0fb      	beq.n	40492c <UDP_Handler+0x6b0>
					// Halt executed
					ptr_job->b_stall_requested = false;
  404934:	eb08 0888 	add.w	r8, r8, r8, lsl #2
  404938:	4b05      	ldr	r3, [pc, #20]	; (404950 <UDP_Handler+0x6d4>)
  40493a:	eb03 0388 	add.w	r3, r3, r8, lsl #2
  40493e:	7c5a      	ldrb	r2, [r3, #17]
  404940:	f36f 1245 	bfc	r2, #5, #1
  404944:	745a      	strb	r2, [r3, #17]
  404946:	e4f3      	b.n	404330 <UDP_Handler+0xb4>
  404948:	00403c85 	.word	0x00403c85
  40494c:	40044000 	.word	0x40044000
  404950:	2001a264 	.word	0x2001a264
  404954:	00403fad 	.word	0x00403fad
  404958:	00403f6d 	.word	0x00403f6d
				}
				return true;
			}
			// Finish Job when buffer end
			if (ptr_job->b_buf_end) {
  40495c:	f013 0f80 	tst.w	r3, #128	; 0x80
  404960:	d144      	bne.n	4049ec <UDP_Handler+0x770>
				ptr_job->b_buf_end = false;
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                udd_disable_endpoint_interrupt(ep);
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
			}
			if (ptr_job->buf_cnt >= ptr_job->buf_size &&
  404962:	eb08 0288 	add.w	r2, r8, r8, lsl #2
  404966:	4ba3      	ldr	r3, [pc, #652]	; (404bf4 <UDP_Handler+0x978>)
  404968:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40496c:	68da      	ldr	r2, [r3, #12]
  40496e:	689b      	ldr	r3, [r3, #8]
  404970:	429a      	cmp	r2, r3
  404972:	d34d      	bcc.n	404a10 <UDP_Handler+0x794>
					!ptr_job->b_shortpacket &&
  404974:	eb08 0288 	add.w	r2, r8, r8, lsl #2
  404978:	4b9e      	ldr	r3, [pc, #632]	; (404bf4 <UDP_Handler+0x978>)
  40497a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40497e:	7c5b      	ldrb	r3, [r3, #17]
  404980:	f013 0f4c 	tst.w	r3, #76	; 0x4c
  404984:	d144      	bne.n	404a10 <UDP_Handler+0x794>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  404986:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40498a:	fab3 f383 	clz	r3, r3
  40498e:	095b      	lsrs	r3, r3, #5
  404990:	9320      	str	r3, [sp, #128]	; 0x80
  __ASM volatile ("cpsid i" : : : "memory");
  404992:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404994:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  404998:	2200      	movs	r2, #0
  40499a:	4b97      	ldr	r3, [pc, #604]	; (404bf8 <UDP_Handler+0x97c>)
  40499c:	701a      	strb	r2, [r3, #0]
	return flags;
  40499e:	9b20      	ldr	r3, [sp, #128]	; 0x80
					ptr_job->bank == 0) {
				// All transfer done, including ZLP
				irqflags_t flags = cpu_irq_save();
				udd_disable_endpoint_interrupt(ep);
  4049a0:	4a96      	ldr	r2, [pc, #600]	; (404bfc <UDP_Handler+0x980>)
  4049a2:	6155      	str	r5, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  4049a4:	b12b      	cbz	r3, 4049b2 <UDP_Handler+0x736>
		cpu_irq_enable();
  4049a6:	2201      	movs	r2, #1
  4049a8:	4b93      	ldr	r3, [pc, #588]	; (404bf8 <UDP_Handler+0x97c>)
  4049aa:	701a      	strb	r2, [r3, #0]
  4049ac:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4049b0:	b662      	cpsie	i
				cpu_irq_restore(flags);
				// Ack last packet
				udd_ack_in_sent(ep);
  4049b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4049b4:	9321      	str	r3, [sp, #132]	; 0x84
  4049b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4049b8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4049bc:	9321      	str	r3, [sp, #132]	; 0x84
  4049be:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4049c0:	f023 0301 	bic.w	r3, r3, #1
  4049c4:	9321      	str	r3, [sp, #132]	; 0x84
  4049c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4049c8:	6323      	str	r3, [r4, #48]	; 0x30
  4049ca:	2300      	movs	r3, #0
  4049cc:	9322      	str	r3, [sp, #136]	; 0x88
  4049ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4049d0:	2b13      	cmp	r3, #19
  4049d2:	d806      	bhi.n	4049e2 <UDP_Handler+0x766>
  4049d4:	bf00      	nop
  4049d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4049d8:	3301      	adds	r3, #1
  4049da:	9322      	str	r3, [sp, #136]	; 0x88
  4049dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4049de:	2b13      	cmp	r3, #19
  4049e0:	d9f8      	bls.n	4049d4 <UDP_Handler+0x758>
  4049e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4049e4:	f013 0f01 	tst.w	r3, #1
  4049e8:	d1fb      	bne.n	4049e2 <UDP_Handler+0x766>
  4049ea:	e4a1      	b.n	404330 <UDP_Handler+0xb4>
				ptr_job->b_buf_end = false;
  4049ec:	2314      	movs	r3, #20
  4049ee:	4a81      	ldr	r2, [pc, #516]	; (404bf4 <UDP_Handler+0x978>)
  4049f0:	fb03 2308 	mla	r3, r3, r8, r2
  4049f4:	7c59      	ldrb	r1, [r3, #17]
  4049f6:	f36f 11c7 	bfc	r1, #7, #1
  4049fa:	7459      	strb	r1, [r3, #17]
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  4049fc:	68da      	ldr	r2, [r3, #12]
  4049fe:	609a      	str	r2, [r3, #8]
                udd_disable_endpoint_interrupt(ep);
  404a00:	4b7e      	ldr	r3, [pc, #504]	; (404bfc <UDP_Handler+0x980>)
  404a02:	615d      	str	r5, [r3, #20]
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  404a04:	4632      	mov	r2, r6
  404a06:	2100      	movs	r1, #0
  404a08:	4648      	mov	r0, r9
  404a0a:	4b7d      	ldr	r3, [pc, #500]	; (404c00 <UDP_Handler+0x984>)
  404a0c:	4798      	blx	r3
  404a0e:	e7a8      	b.n	404962 <UDP_Handler+0x6e6>
				return true;
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1
  404a10:	2e00      	cmp	r6, #0
  404a12:	f000 8085 	beq.w	404b20 <UDP_Handler+0x8a4>
  404a16:	2e03      	cmp	r6, #3
  404a18:	f000 8082 	beq.w	404b20 <UDP_Handler+0x8a4>
					&& ptr_job->bank > 0) {
  404a1c:	eb08 0288 	add.w	r2, r8, r8, lsl #2
  404a20:	4b74      	ldr	r3, [pc, #464]	; (404bf4 <UDP_Handler+0x978>)
  404a22:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  404a26:	7c5b      	ldrb	r3, [r3, #17]
  404a28:	f013 0f0c 	tst.w	r3, #12
  404a2c:	d03c      	beq.n	404aa8 <UDP_Handler+0x82c>
				// Already banks buffered, transmit while loading
				udd_set_transmit_ready(ep);
  404a2e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404a30:	9323      	str	r3, [sp, #140]	; 0x8c
  404a32:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404a34:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404a38:	9323      	str	r3, [sp, #140]	; 0x8c
  404a3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404a3c:	f043 0310 	orr.w	r3, r3, #16
  404a40:	9323      	str	r3, [sp, #140]	; 0x8c
  404a42:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404a44:	6323      	str	r3, [r4, #48]	; 0x30
  404a46:	2300      	movs	r3, #0
  404a48:	9324      	str	r3, [sp, #144]	; 0x90
  404a4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a4c:	2b13      	cmp	r3, #19
  404a4e:	d806      	bhi.n	404a5e <UDP_Handler+0x7e2>
  404a50:	bf00      	nop
  404a52:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a54:	3301      	adds	r3, #1
  404a56:	9324      	str	r3, [sp, #144]	; 0x90
  404a58:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a5a:	2b13      	cmp	r3, #19
  404a5c:	d9f8      	bls.n	404a50 <UDP_Handler+0x7d4>
  404a5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404a60:	f013 0f10 	tst.w	r3, #16
  404a64:	d0fb      	beq.n	404a5e <UDP_Handler+0x7e2>
				udd_ack_in_sent(ep);
  404a66:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404a68:	9325      	str	r3, [sp, #148]	; 0x94
  404a6a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404a6c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404a70:	9325      	str	r3, [sp, #148]	; 0x94
  404a72:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404a74:	f023 0301 	bic.w	r3, r3, #1
  404a78:	9325      	str	r3, [sp, #148]	; 0x94
  404a7a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404a7c:	6323      	str	r3, [r4, #48]	; 0x30
  404a7e:	2300      	movs	r3, #0
  404a80:	9326      	str	r3, [sp, #152]	; 0x98
  404a82:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a84:	2b13      	cmp	r3, #19
  404a86:	d806      	bhi.n	404a96 <UDP_Handler+0x81a>
  404a88:	bf00      	nop
  404a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a8c:	3301      	adds	r3, #1
  404a8e:	9326      	str	r3, [sp, #152]	; 0x98
  404a90:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a92:	2b13      	cmp	r3, #19
  404a94:	d9f8      	bls.n	404a88 <UDP_Handler+0x80c>
  404a96:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404a98:	f013 0f01 	tst.w	r3, #1
  404a9c:	d1fb      	bne.n	404a96 <UDP_Handler+0x81a>
				udd_ep_in_sent(ep, false);
  404a9e:	2100      	movs	r1, #0
  404aa0:	4630      	mov	r0, r6
  404aa2:	4b58      	ldr	r3, [pc, #352]	; (404c04 <UDP_Handler+0x988>)
  404aa4:	4798      	blx	r3
  404aa6:	e443      	b.n	404330 <UDP_Handler+0xb4>
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
				// Still bank free, load and transmit
				if (!udd_ep_in_sent(ep, true)) {
  404aa8:	2101      	movs	r1, #1
  404aaa:	4630      	mov	r0, r6
  404aac:	4b55      	ldr	r3, [pc, #340]	; (404c04 <UDP_Handler+0x988>)
  404aae:	4798      	blx	r3
  404ab0:	b300      	cbz	r0, 404af4 <UDP_Handler+0x878>
					ptr_job->b_buf_end = false;
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                    udd_disable_endpoint_interrupt(ep);
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
				}
				udd_ack_in_sent(ep);
  404ab2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404ab4:	9327      	str	r3, [sp, #156]	; 0x9c
  404ab6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  404ab8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404abc:	9327      	str	r3, [sp, #156]	; 0x9c
  404abe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  404ac0:	f023 0301 	bic.w	r3, r3, #1
  404ac4:	9327      	str	r3, [sp, #156]	; 0x9c
  404ac6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  404ac8:	6323      	str	r3, [r4, #48]	; 0x30
  404aca:	2300      	movs	r3, #0
  404acc:	9328      	str	r3, [sp, #160]	; 0xa0
  404ace:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404ad0:	2b13      	cmp	r3, #19
  404ad2:	d806      	bhi.n	404ae2 <UDP_Handler+0x866>
  404ad4:	bf00      	nop
  404ad6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404ad8:	3301      	adds	r3, #1
  404ada:	9328      	str	r3, [sp, #160]	; 0xa0
  404adc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404ade:	2b13      	cmp	r3, #19
  404ae0:	d9f8      	bls.n	404ad4 <UDP_Handler+0x858>
  404ae2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404ae4:	f013 0f01 	tst.w	r3, #1
  404ae8:	d1fb      	bne.n	404ae2 <UDP_Handler+0x866>
				udd_ep_in_sent(ep, false);
  404aea:	2100      	movs	r1, #0
  404aec:	4630      	mov	r0, r6
  404aee:	4b45      	ldr	r3, [pc, #276]	; (404c04 <UDP_Handler+0x988>)
  404af0:	4798      	blx	r3
  404af2:	e41d      	b.n	404330 <UDP_Handler+0xb4>
					ptr_job->b_buf_end = false;
  404af4:	2314      	movs	r3, #20
  404af6:	4a3f      	ldr	r2, [pc, #252]	; (404bf4 <UDP_Handler+0x978>)
  404af8:	fb03 2808 	mla	r8, r3, r8, r2
  404afc:	f898 2011 	ldrb.w	r2, [r8, #17]
  404b00:	f36f 12c7 	bfc	r2, #7, #1
  404b04:	f888 2011 	strb.w	r2, [r8, #17]
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  404b08:	f8d8 300c 	ldr.w	r3, [r8, #12]
  404b0c:	f8c8 3008 	str.w	r3, [r8, #8]
                    udd_disable_endpoint_interrupt(ep);
  404b10:	4b3a      	ldr	r3, [pc, #232]	; (404bfc <UDP_Handler+0x980>)
  404b12:	615d      	str	r5, [r3, #20]
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  404b14:	4632      	mov	r2, r6
  404b16:	2100      	movs	r1, #0
  404b18:	4648      	mov	r0, r9
  404b1a:	4b39      	ldr	r3, [pc, #228]	; (404c00 <UDP_Handler+0x984>)
  404b1c:	4798      	blx	r3
  404b1e:	e7c8      	b.n	404ab2 <UDP_Handler+0x836>
			} else {
				// Single bank transfer, ack when ready
				udd_ep_in_sent(ep, true);
  404b20:	2101      	movs	r1, #1
  404b22:	4630      	mov	r0, r6
  404b24:	4b37      	ldr	r3, [pc, #220]	; (404c04 <UDP_Handler+0x988>)
  404b26:	4798      	blx	r3
				udd_ack_in_sent(ep);
  404b28:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404b2a:	9329      	str	r3, [sp, #164]	; 0xa4
  404b2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  404b2e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404b32:	9329      	str	r3, [sp, #164]	; 0xa4
  404b34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  404b36:	f023 0301 	bic.w	r3, r3, #1
  404b3a:	9329      	str	r3, [sp, #164]	; 0xa4
  404b3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  404b3e:	6323      	str	r3, [r4, #48]	; 0x30
  404b40:	2300      	movs	r3, #0
  404b42:	932a      	str	r3, [sp, #168]	; 0xa8
  404b44:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
  404b46:	2b13      	cmp	r3, #19
  404b48:	d806      	bhi.n	404b58 <UDP_Handler+0x8dc>
  404b4a:	bf00      	nop
  404b4c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
  404b4e:	3301      	adds	r3, #1
  404b50:	932a      	str	r3, [sp, #168]	; 0xa8
  404b52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
  404b54:	2b13      	cmp	r3, #19
  404b56:	d9f8      	bls.n	404b4a <UDP_Handler+0x8ce>
  404b58:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404b5a:	f013 0f01 	tst.w	r3, #1
  404b5e:	d1fb      	bne.n	404b58 <UDP_Handler+0x8dc>
  404b60:	f7ff bbe6 	b.w	404330 <UDP_Handler+0xb4>
  404b64:	3301      	adds	r3, #1
  404b66:	3214      	adds	r2, #20
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
  404b68:	2b06      	cmp	r3, #6
  404b6a:	f000 8095 	beq.w	404c98 <UDP_Handler+0xa1c>
  404b6e:	b2de      	uxtb	r6, r3
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  404b70:	f8de 1018 	ldr.w	r1, [lr, #24]
  404b74:	fa00 f503 	lsl.w	r5, r0, r3
  404b78:	4229      	tst	r1, r5
  404b7a:	d0f3      	beq.n	404b64 <UDP_Handler+0x8e8>
  404b7c:	f103 38ff 	add.w	r8, r3, #4294967295
		ptr_job = &udd_ep_job[ep - 1];
  404b80:	4691      	mov	r9, r2
  404b82:	009c      	lsls	r4, r3, #2
  404b84:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  404b88:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
		if (Is_udd_any_bank_received(ep)) {
  404b8c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404b8e:	f011 0f42 	tst.w	r1, #66	; 0x42
  404b92:	f47f adfe 	bne.w	404792 <UDP_Handler+0x516>
		if (Is_udd_in_sent(ep)) {
  404b96:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404b98:	f011 0f01 	tst.w	r1, #1
  404b9c:	f47f ae45 	bne.w	40482a <UDP_Handler+0x5ae>
			}
			return true;
		}
		// Stall sent/CRC error
		if (Is_udd_stall(ep)) {
  404ba0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404ba2:	f011 0f08 	tst.w	r1, #8
  404ba6:	d0dd      	beq.n	404b64 <UDP_Handler+0x8e8>
			udd_ack_stall(ep);
  404ba8:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404baa:	932b      	str	r3, [sp, #172]	; 0xac
  404bac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
  404bae:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404bb2:	932b      	str	r3, [sp, #172]	; 0xac
  404bb4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
  404bb6:	f023 0308 	bic.w	r3, r3, #8
  404bba:	932b      	str	r3, [sp, #172]	; 0xac
  404bbc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
  404bbe:	6323      	str	r3, [r4, #48]	; 0x30
  404bc0:	2300      	movs	r3, #0
  404bc2:	932c      	str	r3, [sp, #176]	; 0xb0
  404bc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  404bc6:	2b13      	cmp	r3, #19
  404bc8:	d806      	bhi.n	404bd8 <UDP_Handler+0x95c>
  404bca:	bf00      	nop
  404bcc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  404bce:	3301      	adds	r3, #1
  404bd0:	932c      	str	r3, [sp, #176]	; 0xb0
  404bd2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  404bd4:	2b13      	cmp	r3, #19
  404bd6:	d9f8      	bls.n	404bca <UDP_Handler+0x94e>
  404bd8:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404bda:	f013 0f08 	tst.w	r3, #8
  404bde:	d1fb      	bne.n	404bd8 <UDP_Handler+0x95c>
			if (udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_OUT ||
  404be0:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404be2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  404be6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  404bea:	f43f aba1 	beq.w	404330 <UDP_Handler+0xb4>
				udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_IN) {
  404bee:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404bf0:	f7ff bb9e 	b.w	404330 <UDP_Handler+0xb4>
  404bf4:	2001a264 	.word	0x2001a264
  404bf8:	200001fc 	.word	0x200001fc
  404bfc:	40044000 	.word	0x40044000
  404c00:	00403f6d 	.word	0x00403f6d
  404c04:	004040b1 	.word	0x004040b1
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  404c08:	4b7a      	ldr	r3, [pc, #488]	; (404df4 <UDP_Handler+0xb78>)
  404c0a:	69db      	ldr	r3, [r3, #28]
  404c0c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  404c10:	d047      	beq.n	404ca2 <UDP_Handler+0xa26>
		udd_ack_wakeups();
  404c12:	4c78      	ldr	r4, [pc, #480]	; (404df4 <UDP_Handler+0xb78>)
  404c14:	f44f 5318 	mov.w	r3, #9728	; 0x2600
  404c18:	6223      	str	r3, [r4, #32]
		udd_disable_wakeups();
  404c1a:	6163      	str	r3, [r4, #20]
		udd_sleep_mode(true); // Enter in IDLE mode
  404c1c:	2001      	movs	r0, #1
  404c1e:	4b76      	ldr	r3, [pc, #472]	; (404df8 <UDP_Handler+0xb7c>)
  404c20:	4798      	blx	r3
		UDC_RESUME_EVENT();
  404c22:	4b76      	ldr	r3, [pc, #472]	; (404dfc <UDP_Handler+0xb80>)
  404c24:	4798      	blx	r3
		udd_ack_suspend();
  404c26:	f44f 7380 	mov.w	r3, #256	; 0x100
  404c2a:	6223      	str	r3, [r4, #32]
		udd_enable_suspend_interrupt();
  404c2c:	6123      	str	r3, [r4, #16]
		udd_enable_sof_interrupt();
  404c2e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  404c32:	6123      	str	r3, [r4, #16]
		goto udd_interrupt_end;
  404c34:	f7ff bb7c 	b.w	404330 <UDP_Handler+0xb4>
		udd_ack_suspend();
  404c38:	4b6e      	ldr	r3, [pc, #440]	; (404df4 <UDP_Handler+0xb78>)
  404c3a:	f44f 7280 	mov.w	r2, #256	; 0x100
  404c3e:	621a      	str	r2, [r3, #32]
		udd_disable_suspend_interrupt();
  404c40:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
  404c42:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  404c46:	611a      	str	r2, [r3, #16]
		udd_enable_resume_interrupt();
  404c48:	f44f 7200 	mov.w	r2, #512	; 0x200
  404c4c:	611a      	str	r2, [r3, #16]
		udd_enable_ext_resume_interrupt();
  404c4e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404c52:	611a      	str	r2, [r3, #16]
		udd_disable_periph_ck();
  404c54:	2030      	movs	r0, #48	; 0x30
  404c56:	4b6a      	ldr	r3, [pc, #424]	; (404e00 <UDP_Handler+0xb84>)
  404c58:	4798      	blx	r3
		udd_sleep_mode(false); // Enter in SUSPEND mode
  404c5a:	2000      	movs	r0, #0
  404c5c:	4b66      	ldr	r3, [pc, #408]	; (404df8 <UDP_Handler+0xb7c>)
  404c5e:	4798      	blx	r3
		UDC_SUSPEND_EVENT();
  404c60:	4b68      	ldr	r3, [pc, #416]	; (404e04 <UDP_Handler+0xb88>)
  404c62:	4798      	blx	r3
		goto udd_interrupt_end;
  404c64:	f7ff bb64 	b.w	404330 <UDP_Handler+0xb4>
	udd_ep_ack_out_received(ep);
  404c68:	4630      	mov	r0, r6
  404c6a:	4b67      	ldr	r3, [pc, #412]	; (404e08 <UDP_Handler+0xb8c>)
  404c6c:	4798      	blx	r3
  404c6e:	e5c6      	b.n	4047fe <UDP_Handler+0x582>
		ptr_job->buf_cnt += nb_data;
  404c70:	eb08 0c88 	add.w	ip, r8, r8, lsl #2
  404c74:	4b65      	ldr	r3, [pc, #404]	; (404e0c <UDP_Handler+0xb90>)
  404c76:	eb03 038c 	add.w	r3, r3, ip, lsl #2
  404c7a:	f8c3 e00c 	str.w	lr, [r3, #12]
		for (i = 0; i < nb_data; i++) {
  404c7e:	2800      	cmp	r0, #0
  404c80:	d0f2      	beq.n	404c68 <UDP_Handler+0x9ec>
			b_full = true;
  404c82:	f04f 0b01 	mov.w	fp, #1
  404c86:	e5ab      	b.n	4047e0 <UDP_Handler+0x564>
	udd_ep_ack_out_received(ep);
  404c88:	4630      	mov	r0, r6
  404c8a:	4b5f      	ldr	r3, [pc, #380]	; (404e08 <UDP_Handler+0xb8c>)
  404c8c:	4798      	blx	r3
	if ((b_full || b_short) &&
  404c8e:	45ba      	cmp	sl, r7
  404c90:	f63f adb5 	bhi.w	4047fe <UDP_Handler+0x582>
  404c94:	f7ff bb4c 	b.w	404330 <UDP_Handler+0xb4>
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  404c98:	4b56      	ldr	r3, [pc, #344]	; (404df4 <UDP_Handler+0xb78>)
  404c9a:	699b      	ldr	r3, [r3, #24]
  404c9c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  404ca0:	d1b2      	bne.n	404c08 <UDP_Handler+0x98c>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  404ca2:	4b54      	ldr	r3, [pc, #336]	; (404df4 <UDP_Handler+0xb78>)
  404ca4:	699b      	ldr	r3, [r3, #24]
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  404ca6:	f413 7f00 	tst.w	r3, #512	; 0x200
  404caa:	d004      	beq.n	404cb6 <UDP_Handler+0xa3a>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  404cac:	4b51      	ldr	r3, [pc, #324]	; (404df4 <UDP_Handler+0xb78>)
  404cae:	69db      	ldr	r3, [r3, #28]
  404cb0:	f413 7f00 	tst.w	r3, #512	; 0x200
  404cb4:	d1ad      	bne.n	404c12 <UDP_Handler+0x996>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  404cb6:	4b4f      	ldr	r3, [pc, #316]	; (404df4 <UDP_Handler+0xb78>)
  404cb8:	699b      	ldr	r3, [r3, #24]
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  404cba:	f413 6f80 	tst.w	r3, #1024	; 0x400
  404cbe:	d004      	beq.n	404cca <UDP_Handler+0xa4e>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  404cc0:	4b4c      	ldr	r3, [pc, #304]	; (404df4 <UDP_Handler+0xb78>)
  404cc2:	69db      	ldr	r3, [r3, #28]
  404cc4:	f413 6f80 	tst.w	r3, #1024	; 0x400
  404cc8:	d1a3      	bne.n	404c12 <UDP_Handler+0x996>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
  404cca:	4b4a      	ldr	r3, [pc, #296]	; (404df4 <UDP_Handler+0xb78>)
  404ccc:	699b      	ldr	r3, [r3, #24]
  404cce:	f413 7f80 	tst.w	r3, #256	; 0x100
  404cd2:	d004      	beq.n	404cde <UDP_Handler+0xa62>
  404cd4:	4b47      	ldr	r3, [pc, #284]	; (404df4 <UDP_Handler+0xb78>)
  404cd6:	69db      	ldr	r3, [r3, #28]
  404cd8:	f413 7f80 	tst.w	r3, #256	; 0x100
  404cdc:	d1ac      	bne.n	404c38 <UDP_Handler+0x9bc>
	if (Is_udd_reset()) {
  404cde:	4b45      	ldr	r3, [pc, #276]	; (404df4 <UDP_Handler+0xb78>)
  404ce0:	69db      	ldr	r3, [r3, #28]
  404ce2:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  404ce6:	f43f ab23 	beq.w	404330 <UDP_Handler+0xb4>
		udd_ack_reset();
  404cea:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  404cee:	4b41      	ldr	r3, [pc, #260]	; (404df4 <UDP_Handler+0xb78>)
  404cf0:	621a      	str	r2, [r3, #32]
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  404cf2:	2400      	movs	r4, #0
		udd_ep_finish_job(&udd_ep_job[i], UDD_EP_TRANSFER_ABORT, i + 1);
  404cf4:	2601      	movs	r6, #1
  404cf6:	4d46      	ldr	r5, [pc, #280]	; (404e10 <UDP_Handler+0xb94>)
  404cf8:	3401      	adds	r4, #1
  404cfa:	b2e4      	uxtb	r4, r4
  404cfc:	4622      	mov	r2, r4
  404cfe:	4631      	mov	r1, r6
  404d00:	4638      	mov	r0, r7
  404d02:	47a8      	blx	r5
  404d04:	3714      	adds	r7, #20
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  404d06:	2c05      	cmp	r4, #5
  404d08:	d1f6      	bne.n	404cf8 <UDP_Handler+0xa7c>
		udc_reset();
  404d0a:	4b42      	ldr	r3, [pc, #264]	; (404e14 <UDP_Handler+0xb98>)
  404d0c:	4798      	blx	r3
		udd_disable_address_state();
  404d0e:	4b39      	ldr	r3, [pc, #228]	; (404df4 <UDP_Handler+0xb78>)
  404d10:	685a      	ldr	r2, [r3, #4]
  404d12:	f022 0201 	bic.w	r2, r2, #1
  404d16:	605a      	str	r2, [r3, #4]
		udd_disable_configured_state();
  404d18:	685a      	ldr	r2, [r3, #4]
  404d1a:	f022 0202 	bic.w	r2, r2, #2
  404d1e:	605a      	str	r2, [r3, #4]
	udd_enable_address();
  404d20:	689a      	ldr	r2, [r3, #8]
  404d22:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  404d26:	609a      	str	r2, [r3, #8]
	udd_configure_address(0);
  404d28:	689a      	ldr	r2, [r3, #8]
  404d2a:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  404d2e:	609a      	str	r2, [r3, #8]
	udd_configure_endpoint(0, USB_EP_TYPE_CONTROL, 0);
  404d30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  404d32:	922e      	str	r2, [sp, #184]	; 0xb8
  404d34:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
  404d36:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  404d3a:	922e      	str	r2, [sp, #184]	; 0xb8
  404d3c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
  404d3e:	f422 4207 	bic.w	r2, r2, #34560	; 0x8700
  404d42:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  404d46:	922e      	str	r2, [sp, #184]	; 0xb8
  404d48:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
  404d4a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
  404d4e:	922e      	str	r2, [sp, #184]	; 0xb8
  404d50:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
  404d52:	631a      	str	r2, [r3, #48]	; 0x30
  404d54:	2300      	movs	r3, #0
  404d56:	932f      	str	r3, [sp, #188]	; 0xbc
  404d58:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
  404d5a:	2b13      	cmp	r3, #19
  404d5c:	d806      	bhi.n	404d6c <UDP_Handler+0xaf0>
  404d5e:	bf00      	nop
  404d60:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
  404d62:	3301      	adds	r3, #1
  404d64:	932f      	str	r3, [sp, #188]	; 0xbc
  404d66:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
  404d68:	2b13      	cmp	r3, #19
  404d6a:	d9f8      	bls.n	404d5e <UDP_Handler+0xae2>
  404d6c:	4a21      	ldr	r2, [pc, #132]	; (404df4 <UDP_Handler+0xb78>)
  404d6e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404d70:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  404d74:	d0fb      	beq.n	404d6e <UDP_Handler+0xaf2>
	udd_enable_endpoint(0);
  404d76:	4a1f      	ldr	r2, [pc, #124]	; (404df4 <UDP_Handler+0xb78>)
  404d78:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404d7a:	9330      	str	r3, [sp, #192]	; 0xc0
  404d7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
  404d7e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  404d82:	9330      	str	r3, [sp, #192]	; 0xc0
  404d84:	9b30      	ldr	r3, [sp, #192]	; 0xc0
  404d86:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  404d8a:	9330      	str	r3, [sp, #192]	; 0xc0
  404d8c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
  404d8e:	6313      	str	r3, [r2, #48]	; 0x30
  404d90:	2300      	movs	r3, #0
  404d92:	9331      	str	r3, [sp, #196]	; 0xc4
  404d94:	9b31      	ldr	r3, [sp, #196]	; 0xc4
  404d96:	2b13      	cmp	r3, #19
  404d98:	d806      	bhi.n	404da8 <UDP_Handler+0xb2c>
  404d9a:	bf00      	nop
  404d9c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
  404d9e:	3301      	adds	r3, #1
  404da0:	9331      	str	r3, [sp, #196]	; 0xc4
  404da2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
  404da4:	2b13      	cmp	r3, #19
  404da6:	d9f8      	bls.n	404d9a <UDP_Handler+0xb1e>
  404da8:	4a12      	ldr	r2, [pc, #72]	; (404df4 <UDP_Handler+0xb78>)
  404daa:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404dac:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  404db0:	d0fb      	beq.n	404daa <UDP_Handler+0xb2e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  404db2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  404db6:	fab3 f383 	clz	r3, r3
  404dba:	095b      	lsrs	r3, r3, #5
  404dbc:	932d      	str	r3, [sp, #180]	; 0xb4
  __ASM volatile ("cpsid i" : : : "memory");
  404dbe:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404dc0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  404dc4:	2200      	movs	r2, #0
  404dc6:	4b14      	ldr	r3, [pc, #80]	; (404e18 <UDP_Handler+0xb9c>)
  404dc8:	701a      	strb	r2, [r3, #0]
	return flags;
  404dca:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
	udd_enable_endpoint_interrupt(0);
  404dcc:	2101      	movs	r1, #1
  404dce:	4a09      	ldr	r2, [pc, #36]	; (404df4 <UDP_Handler+0xb78>)
  404dd0:	6111      	str	r1, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
  404dd2:	b123      	cbz	r3, 404dde <UDP_Handler+0xb62>
		cpu_irq_enable();
  404dd4:	4b10      	ldr	r3, [pc, #64]	; (404e18 <UDP_Handler+0xb9c>)
  404dd6:	7019      	strb	r1, [r3, #0]
  404dd8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  404ddc:	b662      	cpsie	i
		udd_ctrl_init();
  404dde:	4b0f      	ldr	r3, [pc, #60]	; (404e1c <UDP_Handler+0xba0>)
  404de0:	4798      	blx	r3
		udd_enable_suspend_interrupt();
  404de2:	4b04      	ldr	r3, [pc, #16]	; (404df4 <UDP_Handler+0xb78>)
  404de4:	f44f 7280 	mov.w	r2, #256	; 0x100
  404de8:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
  404dea:	f44f 6200 	mov.w	r2, #2048	; 0x800
  404dee:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
  404df0:	f7ff ba9e 	b.w	404330 <UDP_Handler+0xb4>
  404df4:	40044000 	.word	0x40044000
  404df8:	00403bc9 	.word	0x00403bc9
  404dfc:	00408269 	.word	0x00408269
  404e00:	004038a1 	.word	0x004038a1
  404e04:	0040825d 	.word	0x0040825d
  404e08:	00403fad 	.word	0x00403fad
  404e0c:	2001a264 	.word	0x2001a264
  404e10:	00403f6d 	.word	0x00403f6d
  404e14:	00402cdd 	.word	0x00402cdd
  404e18:	200001fc 	.word	0x200001fc
  404e1c:	00403c6d 	.word	0x00403c6d

00404e20 <udd_attach>:
{
  404e20:	b510      	push	{r4, lr}
  404e22:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  404e24:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  404e28:	fab3 f383 	clz	r3, r3
  404e2c:	095b      	lsrs	r3, r3, #5
  404e2e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  404e30:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404e32:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  404e36:	2200      	movs	r2, #0
  404e38:	4b14      	ldr	r3, [pc, #80]	; (404e8c <udd_attach+0x6c>)
  404e3a:	701a      	strb	r2, [r3, #0]
	return flags;
  404e3c:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
  404e3e:	2001      	movs	r0, #1
  404e40:	4b13      	ldr	r3, [pc, #76]	; (404e90 <udd_attach+0x70>)
  404e42:	4798      	blx	r3
	udd_enable_periph_ck();
  404e44:	2030      	movs	r0, #48	; 0x30
  404e46:	4b13      	ldr	r3, [pc, #76]	; (404e94 <udd_attach+0x74>)
  404e48:	4798      	blx	r3
	udd_enable_transceiver();
  404e4a:	4b13      	ldr	r3, [pc, #76]	; (404e98 <udd_attach+0x78>)
  404e4c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  404e4e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  404e52:	675a      	str	r2, [r3, #116]	; 0x74
	udd_attach_device();
  404e54:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  404e56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  404e5a:	675a      	str	r2, [r3, #116]	; 0x74
	udd_enable_suspend_interrupt();
  404e5c:	f44f 7280 	mov.w	r2, #256	; 0x100
  404e60:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
  404e62:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  404e66:	611a      	str	r2, [r3, #16]
	udd_enable_resume_interrupt();
  404e68:	f44f 7200 	mov.w	r2, #512	; 0x200
  404e6c:	611a      	str	r2, [r3, #16]
	udd_enable_ext_resume_interrupt();
  404e6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404e72:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
  404e74:	f44f 6200 	mov.w	r2, #2048	; 0x800
  404e78:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  404e7a:	b12c      	cbz	r4, 404e88 <udd_attach+0x68>
		cpu_irq_enable();
  404e7c:	2201      	movs	r2, #1
  404e7e:	4b03      	ldr	r3, [pc, #12]	; (404e8c <udd_attach+0x6c>)
  404e80:	701a      	strb	r2, [r3, #0]
  404e82:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  404e86:	b662      	cpsie	i
}
  404e88:	b002      	add	sp, #8
  404e8a:	bd10      	pop	{r4, pc}
  404e8c:	200001fc 	.word	0x200001fc
  404e90:	00403bc9 	.word	0x00403bc9
  404e94:	0040384d 	.word	0x0040384d
  404e98:	40044000 	.word	0x40044000

00404e9c <udd_enable>:
{
  404e9c:	b530      	push	{r4, r5, lr}
  404e9e:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  404ea0:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  404ea4:	fab3 f383 	clz	r3, r3
  404ea8:	095b      	lsrs	r3, r3, #5
  404eaa:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  404eac:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404eae:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  404eb2:	2400      	movs	r4, #0
  404eb4:	4b28      	ldr	r3, [pc, #160]	; (404f58 <udd_enable+0xbc>)
  404eb6:	701c      	strb	r4, [r3, #0]
	return flags;
  404eb8:	9d00      	ldr	r5, [sp, #0]
	matrix_set_usb_device();
  404eba:	4b28      	ldr	r3, [pc, #160]	; (404f5c <udd_enable+0xc0>)
  404ebc:	4798      	blx	r3
	udd_enable_periph_ck();
  404ebe:	2030      	movs	r0, #48	; 0x30
  404ec0:	4b27      	ldr	r3, [pc, #156]	; (404f60 <udd_enable+0xc4>)
  404ec2:	4798      	blx	r3
	sysclk_enable_usb();
  404ec4:	4b27      	ldr	r3, [pc, #156]	; (404f64 <udd_enable+0xc8>)
  404ec6:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  404ec8:	4b27      	ldr	r3, [pc, #156]	; (404f68 <udd_enable+0xcc>)
  404eca:	2250      	movs	r2, #80	; 0x50
  404ecc:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  404ed0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  404ed4:	605a      	str	r2, [r3, #4]
  404ed6:	4623      	mov	r3, r4
		udd_ep_job[i].bank = 0;
  404ed8:	4824      	ldr	r0, [pc, #144]	; (404f6c <udd_enable+0xd0>)
  404eda:	009a      	lsls	r2, r3, #2
  404edc:	18d1      	adds	r1, r2, r3
  404ede:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  404ee2:	7c49      	ldrb	r1, [r1, #17]
		udd_ep_job[i].b_buf_end = false;
  404ee4:	441a      	add	r2, r3
  404ee6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  404eea:	f001 0183 	and.w	r1, r1, #131	; 0x83
  404eee:	f36f 11c7 	bfc	r1, #7, #1
  404ef2:	7451      	strb	r1, [r2, #17]
  404ef4:	3301      	adds	r3, #1
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  404ef6:	2b05      	cmp	r3, #5
  404ef8:	d1ef      	bne.n	404eda <udd_enable+0x3e>
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
  404efa:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  404efe:	4b1c      	ldr	r3, [pc, #112]	; (404f70 <udd_enable+0xd4>)
  404f00:	4798      	blx	r3
	udd_b_idle = false;
  404f02:	2200      	movs	r2, #0
  404f04:	4b1b      	ldr	r3, [pc, #108]	; (404f74 <udd_enable+0xd8>)
  404f06:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
  404f08:	4b1b      	ldr	r3, [pc, #108]	; (404f78 <udd_enable+0xdc>)
  404f0a:	781b      	ldrb	r3, [r3, #0]
  404f0c:	2bff      	cmp	r3, #255	; 0xff
  404f0e:	d022      	beq.n	404f56 <udd_enable+0xba>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  404f10:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  404f14:	fab3 f383 	clz	r3, r3
  404f18:	095b      	lsrs	r3, r3, #5
  404f1a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  404f1c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  404f1e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  404f22:	2200      	movs	r2, #0
  404f24:	4b0c      	ldr	r3, [pc, #48]	; (404f58 <udd_enable+0xbc>)
  404f26:	701a      	strb	r2, [r3, #0]
	return flags;
  404f28:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
  404f2a:	4a13      	ldr	r2, [pc, #76]	; (404f78 <udd_enable+0xdc>)
  404f2c:	7813      	ldrb	r3, [r2, #0]
  404f2e:	3301      	adds	r3, #1
  404f30:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  404f32:	b129      	cbz	r1, 404f40 <udd_enable+0xa4>
		cpu_irq_enable();
  404f34:	2201      	movs	r2, #1
  404f36:	4b08      	ldr	r3, [pc, #32]	; (404f58 <udd_enable+0xbc>)
  404f38:	701a      	strb	r2, [r3, #0]
  404f3a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  404f3e:	b662      	cpsie	i
	udd_attach();
  404f40:	4b0e      	ldr	r3, [pc, #56]	; (404f7c <udd_enable+0xe0>)
  404f42:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
  404f44:	b12d      	cbz	r5, 404f52 <udd_enable+0xb6>
		cpu_irq_enable();
  404f46:	2201      	movs	r2, #1
  404f48:	4b03      	ldr	r3, [pc, #12]	; (404f58 <udd_enable+0xbc>)
  404f4a:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  404f4c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  404f50:	b662      	cpsie	i
}
  404f52:	b003      	add	sp, #12
  404f54:	bd30      	pop	{r4, r5, pc}
  404f56:	e7fe      	b.n	404f56 <udd_enable+0xba>
  404f58:	200001fc 	.word	0x200001fc
  404f5c:	00403545 	.word	0x00403545
  404f60:	0040384d 	.word	0x0040384d
  404f64:	00401a09 	.word	0x00401a09
  404f68:	e000e100 	.word	0xe000e100
  404f6c:	2001a264 	.word	0x2001a264
  404f70:	004039a5 	.word	0x004039a5
  404f74:	2001a25a 	.word	0x2001a25a
  404f78:	2001ab30 	.word	0x2001ab30
  404f7c:	00404e21 	.word	0x00404e21

00404f80 <udd_is_high_speed>:
}
  404f80:	2000      	movs	r0, #0
  404f82:	4770      	bx	lr

00404f84 <udd_set_address>:
	udd_disable_address_state();
  404f84:	4b0d      	ldr	r3, [pc, #52]	; (404fbc <udd_set_address+0x38>)
  404f86:	685a      	ldr	r2, [r3, #4]
  404f88:	f022 0201 	bic.w	r2, r2, #1
  404f8c:	605a      	str	r2, [r3, #4]
	udd_disable_address();
  404f8e:	689a      	ldr	r2, [r3, #8]
  404f90:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  404f94:	609a      	str	r2, [r3, #8]
	if (address) {
  404f96:	4602      	mov	r2, r0
  404f98:	b170      	cbz	r0, 404fb8 <udd_set_address+0x34>
		udd_configure_address(address);
  404f9a:	6898      	ldr	r0, [r3, #8]
  404f9c:	f020 007f 	bic.w	r0, r0, #127	; 0x7f
  404fa0:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  404fa4:	4310      	orrs	r0, r2
  404fa6:	6098      	str	r0, [r3, #8]
		udd_enable_address();
  404fa8:	689a      	ldr	r2, [r3, #8]
  404faa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  404fae:	609a      	str	r2, [r3, #8]
		udd_enable_address_state();
  404fb0:	685a      	ldr	r2, [r3, #4]
  404fb2:	f042 0201 	orr.w	r2, r2, #1
  404fb6:	605a      	str	r2, [r3, #4]
  404fb8:	4770      	bx	lr
  404fba:	bf00      	nop
  404fbc:	40044000 	.word	0x40044000

00404fc0 <udd_getaddress>:
	if (Is_udd_address_state_enabled())
  404fc0:	4b05      	ldr	r3, [pc, #20]	; (404fd8 <udd_getaddress+0x18>)
  404fc2:	685b      	ldr	r3, [r3, #4]
  404fc4:	f013 0f01 	tst.w	r3, #1
		return udd_get_configured_address();
  404fc8:	bf1d      	ittte	ne
  404fca:	4b03      	ldrne	r3, [pc, #12]	; (404fd8 <udd_getaddress+0x18>)
  404fcc:	6898      	ldrne	r0, [r3, #8]
  404fce:	f000 007f 	andne.w	r0, r0, #127	; 0x7f
	return 0;
  404fd2:	2000      	moveq	r0, #0
}
  404fd4:	4770      	bx	lr
  404fd6:	bf00      	nop
  404fd8:	40044000 	.word	0x40044000

00404fdc <udd_get_frame_number>:
	return udd_frame_number();
  404fdc:	4b02      	ldr	r3, [pc, #8]	; (404fe8 <udd_get_frame_number+0xc>)
  404fde:	6818      	ldr	r0, [r3, #0]
}
  404fe0:	f3c0 000a 	ubfx	r0, r0, #0, #11
  404fe4:	4770      	bx	lr
  404fe6:	bf00      	nop
  404fe8:	40044000 	.word	0x40044000

00404fec <udd_get_micro_frame_number>:
}
  404fec:	2000      	movs	r0, #0
  404fee:	4770      	bx	lr

00404ff0 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
  404ff0:	4b01      	ldr	r3, [pc, #4]	; (404ff8 <udd_set_setup_payload+0x8>)
  404ff2:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
  404ff4:	8199      	strh	r1, [r3, #12]
  404ff6:	4770      	bx	lr
  404ff8:	2001ab44 	.word	0x2001ab44

00404ffc <udd_ep_alloc>:
	ep = ep & USB_EP_ADDR_MASK;
  404ffc:	f000 030f 	and.w	r3, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
  405000:	2b05      	cmp	r3, #5
  405002:	f200 808e 	bhi.w	405122 <udd_ep_alloc+0x126>
{
  405006:	b5f0      	push	{r4, r5, r6, r7, lr}
  405008:	b085      	sub	sp, #20
  40500a:	009c      	lsls	r4, r3, #2
  40500c:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  405010:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
	if (Is_udd_endpoint_enabled(ep)) {
  405014:	6b25      	ldr	r5, [r4, #48]	; 0x30
  405016:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  40501a:	f040 8084 	bne.w	405126 <udd_ep_alloc+0x12a>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  40501e:	f001 0503 	and.w	r5, r1, #3
  405022:	2d01      	cmp	r5, #1
  405024:	d073      	beq.n	40510e <udd_ep_alloc+0x112>
	if (MaxEndpointSize > udd_get_endpoint_size_max(ep)) {
  405026:	1f1d      	subs	r5, r3, #4
  405028:	b2ed      	uxtb	r5, r5
  40502a:	2d02      	cmp	r5, #2
  40502c:	bf34      	ite	cc
  40502e:	f44f 7500 	movcc.w	r5, #512	; 0x200
  405032:	2540      	movcs	r5, #64	; 0x40
  405034:	4295      	cmp	r5, r2
  405036:	db7b      	blt.n	405130 <udd_ep_alloc+0x134>
  405038:	b240      	sxtb	r0, r0
	ptr_job = &udd_ep_job[ep - 1];
  40503a:	1e5e      	subs	r6, r3, #1
	ptr_job->size = MaxEndpointSize;
  40503c:	eb06 0786 	add.w	r7, r6, r6, lsl #2
  405040:	4d3c      	ldr	r5, [pc, #240]	; (405134 <udd_ep_alloc+0x138>)
  405042:	eb05 0587 	add.w	r5, r5, r7, lsl #2
  405046:	f105 0710 	add.w	r7, r5, #16
  40504a:	f8b5 e010 	ldrh.w	lr, [r5, #16]
  40504e:	f362 0e09 	bfi	lr, r2, #0, #10
  405052:	f8a5 e010 	strh.w	lr, [r5, #16]
	ptr_job->b_buf_end = false;
  405056:	7c6a      	ldrb	r2, [r5, #17]
	ptr_job->b_stall_requested = false;
  405058:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  40505c:	f36f 1245 	bfc	r2, #5, #1
  405060:	746a      	strb	r2, [r5, #17]
	if (b_dir_in) {
  405062:	2800      	cmp	r0, #0
  405064:	db58      	blt.n	405118 <udd_ep_alloc+0x11c>
	udd_reset_endpoint(ep);
  405066:	4e34      	ldr	r6, [pc, #208]	; (405138 <udd_ep_alloc+0x13c>)
  405068:	6ab5      	ldr	r5, [r6, #40]	; 0x28
  40506a:	2201      	movs	r2, #1
  40506c:	409a      	lsls	r2, r3
  40506e:	4315      	orrs	r5, r2
  405070:	62b5      	str	r5, [r6, #40]	; 0x28
  405072:	2300      	movs	r3, #0
  405074:	9301      	str	r3, [sp, #4]
  405076:	9b01      	ldr	r3, [sp, #4]
  405078:	2b13      	cmp	r3, #19
  40507a:	d806      	bhi.n	40508a <udd_ep_alloc+0x8e>
  40507c:	bf00      	nop
  40507e:	9b01      	ldr	r3, [sp, #4]
  405080:	3301      	adds	r3, #1
  405082:	9301      	str	r3, [sp, #4]
  405084:	9b01      	ldr	r3, [sp, #4]
  405086:	2b13      	cmp	r3, #19
  405088:	d9f8      	bls.n	40507c <udd_ep_alloc+0x80>
  40508a:	4d2b      	ldr	r5, [pc, #172]	; (405138 <udd_ep_alloc+0x13c>)
  40508c:	6aab      	ldr	r3, [r5, #40]	; 0x28
  40508e:	421a      	tst	r2, r3
  405090:	d0fc      	beq.n	40508c <udd_ep_alloc+0x90>
  405092:	4d29      	ldr	r5, [pc, #164]	; (405138 <udd_ep_alloc+0x13c>)
  405094:	6aab      	ldr	r3, [r5, #40]	; 0x28
  405096:	ea23 0302 	bic.w	r3, r3, r2
  40509a:	62ab      	str	r3, [r5, #40]	; 0x28
  40509c:	2300      	movs	r3, #0
  40509e:	9301      	str	r3, [sp, #4]
  4050a0:	9b01      	ldr	r3, [sp, #4]
  4050a2:	2b13      	cmp	r3, #19
  4050a4:	d806      	bhi.n	4050b4 <udd_ep_alloc+0xb8>
  4050a6:	bf00      	nop
  4050a8:	9b01      	ldr	r3, [sp, #4]
  4050aa:	3301      	adds	r3, #1
  4050ac:	9301      	str	r3, [sp, #4]
  4050ae:	9b01      	ldr	r3, [sp, #4]
  4050b0:	2b13      	cmp	r3, #19
  4050b2:	d9f8      	bls.n	4050a6 <udd_ep_alloc+0xaa>
	udd_configure_endpoint(ep,
  4050b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4050b6:	9302      	str	r3, [sp, #8]
  4050b8:	9b02      	ldr	r3, [sp, #8]
  4050ba:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4050be:	9302      	str	r3, [sp, #8]
  4050c0:	9b02      	ldr	r3, [sp, #8]
  4050c2:	f423 4307 	bic.w	r3, r3, #34560	; 0x8700
  4050c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4050ca:	9302      	str	r3, [sp, #8]
  4050cc:	2800      	cmp	r0, #0
  4050ce:	ea4f 2201 	mov.w	r2, r1, lsl #8
  4050d2:	f402 7240 	and.w	r2, r2, #768	; 0x300
  4050d6:	bfb4      	ite	lt
  4050d8:	f442 4204 	orrlt.w	r2, r2, #33792	; 0x8400
  4050dc:	f442 4200 	orrge.w	r2, r2, #32768	; 0x8000
  4050e0:	9b02      	ldr	r3, [sp, #8]
  4050e2:	4313      	orrs	r3, r2
  4050e4:	9302      	str	r3, [sp, #8]
  4050e6:	9b02      	ldr	r3, [sp, #8]
  4050e8:	6323      	str	r3, [r4, #48]	; 0x30
  4050ea:	2300      	movs	r3, #0
  4050ec:	9303      	str	r3, [sp, #12]
  4050ee:	9b03      	ldr	r3, [sp, #12]
  4050f0:	2b13      	cmp	r3, #19
  4050f2:	d806      	bhi.n	405102 <udd_ep_alloc+0x106>
  4050f4:	bf00      	nop
  4050f6:	9b03      	ldr	r3, [sp, #12]
  4050f8:	3301      	adds	r3, #1
  4050fa:	9303      	str	r3, [sp, #12]
  4050fc:	9b03      	ldr	r3, [sp, #12]
  4050fe:	2b13      	cmp	r3, #19
  405100:	d9f8      	bls.n	4050f4 <udd_ep_alloc+0xf8>
  405102:	6b23      	ldr	r3, [r4, #48]	; 0x30
  405104:	ea32 0303 	bics.w	r3, r2, r3
  405108:	d1fb      	bne.n	405102 <udd_ep_alloc+0x106>
	return true;
  40510a:	2001      	movs	r0, #1
  40510c:	e00c      	b.n	405128 <udd_ep_alloc+0x12c>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  40510e:	b16b      	cbz	r3, 40512c <udd_ep_alloc+0x130>
  405110:	2b03      	cmp	r3, #3
  405112:	d188      	bne.n	405026 <udd_ep_alloc+0x2a>
		return false;
  405114:	2000      	movs	r0, #0
  405116:	e007      	b.n	405128 <udd_ep_alloc+0x12c>
		ptr_job->bank = 0;
  405118:	787a      	ldrb	r2, [r7, #1]
  40511a:	f36f 0283 	bfc	r2, #2, #2
  40511e:	707a      	strb	r2, [r7, #1]
  405120:	e7a1      	b.n	405066 <udd_ep_alloc+0x6a>
		return false;
  405122:	2000      	movs	r0, #0
  405124:	4770      	bx	lr
		return false;
  405126:	2000      	movs	r0, #0
}
  405128:	b005      	add	sp, #20
  40512a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false;
  40512c:	2000      	movs	r0, #0
  40512e:	e7fb      	b.n	405128 <udd_ep_alloc+0x12c>
		return false;
  405130:	2000      	movs	r0, #0
  405132:	e7f9      	b.n	405128 <udd_ep_alloc+0x12c>
  405134:	2001a264 	.word	0x2001a264
  405138:	40044000 	.word	0x40044000

0040513c <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  40513c:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  405140:	2a05      	cmp	r2, #5
  405142:	d82e      	bhi.n	4051a2 <udd_ep_free+0x66>
{
  405144:	b500      	push	{lr}
  405146:	b083      	sub	sp, #12
  405148:	0091      	lsls	r1, r2, #2
  40514a:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
  40514e:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
	udd_disable_endpoint(ep_index);
  405152:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  405154:	9300      	str	r3, [sp, #0]
  405156:	9b00      	ldr	r3, [sp, #0]
  405158:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40515c:	9300      	str	r3, [sp, #0]
  40515e:	9b00      	ldr	r3, [sp, #0]
  405160:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  405164:	9300      	str	r3, [sp, #0]
  405166:	9b00      	ldr	r3, [sp, #0]
  405168:	630b      	str	r3, [r1, #48]	; 0x30
  40516a:	2300      	movs	r3, #0
  40516c:	9301      	str	r3, [sp, #4]
  40516e:	9b01      	ldr	r3, [sp, #4]
  405170:	2b13      	cmp	r3, #19
  405172:	d806      	bhi.n	405182 <udd_ep_free+0x46>
  405174:	bf00      	nop
  405176:	9b01      	ldr	r3, [sp, #4]
  405178:	3301      	adds	r3, #1
  40517a:	9301      	str	r3, [sp, #4]
  40517c:	9b01      	ldr	r3, [sp, #4]
  40517e:	2b13      	cmp	r3, #19
  405180:	d9f8      	bls.n	405174 <udd_ep_free+0x38>
  405182:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  405184:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  405188:	d1fb      	bne.n	405182 <udd_ep_free+0x46>
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  40518a:	1e50      	subs	r0, r2, #1
  40518c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  405190:	2101      	movs	r1, #1
  405192:	4b04      	ldr	r3, [pc, #16]	; (4051a4 <udd_ep_free+0x68>)
  405194:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  405198:	4b03      	ldr	r3, [pc, #12]	; (4051a8 <udd_ep_free+0x6c>)
  40519a:	4798      	blx	r3
}
  40519c:	b003      	add	sp, #12
  40519e:	f85d fb04 	ldr.w	pc, [sp], #4
  4051a2:	4770      	bx	lr
  4051a4:	2001a264 	.word	0x2001a264
  4051a8:	00403f6d 	.word	0x00403f6d

004051ac <udd_ep_is_halted>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  4051ac:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  4051b0:	2805      	cmp	r0, #5
  4051b2:	d815      	bhi.n	4051e0 <udd_ep_is_halted+0x34>
	return ptr_job->b_stall_requested ||
  4051b4:	1e43      	subs	r3, r0, #1
  4051b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  4051ba:	4a0a      	ldr	r2, [pc, #40]	; (4051e4 <udd_ep_is_halted+0x38>)
  4051bc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4051c0:	7c5b      	ldrb	r3, [r3, #17]
  4051c2:	f013 0f20 	tst.w	r3, #32
  4051c6:	d109      	bne.n	4051dc <udd_ep_is_halted+0x30>
			Is_udd_endpoint_stall_pending(ep & USB_EP_ADDR_MASK);
  4051c8:	300c      	adds	r0, #12
  4051ca:	4b07      	ldr	r3, [pc, #28]	; (4051e8 <udd_ep_is_halted+0x3c>)
  4051cc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
	return ptr_job->b_stall_requested ||
  4051d0:	f013 0f28 	tst.w	r3, #40	; 0x28
  4051d4:	bf14      	ite	ne
  4051d6:	2001      	movne	r0, #1
  4051d8:	2000      	moveq	r0, #0
  4051da:	4770      	bx	lr
  4051dc:	2001      	movs	r0, #1
  4051de:	4770      	bx	lr
		return false;
  4051e0:	2000      	movs	r0, #0
}
  4051e2:	4770      	bx	lr
  4051e4:	2001a264 	.word	0x2001a264
  4051e8:	40044000 	.word	0x40044000

004051ec <udd_ep_set_halt>:
{
  4051ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  4051ee:	b085      	sub	sp, #20
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  4051f0:	f000 050f 	and.w	r5, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  4051f4:	2d05      	cmp	r5, #5
  4051f6:	d87a      	bhi.n	4052ee <udd_ep_set_halt+0x102>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4051f8:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4051fc:	fab3 f383 	clz	r3, r3
  405200:	095b      	lsrs	r3, r3, #5
  405202:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  405204:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  405206:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40520a:	2200      	movs	r2, #0
  40520c:	4b3a      	ldr	r3, [pc, #232]	; (4052f8 <udd_ep_set_halt+0x10c>)
  40520e:	701a      	strb	r2, [r3, #0]
	return flags;
  405210:	9e03      	ldr	r6, [sp, #12]
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  405212:	f010 0f80 	tst.w	r0, #128	; 0x80
  405216:	d141      	bne.n	40529c <udd_ep_set_halt+0xb0>
		printf("\r\n****if (b_dir_in && (Is_udd_transmit_ready(ep_index) || ptr_job->bank > 1)) else****---ep_index:%d\r\n", ep_index);
  405218:	4629      	mov	r1, r5
  40521a:	4838      	ldr	r0, [pc, #224]	; (4052fc <udd_ep_set_halt+0x110>)
  40521c:	4f38      	ldr	r7, [pc, #224]	; (405300 <udd_ep_set_halt+0x114>)
  40521e:	47b8      	blx	r7
		printf("\r\n---udd_enable_stall_handshake(ep_index);---ep_index:%d\r\n", ep_index);
  405220:	4629      	mov	r1, r5
  405222:	4838      	ldr	r0, [pc, #224]	; (405304 <udd_ep_set_halt+0x118>)
  405224:	47b8      	blx	r7
  405226:	00ac      	lsls	r4, r5, #2
  405228:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  40522c:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
		printf("Before processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep_index, UDP->UDP_CSR[ep_index]);
  405230:	6b22      	ldr	r2, [r4, #48]	; 0x30
  405232:	4629      	mov	r1, r5
  405234:	4834      	ldr	r0, [pc, #208]	; (405308 <udd_ep_set_halt+0x11c>)
  405236:	47b8      	blx	r7
		udd_enable_stall_handshake(ep_index);
  405238:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40523a:	9301      	str	r3, [sp, #4]
  40523c:	9b01      	ldr	r3, [sp, #4]
  40523e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  405242:	9301      	str	r3, [sp, #4]
  405244:	9b01      	ldr	r3, [sp, #4]
  405246:	f043 0320 	orr.w	r3, r3, #32
  40524a:	9301      	str	r3, [sp, #4]
  40524c:	9b01      	ldr	r3, [sp, #4]
  40524e:	6323      	str	r3, [r4, #48]	; 0x30
  405250:	2300      	movs	r3, #0
  405252:	9302      	str	r3, [sp, #8]
  405254:	9b02      	ldr	r3, [sp, #8]
  405256:	2b13      	cmp	r3, #19
  405258:	d806      	bhi.n	405268 <udd_ep_set_halt+0x7c>
  40525a:	bf00      	nop
  40525c:	9b02      	ldr	r3, [sp, #8]
  40525e:	3301      	adds	r3, #1
  405260:	9302      	str	r3, [sp, #8]
  405262:	9b02      	ldr	r3, [sp, #8]
  405264:	2b13      	cmp	r3, #19
  405266:	d9f8      	bls.n	40525a <udd_ep_set_halt+0x6e>
  405268:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40526a:	f013 0f20 	tst.w	r3, #32
  40526e:	d0fb      	beq.n	405268 <udd_ep_set_halt+0x7c>
		printf("After processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep_index, UDP->UDP_CSR[ep_index]);
  405270:	6b22      	ldr	r2, [r4, #48]	; 0x30
  405272:	4629      	mov	r1, r5
  405274:	4825      	ldr	r0, [pc, #148]	; (40530c <udd_ep_set_halt+0x120>)
  405276:	4b22      	ldr	r3, [pc, #136]	; (405300 <udd_ep_set_halt+0x114>)
  405278:	4798      	blx	r3
		udd_enable_endpoint_interrupt(ep_index);
  40527a:	2301      	movs	r3, #1
  40527c:	40ab      	lsls	r3, r5
  40527e:	4a24      	ldr	r2, [pc, #144]	; (405310 <udd_ep_set_halt+0x124>)
  405280:	6113      	str	r3, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
  405282:	b12e      	cbz	r6, 405290 <udd_ep_set_halt+0xa4>
		cpu_irq_enable();
  405284:	2201      	movs	r2, #1
  405286:	4b1c      	ldr	r3, [pc, #112]	; (4052f8 <udd_ep_set_halt+0x10c>)
  405288:	701a      	strb	r2, [r3, #0]
  40528a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40528e:	b662      	cpsie	i
		printf("\r\n****Exit -- if (b_dir_in && (Is_udd_transmit_ready(ep_index) || ptr_job->bank > 1)) else****---ep_index:%d\r\n", ep_index);
  405290:	4629      	mov	r1, r5
  405292:	4820      	ldr	r0, [pc, #128]	; (405314 <udd_ep_set_halt+0x128>)
  405294:	4b1a      	ldr	r3, [pc, #104]	; (405300 <udd_ep_set_halt+0x114>)
  405296:	4798      	blx	r3
	return true;
  405298:	2001      	movs	r0, #1
  40529a:	e029      	b.n	4052f0 <udd_ep_set_halt+0x104>
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
  40529c:	1e6b      	subs	r3, r5, #1
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  40529e:	f105 020c 	add.w	r2, r5, #12
  4052a2:	491b      	ldr	r1, [pc, #108]	; (405310 <udd_ep_set_halt+0x124>)
  4052a4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
  4052a8:	f012 0f10 	tst.w	r2, #16
  4052ac:	d109      	bne.n	4052c2 <udd_ep_set_halt+0xd6>
				|| ptr_job->bank > 1)) {
  4052ae:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4052b2:	4919      	ldr	r1, [pc, #100]	; (405318 <udd_ep_set_halt+0x12c>)
  4052b4:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  4052b8:	7c52      	ldrb	r2, [r2, #17]
  4052ba:	f3c2 0281 	ubfx	r2, r2, #2, #2
  4052be:	2a01      	cmp	r2, #1
  4052c0:	ddaa      	ble.n	405218 <udd_ep_set_halt+0x2c>
		ptr_job->b_stall_requested = true;
  4052c2:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4052c6:	4b14      	ldr	r3, [pc, #80]	; (405318 <udd_ep_set_halt+0x12c>)
  4052c8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4052cc:	7c5a      	ldrb	r2, [r3, #17]
  4052ce:	f042 0220 	orr.w	r2, r2, #32
  4052d2:	745a      	strb	r2, [r3, #17]
		udd_enable_endpoint_interrupt(ep_index);
  4052d4:	2301      	movs	r3, #1
  4052d6:	fa03 f505 	lsl.w	r5, r3, r5
  4052da:	4b0d      	ldr	r3, [pc, #52]	; (405310 <udd_ep_set_halt+0x124>)
  4052dc:	611d      	str	r5, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  4052de:	b14e      	cbz	r6, 4052f4 <udd_ep_set_halt+0x108>
		cpu_irq_enable();
  4052e0:	2001      	movs	r0, #1
  4052e2:	4b05      	ldr	r3, [pc, #20]	; (4052f8 <udd_ep_set_halt+0x10c>)
  4052e4:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  4052e6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4052ea:	b662      	cpsie	i
  4052ec:	e000      	b.n	4052f0 <udd_ep_set_halt+0x104>
		return false;
  4052ee:	2000      	movs	r0, #0
}
  4052f0:	b005      	add	sp, #20
  4052f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return true;
  4052f4:	2001      	movs	r0, #1
  4052f6:	e7fb      	b.n	4052f0 <udd_ep_set_halt+0x104>
  4052f8:	200001fc 	.word	0x200001fc
  4052fc:	0040b6d0 	.word	0x0040b6d0
  405300:	00408395 	.word	0x00408395
  405304:	0040b738 	.word	0x0040b738
  405308:	0040b774 	.word	0x0040b774
  40530c:	0040b7a4 	.word	0x0040b7a4
  405310:	40044000 	.word	0x40044000
  405314:	0040b7d4 	.word	0x0040b7d4
  405318:	2001a264 	.word	0x2001a264

0040531c <udd_ep_clear_halt>:
{
  40531c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40531e:	b087      	sub	sp, #28
	ep &= USB_EP_ADDR_MASK;
  405320:	f000 050f 	and.w	r5, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  405324:	2d05      	cmp	r5, #5
  405326:	f200 80b9 	bhi.w	40549c <udd_ep_clear_halt+0x180>
	ptr_job = &udd_ep_job[ep - 1];
  40532a:	1e6e      	subs	r6, r5, #1
	ptr_job->b_stall_requested = false;
  40532c:	eb06 0286 	add.w	r2, r6, r6, lsl #2
  405330:	4b5c      	ldr	r3, [pc, #368]	; (4054a4 <udd_ep_clear_halt+0x188>)
  405332:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  405336:	7c5a      	ldrb	r2, [r3, #17]
  405338:	f36f 1245 	bfc	r2, #5, #1
  40533c:	745a      	strb	r2, [r3, #17]
  40533e:	00ac      	lsls	r4, r5, #2
  405340:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  405344:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
	if (Is_udd_endpoint_stall_requested(ep)) {
  405348:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40534a:	f013 0f20 	tst.w	r3, #32
  40534e:	d101      	bne.n	405354 <udd_ep_clear_halt+0x38>
	return true;
  405350:	2001      	movs	r0, #1
  405352:	e0a4      	b.n	40549e <udd_ep_clear_halt+0x182>
		printf("\r\n****if (Is_udd_endpoint_stall_requested(ep)****---ep:%d\r\n", ep);
  405354:	4629      	mov	r1, r5
  405356:	4854      	ldr	r0, [pc, #336]	; (4054a8 <udd_ep_clear_halt+0x18c>)
  405358:	4f54      	ldr	r7, [pc, #336]	; (4054ac <udd_ep_clear_halt+0x190>)
  40535a:	47b8      	blx	r7
		printf("\r\n---udd_disable_stall_handshake(ep);---ep:%d\r\n", ep);
  40535c:	4629      	mov	r1, r5
  40535e:	4854      	ldr	r0, [pc, #336]	; (4054b0 <udd_ep_clear_halt+0x194>)
  405360:	47b8      	blx	r7
		printf("Before processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  405362:	6b22      	ldr	r2, [r4, #48]	; 0x30
  405364:	4629      	mov	r1, r5
  405366:	4853      	ldr	r0, [pc, #332]	; (4054b4 <udd_ep_clear_halt+0x198>)
  405368:	47b8      	blx	r7
		udd_disable_stall_handshake(ep);
  40536a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40536c:	9301      	str	r3, [sp, #4]
  40536e:	9b01      	ldr	r3, [sp, #4]
  405370:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  405374:	9301      	str	r3, [sp, #4]
  405376:	9b01      	ldr	r3, [sp, #4]
  405378:	f023 0320 	bic.w	r3, r3, #32
  40537c:	9301      	str	r3, [sp, #4]
  40537e:	9b01      	ldr	r3, [sp, #4]
  405380:	6323      	str	r3, [r4, #48]	; 0x30
  405382:	2300      	movs	r3, #0
  405384:	9302      	str	r3, [sp, #8]
  405386:	9b02      	ldr	r3, [sp, #8]
  405388:	2b13      	cmp	r3, #19
  40538a:	d806      	bhi.n	40539a <udd_ep_clear_halt+0x7e>
  40538c:	bf00      	nop
  40538e:	9b02      	ldr	r3, [sp, #8]
  405390:	3301      	adds	r3, #1
  405392:	9302      	str	r3, [sp, #8]
  405394:	9b02      	ldr	r3, [sp, #8]
  405396:	2b13      	cmp	r3, #19
  405398:	d9f8      	bls.n	40538c <udd_ep_clear_halt+0x70>
  40539a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40539c:	f013 0f20 	tst.w	r3, #32
  4053a0:	d1fb      	bne.n	40539a <udd_ep_clear_halt+0x7e>
		printf("After processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  4053a2:	6b22      	ldr	r2, [r4, #48]	; 0x30
  4053a4:	4629      	mov	r1, r5
  4053a6:	4844      	ldr	r0, [pc, #272]	; (4054b8 <udd_ep_clear_halt+0x19c>)
  4053a8:	4f40      	ldr	r7, [pc, #256]	; (4054ac <udd_ep_clear_halt+0x190>)
  4053aa:	47b8      	blx	r7
		printf("\r\n---udd_reset_endpoint(ep);---ep:%d\r\n", ep);
  4053ac:	4629      	mov	r1, r5
  4053ae:	4843      	ldr	r0, [pc, #268]	; (4054bc <udd_ep_clear_halt+0x1a0>)
  4053b0:	47b8      	blx	r7
		printf("Before processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  4053b2:	6b22      	ldr	r2, [r4, #48]	; 0x30
  4053b4:	4629      	mov	r1, r5
  4053b6:	483f      	ldr	r0, [pc, #252]	; (4054b4 <udd_ep_clear_halt+0x198>)
  4053b8:	47b8      	blx	r7
		udd_reset_endpoint(ep);
  4053ba:	4941      	ldr	r1, [pc, #260]	; (4054c0 <udd_ep_clear_halt+0x1a4>)
  4053bc:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  4053be:	2201      	movs	r2, #1
  4053c0:	40aa      	lsls	r2, r5
  4053c2:	4313      	orrs	r3, r2
  4053c4:	628b      	str	r3, [r1, #40]	; 0x28
  4053c6:	2300      	movs	r3, #0
  4053c8:	9303      	str	r3, [sp, #12]
  4053ca:	9b03      	ldr	r3, [sp, #12]
  4053cc:	2b13      	cmp	r3, #19
  4053ce:	d806      	bhi.n	4053de <udd_ep_clear_halt+0xc2>
  4053d0:	bf00      	nop
  4053d2:	9b03      	ldr	r3, [sp, #12]
  4053d4:	3301      	adds	r3, #1
  4053d6:	9303      	str	r3, [sp, #12]
  4053d8:	9b03      	ldr	r3, [sp, #12]
  4053da:	2b13      	cmp	r3, #19
  4053dc:	d9f8      	bls.n	4053d0 <udd_ep_clear_halt+0xb4>
  4053de:	4938      	ldr	r1, [pc, #224]	; (4054c0 <udd_ep_clear_halt+0x1a4>)
  4053e0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  4053e2:	421a      	tst	r2, r3
  4053e4:	d0fc      	beq.n	4053e0 <udd_ep_clear_halt+0xc4>
  4053e6:	4936      	ldr	r1, [pc, #216]	; (4054c0 <udd_ep_clear_halt+0x1a4>)
  4053e8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  4053ea:	ea23 0202 	bic.w	r2, r3, r2
  4053ee:	628a      	str	r2, [r1, #40]	; 0x28
  4053f0:	2300      	movs	r3, #0
  4053f2:	9303      	str	r3, [sp, #12]
  4053f4:	9b03      	ldr	r3, [sp, #12]
  4053f6:	2b13      	cmp	r3, #19
  4053f8:	d806      	bhi.n	405408 <udd_ep_clear_halt+0xec>
  4053fa:	bf00      	nop
  4053fc:	9b03      	ldr	r3, [sp, #12]
  4053fe:	3301      	adds	r3, #1
  405400:	9303      	str	r3, [sp, #12]
  405402:	9b03      	ldr	r3, [sp, #12]
  405404:	2b13      	cmp	r3, #19
  405406:	d9f8      	bls.n	4053fa <udd_ep_clear_halt+0xde>
		printf("After processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  405408:	6b22      	ldr	r2, [r4, #48]	; 0x30
  40540a:	4629      	mov	r1, r5
  40540c:	482a      	ldr	r0, [pc, #168]	; (4054b8 <udd_ep_clear_halt+0x19c>)
  40540e:	4f27      	ldr	r7, [pc, #156]	; (4054ac <udd_ep_clear_halt+0x190>)
  405410:	47b8      	blx	r7
		printf("\r\n---udd_ack_stall(ep);---ep:%d\r\n", ep);
  405412:	4629      	mov	r1, r5
  405414:	482b      	ldr	r0, [pc, #172]	; (4054c4 <udd_ep_clear_halt+0x1a8>)
  405416:	47b8      	blx	r7
		printf("Before processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  405418:	6b22      	ldr	r2, [r4, #48]	; 0x30
  40541a:	4629      	mov	r1, r5
  40541c:	4825      	ldr	r0, [pc, #148]	; (4054b4 <udd_ep_clear_halt+0x198>)
  40541e:	47b8      	blx	r7
		udd_ack_stall(ep);
  405420:	6b23      	ldr	r3, [r4, #48]	; 0x30
  405422:	9304      	str	r3, [sp, #16]
  405424:	9b04      	ldr	r3, [sp, #16]
  405426:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40542a:	9304      	str	r3, [sp, #16]
  40542c:	9b04      	ldr	r3, [sp, #16]
  40542e:	f023 0308 	bic.w	r3, r3, #8
  405432:	9304      	str	r3, [sp, #16]
  405434:	9b04      	ldr	r3, [sp, #16]
  405436:	6323      	str	r3, [r4, #48]	; 0x30
  405438:	2300      	movs	r3, #0
  40543a:	9305      	str	r3, [sp, #20]
  40543c:	9b05      	ldr	r3, [sp, #20]
  40543e:	2b13      	cmp	r3, #19
  405440:	d806      	bhi.n	405450 <udd_ep_clear_halt+0x134>
  405442:	bf00      	nop
  405444:	9b05      	ldr	r3, [sp, #20]
  405446:	3301      	adds	r3, #1
  405448:	9305      	str	r3, [sp, #20]
  40544a:	9b05      	ldr	r3, [sp, #20]
  40544c:	2b13      	cmp	r3, #19
  40544e:	d9f8      	bls.n	405442 <udd_ep_clear_halt+0x126>
  405450:	6b23      	ldr	r3, [r4, #48]	; 0x30
  405452:	f013 0f08 	tst.w	r3, #8
  405456:	d1fb      	bne.n	405450 <udd_ep_clear_halt+0x134>
		printf("After processing---UDP->UDP_CSR[%d]:0x%08X\r\n", ep, UDP->UDP_CSR[ep]);
  405458:	6b22      	ldr	r2, [r4, #48]	; 0x30
  40545a:	4629      	mov	r1, r5
  40545c:	4816      	ldr	r0, [pc, #88]	; (4054b8 <udd_ep_clear_halt+0x19c>)
  40545e:	4b13      	ldr	r3, [pc, #76]	; (4054ac <udd_ep_clear_halt+0x190>)
  405460:	4798      	blx	r3
		if (ptr_job->busy == true) {
  405462:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  405466:	4a0f      	ldr	r2, [pc, #60]	; (4054a4 <udd_ep_clear_halt+0x188>)
  405468:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40546c:	7c5b      	ldrb	r3, [r3, #17]
  40546e:	f013 0f10 	tst.w	r3, #16
  405472:	d105      	bne.n	405480 <udd_ep_clear_halt+0x164>
		printf("\r\n****Exit --- if (Is_udd_endpoint_stall_requested(ep)****---ep:%d\r\n", ep);
  405474:	4629      	mov	r1, r5
  405476:	4814      	ldr	r0, [pc, #80]	; (4054c8 <udd_ep_clear_halt+0x1ac>)
  405478:	4b0c      	ldr	r3, [pc, #48]	; (4054ac <udd_ep_clear_halt+0x190>)
  40547a:	4798      	blx	r3
	return true;
  40547c:	2001      	movs	r0, #1
  40547e:	e00e      	b.n	40549e <udd_ep_clear_halt+0x182>
			ptr_job->busy = false;
  405480:	4611      	mov	r1, r2
  405482:	00b2      	lsls	r2, r6, #2
  405484:	1993      	adds	r3, r2, r6
  405486:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  40548a:	7c58      	ldrb	r0, [r3, #17]
  40548c:	f36f 1004 	bfc	r0, #4, #1
  405490:	7458      	strb	r0, [r3, #17]
			ptr_job->call_nohalt();
  405492:	4416      	add	r6, r2
  405494:	f851 3026 	ldr.w	r3, [r1, r6, lsl #2]
  405498:	4798      	blx	r3
  40549a:	e7eb      	b.n	405474 <udd_ep_clear_halt+0x158>
		return false;
  40549c:	2000      	movs	r0, #0
}
  40549e:	b007      	add	sp, #28
  4054a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4054a2:	bf00      	nop
  4054a4:	2001a264 	.word	0x2001a264
  4054a8:	0040b5d0 	.word	0x0040b5d0
  4054ac:	00408395 	.word	0x00408395
  4054b0:	0040b60c 	.word	0x0040b60c
  4054b4:	0040b774 	.word	0x0040b774
  4054b8:	0040b7a4 	.word	0x0040b7a4
  4054bc:	0040b63c 	.word	0x0040b63c
  4054c0:	40044000 	.word	0x40044000
  4054c4:	0040b664 	.word	0x0040b664
  4054c8:	0040b688 	.word	0x0040b688

004054cc <udd_ep_run>:
{
  4054cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4054ce:	b083      	sub	sp, #12
	ep &= USB_EP_ADDR_MASK;
  4054d0:	f000 070f 	and.w	r7, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
  4054d4:	2f05      	cmp	r7, #5
  4054d6:	f200 80a2 	bhi.w	40561e <udd_ep_run+0x152>
  4054da:	00bc      	lsls	r4, r7, #2
  4054dc:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  4054e0:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
	if ((!Is_udd_endpoint_enabled(ep))
  4054e4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  4054e6:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  4054ea:	f000 809b 	beq.w	405624 <udd_ep_run+0x158>
	ptr_job = &udd_ep_job[ep - 1];
  4054ee:	1e7d      	subs	r5, r7, #1
			|| ptr_job->b_stall_requested
  4054f0:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4054f4:	4e50      	ldr	r6, [pc, #320]	; (405638 <udd_ep_run+0x16c>)
  4054f6:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4054fa:	7c76      	ldrb	r6, [r6, #17]
  4054fc:	f016 0f20 	tst.w	r6, #32
  405500:	f040 8092 	bne.w	405628 <udd_ep_run+0x15c>
			|| Is_udd_endpoint_stall_requested(ep)) {
  405504:	6b26      	ldr	r6, [r4, #48]	; 0x30
  405506:	f016 0f20 	tst.w	r6, #32
  40550a:	f040 808f 	bne.w	40562c <udd_ep_run+0x160>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40550e:	f3ef 8610 	mrs	r6, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  405512:	fab6 f686 	clz	r6, r6
  405516:	0976      	lsrs	r6, r6, #5
  405518:	9600      	str	r6, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  40551a:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  40551c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  405520:	f04f 0e00 	mov.w	lr, #0
  405524:	4e45      	ldr	r6, [pc, #276]	; (40563c <udd_ep_run+0x170>)
  405526:	f886 e000 	strb.w	lr, [r6]
	return flags;
  40552a:	f8dd c000 	ldr.w	ip, [sp]
	if (ptr_job->busy == true) {
  40552e:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  405532:	4e41      	ldr	r6, [pc, #260]	; (405638 <udd_ep_run+0x16c>)
  405534:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  405538:	7c76      	ldrb	r6, [r6, #17]
  40553a:	f016 0f10 	tst.w	r6, #16
  40553e:	d00a      	beq.n	405556 <udd_ep_run+0x8a>
	if (cpu_irq_is_enabled_flags(flags))
  405540:	f1bc 0f00 	cmp.w	ip, #0
  405544:	d074      	beq.n	405630 <udd_ep_run+0x164>
		cpu_irq_enable();
  405546:	2201      	movs	r2, #1
  405548:	4b3c      	ldr	r3, [pc, #240]	; (40563c <udd_ep_run+0x170>)
  40554a:	701a      	strb	r2, [r3, #0]
  40554c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  405550:	b662      	cpsie	i
		return false; // Job already on going
  405552:	2000      	movs	r0, #0
  405554:	e064      	b.n	405620 <udd_ep_run+0x154>
	ptr_job->busy = true;
  405556:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  40555a:	4e37      	ldr	r6, [pc, #220]	; (405638 <udd_ep_run+0x16c>)
  40555c:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  405560:	f896 e011 	ldrb.w	lr, [r6, #17]
  405564:	f04e 0e10 	orr.w	lr, lr, #16
  405568:	f886 e011 	strb.w	lr, [r6, #17]
	if (cpu_irq_is_enabled_flags(flags))
  40556c:	f1bc 0f00 	cmp.w	ip, #0
  405570:	d007      	beq.n	405582 <udd_ep_run+0xb6>
		cpu_irq_enable();
  405572:	f04f 0e01 	mov.w	lr, #1
  405576:	4e31      	ldr	r6, [pc, #196]	; (40563c <udd_ep_run+0x170>)
  405578:	f886 e000 	strb.w	lr, [r6]
  __ASM volatile ("dmb 0xF":::"memory");
  40557c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  405580:	b662      	cpsie	i
	ptr_job->buf = buf;
  405582:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 405638 <udd_ep_run+0x16c>
  405586:	eb05 0685 	add.w	r6, r5, r5, lsl #2
  40558a:	00b6      	lsls	r6, r6, #2
  40558c:	eb0c 0e06 	add.w	lr, ip, r6
  405590:	f8ce 2004 	str.w	r2, [lr, #4]
	ptr_job->buf_size = buf_size;
  405594:	f8ce 3008 	str.w	r3, [lr, #8]
	ptr_job->buf_cnt = 0;
  405598:	2200      	movs	r2, #0
  40559a:	f8ce 200c 	str.w	r2, [lr, #12]
	ptr_job->call_trans = callback;
  40559e:	9a08      	ldr	r2, [sp, #32]
  4055a0:	f84c 2006 	str.w	r2, [ip, r6]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
  4055a4:	b911      	cbnz	r1, 4055ac <udd_ep_run+0xe0>
  4055a6:	fab3 f183 	clz	r1, r3
  4055aa:	0949      	lsrs	r1, r1, #5
  4055ac:	4a22      	ldr	r2, [pc, #136]	; (405638 <udd_ep_run+0x16c>)
  4055ae:	00ae      	lsls	r6, r5, #2
  4055b0:	1973      	adds	r3, r6, r5
  4055b2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4055b6:	7c5b      	ldrb	r3, [r3, #17]
  4055b8:	f361 1386 	bfi	r3, r1, #6, #1
	ptr_job->b_buf_end = false;
  4055bc:	4435      	add	r5, r6
  4055be:	eb02 0285 	add.w	r2, r2, r5, lsl #2
  4055c2:	f36f 13c7 	bfc	r3, #7, #1
  4055c6:	7453      	strb	r3, [r2, #17]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4055c8:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4055cc:	fab3 f383 	clz	r3, r3
  4055d0:	095b      	lsrs	r3, r3, #5
  4055d2:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4055d4:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4055d6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4055da:	2200      	movs	r2, #0
  4055dc:	4b17      	ldr	r3, [pc, #92]	; (40563c <udd_ep_run+0x170>)
  4055de:	701a      	strb	r2, [r3, #0]
	return flags;
  4055e0:	9d01      	ldr	r5, [sp, #4]
	udd_enable_endpoint_interrupt(ep);
  4055e2:	2301      	movs	r3, #1
  4055e4:	40bb      	lsls	r3, r7
  4055e6:	4a16      	ldr	r2, [pc, #88]	; (405640 <udd_ep_run+0x174>)
  4055e8:	6113      	str	r3, [r2, #16]
	if (b_dir_in) {
  4055ea:	f010 0f80 	tst.w	r0, #128	; 0x80
  4055ee:	d107      	bne.n	405600 <udd_ep_run+0x134>
	if (cpu_irq_is_enabled_flags(flags))
  4055f0:	b305      	cbz	r5, 405634 <udd_ep_run+0x168>
		cpu_irq_enable();
  4055f2:	2001      	movs	r0, #1
  4055f4:	4b11      	ldr	r3, [pc, #68]	; (40563c <udd_ep_run+0x170>)
  4055f6:	7018      	strb	r0, [r3, #0]
  4055f8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4055fc:	b662      	cpsie	i
  4055fe:	e00f      	b.n	405620 <udd_ep_run+0x154>
		if (Is_udd_in_pending(ep)) {
  405600:	6b23      	ldr	r3, [r4, #48]	; 0x30
  405602:	f013 0f11 	tst.w	r3, #17
  405606:	d1f3      	bne.n	4055f0 <udd_ep_run+0x124>
			if (udd_ep_in_sent(ep, true)) {
  405608:	2101      	movs	r1, #1
  40560a:	4638      	mov	r0, r7
  40560c:	4b0d      	ldr	r3, [pc, #52]	; (405644 <udd_ep_run+0x178>)
  40560e:	4798      	blx	r3
  405610:	2800      	cmp	r0, #0
  405612:	d0ed      	beq.n	4055f0 <udd_ep_run+0x124>
				udd_ep_in_sent(ep, false);
  405614:	2100      	movs	r1, #0
  405616:	4638      	mov	r0, r7
  405618:	4b0a      	ldr	r3, [pc, #40]	; (405644 <udd_ep_run+0x178>)
  40561a:	4798      	blx	r3
  40561c:	e7e8      	b.n	4055f0 <udd_ep_run+0x124>
		return false;
  40561e:	2000      	movs	r0, #0
}
  405620:	b003      	add	sp, #12
  405622:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
  405624:	2000      	movs	r0, #0
  405626:	e7fb      	b.n	405620 <udd_ep_run+0x154>
  405628:	2000      	movs	r0, #0
  40562a:	e7f9      	b.n	405620 <udd_ep_run+0x154>
  40562c:	2000      	movs	r0, #0
  40562e:	e7f7      	b.n	405620 <udd_ep_run+0x154>
		return false; // Job already on going
  405630:	2000      	movs	r0, #0
  405632:	e7f5      	b.n	405620 <udd_ep_run+0x154>
	return true;
  405634:	2001      	movs	r0, #1
  405636:	e7f3      	b.n	405620 <udd_ep_run+0x154>
  405638:	2001a264 	.word	0x2001a264
  40563c:	200001fc 	.word	0x200001fc
  405640:	40044000 	.word	0x40044000
  405644:	004040b1 	.word	0x004040b1

00405648 <udd_ep_abort>:
{
  405648:	b5f0      	push	{r4, r5, r6, r7, lr}
  40564a:	b08b      	sub	sp, #44	; 0x2c
	ep &= USB_EP_ADDR_MASK;
  40564c:	f000 040f 	and.w	r4, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  405650:	2c05      	cmp	r4, #5
  405652:	d859      	bhi.n	405708 <udd_ep_abort+0xc0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  405654:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  405658:	fab3 f383 	clz	r3, r3
  40565c:	095b      	lsrs	r3, r3, #5
  40565e:	9309      	str	r3, [sp, #36]	; 0x24
  __ASM volatile ("cpsid i" : : : "memory");
  405660:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  405662:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  405666:	2200      	movs	r2, #0
  405668:	4b70      	ldr	r3, [pc, #448]	; (40582c <udd_ep_abort+0x1e4>)
  40566a:	701a      	strb	r2, [r3, #0]
	return flags;
  40566c:	9b09      	ldr	r3, [sp, #36]	; 0x24
	udd_disable_endpoint_interrupt(ep);
  40566e:	2501      	movs	r5, #1
  405670:	40a5      	lsls	r5, r4
  405672:	4a6f      	ldr	r2, [pc, #444]	; (405830 <udd_ep_abort+0x1e8>)
  405674:	6155      	str	r5, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  405676:	b12b      	cbz	r3, 405684 <udd_ep_abort+0x3c>
		cpu_irq_enable();
  405678:	2201      	movs	r2, #1
  40567a:	4b6c      	ldr	r3, [pc, #432]	; (40582c <udd_ep_abort+0x1e4>)
  40567c:	701a      	strb	r2, [r3, #0]
  40567e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  405682:	b662      	cpsie	i
	if (b_dir_in) {
  405684:	f010 0f80 	tst.w	r0, #128	; 0x80
  405688:	d140      	bne.n	40570c <udd_ep_abort+0xc4>
  40568a:	00a6      	lsls	r6, r4, #2
  40568c:	f106 2640 	add.w	r6, r6, #1073758208	; 0x40004000
  405690:	f506 2680 	add.w	r6, r6, #262144	; 0x40000
		while(Is_udd_any_bank_received(ep)) {
  405694:	6b33      	ldr	r3, [r6, #48]	; 0x30
  405696:	f013 0f42 	tst.w	r3, #66	; 0x42
  40569a:	d006      	beq.n	4056aa <udd_ep_abort+0x62>
			udd_ep_ack_out_received(ep);
  40569c:	4f65      	ldr	r7, [pc, #404]	; (405834 <udd_ep_abort+0x1ec>)
  40569e:	4620      	mov	r0, r4
  4056a0:	47b8      	blx	r7
		while(Is_udd_any_bank_received(ep)) {
  4056a2:	6b33      	ldr	r3, [r6, #48]	; 0x30
  4056a4:	f013 0f42 	tst.w	r3, #66	; 0x42
  4056a8:	d1f9      	bne.n	40569e <udd_ep_abort+0x56>
	udd_reset_endpoint(ep);
  4056aa:	4a61      	ldr	r2, [pc, #388]	; (405830 <udd_ep_abort+0x1e8>)
  4056ac:	6a93      	ldr	r3, [r2, #40]	; 0x28
  4056ae:	432b      	orrs	r3, r5
  4056b0:	6293      	str	r3, [r2, #40]	; 0x28
  4056b2:	2300      	movs	r3, #0
  4056b4:	9308      	str	r3, [sp, #32]
  4056b6:	9b08      	ldr	r3, [sp, #32]
  4056b8:	2b13      	cmp	r3, #19
  4056ba:	d806      	bhi.n	4056ca <udd_ep_abort+0x82>
  4056bc:	bf00      	nop
  4056be:	9b08      	ldr	r3, [sp, #32]
  4056c0:	3301      	adds	r3, #1
  4056c2:	9308      	str	r3, [sp, #32]
  4056c4:	9b08      	ldr	r3, [sp, #32]
  4056c6:	2b13      	cmp	r3, #19
  4056c8:	d9f8      	bls.n	4056bc <udd_ep_abort+0x74>
  4056ca:	4a59      	ldr	r2, [pc, #356]	; (405830 <udd_ep_abort+0x1e8>)
  4056cc:	6a93      	ldr	r3, [r2, #40]	; 0x28
  4056ce:	421d      	tst	r5, r3
  4056d0:	d0fc      	beq.n	4056cc <udd_ep_abort+0x84>
  4056d2:	4a57      	ldr	r2, [pc, #348]	; (405830 <udd_ep_abort+0x1e8>)
  4056d4:	6a93      	ldr	r3, [r2, #40]	; 0x28
  4056d6:	ea23 0505 	bic.w	r5, r3, r5
  4056da:	6295      	str	r5, [r2, #40]	; 0x28
  4056dc:	2300      	movs	r3, #0
  4056de:	9308      	str	r3, [sp, #32]
  4056e0:	9b08      	ldr	r3, [sp, #32]
  4056e2:	2b13      	cmp	r3, #19
  4056e4:	d806      	bhi.n	4056f4 <udd_ep_abort+0xac>
  4056e6:	bf00      	nop
  4056e8:	9b08      	ldr	r3, [sp, #32]
  4056ea:	3301      	adds	r3, #1
  4056ec:	9308      	str	r3, [sp, #32]
  4056ee:	9b08      	ldr	r3, [sp, #32]
  4056f0:	2b13      	cmp	r3, #19
  4056f2:	d9f8      	bls.n	4056e6 <udd_ep_abort+0x9e>
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  4056f4:	1e60      	subs	r0, r4, #1
  4056f6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4056fa:	4622      	mov	r2, r4
  4056fc:	2101      	movs	r1, #1
  4056fe:	4b4e      	ldr	r3, [pc, #312]	; (405838 <udd_ep_abort+0x1f0>)
  405700:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  405704:	4b4d      	ldr	r3, [pc, #308]	; (40583c <udd_ep_abort+0x1f4>)
  405706:	4798      	blx	r3
}
  405708:	b00b      	add	sp, #44	; 0x2c
  40570a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40570c:	00a2      	lsls	r2, r4, #2
  40570e:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  405712:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
		if (Is_udd_transmit_ready(ep)) {
  405716:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405718:	f013 0f10 	tst.w	r3, #16
  40571c:	d05f      	beq.n	4057de <udd_ep_abort+0x196>
			udd_kill_data_in_fifo(ep,
  40571e:	2c00      	cmp	r4, #0
  405720:	d041      	beq.n	4057a6 <udd_ep_abort+0x15e>
  405722:	2c03      	cmp	r4, #3
  405724:	d03f      	beq.n	4057a6 <udd_ep_abort+0x15e>
  405726:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405728:	9300      	str	r3, [sp, #0]
  40572a:	9b00      	ldr	r3, [sp, #0]
  40572c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  405730:	9300      	str	r3, [sp, #0]
  405732:	9b00      	ldr	r3, [sp, #0]
  405734:	f023 0310 	bic.w	r3, r3, #16
  405738:	9300      	str	r3, [sp, #0]
  40573a:	9b00      	ldr	r3, [sp, #0]
  40573c:	6313      	str	r3, [r2, #48]	; 0x30
  40573e:	2300      	movs	r3, #0
  405740:	9301      	str	r3, [sp, #4]
  405742:	9b01      	ldr	r3, [sp, #4]
  405744:	2b13      	cmp	r3, #19
  405746:	d806      	bhi.n	405756 <udd_ep_abort+0x10e>
  405748:	bf00      	nop
  40574a:	9b01      	ldr	r3, [sp, #4]
  40574c:	3301      	adds	r3, #1
  40574e:	9301      	str	r3, [sp, #4]
  405750:	9b01      	ldr	r3, [sp, #4]
  405752:	2b13      	cmp	r3, #19
  405754:	d9f8      	bls.n	405748 <udd_ep_abort+0x100>
  405756:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405758:	f013 0f10 	tst.w	r3, #16
  40575c:	d1fb      	bne.n	405756 <udd_ep_abort+0x10e>
  40575e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405760:	f013 0f10 	tst.w	r3, #16
  405764:	d1fb      	bne.n	40575e <udd_ep_abort+0x116>
  405766:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405768:	9302      	str	r3, [sp, #8]
  40576a:	9b02      	ldr	r3, [sp, #8]
  40576c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  405770:	9302      	str	r3, [sp, #8]
  405772:	9b02      	ldr	r3, [sp, #8]
  405774:	f043 0310 	orr.w	r3, r3, #16
  405778:	9302      	str	r3, [sp, #8]
  40577a:	9b02      	ldr	r3, [sp, #8]
  40577c:	6313      	str	r3, [r2, #48]	; 0x30
  40577e:	2300      	movs	r3, #0
  405780:	9303      	str	r3, [sp, #12]
  405782:	9b03      	ldr	r3, [sp, #12]
  405784:	2b13      	cmp	r3, #19
  405786:	d806      	bhi.n	405796 <udd_ep_abort+0x14e>
  405788:	bf00      	nop
  40578a:	9b03      	ldr	r3, [sp, #12]
  40578c:	3301      	adds	r3, #1
  40578e:	9303      	str	r3, [sp, #12]
  405790:	9b03      	ldr	r3, [sp, #12]
  405792:	2b13      	cmp	r3, #19
  405794:	d9f8      	bls.n	405788 <udd_ep_abort+0x140>
  405796:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405798:	f013 0f10 	tst.w	r3, #16
  40579c:	d0fb      	beq.n	405796 <udd_ep_abort+0x14e>
  40579e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057a0:	f013 0f10 	tst.w	r3, #16
  4057a4:	d0fb      	beq.n	40579e <udd_ep_abort+0x156>
  4057a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057a8:	9304      	str	r3, [sp, #16]
  4057aa:	9b04      	ldr	r3, [sp, #16]
  4057ac:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4057b0:	9304      	str	r3, [sp, #16]
  4057b2:	9b04      	ldr	r3, [sp, #16]
  4057b4:	f023 0310 	bic.w	r3, r3, #16
  4057b8:	9304      	str	r3, [sp, #16]
  4057ba:	9b04      	ldr	r3, [sp, #16]
  4057bc:	6313      	str	r3, [r2, #48]	; 0x30
  4057be:	2300      	movs	r3, #0
  4057c0:	9305      	str	r3, [sp, #20]
  4057c2:	9b05      	ldr	r3, [sp, #20]
  4057c4:	2b13      	cmp	r3, #19
  4057c6:	d806      	bhi.n	4057d6 <udd_ep_abort+0x18e>
  4057c8:	bf00      	nop
  4057ca:	9b05      	ldr	r3, [sp, #20]
  4057cc:	3301      	adds	r3, #1
  4057ce:	9305      	str	r3, [sp, #20]
  4057d0:	9b05      	ldr	r3, [sp, #20]
  4057d2:	2b13      	cmp	r3, #19
  4057d4:	d9f8      	bls.n	4057c8 <udd_ep_abort+0x180>
  4057d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057d8:	f013 0f10 	tst.w	r3, #16
  4057dc:	d1fb      	bne.n	4057d6 <udd_ep_abort+0x18e>
		udd_ack_in_sent(ep);
  4057de:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057e0:	9306      	str	r3, [sp, #24]
  4057e2:	9b06      	ldr	r3, [sp, #24]
  4057e4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4057e8:	9306      	str	r3, [sp, #24]
  4057ea:	9b06      	ldr	r3, [sp, #24]
  4057ec:	f023 0301 	bic.w	r3, r3, #1
  4057f0:	9306      	str	r3, [sp, #24]
  4057f2:	9b06      	ldr	r3, [sp, #24]
  4057f4:	6313      	str	r3, [r2, #48]	; 0x30
  4057f6:	2300      	movs	r3, #0
  4057f8:	9307      	str	r3, [sp, #28]
  4057fa:	9b07      	ldr	r3, [sp, #28]
  4057fc:	2b13      	cmp	r3, #19
  4057fe:	d806      	bhi.n	40580e <udd_ep_abort+0x1c6>
  405800:	bf00      	nop
  405802:	9b07      	ldr	r3, [sp, #28]
  405804:	3301      	adds	r3, #1
  405806:	9307      	str	r3, [sp, #28]
  405808:	9b07      	ldr	r3, [sp, #28]
  40580a:	2b13      	cmp	r3, #19
  40580c:	d9f8      	bls.n	405800 <udd_ep_abort+0x1b8>
  40580e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  405810:	f013 0f01 	tst.w	r3, #1
  405814:	d1fb      	bne.n	40580e <udd_ep_abort+0x1c6>
		udd_ep_job[ep - 1].bank = 0;
  405816:	1e63      	subs	r3, r4, #1
  405818:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40581c:	4b06      	ldr	r3, [pc, #24]	; (405838 <udd_ep_abort+0x1f0>)
  40581e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  405822:	7c5a      	ldrb	r2, [r3, #17]
  405824:	f36f 0283 	bfc	r2, #2, #2
  405828:	745a      	strb	r2, [r3, #17]
  40582a:	e73e      	b.n	4056aa <udd_ep_abort+0x62>
  40582c:	200001fc 	.word	0x200001fc
  405830:	40044000 	.word	0x40044000
  405834:	00403fad 	.word	0x00403fad
  405838:	2001a264 	.word	0x2001a264
  40583c:	00403f6d 	.word	0x00403f6d

00405840 <udd_ep_wait_stall_clear>:
	ep &= USB_EP_ADDR_MASK;
  405840:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
  405844:	2805      	cmp	r0, #5
  405846:	d82b      	bhi.n	4058a0 <udd_ep_wait_stall_clear+0x60>
{
  405848:	b538      	push	{r3, r4, r5, lr}
  40584a:	0083      	lsls	r3, r0, #2
  40584c:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  405850:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
	if (!Is_udd_endpoint_enabled(ep)) {
  405854:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  405856:	f412 4f00 	tst.w	r2, #32768	; 0x8000
  40585a:	d023      	beq.n	4058a4 <udd_ep_wait_stall_clear+0x64>
	ptr_job = &udd_ep_job[ep - 1];
  40585c:	3801      	subs	r0, #1
	if (ptr_job->busy == true) {
  40585e:	eb00 0480 	add.w	r4, r0, r0, lsl #2
  405862:	4a12      	ldr	r2, [pc, #72]	; (4058ac <udd_ep_wait_stall_clear+0x6c>)
  405864:	eb02 0284 	add.w	r2, r2, r4, lsl #2
  405868:	7c52      	ldrb	r2, [r2, #17]
  40586a:	f012 0f10 	tst.w	r2, #16
  40586e:	d11b      	bne.n	4058a8 <udd_ep_wait_stall_clear+0x68>
	if (Is_udd_endpoint_stall_requested(ep)
  405870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405872:	f013 0f20 	tst.w	r3, #32
  405876:	d102      	bne.n	40587e <udd_ep_wait_stall_clear+0x3e>
			|| ptr_job->b_stall_requested) {
  405878:	f012 0f20 	tst.w	r2, #32
  40587c:	d00d      	beq.n	40589a <udd_ep_wait_stall_clear+0x5a>
		ptr_job->busy = true;
  40587e:	4d0b      	ldr	r5, [pc, #44]	; (4058ac <udd_ep_wait_stall_clear+0x6c>)
  405880:	0082      	lsls	r2, r0, #2
  405882:	1813      	adds	r3, r2, r0
  405884:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  405888:	7c5c      	ldrb	r4, [r3, #17]
  40588a:	f044 0410 	orr.w	r4, r4, #16
  40588e:	745c      	strb	r4, [r3, #17]
		ptr_job->call_nohalt = callback;
  405890:	4410      	add	r0, r2
  405892:	f845 1020 	str.w	r1, [r5, r0, lsl #2]
	return true;
  405896:	2001      	movs	r0, #1
		ptr_job->call_nohalt = callback;
  405898:	bd38      	pop	{r3, r4, r5, pc}
		callback();
  40589a:	4788      	blx	r1
	return true;
  40589c:	2001      	movs	r0, #1
  40589e:	bd38      	pop	{r3, r4, r5, pc}
		return false;
  4058a0:	2000      	movs	r0, #0
  4058a2:	4770      	bx	lr
		return false; // Endpoint not enabled
  4058a4:	2000      	movs	r0, #0
  4058a6:	bd38      	pop	{r3, r4, r5, pc}
		return false; // Job already on going
  4058a8:	2000      	movs	r0, #0
}
  4058aa:	bd38      	pop	{r3, r4, r5, pc}
  4058ac:	2001a264 	.word	0x2001a264

004058b0 <usart_set_async_baudrate>:
  4058b0:	b410      	push	{r4}
  4058b2:	010b      	lsls	r3, r1, #4
  4058b4:	4293      	cmp	r3, r2
  4058b6:	d914      	bls.n	4058e2 <usart_set_async_baudrate+0x32>
  4058b8:	00c9      	lsls	r1, r1, #3
  4058ba:	084b      	lsrs	r3, r1, #1
  4058bc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4058c0:	fbb2 f2f1 	udiv	r2, r2, r1
  4058c4:	08d3      	lsrs	r3, r2, #3
  4058c6:	1e5c      	subs	r4, r3, #1
  4058c8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4058cc:	428c      	cmp	r4, r1
  4058ce:	d901      	bls.n	4058d4 <usart_set_async_baudrate+0x24>
  4058d0:	2001      	movs	r0, #1
  4058d2:	e017      	b.n	405904 <usart_set_async_baudrate+0x54>
  4058d4:	6841      	ldr	r1, [r0, #4]
  4058d6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4058da:	6041      	str	r1, [r0, #4]
  4058dc:	e00c      	b.n	4058f8 <usart_set_async_baudrate+0x48>
  4058de:	2001      	movs	r0, #1
  4058e0:	e010      	b.n	405904 <usart_set_async_baudrate+0x54>
  4058e2:	0859      	lsrs	r1, r3, #1
  4058e4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4058e8:	fbb2 f2f3 	udiv	r2, r2, r3
  4058ec:	08d3      	lsrs	r3, r2, #3
  4058ee:	1e5c      	subs	r4, r3, #1
  4058f0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4058f4:	428c      	cmp	r4, r1
  4058f6:	d8f2      	bhi.n	4058de <usart_set_async_baudrate+0x2e>
  4058f8:	0412      	lsls	r2, r2, #16
  4058fa:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  4058fe:	431a      	orrs	r2, r3
  405900:	6202      	str	r2, [r0, #32]
  405902:	2000      	movs	r0, #0
  405904:	f85d 4b04 	ldr.w	r4, [sp], #4
  405908:	4770      	bx	lr
	...

0040590c <usart_reset>:
  40590c:	4b08      	ldr	r3, [pc, #32]	; (405930 <usart_reset+0x24>)
  40590e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
  405912:	2300      	movs	r3, #0
  405914:	6043      	str	r3, [r0, #4]
  405916:	6243      	str	r3, [r0, #36]	; 0x24
  405918:	6283      	str	r3, [r0, #40]	; 0x28
  40591a:	2388      	movs	r3, #136	; 0x88
  40591c:	6003      	str	r3, [r0, #0]
  40591e:	2324      	movs	r3, #36	; 0x24
  405920:	6003      	str	r3, [r0, #0]
  405922:	f44f 7380 	mov.w	r3, #256	; 0x100
  405926:	6003      	str	r3, [r0, #0]
  405928:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40592c:	6003      	str	r3, [r0, #0]
  40592e:	4770      	bx	lr
  405930:	55534100 	.word	0x55534100

00405934 <usart_init_rs232>:
  405934:	b570      	push	{r4, r5, r6, lr}
  405936:	4605      	mov	r5, r0
  405938:	460c      	mov	r4, r1
  40593a:	4616      	mov	r6, r2
  40593c:	4b0f      	ldr	r3, [pc, #60]	; (40597c <usart_init_rs232+0x48>)
  40593e:	4798      	blx	r3
  405940:	2200      	movs	r2, #0
  405942:	4b0f      	ldr	r3, [pc, #60]	; (405980 <usart_init_rs232+0x4c>)
  405944:	601a      	str	r2, [r3, #0]
  405946:	b1a4      	cbz	r4, 405972 <usart_init_rs232+0x3e>
  405948:	4632      	mov	r2, r6
  40594a:	6821      	ldr	r1, [r4, #0]
  40594c:	4628      	mov	r0, r5
  40594e:	4b0d      	ldr	r3, [pc, #52]	; (405984 <usart_init_rs232+0x50>)
  405950:	4798      	blx	r3
  405952:	4602      	mov	r2, r0
  405954:	b978      	cbnz	r0, 405976 <usart_init_rs232+0x42>
  405956:	6863      	ldr	r3, [r4, #4]
  405958:	68a1      	ldr	r1, [r4, #8]
  40595a:	430b      	orrs	r3, r1
  40595c:	6921      	ldr	r1, [r4, #16]
  40595e:	430b      	orrs	r3, r1
  405960:	68e1      	ldr	r1, [r4, #12]
  405962:	430b      	orrs	r3, r1
  405964:	4906      	ldr	r1, [pc, #24]	; (405980 <usart_init_rs232+0x4c>)
  405966:	600b      	str	r3, [r1, #0]
  405968:	6869      	ldr	r1, [r5, #4]
  40596a:	430b      	orrs	r3, r1
  40596c:	606b      	str	r3, [r5, #4]
  40596e:	4610      	mov	r0, r2
  405970:	bd70      	pop	{r4, r5, r6, pc}
  405972:	2201      	movs	r2, #1
  405974:	e7fb      	b.n	40596e <usart_init_rs232+0x3a>
  405976:	2201      	movs	r2, #1
  405978:	e7f9      	b.n	40596e <usart_init_rs232+0x3a>
  40597a:	bf00      	nop
  40597c:	0040590d 	.word	0x0040590d
  405980:	2001a2c8 	.word	0x2001a2c8
  405984:	004058b1 	.word	0x004058b1

00405988 <usart_enable_tx>:
  405988:	2340      	movs	r3, #64	; 0x40
  40598a:	6003      	str	r3, [r0, #0]
  40598c:	4770      	bx	lr

0040598e <usart_enable_rx>:
  40598e:	2310      	movs	r3, #16
  405990:	6003      	str	r3, [r0, #0]
  405992:	4770      	bx	lr

00405994 <usart_enable_interrupt>:
  405994:	6081      	str	r1, [r0, #8]
  405996:	4770      	bx	lr

00405998 <usart_write>:
  405998:	6943      	ldr	r3, [r0, #20]
  40599a:	f013 0f02 	tst.w	r3, #2
  40599e:	bf1d      	ittte	ne
  4059a0:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4059a4:	61c1      	strne	r1, [r0, #28]
  4059a6:	2000      	movne	r0, #0
  4059a8:	2001      	moveq	r0, #1
  4059aa:	4770      	bx	lr

004059ac <usart_read>:
  4059ac:	6943      	ldr	r3, [r0, #20]
  4059ae:	f013 0f01 	tst.w	r3, #1
  4059b2:	d005      	beq.n	4059c0 <usart_read+0x14>
  4059b4:	6983      	ldr	r3, [r0, #24]
  4059b6:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4059ba:	600b      	str	r3, [r1, #0]
  4059bc:	2000      	movs	r0, #0
  4059be:	4770      	bx	lr
  4059c0:	2001      	movs	r0, #1
  4059c2:	4770      	bx	lr

004059c4 <Dummy_Handler>:
  4059c4:	e7fe      	b.n	4059c4 <Dummy_Handler>
	...

004059c8 <Reset_Handler>:
  4059c8:	b500      	push	{lr}
  4059ca:	b083      	sub	sp, #12
  4059cc:	4b2a      	ldr	r3, [pc, #168]	; (405a78 <Reset_Handler+0xb0>)
  4059ce:	4a2b      	ldr	r2, [pc, #172]	; (405a7c <Reset_Handler+0xb4>)
  4059d0:	429a      	cmp	r2, r3
  4059d2:	d010      	beq.n	4059f6 <Reset_Handler+0x2e>
  4059d4:	4b2a      	ldr	r3, [pc, #168]	; (405a80 <Reset_Handler+0xb8>)
  4059d6:	4a28      	ldr	r2, [pc, #160]	; (405a78 <Reset_Handler+0xb0>)
  4059d8:	429a      	cmp	r2, r3
  4059da:	d20c      	bcs.n	4059f6 <Reset_Handler+0x2e>
  4059dc:	3b01      	subs	r3, #1
  4059de:	1a9b      	subs	r3, r3, r2
  4059e0:	f023 0303 	bic.w	r3, r3, #3
  4059e4:	3304      	adds	r3, #4
  4059e6:	4413      	add	r3, r2
  4059e8:	4924      	ldr	r1, [pc, #144]	; (405a7c <Reset_Handler+0xb4>)
  4059ea:	f851 0b04 	ldr.w	r0, [r1], #4
  4059ee:	f842 0b04 	str.w	r0, [r2], #4
  4059f2:	429a      	cmp	r2, r3
  4059f4:	d1f9      	bne.n	4059ea <Reset_Handler+0x22>
  4059f6:	4b23      	ldr	r3, [pc, #140]	; (405a84 <Reset_Handler+0xbc>)
  4059f8:	4a23      	ldr	r2, [pc, #140]	; (405a88 <Reset_Handler+0xc0>)
  4059fa:	429a      	cmp	r2, r3
  4059fc:	d20a      	bcs.n	405a14 <Reset_Handler+0x4c>
  4059fe:	3b01      	subs	r3, #1
  405a00:	1a9b      	subs	r3, r3, r2
  405a02:	f023 0303 	bic.w	r3, r3, #3
  405a06:	3304      	adds	r3, #4
  405a08:	4413      	add	r3, r2
  405a0a:	2100      	movs	r1, #0
  405a0c:	f842 1b04 	str.w	r1, [r2], #4
  405a10:	4293      	cmp	r3, r2
  405a12:	d1fb      	bne.n	405a0c <Reset_Handler+0x44>
  405a14:	4a1d      	ldr	r2, [pc, #116]	; (405a8c <Reset_Handler+0xc4>)
  405a16:	f022 017f 	bic.w	r1, r2, #127	; 0x7f
  405a1a:	4b1d      	ldr	r3, [pc, #116]	; (405a90 <Reset_Handler+0xc8>)
  405a1c:	6099      	str	r1, [r3, #8]
  405a1e:	f3ef 8310 	mrs	r3, PRIMASK
  405a22:	fab3 f383 	clz	r3, r3
  405a26:	095b      	lsrs	r3, r3, #5
  405a28:	9301      	str	r3, [sp, #4]
  405a2a:	b672      	cpsid	i
  405a2c:	f3bf 8f5f 	dmb	sy
  405a30:	2100      	movs	r1, #0
  405a32:	4b18      	ldr	r3, [pc, #96]	; (405a94 <Reset_Handler+0xcc>)
  405a34:	7019      	strb	r1, [r3, #0]
  405a36:	9801      	ldr	r0, [sp, #4]
  405a38:	4917      	ldr	r1, [pc, #92]	; (405a98 <Reset_Handler+0xd0>)
  405a3a:	680b      	ldr	r3, [r1, #0]
  405a3c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  405a40:	600b      	str	r3, [r1, #0]
  405a42:	f3bf 8f4f 	dsb	sy
  405a46:	f3bf 8f6f 	isb	sy
  405a4a:	b128      	cbz	r0, 405a58 <Reset_Handler+0x90>
  405a4c:	2101      	movs	r1, #1
  405a4e:	4b11      	ldr	r3, [pc, #68]	; (405a94 <Reset_Handler+0xcc>)
  405a50:	7019      	strb	r1, [r3, #0]
  405a52:	f3bf 8f5f 	dmb	sy
  405a56:	b662      	cpsie	i
  405a58:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
  405a5c:	f5b2 3f20 	cmp.w	r2, #163840	; 0x28000
  405a60:	d204      	bcs.n	405a6c <Reset_Handler+0xa4>
  405a62:	4a0b      	ldr	r2, [pc, #44]	; (405a90 <Reset_Handler+0xc8>)
  405a64:	6893      	ldr	r3, [r2, #8]
  405a66:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  405a6a:	6093      	str	r3, [r2, #8]
  405a6c:	4b0b      	ldr	r3, [pc, #44]	; (405a9c <Reset_Handler+0xd4>)
  405a6e:	4798      	blx	r3
  405a70:	4b0b      	ldr	r3, [pc, #44]	; (405aa0 <Reset_Handler+0xd8>)
  405a72:	4798      	blx	r3
  405a74:	e7fe      	b.n	405a74 <Reset_Handler+0xac>
  405a76:	bf00      	nop
  405a78:	20000000 	.word	0x20000000
  405a7c:	0040c1ec 	.word	0x0040c1ec
  405a80:	20000bf0 	.word	0x20000bf0
  405a84:	2001ab84 	.word	0x2001ab84
  405a88:	20000bf0 	.word	0x20000bf0
  405a8c:	00400000 	.word	0x00400000
  405a90:	e000ed00 	.word	0xe000ed00
  405a94:	200001fc 	.word	0x200001fc
  405a98:	e000ed88 	.word	0xe000ed88
  405a9c:	00408345 	.word	0x00408345
  405aa0:	00407fd1 	.word	0x00407fd1

00405aa4 <SystemCoreClockUpdate>:
  405aa4:	4b31      	ldr	r3, [pc, #196]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405aa8:	f003 0303 	and.w	r3, r3, #3
  405aac:	2b01      	cmp	r3, #1
  405aae:	d01d      	beq.n	405aec <SystemCoreClockUpdate+0x48>
  405ab0:	b183      	cbz	r3, 405ad4 <SystemCoreClockUpdate+0x30>
  405ab2:	2b02      	cmp	r3, #2
  405ab4:	d036      	beq.n	405b24 <SystemCoreClockUpdate+0x80>
  405ab6:	4b2d      	ldr	r3, [pc, #180]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405ab8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405aba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  405abe:	2b70      	cmp	r3, #112	; 0x70
  405ac0:	d04b      	beq.n	405b5a <SystemCoreClockUpdate+0xb6>
  405ac2:	4b2a      	ldr	r3, [pc, #168]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  405ac6:	492a      	ldr	r1, [pc, #168]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405ac8:	f3c2 1202 	ubfx	r2, r2, #4, #3
  405acc:	680b      	ldr	r3, [r1, #0]
  405ace:	40d3      	lsrs	r3, r2
  405ad0:	600b      	str	r3, [r1, #0]
  405ad2:	4770      	bx	lr
  405ad4:	4b27      	ldr	r3, [pc, #156]	; (405b74 <SystemCoreClockUpdate+0xd0>)
  405ad6:	695b      	ldr	r3, [r3, #20]
  405ad8:	f013 0f80 	tst.w	r3, #128	; 0x80
  405adc:	bf14      	ite	ne
  405ade:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  405ae2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  405ae6:	4b22      	ldr	r3, [pc, #136]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405ae8:	601a      	str	r2, [r3, #0]
  405aea:	e7e4      	b.n	405ab6 <SystemCoreClockUpdate+0x12>
  405aec:	4b1f      	ldr	r3, [pc, #124]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405aee:	6a1b      	ldr	r3, [r3, #32]
  405af0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  405af4:	d003      	beq.n	405afe <SystemCoreClockUpdate+0x5a>
  405af6:	4a20      	ldr	r2, [pc, #128]	; (405b78 <SystemCoreClockUpdate+0xd4>)
  405af8:	4b1d      	ldr	r3, [pc, #116]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405afa:	601a      	str	r2, [r3, #0]
  405afc:	e7db      	b.n	405ab6 <SystemCoreClockUpdate+0x12>
  405afe:	4a1f      	ldr	r2, [pc, #124]	; (405b7c <SystemCoreClockUpdate+0xd8>)
  405b00:	4b1b      	ldr	r3, [pc, #108]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b02:	601a      	str	r2, [r3, #0]
  405b04:	4b19      	ldr	r3, [pc, #100]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405b06:	6a1b      	ldr	r3, [r3, #32]
  405b08:	f003 0370 	and.w	r3, r3, #112	; 0x70
  405b0c:	2b10      	cmp	r3, #16
  405b0e:	d005      	beq.n	405b1c <SystemCoreClockUpdate+0x78>
  405b10:	2b20      	cmp	r3, #32
  405b12:	d1d0      	bne.n	405ab6 <SystemCoreClockUpdate+0x12>
  405b14:	4a1a      	ldr	r2, [pc, #104]	; (405b80 <SystemCoreClockUpdate+0xdc>)
  405b16:	4b16      	ldr	r3, [pc, #88]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b18:	601a      	str	r2, [r3, #0]
  405b1a:	e7cc      	b.n	405ab6 <SystemCoreClockUpdate+0x12>
  405b1c:	4a19      	ldr	r2, [pc, #100]	; (405b84 <SystemCoreClockUpdate+0xe0>)
  405b1e:	4b14      	ldr	r3, [pc, #80]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b20:	601a      	str	r2, [r3, #0]
  405b22:	e7c8      	b.n	405ab6 <SystemCoreClockUpdate+0x12>
  405b24:	4b13      	ldr	r3, [pc, #76]	; (405b74 <SystemCoreClockUpdate+0xd0>)
  405b26:	695b      	ldr	r3, [r3, #20]
  405b28:	f013 0f80 	tst.w	r3, #128	; 0x80
  405b2c:	bf14      	ite	ne
  405b2e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  405b32:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  405b36:	4b0e      	ldr	r3, [pc, #56]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b38:	601a      	str	r2, [r3, #0]
  405b3a:	4b0c      	ldr	r3, [pc, #48]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405b3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405b3e:	f003 0303 	and.w	r3, r3, #3
  405b42:	2b02      	cmp	r3, #2
  405b44:	d1b7      	bne.n	405ab6 <SystemCoreClockUpdate+0x12>
  405b46:	4b09      	ldr	r3, [pc, #36]	; (405b6c <SystemCoreClockUpdate+0xc8>)
  405b48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  405b4a:	4909      	ldr	r1, [pc, #36]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b4c:	f3c2 420c 	ubfx	r2, r2, #16, #13
  405b50:	680b      	ldr	r3, [r1, #0]
  405b52:	fb02 3303 	mla	r3, r2, r3, r3
  405b56:	600b      	str	r3, [r1, #0]
  405b58:	e7ad      	b.n	405ab6 <SystemCoreClockUpdate+0x12>
  405b5a:	4a05      	ldr	r2, [pc, #20]	; (405b70 <SystemCoreClockUpdate+0xcc>)
  405b5c:	6813      	ldr	r3, [r2, #0]
  405b5e:	490a      	ldr	r1, [pc, #40]	; (405b88 <SystemCoreClockUpdate+0xe4>)
  405b60:	fba1 1303 	umull	r1, r3, r1, r3
  405b64:	085b      	lsrs	r3, r3, #1
  405b66:	6013      	str	r3, [r2, #0]
  405b68:	4770      	bx	lr
  405b6a:	bf00      	nop
  405b6c:	400e0400 	.word	0x400e0400
  405b70:	20000200 	.word	0x20000200
  405b74:	400e1410 	.word	0x400e1410
  405b78:	00b71b00 	.word	0x00b71b00
  405b7c:	007a1200 	.word	0x007a1200
  405b80:	016e3600 	.word	0x016e3600
  405b84:	00f42400 	.word	0x00f42400
  405b88:	aaaaaaab 	.word	0xaaaaaaab

00405b8c <system_init_flash>:
  405b8c:	4b12      	ldr	r3, [pc, #72]	; (405bd8 <system_init_flash+0x4c>)
  405b8e:	4298      	cmp	r0, r3
  405b90:	d911      	bls.n	405bb6 <system_init_flash+0x2a>
  405b92:	4b12      	ldr	r3, [pc, #72]	; (405bdc <system_init_flash+0x50>)
  405b94:	4298      	cmp	r0, r3
  405b96:	d913      	bls.n	405bc0 <system_init_flash+0x34>
  405b98:	4b11      	ldr	r3, [pc, #68]	; (405be0 <system_init_flash+0x54>)
  405b9a:	4298      	cmp	r0, r3
  405b9c:	d914      	bls.n	405bc8 <system_init_flash+0x3c>
  405b9e:	4b11      	ldr	r3, [pc, #68]	; (405be4 <system_init_flash+0x58>)
  405ba0:	4298      	cmp	r0, r3
  405ba2:	d915      	bls.n	405bd0 <system_init_flash+0x44>
  405ba4:	4b10      	ldr	r3, [pc, #64]	; (405be8 <system_init_flash+0x5c>)
  405ba6:	4298      	cmp	r0, r3
  405ba8:	bf94      	ite	ls
  405baa:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
  405bae:	4a0f      	ldrhi	r2, [pc, #60]	; (405bec <system_init_flash+0x60>)
  405bb0:	4b0f      	ldr	r3, [pc, #60]	; (405bf0 <system_init_flash+0x64>)
  405bb2:	601a      	str	r2, [r3, #0]
  405bb4:	4770      	bx	lr
  405bb6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  405bba:	4b0d      	ldr	r3, [pc, #52]	; (405bf0 <system_init_flash+0x64>)
  405bbc:	601a      	str	r2, [r3, #0]
  405bbe:	4770      	bx	lr
  405bc0:	4a0c      	ldr	r2, [pc, #48]	; (405bf4 <system_init_flash+0x68>)
  405bc2:	4b0b      	ldr	r3, [pc, #44]	; (405bf0 <system_init_flash+0x64>)
  405bc4:	601a      	str	r2, [r3, #0]
  405bc6:	4770      	bx	lr
  405bc8:	4a0b      	ldr	r2, [pc, #44]	; (405bf8 <system_init_flash+0x6c>)
  405bca:	4b09      	ldr	r3, [pc, #36]	; (405bf0 <system_init_flash+0x64>)
  405bcc:	601a      	str	r2, [r3, #0]
  405bce:	4770      	bx	lr
  405bd0:	4a0a      	ldr	r2, [pc, #40]	; (405bfc <system_init_flash+0x70>)
  405bd2:	4b07      	ldr	r3, [pc, #28]	; (405bf0 <system_init_flash+0x64>)
  405bd4:	601a      	str	r2, [r3, #0]
  405bd6:	4770      	bx	lr
  405bd8:	01312cff 	.word	0x01312cff
  405bdc:	026259ff 	.word	0x026259ff
  405be0:	039386ff 	.word	0x039386ff
  405be4:	04c4b3ff 	.word	0x04c4b3ff
  405be8:	05f5e0ff 	.word	0x05f5e0ff
  405bec:	04000500 	.word	0x04000500
  405bf0:	400e0a00 	.word	0x400e0a00
  405bf4:	04000100 	.word	0x04000100
  405bf8:	04000200 	.word	0x04000200
  405bfc:	04000300 	.word	0x04000300

00405c00 <_sbrk>:
  405c00:	4b0a      	ldr	r3, [pc, #40]	; (405c2c <_sbrk+0x2c>)
  405c02:	681b      	ldr	r3, [r3, #0]
  405c04:	b153      	cbz	r3, 405c1c <_sbrk+0x1c>
  405c06:	4b09      	ldr	r3, [pc, #36]	; (405c2c <_sbrk+0x2c>)
  405c08:	681b      	ldr	r3, [r3, #0]
  405c0a:	181a      	adds	r2, r3, r0
  405c0c:	4908      	ldr	r1, [pc, #32]	; (405c30 <_sbrk+0x30>)
  405c0e:	4291      	cmp	r1, r2
  405c10:	db08      	blt.n	405c24 <_sbrk+0x24>
  405c12:	4610      	mov	r0, r2
  405c14:	4a05      	ldr	r2, [pc, #20]	; (405c2c <_sbrk+0x2c>)
  405c16:	6010      	str	r0, [r2, #0]
  405c18:	4618      	mov	r0, r3
  405c1a:	4770      	bx	lr
  405c1c:	4a05      	ldr	r2, [pc, #20]	; (405c34 <_sbrk+0x34>)
  405c1e:	4b03      	ldr	r3, [pc, #12]	; (405c2c <_sbrk+0x2c>)
  405c20:	601a      	str	r2, [r3, #0]
  405c22:	e7f0      	b.n	405c06 <_sbrk+0x6>
  405c24:	f04f 30ff 	mov.w	r0, #4294967295
  405c28:	4770      	bx	lr
  405c2a:	bf00      	nop
  405c2c:	2001a2cc 	.word	0x2001a2cc
  405c30:	20027ffc 	.word	0x20027ffc
  405c34:	2001db88 	.word	0x2001db88

00405c38 <_close>:
  405c38:	f04f 30ff 	mov.w	r0, #4294967295
  405c3c:	4770      	bx	lr

00405c3e <_fstat>:
  405c3e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  405c42:	604b      	str	r3, [r1, #4]
  405c44:	2000      	movs	r0, #0
  405c46:	4770      	bx	lr

00405c48 <_isatty>:
  405c48:	2001      	movs	r0, #1
  405c4a:	4770      	bx	lr

00405c4c <_lseek>:
  405c4c:	2000      	movs	r0, #0
  405c4e:	4770      	bx	lr

00405c50 <disk_initialize>:
  405c50:	2802      	cmp	r0, #2
  405c52:	d815      	bhi.n	405c80 <disk_initialize+0x30>
  405c54:	b510      	push	{r4, lr}
  405c56:	4604      	mov	r4, r0
  405c58:	4b0b      	ldr	r3, [pc, #44]	; (405c88 <disk_initialize+0x38>)
  405c5a:	4798      	blx	r3
  405c5c:	2803      	cmp	r0, #3
  405c5e:	d106      	bne.n	405c6e <disk_initialize+0x1e>
  405c60:	4620      	mov	r0, r4
  405c62:	4b09      	ldr	r3, [pc, #36]	; (405c88 <disk_initialize+0x38>)
  405c64:	4798      	blx	r3
  405c66:	2803      	cmp	r0, #3
  405c68:	d101      	bne.n	405c6e <disk_initialize+0x1e>
  405c6a:	2001      	movs	r0, #1
  405c6c:	bd10      	pop	{r4, pc}
  405c6e:	b948      	cbnz	r0, 405c84 <disk_initialize+0x34>
  405c70:	4620      	mov	r0, r4
  405c72:	4b06      	ldr	r3, [pc, #24]	; (405c8c <disk_initialize+0x3c>)
  405c74:	4798      	blx	r3
  405c76:	2800      	cmp	r0, #0
  405c78:	bf14      	ite	ne
  405c7a:	2004      	movne	r0, #4
  405c7c:	2000      	moveq	r0, #0
  405c7e:	bd10      	pop	{r4, pc}
  405c80:	2001      	movs	r0, #1
  405c82:	4770      	bx	lr
  405c84:	2001      	movs	r0, #1
  405c86:	bd10      	pop	{r4, pc}
  405c88:	00401b0d 	.word	0x00401b0d
  405c8c:	00401b7d 	.word	0x00401b7d

00405c90 <disk_status>:
  405c90:	b508      	push	{r3, lr}
  405c92:	4b05      	ldr	r3, [pc, #20]	; (405ca8 <disk_status+0x18>)
  405c94:	4798      	blx	r3
  405c96:	b120      	cbz	r0, 405ca2 <disk_status+0x12>
  405c98:	2802      	cmp	r0, #2
  405c9a:	bf0c      	ite	eq
  405c9c:	2003      	moveq	r0, #3
  405c9e:	2001      	movne	r0, #1
  405ca0:	bd08      	pop	{r3, pc}
  405ca2:	2000      	movs	r0, #0
  405ca4:	bd08      	pop	{r3, pc}
  405ca6:	bf00      	nop
  405ca8:	00401b0d 	.word	0x00401b0d

00405cac <disk_read>:
  405cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405cb0:	b083      	sub	sp, #12
  405cb2:	4680      	mov	r8, r0
  405cb4:	460d      	mov	r5, r1
  405cb6:	4614      	mov	r4, r2
  405cb8:	461f      	mov	r7, r3
  405cba:	4b15      	ldr	r3, [pc, #84]	; (405d10 <disk_read+0x64>)
  405cbc:	4798      	blx	r3
  405cbe:	b918      	cbnz	r0, 405cc8 <disk_read+0x1c>
  405cc0:	2001      	movs	r0, #1
  405cc2:	b003      	add	sp, #12
  405cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405cc8:	4606      	mov	r6, r0
  405cca:	a901      	add	r1, sp, #4
  405ccc:	4640      	mov	r0, r8
  405cce:	4b11      	ldr	r3, [pc, #68]	; (405d14 <disk_read+0x68>)
  405cd0:	4798      	blx	r3
  405cd2:	46b1      	mov	r9, r6
  405cd4:	fb06 4207 	mla	r2, r6, r7, r4
  405cd8:	9b01      	ldr	r3, [sp, #4]
  405cda:	fb03 6306 	mla	r3, r3, r6, r6
  405cde:	429a      	cmp	r2, r3
  405ce0:	d901      	bls.n	405ce6 <disk_read+0x3a>
  405ce2:	2004      	movs	r0, #4
  405ce4:	e7ed      	b.n	405cc2 <disk_read+0x16>
  405ce6:	46ba      	mov	sl, r7
  405ce8:	b177      	cbz	r7, 405d08 <disk_read+0x5c>
  405cea:	0276      	lsls	r6, r6, #9
  405cec:	2700      	movs	r7, #0
  405cee:	f8df b028 	ldr.w	fp, [pc, #40]	; 405d18 <disk_read+0x6c>
  405cf2:	462a      	mov	r2, r5
  405cf4:	4621      	mov	r1, r4
  405cf6:	4640      	mov	r0, r8
  405cf8:	47d8      	blx	fp
  405cfa:	b938      	cbnz	r0, 405d0c <disk_read+0x60>
  405cfc:	3701      	adds	r7, #1
  405cfe:	444c      	add	r4, r9
  405d00:	4435      	add	r5, r6
  405d02:	4557      	cmp	r7, sl
  405d04:	d1f5      	bne.n	405cf2 <disk_read+0x46>
  405d06:	e7dc      	b.n	405cc2 <disk_read+0x16>
  405d08:	2000      	movs	r0, #0
  405d0a:	e7da      	b.n	405cc2 <disk_read+0x16>
  405d0c:	2001      	movs	r0, #1
  405d0e:	e7d8      	b.n	405cc2 <disk_read+0x16>
  405d10:	00401b49 	.word	0x00401b49
  405d14:	00401b29 	.word	0x00401b29
  405d18:	00401c51 	.word	0x00401c51

00405d1c <disk_write>:
  405d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405d20:	b083      	sub	sp, #12
  405d22:	4680      	mov	r8, r0
  405d24:	460d      	mov	r5, r1
  405d26:	4614      	mov	r4, r2
  405d28:	461f      	mov	r7, r3
  405d2a:	4b15      	ldr	r3, [pc, #84]	; (405d80 <disk_write+0x64>)
  405d2c:	4798      	blx	r3
  405d2e:	b918      	cbnz	r0, 405d38 <disk_write+0x1c>
  405d30:	2001      	movs	r0, #1
  405d32:	b003      	add	sp, #12
  405d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d38:	4606      	mov	r6, r0
  405d3a:	a901      	add	r1, sp, #4
  405d3c:	4640      	mov	r0, r8
  405d3e:	4b11      	ldr	r3, [pc, #68]	; (405d84 <disk_write+0x68>)
  405d40:	4798      	blx	r3
  405d42:	46b1      	mov	r9, r6
  405d44:	fb06 4207 	mla	r2, r6, r7, r4
  405d48:	9b01      	ldr	r3, [sp, #4]
  405d4a:	fb03 6306 	mla	r3, r3, r6, r6
  405d4e:	429a      	cmp	r2, r3
  405d50:	d901      	bls.n	405d56 <disk_write+0x3a>
  405d52:	2004      	movs	r0, #4
  405d54:	e7ed      	b.n	405d32 <disk_write+0x16>
  405d56:	46ba      	mov	sl, r7
  405d58:	b177      	cbz	r7, 405d78 <disk_write+0x5c>
  405d5a:	0276      	lsls	r6, r6, #9
  405d5c:	2700      	movs	r7, #0
  405d5e:	f8df b028 	ldr.w	fp, [pc, #40]	; 405d88 <disk_write+0x6c>
  405d62:	462a      	mov	r2, r5
  405d64:	4621      	mov	r1, r4
  405d66:	4640      	mov	r0, r8
  405d68:	47d8      	blx	fp
  405d6a:	b938      	cbnz	r0, 405d7c <disk_write+0x60>
  405d6c:	3701      	adds	r7, #1
  405d6e:	444c      	add	r4, r9
  405d70:	4435      	add	r5, r6
  405d72:	4557      	cmp	r7, sl
  405d74:	d1f5      	bne.n	405d62 <disk_write+0x46>
  405d76:	e7dc      	b.n	405d32 <disk_write+0x16>
  405d78:	2000      	movs	r0, #0
  405d7a:	e7da      	b.n	405d32 <disk_write+0x16>
  405d7c:	2001      	movs	r0, #1
  405d7e:	e7d8      	b.n	405d32 <disk_write+0x16>
  405d80:	00401b49 	.word	0x00401b49
  405d84:	00401b29 	.word	0x00401b29
  405d88:	00401c8d 	.word	0x00401c8d

00405d8c <disk_ioctl>:
  405d8c:	b510      	push	{r4, lr}
  405d8e:	b082      	sub	sp, #8
  405d90:	4614      	mov	r4, r2
  405d92:	2903      	cmp	r1, #3
  405d94:	d827      	bhi.n	405de6 <disk_ioctl+0x5a>
  405d96:	e8df f001 	tbb	[pc, r1]
  405d9a:	071f      	.short	0x071f
  405d9c:	020f      	.short	0x020f
  405d9e:	2301      	movs	r3, #1
  405da0:	6013      	str	r3, [r2, #0]
  405da2:	2000      	movs	r0, #0
  405da4:	b002      	add	sp, #8
  405da6:	bd10      	pop	{r4, pc}
  405da8:	a901      	add	r1, sp, #4
  405daa:	4b11      	ldr	r3, [pc, #68]	; (405df0 <disk_ioctl+0x64>)
  405dac:	4798      	blx	r3
  405dae:	9b01      	ldr	r3, [sp, #4]
  405db0:	3301      	adds	r3, #1
  405db2:	6023      	str	r3, [r4, #0]
  405db4:	2000      	movs	r0, #0
  405db6:	e7f5      	b.n	405da4 <disk_ioctl+0x18>
  405db8:	4b0e      	ldr	r3, [pc, #56]	; (405df4 <disk_ioctl+0x68>)
  405dba:	4798      	blx	r3
  405dbc:	2808      	cmp	r0, #8
  405dbe:	d814      	bhi.n	405dea <disk_ioctl+0x5e>
  405dc0:	f44f 738b 	mov.w	r3, #278	; 0x116
  405dc4:	fa23 f000 	lsr.w	r0, r3, r0
  405dc8:	f010 0f01 	tst.w	r0, #1
  405dcc:	d101      	bne.n	405dd2 <disk_ioctl+0x46>
  405dce:	2001      	movs	r0, #1
  405dd0:	e7e8      	b.n	405da4 <disk_ioctl+0x18>
  405dd2:	2000      	movs	r0, #0
  405dd4:	7020      	strb	r0, [r4, #0]
  405dd6:	e7e5      	b.n	405da4 <disk_ioctl+0x18>
  405dd8:	4b07      	ldr	r3, [pc, #28]	; (405df8 <disk_ioctl+0x6c>)
  405dda:	4798      	blx	r3
  405ddc:	2800      	cmp	r0, #0
  405dde:	bf0c      	ite	eq
  405de0:	2000      	moveq	r0, #0
  405de2:	2003      	movne	r0, #3
  405de4:	e7de      	b.n	405da4 <disk_ioctl+0x18>
  405de6:	2004      	movs	r0, #4
  405de8:	e7dc      	b.n	405da4 <disk_ioctl+0x18>
  405dea:	2001      	movs	r0, #1
  405dec:	e7da      	b.n	405da4 <disk_ioctl+0x18>
  405dee:	bf00      	nop
  405df0:	00401b29 	.word	0x00401b29
  405df4:	00401b49 	.word	0x00401b49
  405df8:	00401b0d 	.word	0x00401b0d

00405dfc <get_fattime>:
  405dfc:	b530      	push	{r4, r5, lr}
  405dfe:	b08b      	sub	sp, #44	; 0x2c
  405e00:	4c11      	ldr	r4, [pc, #68]	; (405e48 <get_fattime+0x4c>)
  405e02:	ab07      	add	r3, sp, #28
  405e04:	aa08      	add	r2, sp, #32
  405e06:	a909      	add	r1, sp, #36	; 0x24
  405e08:	4620      	mov	r0, r4
  405e0a:	4d10      	ldr	r5, [pc, #64]	; (405e4c <get_fattime+0x50>)
  405e0c:	47a8      	blx	r5
  405e0e:	ab03      	add	r3, sp, #12
  405e10:	9300      	str	r3, [sp, #0]
  405e12:	ab04      	add	r3, sp, #16
  405e14:	aa05      	add	r2, sp, #20
  405e16:	a906      	add	r1, sp, #24
  405e18:	4620      	mov	r0, r4
  405e1a:	4c0d      	ldr	r4, [pc, #52]	; (405e50 <get_fattime+0x54>)
  405e1c:	47a0      	blx	r4
  405e1e:	9b04      	ldr	r3, [sp, #16]
  405e20:	041b      	lsls	r3, r3, #16
  405e22:	9805      	ldr	r0, [sp, #20]
  405e24:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
  405e28:	9809      	ldr	r0, [sp, #36]	; 0x24
  405e2a:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
  405e2e:	9808      	ldr	r0, [sp, #32]
  405e30:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
  405e34:	9807      	ldr	r0, [sp, #28]
  405e36:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
  405e3a:	9806      	ldr	r0, [sp, #24]
  405e3c:	f2a0 70bc 	subw	r0, r0, #1980	; 0x7bc
  405e40:	ea43 6040 	orr.w	r0, r3, r0, lsl #25
  405e44:	b00b      	add	sp, #44	; 0x2c
  405e46:	bd30      	pop	{r4, r5, pc}
  405e48:	400e1460 	.word	0x400e1460
  405e4c:	004039c9 	.word	0x004039c9
  405e50:	00403a23 	.word	0x00403a23

00405e54 <mem_cpy>:
  405e54:	b13a      	cbz	r2, 405e66 <mem_cpy+0x12>
  405e56:	3801      	subs	r0, #1
  405e58:	188a      	adds	r2, r1, r2
  405e5a:	f811 3b01 	ldrb.w	r3, [r1], #1
  405e5e:	f800 3f01 	strb.w	r3, [r0, #1]!
  405e62:	4291      	cmp	r1, r2
  405e64:	d1f9      	bne.n	405e5a <mem_cpy+0x6>
  405e66:	4770      	bx	lr

00405e68 <mem_set>:
  405e68:	b122      	cbz	r2, 405e74 <mem_set+0xc>
  405e6a:	1882      	adds	r2, r0, r2
  405e6c:	f800 1b01 	strb.w	r1, [r0], #1
  405e70:	4282      	cmp	r2, r0
  405e72:	d1fb      	bne.n	405e6c <mem_set+0x4>
  405e74:	4770      	bx	lr

00405e76 <clust2sect>:
  405e76:	3902      	subs	r1, #2
  405e78:	6983      	ldr	r3, [r0, #24]
  405e7a:	3b02      	subs	r3, #2
  405e7c:	4299      	cmp	r1, r3
  405e7e:	bf3d      	ittte	cc
  405e80:	7883      	ldrbcc	r3, [r0, #2]
  405e82:	6a80      	ldrcc	r0, [r0, #40]	; 0x28
  405e84:	fb01 0003 	mlacc	r0, r1, r3, r0
  405e88:	2000      	movcs	r0, #0
  405e8a:	4770      	bx	lr

00405e8c <sum_sfn>:
  405e8c:	4602      	mov	r2, r0
  405e8e:	f100 010b 	add.w	r1, r0, #11
  405e92:	2000      	movs	r0, #0
  405e94:	01c3      	lsls	r3, r0, #7
  405e96:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
  405e9a:	f812 0b01 	ldrb.w	r0, [r2], #1
  405e9e:	fa50 f383 	uxtab	r3, r0, r3
  405ea2:	b2d8      	uxtb	r0, r3
  405ea4:	428a      	cmp	r2, r1
  405ea6:	d1f5      	bne.n	405e94 <sum_sfn+0x8>
  405ea8:	4770      	bx	lr
	...

00405eac <validate>:
  405eac:	b198      	cbz	r0, 405ed6 <validate+0x2a>
  405eae:	b508      	push	{r3, lr}
  405eb0:	7802      	ldrb	r2, [r0, #0]
  405eb2:	b90a      	cbnz	r2, 405eb8 <validate+0xc>
  405eb4:	2009      	movs	r0, #9
  405eb6:	bd08      	pop	{r3, pc}
  405eb8:	88c2      	ldrh	r2, [r0, #6]
  405eba:	428a      	cmp	r2, r1
  405ebc:	d001      	beq.n	405ec2 <validate+0x16>
  405ebe:	2009      	movs	r0, #9
  405ec0:	bd08      	pop	{r3, pc}
  405ec2:	7840      	ldrb	r0, [r0, #1]
  405ec4:	4b05      	ldr	r3, [pc, #20]	; (405edc <validate+0x30>)
  405ec6:	4798      	blx	r3
  405ec8:	f000 0001 	and.w	r0, r0, #1
  405ecc:	2800      	cmp	r0, #0
  405ece:	bf14      	ite	ne
  405ed0:	2003      	movne	r0, #3
  405ed2:	2000      	moveq	r0, #0
  405ed4:	bd08      	pop	{r3, pc}
  405ed6:	2009      	movs	r0, #9
  405ed8:	4770      	bx	lr
  405eda:	bf00      	nop
  405edc:	00405c91 	.word	0x00405c91

00405ee0 <check_fs>:
  405ee0:	b538      	push	{r3, r4, r5, lr}
  405ee2:	4604      	mov	r4, r0
  405ee4:	2301      	movs	r3, #1
  405ee6:	460a      	mov	r2, r1
  405ee8:	f100 0130 	add.w	r1, r0, #48	; 0x30
  405eec:	7840      	ldrb	r0, [r0, #1]
  405eee:	4d1d      	ldr	r5, [pc, #116]	; (405f64 <check_fs+0x84>)
  405ef0:	47a8      	blx	r5
  405ef2:	b108      	cbz	r0, 405ef8 <check_fs+0x18>
  405ef4:	2003      	movs	r0, #3
  405ef6:	bd38      	pop	{r3, r4, r5, pc}
  405ef8:	f894 222f 	ldrb.w	r2, [r4, #559]	; 0x22f
  405efc:	f894 322e 	ldrb.w	r3, [r4, #558]	; 0x22e
  405f00:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  405f04:	b21b      	sxth	r3, r3
  405f06:	4a18      	ldr	r2, [pc, #96]	; (405f68 <check_fs+0x88>)
  405f08:	4293      	cmp	r3, r2
  405f0a:	d001      	beq.n	405f10 <check_fs+0x30>
  405f0c:	2002      	movs	r0, #2
  405f0e:	bd38      	pop	{r3, r4, r5, pc}
  405f10:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
  405f14:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
  405f18:	041b      	lsls	r3, r3, #16
  405f1a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  405f1e:	f894 2066 	ldrb.w	r2, [r4, #102]	; 0x66
  405f22:	4313      	orrs	r3, r2
  405f24:	f894 2067 	ldrb.w	r2, [r4, #103]	; 0x67
  405f28:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  405f2c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  405f30:	4a0e      	ldr	r2, [pc, #56]	; (405f6c <check_fs+0x8c>)
  405f32:	4293      	cmp	r3, r2
  405f34:	d013      	beq.n	405f5e <check_fs+0x7e>
  405f36:	f894 3085 	ldrb.w	r3, [r4, #133]	; 0x85
  405f3a:	f894 0084 	ldrb.w	r0, [r4, #132]	; 0x84
  405f3e:	0400      	lsls	r0, r0, #16
  405f40:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
  405f44:	f894 3082 	ldrb.w	r3, [r4, #130]	; 0x82
  405f48:	4318      	orrs	r0, r3
  405f4a:	f894 3083 	ldrb.w	r3, [r4, #131]	; 0x83
  405f4e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  405f52:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  405f56:	1a80      	subs	r0, r0, r2
  405f58:	bf18      	it	ne
  405f5a:	2001      	movne	r0, #1
  405f5c:	bd38      	pop	{r3, r4, r5, pc}
  405f5e:	2000      	movs	r0, #0
  405f60:	bd38      	pop	{r3, r4, r5, pc}
  405f62:	bf00      	nop
  405f64:	00405cad 	.word	0x00405cad
  405f68:	ffffaa55 	.word	0xffffaa55
  405f6c:	00544146 	.word	0x00544146

00405f70 <chk_mounted>:
  405f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405f72:	6803      	ldr	r3, [r0, #0]
  405f74:	781c      	ldrb	r4, [r3, #0]
  405f76:	3c30      	subs	r4, #48	; 0x30
  405f78:	2c09      	cmp	r4, #9
  405f7a:	d80a      	bhi.n	405f92 <chk_mounted+0x22>
  405f7c:	785d      	ldrb	r5, [r3, #1]
  405f7e:	2d3a      	cmp	r5, #58	; 0x3a
  405f80:	d001      	beq.n	405f86 <chk_mounted+0x16>
  405f82:	2400      	movs	r4, #0
  405f84:	e006      	b.n	405f94 <chk_mounted+0x24>
  405f86:	3302      	adds	r3, #2
  405f88:	6003      	str	r3, [r0, #0]
  405f8a:	2c07      	cmp	r4, #7
  405f8c:	d902      	bls.n	405f94 <chk_mounted+0x24>
  405f8e:	200b      	movs	r0, #11
  405f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405f92:	2400      	movs	r4, #0
  405f94:	4bad      	ldr	r3, [pc, #692]	; (40624c <chk_mounted+0x2dc>)
  405f96:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
  405f9a:	600d      	str	r5, [r1, #0]
  405f9c:	2d00      	cmp	r5, #0
  405f9e:	f000 813d 	beq.w	40621c <chk_mounted+0x2ac>
  405fa2:	4616      	mov	r6, r2
  405fa4:	782b      	ldrb	r3, [r5, #0]
  405fa6:	b17b      	cbz	r3, 405fc8 <chk_mounted+0x58>
  405fa8:	7868      	ldrb	r0, [r5, #1]
  405faa:	4ba9      	ldr	r3, [pc, #676]	; (406250 <chk_mounted+0x2e0>)
  405fac:	4798      	blx	r3
  405fae:	f010 0f01 	tst.w	r0, #1
  405fb2:	d109      	bne.n	405fc8 <chk_mounted+0x58>
  405fb4:	2e00      	cmp	r6, #0
  405fb6:	f000 8133 	beq.w	406220 <chk_mounted+0x2b0>
  405fba:	f000 0004 	and.w	r0, r0, #4
  405fbe:	2800      	cmp	r0, #0
  405fc0:	bf0c      	ite	eq
  405fc2:	2000      	moveq	r0, #0
  405fc4:	200a      	movne	r0, #10
  405fc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405fc8:	2300      	movs	r3, #0
  405fca:	702b      	strb	r3, [r5, #0]
  405fcc:	b2e0      	uxtb	r0, r4
  405fce:	7068      	strb	r0, [r5, #1]
  405fd0:	4ba0      	ldr	r3, [pc, #640]	; (406254 <chk_mounted+0x2e4>)
  405fd2:	4798      	blx	r3
  405fd4:	f010 0f01 	tst.w	r0, #1
  405fd8:	d001      	beq.n	405fde <chk_mounted+0x6e>
  405fda:	2003      	movs	r0, #3
  405fdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405fde:	b126      	cbz	r6, 405fea <chk_mounted+0x7a>
  405fe0:	f010 0f04 	tst.w	r0, #4
  405fe4:	d001      	beq.n	405fea <chk_mounted+0x7a>
  405fe6:	200a      	movs	r0, #10
  405fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405fea:	2100      	movs	r1, #0
  405fec:	4628      	mov	r0, r5
  405fee:	4b9a      	ldr	r3, [pc, #616]	; (406258 <chk_mounted+0x2e8>)
  405ff0:	4798      	blx	r3
  405ff2:	2801      	cmp	r0, #1
  405ff4:	d006      	beq.n	406004 <chk_mounted+0x94>
  405ff6:	2400      	movs	r4, #0
  405ff8:	2803      	cmp	r0, #3
  405ffa:	f000 8113 	beq.w	406224 <chk_mounted+0x2b4>
  405ffe:	b1c8      	cbz	r0, 406034 <chk_mounted+0xc4>
  406000:	200d      	movs	r0, #13
  406002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406004:	f895 31f2 	ldrb.w	r3, [r5, #498]	; 0x1f2
  406008:	b90b      	cbnz	r3, 40600e <chk_mounted+0x9e>
  40600a:	200d      	movs	r0, #13
  40600c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40600e:	f895 31f9 	ldrb.w	r3, [r5, #505]	; 0x1f9
  406012:	f895 41f8 	ldrb.w	r4, [r5, #504]	; 0x1f8
  406016:	0424      	lsls	r4, r4, #16
  406018:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
  40601c:	f895 31f6 	ldrb.w	r3, [r5, #502]	; 0x1f6
  406020:	431c      	orrs	r4, r3
  406022:	f895 31f7 	ldrb.w	r3, [r5, #503]	; 0x1f7
  406026:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
  40602a:	4621      	mov	r1, r4
  40602c:	4628      	mov	r0, r5
  40602e:	4b8a      	ldr	r3, [pc, #552]	; (406258 <chk_mounted+0x2e8>)
  406030:	4798      	blx	r3
  406032:	e7e1      	b.n	405ff8 <chk_mounted+0x88>
  406034:	f895 203c 	ldrb.w	r2, [r5, #60]	; 0x3c
  406038:	f895 303b 	ldrb.w	r3, [r5, #59]	; 0x3b
  40603c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  406040:	b21b      	sxth	r3, r3
  406042:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  406046:	d001      	beq.n	40604c <chk_mounted+0xdc>
  406048:	200d      	movs	r0, #13
  40604a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40604c:	f895 3047 	ldrb.w	r3, [r5, #71]	; 0x47
  406050:	f895 2046 	ldrb.w	r2, [r5, #70]	; 0x46
  406054:	ea52 2203 	orrs.w	r2, r2, r3, lsl #8
  406058:	d10d      	bne.n	406076 <chk_mounted+0x106>
  40605a:	f895 3057 	ldrb.w	r3, [r5, #87]	; 0x57
  40605e:	f895 2056 	ldrb.w	r2, [r5, #86]	; 0x56
  406062:	0412      	lsls	r2, r2, #16
  406064:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
  406068:	f895 3054 	ldrb.w	r3, [r5, #84]	; 0x54
  40606c:	431a      	orrs	r2, r3
  40606e:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
  406072:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  406076:	61ea      	str	r2, [r5, #28]
  406078:	f895 e040 	ldrb.w	lr, [r5, #64]	; 0x40
  40607c:	f885 e003 	strb.w	lr, [r5, #3]
  406080:	f10e 33ff 	add.w	r3, lr, #4294967295
  406084:	b2db      	uxtb	r3, r3
  406086:	2b01      	cmp	r3, #1
  406088:	d901      	bls.n	40608e <chk_mounted+0x11e>
  40608a:	200d      	movs	r0, #13
  40608c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40608e:	f895 603d 	ldrb.w	r6, [r5, #61]	; 0x3d
  406092:	70ae      	strb	r6, [r5, #2]
  406094:	2e00      	cmp	r6, #0
  406096:	f000 80c7 	beq.w	406228 <chk_mounted+0x2b8>
  40609a:	1e73      	subs	r3, r6, #1
  40609c:	4233      	tst	r3, r6
  40609e:	d001      	beq.n	4060a4 <chk_mounted+0x134>
  4060a0:	200d      	movs	r0, #13
  4060a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4060a4:	f895 3042 	ldrb.w	r3, [r5, #66]	; 0x42
  4060a8:	f895 1041 	ldrb.w	r1, [r5, #65]	; 0x41
  4060ac:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
  4060b0:	8129      	strh	r1, [r5, #8]
  4060b2:	f011 0f0f 	tst.w	r1, #15
  4060b6:	f040 80b9 	bne.w	40622c <chk_mounted+0x2bc>
  4060ba:	f895 0044 	ldrb.w	r0, [r5, #68]	; 0x44
  4060be:	f895 3043 	ldrb.w	r3, [r5, #67]	; 0x43
  4060c2:	ea53 2300 	orrs.w	r3, r3, r0, lsl #8
  4060c6:	d10d      	bne.n	4060e4 <chk_mounted+0x174>
  4060c8:	f895 0053 	ldrb.w	r0, [r5, #83]	; 0x53
  4060cc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
  4060d0:	041b      	lsls	r3, r3, #16
  4060d2:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  4060d6:	f895 0050 	ldrb.w	r0, [r5, #80]	; 0x50
  4060da:	4303      	orrs	r3, r0
  4060dc:	f895 0051 	ldrb.w	r0, [r5, #81]	; 0x51
  4060e0:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  4060e4:	f895 003f 	ldrb.w	r0, [r5, #63]	; 0x3f
  4060e8:	f895 703e 	ldrb.w	r7, [r5, #62]	; 0x3e
  4060ec:	ea57 2700 	orrs.w	r7, r7, r0, lsl #8
  4060f0:	f000 809e 	beq.w	406230 <chk_mounted+0x2c0>
  4060f4:	fb02 fe0e 	mul.w	lr, r2, lr
  4060f8:	eb07 1011 	add.w	r0, r7, r1, lsr #4
  4060fc:	4470      	add	r0, lr
  4060fe:	4283      	cmp	r3, r0
  406100:	f0c0 8098 	bcc.w	406234 <chk_mounted+0x2c4>
  406104:	1a1b      	subs	r3, r3, r0
  406106:	fbb3 f3f6 	udiv	r3, r3, r6
  40610a:	2b00      	cmp	r3, #0
  40610c:	f000 8094 	beq.w	406238 <chk_mounted+0x2c8>
  406110:	f640 76f5 	movw	r6, #4085	; 0xff5
  406114:	42b3      	cmp	r3, r6
  406116:	bf8c      	ite	hi
  406118:	2602      	movhi	r6, #2
  40611a:	2601      	movls	r6, #1
  40611c:	f64f 7cf5 	movw	ip, #65525	; 0xfff5
  406120:	4563      	cmp	r3, ip
  406122:	f200 80a3 	bhi.w	40626c <chk_mounted+0x2fc>
  406126:	3302      	adds	r3, #2
  406128:	61ab      	str	r3, [r5, #24]
  40612a:	4420      	add	r0, r4
  40612c:	62a8      	str	r0, [r5, #40]	; 0x28
  40612e:	443c      	add	r4, r7
  406130:	622c      	str	r4, [r5, #32]
  406132:	2900      	cmp	r1, #0
  406134:	f000 8088 	beq.w	406248 <chk_mounted+0x2d8>
  406138:	4474      	add	r4, lr
  40613a:	626c      	str	r4, [r5, #36]	; 0x24
  40613c:	2e02      	cmp	r6, #2
  40613e:	bf0f      	iteee	eq
  406140:	005b      	lsleq	r3, r3, #1
  406142:	eb03 0143 	addne.w	r1, r3, r3, lsl #1
  406146:	f003 0301 	andne.w	r3, r3, #1
  40614a:	eb03 0351 	addne.w	r3, r3, r1, lsr #1
  40614e:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
  406152:	ebb2 2f53 	cmp.w	r2, r3, lsr #9
  406156:	d375      	bcc.n	406244 <chk_mounted+0x2d4>
  406158:	f04f 33ff 	mov.w	r3, #4294967295
  40615c:	612b      	str	r3, [r5, #16]
  40615e:	2300      	movs	r3, #0
  406160:	60eb      	str	r3, [r5, #12]
  406162:	e04a      	b.n	4061fa <chk_mounted+0x28a>
  406164:	f895 222f 	ldrb.w	r2, [r5, #559]	; 0x22f
  406168:	f895 322e 	ldrb.w	r3, [r5, #558]	; 0x22e
  40616c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  406170:	b21b      	sxth	r3, r3
  406172:	4a3a      	ldr	r2, [pc, #232]	; (40625c <chk_mounted+0x2ec>)
  406174:	4293      	cmp	r3, r2
  406176:	d14b      	bne.n	406210 <chk_mounted+0x2a0>
  406178:	f895 2033 	ldrb.w	r2, [r5, #51]	; 0x33
  40617c:	f895 3032 	ldrb.w	r3, [r5, #50]	; 0x32
  406180:	041b      	lsls	r3, r3, #16
  406182:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  406186:	f895 2030 	ldrb.w	r2, [r5, #48]	; 0x30
  40618a:	4313      	orrs	r3, r2
  40618c:	f895 2031 	ldrb.w	r2, [r5, #49]	; 0x31
  406190:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  406194:	4a32      	ldr	r2, [pc, #200]	; (406260 <chk_mounted+0x2f0>)
  406196:	4293      	cmp	r3, r2
  406198:	d13c      	bne.n	406214 <chk_mounted+0x2a4>
  40619a:	f895 2217 	ldrb.w	r2, [r5, #535]	; 0x217
  40619e:	f895 3216 	ldrb.w	r3, [r5, #534]	; 0x216
  4061a2:	041b      	lsls	r3, r3, #16
  4061a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  4061a8:	f895 2214 	ldrb.w	r2, [r5, #532]	; 0x214
  4061ac:	4313      	orrs	r3, r2
  4061ae:	f895 2215 	ldrb.w	r2, [r5, #533]	; 0x215
  4061b2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  4061b6:	4a2b      	ldr	r2, [pc, #172]	; (406264 <chk_mounted+0x2f4>)
  4061b8:	4293      	cmp	r3, r2
  4061ba:	d12d      	bne.n	406218 <chk_mounted+0x2a8>
  4061bc:	f895 221f 	ldrb.w	r2, [r5, #543]	; 0x21f
  4061c0:	f895 321e 	ldrb.w	r3, [r5, #542]	; 0x21e
  4061c4:	041b      	lsls	r3, r3, #16
  4061c6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  4061ca:	f895 221c 	ldrb.w	r2, [r5, #540]	; 0x21c
  4061ce:	4313      	orrs	r3, r2
  4061d0:	f895 221d 	ldrb.w	r2, [r5, #541]	; 0x21d
  4061d4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  4061d8:	60eb      	str	r3, [r5, #12]
  4061da:	f895 221b 	ldrb.w	r2, [r5, #539]	; 0x21b
  4061de:	f895 321a 	ldrb.w	r3, [r5, #538]	; 0x21a
  4061e2:	041b      	lsls	r3, r3, #16
  4061e4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  4061e8:	f895 2218 	ldrb.w	r2, [r5, #536]	; 0x218
  4061ec:	4313      	orrs	r3, r2
  4061ee:	f895 2219 	ldrb.w	r2, [r5, #537]	; 0x219
  4061f2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  4061f6:	612b      	str	r3, [r5, #16]
  4061f8:	2603      	movs	r6, #3
  4061fa:	702e      	strb	r6, [r5, #0]
  4061fc:	4a1a      	ldr	r2, [pc, #104]	; (406268 <chk_mounted+0x2f8>)
  4061fe:	8813      	ldrh	r3, [r2, #0]
  406200:	3301      	adds	r3, #1
  406202:	b29b      	uxth	r3, r3
  406204:	8013      	strh	r3, [r2, #0]
  406206:	80eb      	strh	r3, [r5, #6]
  406208:	2000      	movs	r0, #0
  40620a:	62e8      	str	r0, [r5, #44]	; 0x2c
  40620c:	7128      	strb	r0, [r5, #4]
  40620e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406210:	2603      	movs	r6, #3
  406212:	e7f2      	b.n	4061fa <chk_mounted+0x28a>
  406214:	2603      	movs	r6, #3
  406216:	e7f0      	b.n	4061fa <chk_mounted+0x28a>
  406218:	2603      	movs	r6, #3
  40621a:	e7ee      	b.n	4061fa <chk_mounted+0x28a>
  40621c:	200c      	movs	r0, #12
  40621e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406220:	2000      	movs	r0, #0
  406222:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406224:	2001      	movs	r0, #1
  406226:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406228:	200d      	movs	r0, #13
  40622a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40622c:	200d      	movs	r0, #13
  40622e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406230:	200d      	movs	r0, #13
  406232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406234:	200d      	movs	r0, #13
  406236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406238:	200d      	movs	r0, #13
  40623a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40623c:	200d      	movs	r0, #13
  40623e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406240:	200d      	movs	r0, #13
  406242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406244:	200d      	movs	r0, #13
  406246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406248:	200d      	movs	r0, #13
  40624a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40624c:	2001a2d0 	.word	0x2001a2d0
  406250:	00405c91 	.word	0x00405c91
  406254:	00405c51 	.word	0x00405c51
  406258:	00405ee1 	.word	0x00405ee1
  40625c:	ffffaa55 	.word	0xffffaa55
  406260:	41615252 	.word	0x41615252
  406264:	61417272 	.word	0x61417272
  406268:	2001a2f0 	.word	0x2001a2f0
  40626c:	3302      	adds	r3, #2
  40626e:	61ab      	str	r3, [r5, #24]
  406270:	4420      	add	r0, r4
  406272:	62a8      	str	r0, [r5, #40]	; 0x28
  406274:	4427      	add	r7, r4
  406276:	622f      	str	r7, [r5, #32]
  406278:	2900      	cmp	r1, #0
  40627a:	d1e1      	bne.n	406240 <chk_mounted+0x2d0>
  40627c:	f895 005f 	ldrb.w	r0, [r5, #95]	; 0x5f
  406280:	f895 105e 	ldrb.w	r1, [r5, #94]	; 0x5e
  406284:	0409      	lsls	r1, r1, #16
  406286:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
  40628a:	f895 005c 	ldrb.w	r0, [r5, #92]	; 0x5c
  40628e:	4301      	orrs	r1, r0
  406290:	f895 005d 	ldrb.w	r0, [r5, #93]	; 0x5d
  406294:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
  406298:	6269      	str	r1, [r5, #36]	; 0x24
  40629a:	009b      	lsls	r3, r3, #2
  40629c:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
  4062a0:	ebb2 2f53 	cmp.w	r2, r3, lsr #9
  4062a4:	d3ca      	bcc.n	40623c <chk_mounted+0x2cc>
  4062a6:	f04f 33ff 	mov.w	r3, #4294967295
  4062aa:	612b      	str	r3, [r5, #16]
  4062ac:	2300      	movs	r3, #0
  4062ae:	60eb      	str	r3, [r5, #12]
  4062b0:	716b      	strb	r3, [r5, #5]
  4062b2:	f895 3061 	ldrb.w	r3, [r5, #97]	; 0x61
  4062b6:	f895 2060 	ldrb.w	r2, [r5, #96]	; 0x60
  4062ba:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  4062be:	4422      	add	r2, r4
  4062c0:	616a      	str	r2, [r5, #20]
  4062c2:	2301      	movs	r3, #1
  4062c4:	f105 0130 	add.w	r1, r5, #48	; 0x30
  4062c8:	7868      	ldrb	r0, [r5, #1]
  4062ca:	4c03      	ldr	r4, [pc, #12]	; (4062d8 <chk_mounted+0x368>)
  4062cc:	47a0      	blx	r4
  4062ce:	2800      	cmp	r0, #0
  4062d0:	f43f af48 	beq.w	406164 <chk_mounted+0x1f4>
  4062d4:	2603      	movs	r6, #3
  4062d6:	e790      	b.n	4061fa <chk_mounted+0x28a>
  4062d8:	00405cad 	.word	0x00405cad

004062dc <move_window>:
  4062dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4062e0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
  4062e2:	428f      	cmp	r7, r1
  4062e4:	d035      	beq.n	406352 <move_window+0x76>
  4062e6:	460e      	mov	r6, r1
  4062e8:	4604      	mov	r4, r0
  4062ea:	7903      	ldrb	r3, [r0, #4]
  4062ec:	b91b      	cbnz	r3, 4062f6 <move_window+0x1a>
  4062ee:	bb2e      	cbnz	r6, 40633c <move_window+0x60>
  4062f0:	2000      	movs	r0, #0
  4062f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062f6:	f100 0830 	add.w	r8, r0, #48	; 0x30
  4062fa:	2301      	movs	r3, #1
  4062fc:	463a      	mov	r2, r7
  4062fe:	4641      	mov	r1, r8
  406300:	7840      	ldrb	r0, [r0, #1]
  406302:	4d18      	ldr	r5, [pc, #96]	; (406364 <move_window+0x88>)
  406304:	47a8      	blx	r5
  406306:	bb38      	cbnz	r0, 406358 <move_window+0x7c>
  406308:	2300      	movs	r3, #0
  40630a:	7123      	strb	r3, [r4, #4]
  40630c:	6a23      	ldr	r3, [r4, #32]
  40630e:	69e2      	ldr	r2, [r4, #28]
  406310:	4413      	add	r3, r2
  406312:	429f      	cmp	r7, r3
  406314:	d2eb      	bcs.n	4062ee <move_window+0x12>
  406316:	78e5      	ldrb	r5, [r4, #3]
  406318:	2d01      	cmp	r5, #1
  40631a:	d9e8      	bls.n	4062ee <move_window+0x12>
  40631c:	f04f 0a01 	mov.w	sl, #1
  406320:	f8df 9040 	ldr.w	r9, [pc, #64]	; 406364 <move_window+0x88>
  406324:	69e3      	ldr	r3, [r4, #28]
  406326:	441f      	add	r7, r3
  406328:	4653      	mov	r3, sl
  40632a:	463a      	mov	r2, r7
  40632c:	4641      	mov	r1, r8
  40632e:	7860      	ldrb	r0, [r4, #1]
  406330:	47c8      	blx	r9
  406332:	3d01      	subs	r5, #1
  406334:	b2ed      	uxtb	r5, r5
  406336:	2d01      	cmp	r5, #1
  406338:	d1f4      	bne.n	406324 <move_window+0x48>
  40633a:	e7d8      	b.n	4062ee <move_window+0x12>
  40633c:	2301      	movs	r3, #1
  40633e:	4632      	mov	r2, r6
  406340:	f104 0130 	add.w	r1, r4, #48	; 0x30
  406344:	7860      	ldrb	r0, [r4, #1]
  406346:	4d08      	ldr	r5, [pc, #32]	; (406368 <move_window+0x8c>)
  406348:	47a8      	blx	r5
  40634a:	b940      	cbnz	r0, 40635e <move_window+0x82>
  40634c:	62e6      	str	r6, [r4, #44]	; 0x2c
  40634e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406352:	2000      	movs	r0, #0
  406354:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406358:	2001      	movs	r0, #1
  40635a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40635e:	2001      	movs	r0, #1
  406360:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406364:	00405d1d 	.word	0x00405d1d
  406368:	00405cad 	.word	0x00405cad

0040636c <get_fat>:
  40636c:	2901      	cmp	r1, #1
  40636e:	d96a      	bls.n	406446 <get_fat+0xda>
  406370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406372:	6983      	ldr	r3, [r0, #24]
  406374:	4299      	cmp	r1, r3
  406376:	d268      	bcs.n	40644a <get_fat+0xde>
  406378:	460c      	mov	r4, r1
  40637a:	4606      	mov	r6, r0
  40637c:	7803      	ldrb	r3, [r0, #0]
  40637e:	2b02      	cmp	r3, #2
  406380:	d02f      	beq.n	4063e2 <get_fat+0x76>
  406382:	2b03      	cmp	r3, #3
  406384:	d041      	beq.n	40640a <get_fat+0x9e>
  406386:	2b01      	cmp	r3, #1
  406388:	d002      	beq.n	406390 <get_fat+0x24>
  40638a:	f04f 30ff 	mov.w	r0, #4294967295
  40638e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406390:	eb01 0751 	add.w	r7, r1, r1, lsr #1
  406394:	6a01      	ldr	r1, [r0, #32]
  406396:	eb01 2157 	add.w	r1, r1, r7, lsr #9
  40639a:	4b2d      	ldr	r3, [pc, #180]	; (406450 <get_fat+0xe4>)
  40639c:	4798      	blx	r3
  40639e:	b110      	cbz	r0, 4063a6 <get_fat+0x3a>
  4063a0:	f04f 30ff 	mov.w	r0, #4294967295
  4063a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063a6:	f3c7 0308 	ubfx	r3, r7, #0, #9
  4063aa:	4433      	add	r3, r6
  4063ac:	f893 5030 	ldrb.w	r5, [r3, #48]	; 0x30
  4063b0:	3701      	adds	r7, #1
  4063b2:	6a31      	ldr	r1, [r6, #32]
  4063b4:	eb01 2157 	add.w	r1, r1, r7, lsr #9
  4063b8:	4630      	mov	r0, r6
  4063ba:	4b25      	ldr	r3, [pc, #148]	; (406450 <get_fat+0xe4>)
  4063bc:	4798      	blx	r3
  4063be:	b110      	cbz	r0, 4063c6 <get_fat+0x5a>
  4063c0:	f04f 30ff 	mov.w	r0, #4294967295
  4063c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063c6:	f3c7 0708 	ubfx	r7, r7, #0, #9
  4063ca:	19f0      	adds	r0, r6, r7
  4063cc:	f890 0030 	ldrb.w	r0, [r0, #48]	; 0x30
  4063d0:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
  4063d4:	f014 0f01 	tst.w	r4, #1
  4063d8:	bf14      	ite	ne
  4063da:	0900      	lsrne	r0, r0, #4
  4063dc:	f3c0 000b 	ubfxeq	r0, r0, #0, #12
  4063e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063e2:	6a01      	ldr	r1, [r0, #32]
  4063e4:	eb01 2114 	add.w	r1, r1, r4, lsr #8
  4063e8:	4b19      	ldr	r3, [pc, #100]	; (406450 <get_fat+0xe4>)
  4063ea:	4798      	blx	r3
  4063ec:	b110      	cbz	r0, 4063f4 <get_fat+0x88>
  4063ee:	f04f 30ff 	mov.w	r0, #4294967295
  4063f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063f4:	0060      	lsls	r0, r4, #1
  4063f6:	f400 70ff 	and.w	r0, r0, #510	; 0x1fe
  4063fa:	4430      	add	r0, r6
  4063fc:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
  406400:	f890 0030 	ldrb.w	r0, [r0, #48]	; 0x30
  406404:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  406408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40640a:	6a01      	ldr	r1, [r0, #32]
  40640c:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
  406410:	4b0f      	ldr	r3, [pc, #60]	; (406450 <get_fat+0xe4>)
  406412:	4798      	blx	r3
  406414:	b110      	cbz	r0, 40641c <get_fat+0xb0>
  406416:	f04f 30ff 	mov.w	r0, #4294967295
  40641a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40641c:	00a0      	lsls	r0, r4, #2
  40641e:	f400 70fe 	and.w	r0, r0, #508	; 0x1fc
  406422:	f100 0230 	add.w	r2, r0, #48	; 0x30
  406426:	4432      	add	r2, r6
  406428:	78d1      	ldrb	r1, [r2, #3]
  40642a:	7893      	ldrb	r3, [r2, #2]
  40642c:	041b      	lsls	r3, r3, #16
  40642e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  406432:	4430      	add	r0, r6
  406434:	f890 0030 	ldrb.w	r0, [r0, #48]	; 0x30
  406438:	4318      	orrs	r0, r3
  40643a:	7853      	ldrb	r3, [r2, #1]
  40643c:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  406440:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
  406444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406446:	2001      	movs	r0, #1
  406448:	4770      	bx	lr
  40644a:	2001      	movs	r0, #1
  40644c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40644e:	bf00      	nop
  406450:	004062dd 	.word	0x004062dd

00406454 <dir_sdi>:
  406454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406456:	4605      	mov	r5, r0
  406458:	460c      	mov	r4, r1
  40645a:	80c1      	strh	r1, [r0, #6]
  40645c:	6881      	ldr	r1, [r0, #8]
  40645e:	2901      	cmp	r1, #1
  406460:	d03d      	beq.n	4064de <dir_sdi+0x8a>
  406462:	6803      	ldr	r3, [r0, #0]
  406464:	699a      	ldr	r2, [r3, #24]
  406466:	4291      	cmp	r1, r2
  406468:	d301      	bcc.n	40646e <dir_sdi+0x1a>
  40646a:	2002      	movs	r0, #2
  40646c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40646e:	b961      	cbnz	r1, 40648a <dir_sdi+0x36>
  406470:	781a      	ldrb	r2, [r3, #0]
  406472:	2a03      	cmp	r2, #3
  406474:	d006      	beq.n	406484 <dir_sdi+0x30>
  406476:	2200      	movs	r2, #0
  406478:	60ea      	str	r2, [r5, #12]
  40647a:	891a      	ldrh	r2, [r3, #8]
  40647c:	42a2      	cmp	r2, r4
  40647e:	d821      	bhi.n	4064c4 <dir_sdi+0x70>
  406480:	2002      	movs	r0, #2
  406482:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406484:	6a59      	ldr	r1, [r3, #36]	; 0x24
  406486:	2900      	cmp	r1, #0
  406488:	d0f5      	beq.n	406476 <dir_sdi+0x22>
  40648a:	789e      	ldrb	r6, [r3, #2]
  40648c:	0136      	lsls	r6, r6, #4
  40648e:	42b4      	cmp	r4, r6
  406490:	d310      	bcc.n	4064b4 <dir_sdi+0x60>
  406492:	4f17      	ldr	r7, [pc, #92]	; (4064f0 <dir_sdi+0x9c>)
  406494:	6828      	ldr	r0, [r5, #0]
  406496:	47b8      	blx	r7
  406498:	4601      	mov	r1, r0
  40649a:	f1b0 3fff 	cmp.w	r0, #4294967295
  40649e:	d020      	beq.n	4064e2 <dir_sdi+0x8e>
  4064a0:	2801      	cmp	r0, #1
  4064a2:	d920      	bls.n	4064e6 <dir_sdi+0x92>
  4064a4:	682b      	ldr	r3, [r5, #0]
  4064a6:	699b      	ldr	r3, [r3, #24]
  4064a8:	4298      	cmp	r0, r3
  4064aa:	d21e      	bcs.n	4064ea <dir_sdi+0x96>
  4064ac:	1ba4      	subs	r4, r4, r6
  4064ae:	b2a4      	uxth	r4, r4
  4064b0:	42a6      	cmp	r6, r4
  4064b2:	d9ef      	bls.n	406494 <dir_sdi+0x40>
  4064b4:	60e9      	str	r1, [r5, #12]
  4064b6:	6828      	ldr	r0, [r5, #0]
  4064b8:	4b0e      	ldr	r3, [pc, #56]	; (4064f4 <dir_sdi+0xa0>)
  4064ba:	4798      	blx	r3
  4064bc:	eb00 1014 	add.w	r0, r0, r4, lsr #4
  4064c0:	6128      	str	r0, [r5, #16]
  4064c2:	e003      	b.n	4064cc <dir_sdi+0x78>
  4064c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  4064c6:	eb03 1314 	add.w	r3, r3, r4, lsr #4
  4064ca:	612b      	str	r3, [r5, #16]
  4064cc:	682b      	ldr	r3, [r5, #0]
  4064ce:	3330      	adds	r3, #48	; 0x30
  4064d0:	f004 040f 	and.w	r4, r4, #15
  4064d4:	eb03 1444 	add.w	r4, r3, r4, lsl #5
  4064d8:	616c      	str	r4, [r5, #20]
  4064da:	2000      	movs	r0, #0
  4064dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064de:	2002      	movs	r0, #2
  4064e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064e2:	2001      	movs	r0, #1
  4064e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064e6:	2002      	movs	r0, #2
  4064e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064ea:	2002      	movs	r0, #2
  4064ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064ee:	bf00      	nop
  4064f0:	0040636d 	.word	0x0040636d
  4064f4:	00405e77 	.word	0x00405e77

004064f8 <put_fat>:
  4064f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4064fc:	2901      	cmp	r1, #1
  4064fe:	f240 808f 	bls.w	406620 <put_fat+0x128>
  406502:	6983      	ldr	r3, [r0, #24]
  406504:	4299      	cmp	r1, r3
  406506:	d301      	bcc.n	40650c <put_fat+0x14>
  406508:	2702      	movs	r7, #2
  40650a:	e08a      	b.n	406622 <put_fat+0x12a>
  40650c:	4615      	mov	r5, r2
  40650e:	460c      	mov	r4, r1
  406510:	4606      	mov	r6, r0
  406512:	7803      	ldrb	r3, [r0, #0]
  406514:	2b02      	cmp	r3, #2
  406516:	d04e      	beq.n	4065b6 <put_fat+0xbe>
  406518:	2b03      	cmp	r3, #3
  40651a:	d05f      	beq.n	4065dc <put_fat+0xe4>
  40651c:	2b01      	cmp	r3, #1
  40651e:	d003      	beq.n	406528 <put_fat+0x30>
  406520:	2702      	movs	r7, #2
  406522:	2301      	movs	r3, #1
  406524:	7133      	strb	r3, [r6, #4]
  406526:	e07c      	b.n	406622 <put_fat+0x12a>
  406528:	eb01 0851 	add.w	r8, r1, r1, lsr #1
  40652c:	6a01      	ldr	r1, [r0, #32]
  40652e:	eb01 2158 	add.w	r1, r1, r8, lsr #9
  406532:	4b3d      	ldr	r3, [pc, #244]	; (406628 <put_fat+0x130>)
  406534:	4798      	blx	r3
  406536:	4607      	mov	r7, r0
  406538:	2800      	cmp	r0, #0
  40653a:	d1f2      	bne.n	406522 <put_fat+0x2a>
  40653c:	f3c8 0308 	ubfx	r3, r8, #0, #9
  406540:	f014 0f01 	tst.w	r4, #1
  406544:	d01c      	beq.n	406580 <put_fat+0x88>
  406546:	4433      	add	r3, r6
  406548:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
  40654c:	f002 020f 	and.w	r2, r2, #15
  406550:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  406554:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  406558:	f108 0801 	add.w	r8, r8, #1
  40655c:	2301      	movs	r3, #1
  40655e:	7133      	strb	r3, [r6, #4]
  406560:	6a31      	ldr	r1, [r6, #32]
  406562:	eb01 2158 	add.w	r1, r1, r8, lsr #9
  406566:	4630      	mov	r0, r6
  406568:	4b2f      	ldr	r3, [pc, #188]	; (406628 <put_fat+0x130>)
  40656a:	4798      	blx	r3
  40656c:	2800      	cmp	r0, #0
  40656e:	d153      	bne.n	406618 <put_fat+0x120>
  406570:	f3c8 0808 	ubfx	r8, r8, #0, #9
  406574:	f3c5 1207 	ubfx	r2, r5, #4, #8
  406578:	44b0      	add	r8, r6
  40657a:	f888 2030 	strb.w	r2, [r8, #48]	; 0x30
  40657e:	e7d0      	b.n	406522 <put_fat+0x2a>
  406580:	4433      	add	r3, r6
  406582:	f883 5030 	strb.w	r5, [r3, #48]	; 0x30
  406586:	f108 0801 	add.w	r8, r8, #1
  40658a:	2301      	movs	r3, #1
  40658c:	7133      	strb	r3, [r6, #4]
  40658e:	6a31      	ldr	r1, [r6, #32]
  406590:	eb01 2158 	add.w	r1, r1, r8, lsr #9
  406594:	4630      	mov	r0, r6
  406596:	4b24      	ldr	r3, [pc, #144]	; (406628 <put_fat+0x130>)
  406598:	4798      	blx	r3
  40659a:	2800      	cmp	r0, #0
  40659c:	d13e      	bne.n	40661c <put_fat+0x124>
  40659e:	f3c8 0808 	ubfx	r8, r8, #0, #9
  4065a2:	eb06 0308 	add.w	r3, r6, r8
  4065a6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
  4065aa:	f023 030f 	bic.w	r3, r3, #15
  4065ae:	f3c5 2203 	ubfx	r2, r5, #8, #4
  4065b2:	431a      	orrs	r2, r3
  4065b4:	e7e0      	b.n	406578 <put_fat+0x80>
  4065b6:	6a01      	ldr	r1, [r0, #32]
  4065b8:	eb01 2114 	add.w	r1, r1, r4, lsr #8
  4065bc:	4b1a      	ldr	r3, [pc, #104]	; (406628 <put_fat+0x130>)
  4065be:	4798      	blx	r3
  4065c0:	4607      	mov	r7, r0
  4065c2:	2800      	cmp	r0, #0
  4065c4:	d1ad      	bne.n	406522 <put_fat+0x2a>
  4065c6:	0063      	lsls	r3, r4, #1
  4065c8:	f403 73ff 	and.w	r3, r3, #510	; 0x1fe
  4065cc:	4433      	add	r3, r6
  4065ce:	f883 5030 	strb.w	r5, [r3, #48]	; 0x30
  4065d2:	f3c5 2207 	ubfx	r2, r5, #8, #8
  4065d6:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
  4065da:	e7a2      	b.n	406522 <put_fat+0x2a>
  4065dc:	6a01      	ldr	r1, [r0, #32]
  4065de:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
  4065e2:	4b11      	ldr	r3, [pc, #68]	; (406628 <put_fat+0x130>)
  4065e4:	4798      	blx	r3
  4065e6:	4607      	mov	r7, r0
  4065e8:	2800      	cmp	r0, #0
  4065ea:	d19a      	bne.n	406522 <put_fat+0x2a>
  4065ec:	00a1      	lsls	r1, r4, #2
  4065ee:	f401 71fe 	and.w	r1, r1, #508	; 0x1fc
  4065f2:	f101 0330 	add.w	r3, r1, #48	; 0x30
  4065f6:	4433      	add	r3, r6
  4065f8:	78da      	ldrb	r2, [r3, #3]
  4065fa:	0612      	lsls	r2, r2, #24
  4065fc:	4431      	add	r1, r6
  4065fe:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
  406602:	432a      	orrs	r2, r5
  406604:	f881 2030 	strb.w	r2, [r1, #48]	; 0x30
  406608:	f3c2 2107 	ubfx	r1, r2, #8, #8
  40660c:	7059      	strb	r1, [r3, #1]
  40660e:	0c11      	lsrs	r1, r2, #16
  406610:	7099      	strb	r1, [r3, #2]
  406612:	0e12      	lsrs	r2, r2, #24
  406614:	70da      	strb	r2, [r3, #3]
  406616:	e784      	b.n	406522 <put_fat+0x2a>
  406618:	4607      	mov	r7, r0
  40661a:	e782      	b.n	406522 <put_fat+0x2a>
  40661c:	4607      	mov	r7, r0
  40661e:	e780      	b.n	406522 <put_fat+0x2a>
  406620:	2702      	movs	r7, #2
  406622:	4638      	mov	r0, r7
  406624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406628:	004062dd 	.word	0x004062dd

0040662c <create_chain>:
  40662c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406630:	4605      	mov	r5, r0
  406632:	4688      	mov	r8, r1
  406634:	b941      	cbnz	r1, 406648 <create_chain+0x1c>
  406636:	68c6      	ldr	r6, [r0, #12]
  406638:	b186      	cbz	r6, 40665c <create_chain+0x30>
  40663a:	6983      	ldr	r3, [r0, #24]
  40663c:	429e      	cmp	r6, r3
  40663e:	bf28      	it	cs
  406640:	2601      	movcs	r6, #1
  406642:	4634      	mov	r4, r6
  406644:	4f27      	ldr	r7, [pc, #156]	; (4066e4 <create_chain+0xb8>)
  406646:	e017      	b.n	406678 <create_chain+0x4c>
  406648:	4b26      	ldr	r3, [pc, #152]	; (4066e4 <create_chain+0xb8>)
  40664a:	4798      	blx	r3
  40664c:	4603      	mov	r3, r0
  40664e:	2801      	cmp	r0, #1
  406650:	d93e      	bls.n	4066d0 <create_chain+0xa4>
  406652:	69aa      	ldr	r2, [r5, #24]
  406654:	4290      	cmp	r0, r2
  406656:	d340      	bcc.n	4066da <create_chain+0xae>
  406658:	4646      	mov	r6, r8
  40665a:	e7f2      	b.n	406642 <create_chain+0x16>
  40665c:	2601      	movs	r6, #1
  40665e:	e7f0      	b.n	406642 <create_chain+0x16>
  406660:	4621      	mov	r1, r4
  406662:	4628      	mov	r0, r5
  406664:	47b8      	blx	r7
  406666:	4603      	mov	r3, r0
  406668:	b170      	cbz	r0, 406688 <create_chain+0x5c>
  40666a:	f1b0 3fff 	cmp.w	r0, #4294967295
  40666e:	d034      	beq.n	4066da <create_chain+0xae>
  406670:	2801      	cmp	r0, #1
  406672:	d032      	beq.n	4066da <create_chain+0xae>
  406674:	42b4      	cmp	r4, r6
  406676:	d02f      	beq.n	4066d8 <create_chain+0xac>
  406678:	3401      	adds	r4, #1
  40667a:	69ab      	ldr	r3, [r5, #24]
  40667c:	429c      	cmp	r4, r3
  40667e:	d3ef      	bcc.n	406660 <create_chain+0x34>
  406680:	2e01      	cmp	r6, #1
  406682:	d927      	bls.n	4066d4 <create_chain+0xa8>
  406684:	2402      	movs	r4, #2
  406686:	e7eb      	b.n	406660 <create_chain+0x34>
  406688:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
  40668c:	4621      	mov	r1, r4
  40668e:	4628      	mov	r0, r5
  406690:	4b15      	ldr	r3, [pc, #84]	; (4066e8 <create_chain+0xbc>)
  406692:	4798      	blx	r3
  406694:	4603      	mov	r3, r0
  406696:	b9a8      	cbnz	r0, 4066c4 <create_chain+0x98>
  406698:	f1b8 0f00 	cmp.w	r8, #0
  40669c:	d10a      	bne.n	4066b4 <create_chain+0x88>
  40669e:	60ec      	str	r4, [r5, #12]
  4066a0:	692b      	ldr	r3, [r5, #16]
  4066a2:	f1b3 3fff 	cmp.w	r3, #4294967295
  4066a6:	d01b      	beq.n	4066e0 <create_chain+0xb4>
  4066a8:	3b01      	subs	r3, #1
  4066aa:	612b      	str	r3, [r5, #16]
  4066ac:	2301      	movs	r3, #1
  4066ae:	716b      	strb	r3, [r5, #5]
  4066b0:	4623      	mov	r3, r4
  4066b2:	e012      	b.n	4066da <create_chain+0xae>
  4066b4:	4622      	mov	r2, r4
  4066b6:	4641      	mov	r1, r8
  4066b8:	4628      	mov	r0, r5
  4066ba:	4b0b      	ldr	r3, [pc, #44]	; (4066e8 <create_chain+0xbc>)
  4066bc:	4798      	blx	r3
  4066be:	4603      	mov	r3, r0
  4066c0:	2800      	cmp	r0, #0
  4066c2:	d0ec      	beq.n	40669e <create_chain+0x72>
  4066c4:	2b01      	cmp	r3, #1
  4066c6:	bf0c      	ite	eq
  4066c8:	f04f 33ff 	moveq.w	r3, #4294967295
  4066cc:	2301      	movne	r3, #1
  4066ce:	e004      	b.n	4066da <create_chain+0xae>
  4066d0:	2301      	movs	r3, #1
  4066d2:	e002      	b.n	4066da <create_chain+0xae>
  4066d4:	2300      	movs	r3, #0
  4066d6:	e000      	b.n	4066da <create_chain+0xae>
  4066d8:	2300      	movs	r3, #0
  4066da:	4618      	mov	r0, r3
  4066dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4066e0:	4623      	mov	r3, r4
  4066e2:	e7fa      	b.n	4066da <create_chain+0xae>
  4066e4:	0040636d 	.word	0x0040636d
  4066e8:	004064f9 	.word	0x004064f9

004066ec <remove_chain>:
  4066ec:	2901      	cmp	r1, #1
  4066ee:	d92e      	bls.n	40674e <remove_chain+0x62>
  4066f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4066f4:	4604      	mov	r4, r0
  4066f6:	460e      	mov	r6, r1
  4066f8:	6983      	ldr	r3, [r0, #24]
  4066fa:	4299      	cmp	r1, r3
  4066fc:	d303      	bcc.n	406706 <remove_chain+0x1a>
  4066fe:	2202      	movs	r2, #2
  406700:	4610      	mov	r0, r2
  406702:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406706:	4f16      	ldr	r7, [pc, #88]	; (406760 <remove_chain+0x74>)
  406708:	f04f 0900 	mov.w	r9, #0
  40670c:	f8df 8054 	ldr.w	r8, [pc, #84]	; 406764 <remove_chain+0x78>
  406710:	e003      	b.n	40671a <remove_chain+0x2e>
  406712:	462e      	mov	r6, r5
  406714:	69a3      	ldr	r3, [r4, #24]
  406716:	42ab      	cmp	r3, r5
  406718:	d9f2      	bls.n	406700 <remove_chain+0x14>
  40671a:	4631      	mov	r1, r6
  40671c:	4620      	mov	r0, r4
  40671e:	47b8      	blx	r7
  406720:	4605      	mov	r5, r0
  406722:	b1b8      	cbz	r0, 406754 <remove_chain+0x68>
  406724:	2801      	cmp	r0, #1
  406726:	d017      	beq.n	406758 <remove_chain+0x6c>
  406728:	f1b0 3fff 	cmp.w	r0, #4294967295
  40672c:	d016      	beq.n	40675c <remove_chain+0x70>
  40672e:	464a      	mov	r2, r9
  406730:	4631      	mov	r1, r6
  406732:	4620      	mov	r0, r4
  406734:	47c0      	blx	r8
  406736:	4602      	mov	r2, r0
  406738:	2800      	cmp	r0, #0
  40673a:	d1e1      	bne.n	406700 <remove_chain+0x14>
  40673c:	6923      	ldr	r3, [r4, #16]
  40673e:	f1b3 3fff 	cmp.w	r3, #4294967295
  406742:	d0e6      	beq.n	406712 <remove_chain+0x26>
  406744:	3301      	adds	r3, #1
  406746:	6123      	str	r3, [r4, #16]
  406748:	2301      	movs	r3, #1
  40674a:	7163      	strb	r3, [r4, #5]
  40674c:	e7e1      	b.n	406712 <remove_chain+0x26>
  40674e:	2202      	movs	r2, #2
  406750:	4610      	mov	r0, r2
  406752:	4770      	bx	lr
  406754:	2200      	movs	r2, #0
  406756:	e7d3      	b.n	406700 <remove_chain+0x14>
  406758:	2202      	movs	r2, #2
  40675a:	e7d1      	b.n	406700 <remove_chain+0x14>
  40675c:	2201      	movs	r2, #1
  40675e:	e7cf      	b.n	406700 <remove_chain+0x14>
  406760:	0040636d 	.word	0x0040636d
  406764:	004064f9 	.word	0x004064f9

00406768 <dir_next>:
  406768:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40676c:	88c4      	ldrh	r4, [r0, #6]
  40676e:	3401      	adds	r4, #1
  406770:	b2a4      	uxth	r4, r4
  406772:	b914      	cbnz	r4, 40677a <dir_next+0x12>
  406774:	2004      	movs	r0, #4
  406776:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40677a:	6903      	ldr	r3, [r0, #16]
  40677c:	b913      	cbnz	r3, 406784 <dir_next+0x1c>
  40677e:	2004      	movs	r0, #4
  406780:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406784:	460e      	mov	r6, r1
  406786:	4605      	mov	r5, r0
  406788:	f014 070f 	ands.w	r7, r4, #15
  40678c:	d110      	bne.n	4067b0 <dir_next+0x48>
  40678e:	3301      	adds	r3, #1
  406790:	6103      	str	r3, [r0, #16]
  406792:	68c1      	ldr	r1, [r0, #12]
  406794:	b931      	cbnz	r1, 4067a4 <dir_next+0x3c>
  406796:	6803      	ldr	r3, [r0, #0]
  406798:	891b      	ldrh	r3, [r3, #8]
  40679a:	42a3      	cmp	r3, r4
  40679c:	d808      	bhi.n	4067b0 <dir_next+0x48>
  40679e:	2004      	movs	r0, #4
  4067a0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067a4:	6800      	ldr	r0, [r0, #0]
  4067a6:	7883      	ldrb	r3, [r0, #2]
  4067a8:	3b01      	subs	r3, #1
  4067aa:	ea13 1314 	ands.w	r3, r3, r4, lsr #4
  4067ae:	d008      	beq.n	4067c2 <dir_next+0x5a>
  4067b0:	80ec      	strh	r4, [r5, #6]
  4067b2:	682b      	ldr	r3, [r5, #0]
  4067b4:	3330      	adds	r3, #48	; 0x30
  4067b6:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  4067ba:	616b      	str	r3, [r5, #20]
  4067bc:	2000      	movs	r0, #0
  4067be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067c2:	4b32      	ldr	r3, [pc, #200]	; (40688c <dir_next+0x124>)
  4067c4:	4798      	blx	r3
  4067c6:	4680      	mov	r8, r0
  4067c8:	2801      	cmp	r0, #1
  4067ca:	d94d      	bls.n	406868 <dir_next+0x100>
  4067cc:	f1b0 3fff 	cmp.w	r0, #4294967295
  4067d0:	d04d      	beq.n	40686e <dir_next+0x106>
  4067d2:	6828      	ldr	r0, [r5, #0]
  4067d4:	6983      	ldr	r3, [r0, #24]
  4067d6:	4598      	cmp	r8, r3
  4067d8:	d33e      	bcc.n	406858 <dir_next+0xf0>
  4067da:	b916      	cbnz	r6, 4067e2 <dir_next+0x7a>
  4067dc:	2004      	movs	r0, #4
  4067de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067e2:	68e9      	ldr	r1, [r5, #12]
  4067e4:	4b2a      	ldr	r3, [pc, #168]	; (406890 <dir_next+0x128>)
  4067e6:	4798      	blx	r3
  4067e8:	4680      	mov	r8, r0
  4067ea:	b910      	cbnz	r0, 4067f2 <dir_next+0x8a>
  4067ec:	2007      	movs	r0, #7
  4067ee:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067f2:	2801      	cmp	r0, #1
  4067f4:	d03e      	beq.n	406874 <dir_next+0x10c>
  4067f6:	f1b0 3fff 	cmp.w	r0, #4294967295
  4067fa:	d03e      	beq.n	40687a <dir_next+0x112>
  4067fc:	2100      	movs	r1, #0
  4067fe:	6828      	ldr	r0, [r5, #0]
  406800:	4b24      	ldr	r3, [pc, #144]	; (406894 <dir_next+0x12c>)
  406802:	4798      	blx	r3
  406804:	2800      	cmp	r0, #0
  406806:	d13b      	bne.n	406880 <dir_next+0x118>
  406808:	6828      	ldr	r0, [r5, #0]
  40680a:	f44f 7200 	mov.w	r2, #512	; 0x200
  40680e:	2100      	movs	r1, #0
  406810:	3030      	adds	r0, #48	; 0x30
  406812:	4b21      	ldr	r3, [pc, #132]	; (406898 <dir_next+0x130>)
  406814:	4798      	blx	r3
  406816:	682e      	ldr	r6, [r5, #0]
  406818:	4641      	mov	r1, r8
  40681a:	4630      	mov	r0, r6
  40681c:	4b1f      	ldr	r3, [pc, #124]	; (40689c <dir_next+0x134>)
  40681e:	4798      	blx	r3
  406820:	62f0      	str	r0, [r6, #44]	; 0x2c
  406822:	2600      	movs	r6, #0
  406824:	f04f 0b01 	mov.w	fp, #1
  406828:	46b2      	mov	sl, r6
  40682a:	f8df 9068 	ldr.w	r9, [pc, #104]	; 406894 <dir_next+0x12c>
  40682e:	682b      	ldr	r3, [r5, #0]
  406830:	7899      	ldrb	r1, [r3, #2]
  406832:	b2f2      	uxtb	r2, r6
  406834:	4291      	cmp	r1, r2
  406836:	d90b      	bls.n	406850 <dir_next+0xe8>
  406838:	f883 b004 	strb.w	fp, [r3, #4]
  40683c:	4651      	mov	r1, sl
  40683e:	6828      	ldr	r0, [r5, #0]
  406840:	47c8      	blx	r9
  406842:	3601      	adds	r6, #1
  406844:	b9f8      	cbnz	r0, 406886 <dir_next+0x11e>
  406846:	682a      	ldr	r2, [r5, #0]
  406848:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  40684a:	3301      	adds	r3, #1
  40684c:	62d3      	str	r3, [r2, #44]	; 0x2c
  40684e:	e7ee      	b.n	40682e <dir_next+0xc6>
  406850:	4616      	mov	r6, r2
  406852:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  406854:	1b96      	subs	r6, r2, r6
  406856:	62de      	str	r6, [r3, #44]	; 0x2c
  406858:	f8c5 800c 	str.w	r8, [r5, #12]
  40685c:	4641      	mov	r1, r8
  40685e:	6828      	ldr	r0, [r5, #0]
  406860:	4b0e      	ldr	r3, [pc, #56]	; (40689c <dir_next+0x134>)
  406862:	4798      	blx	r3
  406864:	6128      	str	r0, [r5, #16]
  406866:	e7a3      	b.n	4067b0 <dir_next+0x48>
  406868:	2002      	movs	r0, #2
  40686a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40686e:	2001      	movs	r0, #1
  406870:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406874:	2002      	movs	r0, #2
  406876:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40687a:	2001      	movs	r0, #1
  40687c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406880:	2001      	movs	r0, #1
  406882:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406886:	2001      	movs	r0, #1
  406888:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40688c:	0040636d 	.word	0x0040636d
  406890:	0040662d 	.word	0x0040662d
  406894:	004062dd 	.word	0x004062dd
  406898:	00405e69 	.word	0x00405e69
  40689c:	00405e77 	.word	0x00405e77

004068a0 <dir_find>:
  4068a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4068a4:	b085      	sub	sp, #20
  4068a6:	4605      	mov	r5, r0
  4068a8:	2100      	movs	r1, #0
  4068aa:	4b62      	ldr	r3, [pc, #392]	; (406a34 <dir_find+0x194>)
  4068ac:	4798      	blx	r3
  4068ae:	4680      	mov	r8, r0
  4068b0:	bb08      	cbnz	r0, 4068f6 <dir_find+0x56>
  4068b2:	f04f 0bff 	mov.w	fp, #255	; 0xff
  4068b6:	46d9      	mov	r9, fp
  4068b8:	4f5f      	ldr	r7, [pc, #380]	; (406a38 <dir_find+0x198>)
  4068ba:	46da      	mov	sl, fp
  4068bc:	e095      	b.n	4069ea <dir_find+0x14a>
  4068be:	2a0f      	cmp	r2, #15
  4068c0:	d01d      	beq.n	4068fe <dir_find+0x5e>
  4068c2:	f1b9 0f00 	cmp.w	r9, #0
  4068c6:	d104      	bne.n	4068d2 <dir_find+0x32>
  4068c8:	4620      	mov	r0, r4
  4068ca:	4b5c      	ldr	r3, [pc, #368]	; (406a3c <dir_find+0x19c>)
  4068cc:	4798      	blx	r3
  4068ce:	4582      	cmp	sl, r0
  4068d0:	d011      	beq.n	4068f6 <dir_find+0x56>
  4068d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
  4068d6:	842b      	strh	r3, [r5, #32]
  4068d8:	69ab      	ldr	r3, [r5, #24]
  4068da:	7ada      	ldrb	r2, [r3, #11]
  4068dc:	f012 0f01 	tst.w	r2, #1
  4068e0:	d17a      	bne.n	4069d8 <dir_find+0x138>
  4068e2:	f104 000b 	add.w	r0, r4, #11
  4068e6:	f814 1b01 	ldrb.w	r1, [r4], #1
  4068ea:	f813 2b01 	ldrb.w	r2, [r3], #1
  4068ee:	4291      	cmp	r1, r2
  4068f0:	d16c      	bne.n	4069cc <dir_find+0x12c>
  4068f2:	42a0      	cmp	r0, r4
  4068f4:	d1f7      	bne.n	4068e6 <dir_find+0x46>
  4068f6:	4640      	mov	r0, r8
  4068f8:	b005      	add	sp, #20
  4068fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4068fe:	f8d5 801c 	ldr.w	r8, [r5, #28]
  406902:	f1b8 0f00 	cmp.w	r8, #0
  406906:	d069      	beq.n	4069dc <dir_find+0x13c>
  406908:	f016 0f40 	tst.w	r6, #64	; 0x40
  40690c:	d00c      	beq.n	406928 <dir_find+0x88>
  40690e:	f894 a00d 	ldrb.w	sl, [r4, #13]
  406912:	f006 06bf 	and.w	r6, r6, #191	; 0xbf
  406916:	88eb      	ldrh	r3, [r5, #6]
  406918:	842b      	strh	r3, [r5, #32]
  40691a:	f894 b00d 	ldrb.w	fp, [r4, #13]
  40691e:	45d3      	cmp	fp, sl
  406920:	d008      	beq.n	406934 <dir_find+0x94>
  406922:	f04f 09ff 	mov.w	r9, #255	; 0xff
  406926:	e059      	b.n	4069dc <dir_find+0x13c>
  406928:	45b1      	cmp	r9, r6
  40692a:	bf18      	it	ne
  40692c:	f04f 09ff 	movne.w	r9, #255	; 0xff
  406930:	d154      	bne.n	4069dc <dir_find+0x13c>
  406932:	e7f2      	b.n	40691a <dir_find+0x7a>
  406934:	f894 a000 	ldrb.w	sl, [r4]
  406938:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
  40693c:	f10a 3aff 	add.w	sl, sl, #4294967295
  406940:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
  406944:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  406948:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 406a48 <dir_find+0x1a8>
  40694c:	f109 0a0d 	add.w	sl, r9, #13
  406950:	2001      	movs	r0, #1
  406952:	9603      	str	r6, [sp, #12]
  406954:	f8cd b004 	str.w	fp, [sp, #4]
  406958:	461e      	mov	r6, r3
  40695a:	9502      	str	r5, [sp, #8]
  40695c:	e00f      	b.n	40697e <dir_find+0xde>
  40695e:	4618      	mov	r0, r3
  406960:	4b37      	ldr	r3, [pc, #220]	; (406a40 <dir_find+0x1a0>)
  406962:	4798      	blx	r3
  406964:	4683      	mov	fp, r0
  406966:	2efe      	cmp	r6, #254	; 0xfe
  406968:	d85b      	bhi.n	406a22 <dir_find+0x182>
  40696a:	1c75      	adds	r5, r6, #1
  40696c:	f838 0016 	ldrh.w	r0, [r8, r6, lsl #1]
  406970:	4b33      	ldr	r3, [pc, #204]	; (406a40 <dir_find+0x1a0>)
  406972:	4798      	blx	r3
  406974:	4583      	cmp	fp, r0
  406976:	d158      	bne.n	406a2a <dir_find+0x18a>
  406978:	462e      	mov	r6, r5
  40697a:	45d1      	cmp	r9, sl
  40697c:	d013      	beq.n	4069a6 <dir_find+0x106>
  40697e:	f819 2b01 	ldrb.w	r2, [r9], #1
  406982:	18a3      	adds	r3, r4, r2
  406984:	7859      	ldrb	r1, [r3, #1]
  406986:	5ca3      	ldrb	r3, [r4, r2]
  406988:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  40698c:	2800      	cmp	r0, #0
  40698e:	d1e6      	bne.n	40695e <dir_find+0xbe>
  406990:	f64f 72ff 	movw	r2, #65535	; 0xffff
  406994:	4293      	cmp	r3, r2
  406996:	d0f0      	beq.n	40697a <dir_find+0xda>
  406998:	f8dd b004 	ldr.w	fp, [sp, #4]
  40699c:	9d02      	ldr	r5, [sp, #8]
  40699e:	46da      	mov	sl, fp
  4069a0:	f04f 09ff 	mov.w	r9, #255	; 0xff
  4069a4:	e01a      	b.n	4069dc <dir_find+0x13c>
  4069a6:	f8dd b004 	ldr.w	fp, [sp, #4]
  4069aa:	4632      	mov	r2, r6
  4069ac:	9e03      	ldr	r6, [sp, #12]
  4069ae:	9d02      	ldr	r5, [sp, #8]
  4069b0:	7823      	ldrb	r3, [r4, #0]
  4069b2:	f013 0f40 	tst.w	r3, #64	; 0x40
  4069b6:	d004      	beq.n	4069c2 <dir_find+0x122>
  4069b8:	b118      	cbz	r0, 4069c2 <dir_find+0x122>
  4069ba:	f838 3012 	ldrh.w	r3, [r8, r2, lsl #1]
  4069be:	2b00      	cmp	r3, #0
  4069c0:	d1ed      	bne.n	40699e <dir_find+0xfe>
  4069c2:	3e01      	subs	r6, #1
  4069c4:	fa5f f986 	uxtb.w	r9, r6
  4069c8:	46da      	mov	sl, fp
  4069ca:	e007      	b.n	4069dc <dir_find+0x13c>
  4069cc:	f04f 09ff 	mov.w	r9, #255	; 0xff
  4069d0:	e004      	b.n	4069dc <dir_find+0x13c>
  4069d2:	f04f 09ff 	mov.w	r9, #255	; 0xff
  4069d6:	e001      	b.n	4069dc <dir_find+0x13c>
  4069d8:	f04f 09ff 	mov.w	r9, #255	; 0xff
  4069dc:	2100      	movs	r1, #0
  4069de:	4628      	mov	r0, r5
  4069e0:	4b18      	ldr	r3, [pc, #96]	; (406a44 <dir_find+0x1a4>)
  4069e2:	4798      	blx	r3
  4069e4:	4680      	mov	r8, r0
  4069e6:	2800      	cmp	r0, #0
  4069e8:	d185      	bne.n	4068f6 <dir_find+0x56>
  4069ea:	6929      	ldr	r1, [r5, #16]
  4069ec:	6828      	ldr	r0, [r5, #0]
  4069ee:	47b8      	blx	r7
  4069f0:	4680      	mov	r8, r0
  4069f2:	2800      	cmp	r0, #0
  4069f4:	f47f af7f 	bne.w	4068f6 <dir_find+0x56>
  4069f8:	696c      	ldr	r4, [r5, #20]
  4069fa:	7826      	ldrb	r6, [r4, #0]
  4069fc:	b176      	cbz	r6, 406a1c <dir_find+0x17c>
  4069fe:	7ae3      	ldrb	r3, [r4, #11]
  406a00:	f003 023f 	and.w	r2, r3, #63	; 0x3f
  406a04:	2ee5      	cmp	r6, #229	; 0xe5
  406a06:	d0e4      	beq.n	4069d2 <dir_find+0x132>
  406a08:	f013 0f08 	tst.w	r3, #8
  406a0c:	f43f af57 	beq.w	4068be <dir_find+0x1e>
  406a10:	2a0f      	cmp	r2, #15
  406a12:	f43f af74 	beq.w	4068fe <dir_find+0x5e>
  406a16:	f04f 09ff 	mov.w	r9, #255	; 0xff
  406a1a:	e7df      	b.n	4069dc <dir_find+0x13c>
  406a1c:	f04f 0804 	mov.w	r8, #4
  406a20:	e769      	b.n	4068f6 <dir_find+0x56>
  406a22:	f8dd b004 	ldr.w	fp, [sp, #4]
  406a26:	9d02      	ldr	r5, [sp, #8]
  406a28:	e7b9      	b.n	40699e <dir_find+0xfe>
  406a2a:	f8dd b004 	ldr.w	fp, [sp, #4]
  406a2e:	9d02      	ldr	r5, [sp, #8]
  406a30:	e7b5      	b.n	40699e <dir_find+0xfe>
  406a32:	bf00      	nop
  406a34:	00406455 	.word	0x00406455
  406a38:	004062dd 	.word	0x004062dd
  406a3c:	00405e8d 	.word	0x00405e8d
  406a40:	00407c71 	.word	0x00407c71
  406a44:	00406769 	.word	0x00406769
  406a48:	0040b844 	.word	0x0040b844

00406a4c <dir_register>:
  406a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406a50:	b089      	sub	sp, #36	; 0x24
  406a52:	4604      	mov	r4, r0
  406a54:	6985      	ldr	r5, [r0, #24]
  406a56:	f8d0 b01c 	ldr.w	fp, [r0, #28]
  406a5a:	220c      	movs	r2, #12
  406a5c:	4629      	mov	r1, r5
  406a5e:	a805      	add	r0, sp, #20
  406a60:	4ba8      	ldr	r3, [pc, #672]	; (406d04 <dir_register+0x2b8>)
  406a62:	4798      	blx	r3
  406a64:	f89d 301f 	ldrb.w	r3, [sp, #31]
  406a68:	f013 0f01 	tst.w	r3, #1
  406a6c:	d079      	beq.n	406b62 <dir_register+0x116>
  406a6e:	2300      	movs	r3, #0
  406a70:	72eb      	strb	r3, [r5, #11]
  406a72:	61e3      	str	r3, [r4, #28]
  406a74:	220b      	movs	r2, #11
  406a76:	a905      	add	r1, sp, #20
  406a78:	4628      	mov	r0, r5
  406a7a:	4ba2      	ldr	r3, [pc, #648]	; (406d04 <dir_register+0x2b8>)
  406a7c:	4798      	blx	r3
  406a7e:	2701      	movs	r7, #1
  406a80:	463b      	mov	r3, r7
  406a82:	f04f 0820 	mov.w	r8, #32
  406a86:	f8df 929c 	ldr.w	r9, [pc, #668]	; 406d24 <dir_register+0x2d8>
  406a8a:	f8df a278 	ldr.w	sl, [pc, #632]	; 406d04 <dir_register+0x2b8>
  406a8e:	e032      	b.n	406af6 <dir_register+0xaa>
  406a90:	463b      	mov	r3, r7
  406a92:	e030      	b.n	406af6 <dir_register+0xaa>
  406a94:	4613      	mov	r3, r2
  406a96:	e002      	b.n	406a9e <dir_register+0x52>
  406a98:	2300      	movs	r3, #0
  406a9a:	e000      	b.n	406a9e <dir_register+0x52>
  406a9c:	4613      	mov	r3, r2
  406a9e:	442b      	add	r3, r5
  406aa0:	e005      	b.n	406aae <dir_register+0x62>
  406aa2:	4641      	mov	r1, r8
  406aa4:	f803 1b01 	strb.w	r1, [r3], #1
  406aa8:	1b59      	subs	r1, r3, r5
  406aaa:	2907      	cmp	r1, #7
  406aac:	d807      	bhi.n	406abe <dir_register+0x72>
  406aae:	2a07      	cmp	r2, #7
  406ab0:	d8f7      	bhi.n	406aa2 <dir_register+0x56>
  406ab2:	a908      	add	r1, sp, #32
  406ab4:	4411      	add	r1, r2
  406ab6:	f811 1c14 	ldrb.w	r1, [r1, #-20]
  406aba:	3201      	adds	r2, #1
  406abc:	e7f2      	b.n	406aa4 <dir_register+0x58>
  406abe:	4620      	mov	r0, r4
  406ac0:	47c8      	blx	r9
  406ac2:	4606      	mov	r6, r0
  406ac4:	2800      	cmp	r0, #0
  406ac6:	d13e      	bne.n	406b46 <dir_register+0xfa>
  406ac8:	3701      	adds	r7, #1
  406aca:	b2bf      	uxth	r7, r7
  406acc:	2f64      	cmp	r7, #100	; 0x64
  406ace:	d038      	beq.n	406b42 <dir_register+0xf6>
  406ad0:	220b      	movs	r2, #11
  406ad2:	a905      	add	r1, sp, #20
  406ad4:	4628      	mov	r0, r5
  406ad6:	47d0      	blx	sl
  406ad8:	2f05      	cmp	r7, #5
  406ada:	d9d9      	bls.n	406a90 <dir_register+0x44>
  406adc:	463b      	mov	r3, r7
  406ade:	4659      	mov	r1, fp
  406ae0:	03da      	lsls	r2, r3, #15
  406ae2:	ea42 0353 	orr.w	r3, r2, r3, lsr #1
  406ae6:	f831 2b02 	ldrh.w	r2, [r1], #2
  406aea:	fa12 f383 	uxtah	r3, r2, r3
  406aee:	b29b      	uxth	r3, r3
  406af0:	880a      	ldrh	r2, [r1, #0]
  406af2:	2a00      	cmp	r2, #0
  406af4:	d1f4      	bne.n	406ae0 <dir_register+0x94>
  406af6:	f10d 0613 	add.w	r6, sp, #19
  406afa:	2207      	movs	r2, #7
  406afc:	f003 000f 	and.w	r0, r3, #15
  406b00:	f100 0130 	add.w	r1, r0, #48	; 0x30
  406b04:	2939      	cmp	r1, #57	; 0x39
  406b06:	bf88      	it	hi
  406b08:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
  406b0c:	3a01      	subs	r2, #1
  406b0e:	f806 1901 	strb.w	r1, [r6], #-1
  406b12:	f3c3 130f 	ubfx	r3, r3, #4, #16
  406b16:	2b00      	cmp	r3, #0
  406b18:	d1f0      	bne.n	406afc <dir_register+0xb0>
  406b1a:	217e      	movs	r1, #126	; 0x7e
  406b1c:	ab08      	add	r3, sp, #32
  406b1e:	4413      	add	r3, r2
  406b20:	f803 1c14 	strb.w	r1, [r3, #-20]
  406b24:	2a00      	cmp	r2, #0
  406b26:	d0b5      	beq.n	406a94 <dir_register+0x48>
  406b28:	782b      	ldrb	r3, [r5, #0]
  406b2a:	2b20      	cmp	r3, #32
  406b2c:	d0b4      	beq.n	406a98 <dir_register+0x4c>
  406b2e:	4629      	mov	r1, r5
  406b30:	2300      	movs	r3, #0
  406b32:	3301      	adds	r3, #1
  406b34:	429a      	cmp	r2, r3
  406b36:	d0b1      	beq.n	406a9c <dir_register+0x50>
  406b38:	f811 0f01 	ldrb.w	r0, [r1, #1]!
  406b3c:	2820      	cmp	r0, #32
  406b3e:	d1f8      	bne.n	406b32 <dir_register+0xe6>
  406b40:	e7ad      	b.n	406a9e <dir_register+0x52>
  406b42:	2607      	movs	r6, #7
  406b44:	e004      	b.n	406b50 <dir_register+0x104>
  406b46:	2f64      	cmp	r7, #100	; 0x64
  406b48:	f000 809f 	beq.w	406c8a <dir_register+0x23e>
  406b4c:	2804      	cmp	r0, #4
  406b4e:	d003      	beq.n	406b58 <dir_register+0x10c>
  406b50:	4630      	mov	r0, r6
  406b52:	b009      	add	sp, #36	; 0x24
  406b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406b58:	f89d 301f 	ldrb.w	r3, [sp, #31]
  406b5c:	72eb      	strb	r3, [r5, #11]
  406b5e:	f8c4 b01c 	str.w	fp, [r4, #28]
  406b62:	f89d 301f 	ldrb.w	r3, [sp, #31]
  406b66:	f013 0f02 	tst.w	r3, #2
  406b6a:	d014      	beq.n	406b96 <dir_register+0x14a>
  406b6c:	f8bb 3000 	ldrh.w	r3, [fp]
  406b70:	b17b      	cbz	r3, 406b92 <dir_register+0x146>
  406b72:	2300      	movs	r3, #0
  406b74:	3301      	adds	r3, #1
  406b76:	b29b      	uxth	r3, r3
  406b78:	f83b 2013 	ldrh.w	r2, [fp, r3, lsl #1]
  406b7c:	2a00      	cmp	r2, #0
  406b7e:	d1f9      	bne.n	406b74 <dir_register+0x128>
  406b80:	3319      	adds	r3, #25
  406b82:	4f61      	ldr	r7, [pc, #388]	; (406d08 <dir_register+0x2bc>)
  406b84:	fb87 2703 	smull	r2, r7, r7, r3
  406b88:	17db      	asrs	r3, r3, #31
  406b8a:	ebc3 07a7 	rsb	r7, r3, r7, asr #2
  406b8e:	b2bf      	uxth	r7, r7
  406b90:	e002      	b.n	406b98 <dir_register+0x14c>
  406b92:	2300      	movs	r3, #0
  406b94:	e7f4      	b.n	406b80 <dir_register+0x134>
  406b96:	2701      	movs	r7, #1
  406b98:	2100      	movs	r1, #0
  406b9a:	4620      	mov	r0, r4
  406b9c:	4b5b      	ldr	r3, [pc, #364]	; (406d0c <dir_register+0x2c0>)
  406b9e:	4798      	blx	r3
  406ba0:	4606      	mov	r6, r0
  406ba2:	2800      	cmp	r0, #0
  406ba4:	d1d4      	bne.n	406b50 <dir_register+0x104>
  406ba6:	f04f 0a00 	mov.w	sl, #0
  406baa:	4655      	mov	r5, sl
  406bac:	f8df 8168 	ldr.w	r8, [pc, #360]	; 406d18 <dir_register+0x2cc>
  406bb0:	46d3      	mov	fp, sl
  406bb2:	f8df 9160 	ldr.w	r9, [pc, #352]	; 406d14 <dir_register+0x2c8>
  406bb6:	e00a      	b.n	406bce <dir_register+0x182>
  406bb8:	1c6b      	adds	r3, r5, #1
  406bba:	b29b      	uxth	r3, r3
  406bbc:	429f      	cmp	r7, r3
  406bbe:	d066      	beq.n	406c8e <dir_register+0x242>
  406bc0:	461d      	mov	r5, r3
  406bc2:	2101      	movs	r1, #1
  406bc4:	4620      	mov	r0, r4
  406bc6:	47c8      	blx	r9
  406bc8:	4606      	mov	r6, r0
  406bca:	2800      	cmp	r0, #0
  406bcc:	d1c0      	bne.n	406b50 <dir_register+0x104>
  406bce:	6921      	ldr	r1, [r4, #16]
  406bd0:	6820      	ldr	r0, [r4, #0]
  406bd2:	47c0      	blx	r8
  406bd4:	4606      	mov	r6, r0
  406bd6:	2800      	cmp	r0, #0
  406bd8:	d1ba      	bne.n	406b50 <dir_register+0x104>
  406bda:	6963      	ldr	r3, [r4, #20]
  406bdc:	781b      	ldrb	r3, [r3, #0]
  406bde:	2be5      	cmp	r3, #229	; 0xe5
  406be0:	d000      	beq.n	406be4 <dir_register+0x198>
  406be2:	b923      	cbnz	r3, 406bee <dir_register+0x1a2>
  406be4:	2d00      	cmp	r5, #0
  406be6:	d1e7      	bne.n	406bb8 <dir_register+0x16c>
  406be8:	f8b4 a006 	ldrh.w	sl, [r4, #6]
  406bec:	e7e4      	b.n	406bb8 <dir_register+0x16c>
  406bee:	465d      	mov	r5, fp
  406bf0:	e7e7      	b.n	406bc2 <dir_register+0x176>
  406bf2:	4651      	mov	r1, sl
  406bf4:	4620      	mov	r0, r4
  406bf6:	4b45      	ldr	r3, [pc, #276]	; (406d0c <dir_register+0x2c0>)
  406bf8:	4798      	blx	r3
  406bfa:	4606      	mov	r6, r0
  406bfc:	2800      	cmp	r0, #0
  406bfe:	d1a7      	bne.n	406b50 <dir_register+0x104>
  406c00:	69a0      	ldr	r0, [r4, #24]
  406c02:	4b43      	ldr	r3, [pc, #268]	; (406d10 <dir_register+0x2c4>)
  406c04:	4798      	blx	r3
  406c06:	9000      	str	r0, [sp, #0]
  406c08:	2700      	movs	r7, #0
  406c0a:	9701      	str	r7, [sp, #4]
  406c0c:	e019      	b.n	406c42 <dir_register+0x1f6>
  406c0e:	4671      	mov	r1, lr
  406c10:	e062      	b.n	406cd8 <dir_register+0x28c>
  406c12:	f64f 72ff 	movw	r2, #65535	; 0xffff
  406c16:	4293      	cmp	r3, r2
  406c18:	d002      	beq.n	406c20 <dir_register+0x1d4>
  406c1a:	f839 3011 	ldrh.w	r3, [r9, r1, lsl #1]
  406c1e:	b90b      	cbnz	r3, 406c24 <dir_register+0x1d8>
  406c20:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  406c24:	f880 b000 	strb.w	fp, [r0]
  406c28:	6823      	ldr	r3, [r4, #0]
  406c2a:	2201      	movs	r2, #1
  406c2c:	711a      	strb	r2, [r3, #4]
  406c2e:	4639      	mov	r1, r7
  406c30:	4620      	mov	r0, r4
  406c32:	4b38      	ldr	r3, [pc, #224]	; (406d14 <dir_register+0x2c8>)
  406c34:	4798      	blx	r3
  406c36:	4606      	mov	r6, r0
  406c38:	2800      	cmp	r0, #0
  406c3a:	d189      	bne.n	406b50 <dir_register+0x104>
  406c3c:	3d01      	subs	r5, #1
  406c3e:	b2ad      	uxth	r5, r5
  406c40:	b33d      	cbz	r5, 406c92 <dir_register+0x246>
  406c42:	6921      	ldr	r1, [r4, #16]
  406c44:	6820      	ldr	r0, [r4, #0]
  406c46:	4b34      	ldr	r3, [pc, #208]	; (406d18 <dir_register+0x2cc>)
  406c48:	4798      	blx	r3
  406c4a:	4606      	mov	r6, r0
  406c4c:	2800      	cmp	r0, #0
  406c4e:	f47f af7f 	bne.w	406b50 <dir_register+0x104>
  406c52:	f8d4 901c 	ldr.w	r9, [r4, #28]
  406c56:	6960      	ldr	r0, [r4, #20]
  406c58:	fa5f fb85 	uxtb.w	fp, r5
  406c5c:	f89d 3000 	ldrb.w	r3, [sp]
  406c60:	7343      	strb	r3, [r0, #13]
  406c62:	230f      	movs	r3, #15
  406c64:	72c3      	strb	r3, [r0, #11]
  406c66:	7307      	strb	r7, [r0, #12]
  406c68:	7687      	strb	r7, [r0, #26]
  406c6a:	76c7      	strb	r7, [r0, #27]
  406c6c:	f10b 31ff 	add.w	r1, fp, #4294967295
  406c70:	eb01 0341 	add.w	r3, r1, r1, lsl #1
  406c74:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  406c78:	4a28      	ldr	r2, [pc, #160]	; (406d1c <dir_register+0x2d0>)
  406c7a:	f102 080d 	add.w	r8, r2, #13
  406c7e:	9b01      	ldr	r3, [sp, #4]
  406c80:	f64f 76ff 	movw	r6, #65535	; 0xffff
  406c84:	f04f 0aff 	mov.w	sl, #255	; 0xff
  406c88:	e029      	b.n	406cde <dir_register+0x292>
  406c8a:	2607      	movs	r6, #7
  406c8c:	e760      	b.n	406b50 <dir_register+0x104>
  406c8e:	2b01      	cmp	r3, #1
  406c90:	d8af      	bhi.n	406bf2 <dir_register+0x1a6>
  406c92:	6921      	ldr	r1, [r4, #16]
  406c94:	6820      	ldr	r0, [r4, #0]
  406c96:	4b20      	ldr	r3, [pc, #128]	; (406d18 <dir_register+0x2cc>)
  406c98:	4798      	blx	r3
  406c9a:	4606      	mov	r6, r0
  406c9c:	2800      	cmp	r0, #0
  406c9e:	f47f af57 	bne.w	406b50 <dir_register+0x104>
  406ca2:	6965      	ldr	r5, [r4, #20]
  406ca4:	2220      	movs	r2, #32
  406ca6:	2100      	movs	r1, #0
  406ca8:	4628      	mov	r0, r5
  406caa:	4b1d      	ldr	r3, [pc, #116]	; (406d20 <dir_register+0x2d4>)
  406cac:	4798      	blx	r3
  406cae:	220b      	movs	r2, #11
  406cb0:	69a1      	ldr	r1, [r4, #24]
  406cb2:	4628      	mov	r0, r5
  406cb4:	4b13      	ldr	r3, [pc, #76]	; (406d04 <dir_register+0x2b8>)
  406cb6:	4798      	blx	r3
  406cb8:	69a3      	ldr	r3, [r4, #24]
  406cba:	7adb      	ldrb	r3, [r3, #11]
  406cbc:	f003 0318 	and.w	r3, r3, #24
  406cc0:	732b      	strb	r3, [r5, #12]
  406cc2:	6823      	ldr	r3, [r4, #0]
  406cc4:	2201      	movs	r2, #1
  406cc6:	711a      	strb	r2, [r3, #4]
  406cc8:	e742      	b.n	406b50 <dir_register+0x104>
  406cca:	f892 e000 	ldrb.w	lr, [r2]
  406cce:	f800 a00e 	strb.w	sl, [r0, lr]
  406cd2:	4486      	add	lr, r0
  406cd4:	f88e a001 	strb.w	sl, [lr, #1]
  406cd8:	3201      	adds	r2, #1
  406cda:	4542      	cmp	r2, r8
  406cdc:	d099      	beq.n	406c12 <dir_register+0x1c6>
  406cde:	42b3      	cmp	r3, r6
  406ce0:	d0f3      	beq.n	406cca <dir_register+0x27e>
  406ce2:	f101 0e01 	add.w	lr, r1, #1
  406ce6:	f839 3011 	ldrh.w	r3, [r9, r1, lsl #1]
  406cea:	7811      	ldrb	r1, [r2, #0]
  406cec:	5443      	strb	r3, [r0, r1]
  406cee:	4401      	add	r1, r0
  406cf0:	ea4f 2c13 	mov.w	ip, r3, lsr #8
  406cf4:	f881 c001 	strb.w	ip, [r1, #1]
  406cf8:	2b00      	cmp	r3, #0
  406cfa:	d188      	bne.n	406c0e <dir_register+0x1c2>
  406cfc:	4671      	mov	r1, lr
  406cfe:	4633      	mov	r3, r6
  406d00:	e7ea      	b.n	406cd8 <dir_register+0x28c>
  406d02:	bf00      	nop
  406d04:	00405e55 	.word	0x00405e55
  406d08:	4ec4ec4f 	.word	0x4ec4ec4f
  406d0c:	00406455 	.word	0x00406455
  406d10:	00405e8d 	.word	0x00405e8d
  406d14:	00406769 	.word	0x00406769
  406d18:	004062dd 	.word	0x004062dd
  406d1c:	0040b844 	.word	0x0040b844
  406d20:	00405e69 	.word	0x00405e69
  406d24:	004068a1 	.word	0x004068a1

00406d28 <sync>:
  406d28:	b570      	push	{r4, r5, r6, lr}
  406d2a:	4604      	mov	r4, r0
  406d2c:	2100      	movs	r1, #0
  406d2e:	4b2d      	ldr	r3, [pc, #180]	; (406de4 <sync+0xbc>)
  406d30:	4798      	blx	r3
  406d32:	4603      	mov	r3, r0
  406d34:	b950      	cbnz	r0, 406d4c <sync+0x24>
  406d36:	7823      	ldrb	r3, [r4, #0]
  406d38:	2b03      	cmp	r3, #3
  406d3a:	d009      	beq.n	406d50 <sync+0x28>
  406d3c:	2200      	movs	r2, #0
  406d3e:	4611      	mov	r1, r2
  406d40:	7860      	ldrb	r0, [r4, #1]
  406d42:	4b29      	ldr	r3, [pc, #164]	; (406de8 <sync+0xc0>)
  406d44:	4798      	blx	r3
  406d46:	1c03      	adds	r3, r0, #0
  406d48:	bf18      	it	ne
  406d4a:	2301      	movne	r3, #1
  406d4c:	4618      	mov	r0, r3
  406d4e:	bd70      	pop	{r4, r5, r6, pc}
  406d50:	7963      	ldrb	r3, [r4, #5]
  406d52:	2b00      	cmp	r3, #0
  406d54:	d0f2      	beq.n	406d3c <sync+0x14>
  406d56:	2600      	movs	r6, #0
  406d58:	62e6      	str	r6, [r4, #44]	; 0x2c
  406d5a:	f104 0530 	add.w	r5, r4, #48	; 0x30
  406d5e:	f44f 7200 	mov.w	r2, #512	; 0x200
  406d62:	4631      	mov	r1, r6
  406d64:	4628      	mov	r0, r5
  406d66:	4b21      	ldr	r3, [pc, #132]	; (406dec <sync+0xc4>)
  406d68:	4798      	blx	r3
  406d6a:	2355      	movs	r3, #85	; 0x55
  406d6c:	f884 322e 	strb.w	r3, [r4, #558]	; 0x22e
  406d70:	23aa      	movs	r3, #170	; 0xaa
  406d72:	f884 322f 	strb.w	r3, [r4, #559]	; 0x22f
  406d76:	2352      	movs	r3, #82	; 0x52
  406d78:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
  406d7c:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
  406d80:	2361      	movs	r3, #97	; 0x61
  406d82:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
  406d86:	2241      	movs	r2, #65	; 0x41
  406d88:	f884 2033 	strb.w	r2, [r4, #51]	; 0x33
  406d8c:	2172      	movs	r1, #114	; 0x72
  406d8e:	f884 1214 	strb.w	r1, [r4, #532]	; 0x214
  406d92:	f884 1215 	strb.w	r1, [r4, #533]	; 0x215
  406d96:	f884 2216 	strb.w	r2, [r4, #534]	; 0x216
  406d9a:	f884 3217 	strb.w	r3, [r4, #535]	; 0x217
  406d9e:	6923      	ldr	r3, [r4, #16]
  406da0:	f884 3218 	strb.w	r3, [r4, #536]	; 0x218
  406da4:	f3c3 2207 	ubfx	r2, r3, #8, #8
  406da8:	f884 2219 	strb.w	r2, [r4, #537]	; 0x219
  406dac:	0c1a      	lsrs	r2, r3, #16
  406dae:	f884 221a 	strb.w	r2, [r4, #538]	; 0x21a
  406db2:	0e1b      	lsrs	r3, r3, #24
  406db4:	f884 321b 	strb.w	r3, [r4, #539]	; 0x21b
  406db8:	68e3      	ldr	r3, [r4, #12]
  406dba:	f884 321c 	strb.w	r3, [r4, #540]	; 0x21c
  406dbe:	f3c3 2207 	ubfx	r2, r3, #8, #8
  406dc2:	f884 221d 	strb.w	r2, [r4, #541]	; 0x21d
  406dc6:	0c1a      	lsrs	r2, r3, #16
  406dc8:	f884 221e 	strb.w	r2, [r4, #542]	; 0x21e
  406dcc:	0e1b      	lsrs	r3, r3, #24
  406dce:	f884 321f 	strb.w	r3, [r4, #543]	; 0x21f
  406dd2:	2301      	movs	r3, #1
  406dd4:	6962      	ldr	r2, [r4, #20]
  406dd6:	4629      	mov	r1, r5
  406dd8:	7860      	ldrb	r0, [r4, #1]
  406dda:	4d05      	ldr	r5, [pc, #20]	; (406df0 <sync+0xc8>)
  406ddc:	47a8      	blx	r5
  406dde:	7166      	strb	r6, [r4, #5]
  406de0:	e7ac      	b.n	406d3c <sync+0x14>
  406de2:	bf00      	nop
  406de4:	004062dd 	.word	0x004062dd
  406de8:	00405d8d 	.word	0x00405d8d
  406dec:	00405e69 	.word	0x00405e69
  406df0:	00405d1d 	.word	0x00405d1d

00406df4 <follow_path>:
  406df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406df8:	b083      	sub	sp, #12
  406dfa:	4682      	mov	sl, r0
  406dfc:	4688      	mov	r8, r1
  406dfe:	780b      	ldrb	r3, [r1, #0]
  406e00:	2b2f      	cmp	r3, #47	; 0x2f
  406e02:	d00c      	beq.n	406e1e <follow_path+0x2a>
  406e04:	2b5c      	cmp	r3, #92	; 0x5c
  406e06:	d00a      	beq.n	406e1e <follow_path+0x2a>
  406e08:	2300      	movs	r3, #0
  406e0a:	f8ca 3008 	str.w	r3, [sl, #8]
  406e0e:	f898 3000 	ldrb.w	r3, [r8]
  406e12:	2b1f      	cmp	r3, #31
  406e14:	d906      	bls.n	406e24 <follow_path+0x30>
  406e16:	f8df 92f4 	ldr.w	r9, [pc, #756]	; 40710c <follow_path+0x318>
  406e1a:	4644      	mov	r4, r8
  406e1c:	e00c      	b.n	406e38 <follow_path+0x44>
  406e1e:	f108 0801 	add.w	r8, r8, #1
  406e22:	e7f1      	b.n	406e08 <follow_path+0x14>
  406e24:	2100      	movs	r1, #0
  406e26:	4650      	mov	r0, sl
  406e28:	4bb2      	ldr	r3, [pc, #712]	; (4070f4 <follow_path+0x300>)
  406e2a:	4798      	blx	r3
  406e2c:	4603      	mov	r3, r0
  406e2e:	2200      	movs	r2, #0
  406e30:	f8ca 2014 	str.w	r2, [sl, #20]
  406e34:	e12e      	b.n	407094 <follow_path+0x2a0>
  406e36:	461c      	mov	r4, r3
  406e38:	4627      	mov	r7, r4
  406e3a:	4623      	mov	r3, r4
  406e3c:	f813 0b01 	ldrb.w	r0, [r3], #1
  406e40:	282f      	cmp	r0, #47	; 0x2f
  406e42:	d0f8      	beq.n	406e36 <follow_path+0x42>
  406e44:	285c      	cmp	r0, #92	; 0x5c
  406e46:	bf08      	it	eq
  406e48:	461c      	moveq	r4, r3
  406e4a:	d0f5      	beq.n	406e38 <follow_path+0x44>
  406e4c:	f8da b01c 	ldr.w	fp, [sl, #28]
  406e50:	b280      	uxth	r0, r0
  406e52:	281f      	cmp	r0, #31
  406e54:	f240 812d 	bls.w	4070b2 <follow_path+0x2be>
  406e58:	282f      	cmp	r0, #47	; 0x2f
  406e5a:	f000 812f 	beq.w	4070bc <follow_path+0x2c8>
  406e5e:	285c      	cmp	r0, #92	; 0x5c
  406e60:	f000 8135 	beq.w	4070ce <follow_path+0x2da>
  406e64:	f1ab 0602 	sub.w	r6, fp, #2
  406e68:	2501      	movs	r5, #1
  406e6a:	46a8      	mov	r8, r5
  406e6c:	e012      	b.n	406e94 <follow_path+0xa0>
  406e6e:	bb73      	cbnz	r3, 406ece <follow_path+0xda>
  406e70:	f826 2f02 	strh.w	r2, [r6, #2]!
  406e74:	1c6b      	adds	r3, r5, #1
  406e76:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  406e7a:	281f      	cmp	r0, #31
  406e7c:	f240 811b 	bls.w	4070b6 <follow_path+0x2c2>
  406e80:	282f      	cmp	r0, #47	; 0x2f
  406e82:	f000 811d 	beq.w	4070c0 <follow_path+0x2cc>
  406e86:	285c      	cmp	r0, #92	; 0x5c
  406e88:	f000 811a 	beq.w	4070c0 <follow_path+0x2cc>
  406e8c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  406e90:	d01d      	beq.n	406ece <follow_path+0xda>
  406e92:	461d      	mov	r5, r3
  406e94:	4641      	mov	r1, r8
  406e96:	47c8      	blx	r9
  406e98:	4602      	mov	r2, r0
  406e9a:	b1c0      	cbz	r0, 406ece <follow_path+0xda>
  406e9c:	287f      	cmp	r0, #127	; 0x7f
  406e9e:	d8e7      	bhi.n	406e70 <follow_path+0x7c>
  406ea0:	2822      	cmp	r0, #34	; 0x22
  406ea2:	f000 80f6 	beq.w	407092 <follow_path+0x29e>
  406ea6:	232a      	movs	r3, #42	; 0x2a
  406ea8:	4993      	ldr	r1, [pc, #588]	; (4070f8 <follow_path+0x304>)
  406eaa:	b298      	uxth	r0, r3
  406eac:	4290      	cmp	r0, r2
  406eae:	d0de      	beq.n	406e6e <follow_path+0x7a>
  406eb0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
  406eb4:	2b00      	cmp	r3, #0
  406eb6:	d1f8      	bne.n	406eaa <follow_path+0xb6>
  406eb8:	e7da      	b.n	406e70 <follow_path+0x7c>
  406eba:	3d01      	subs	r5, #1
  406ebc:	f000 80e9 	beq.w	407092 <follow_path+0x29e>
  406ec0:	f832 3d02 	ldrh.w	r3, [r2, #-2]!
  406ec4:	2b20      	cmp	r3, #32
  406ec6:	d0f8      	beq.n	406eba <follow_path+0xc6>
  406ec8:	2b2e      	cmp	r3, #46	; 0x2e
  406eca:	d0f6      	beq.n	406eba <follow_path+0xc6>
  406ecc:	b90d      	cbnz	r5, 406ed2 <follow_path+0xde>
  406ece:	2306      	movs	r3, #6
  406ed0:	e0e0      	b.n	407094 <follow_path+0x2a0>
  406ed2:	006f      	lsls	r7, r5, #1
  406ed4:	f04f 0800 	mov.w	r8, #0
  406ed8:	f82b 8015 	strh.w	r8, [fp, r5, lsl #1]
  406edc:	220b      	movs	r2, #11
  406ede:	2120      	movs	r1, #32
  406ee0:	f8da 0018 	ldr.w	r0, [sl, #24]
  406ee4:	4b85      	ldr	r3, [pc, #532]	; (4070fc <follow_path+0x308>)
  406ee6:	4798      	blx	r3
  406ee8:	f1ab 0102 	sub.w	r1, fp, #2
  406eec:	4643      	mov	r3, r8
  406eee:	e000      	b.n	406ef2 <follow_path+0xfe>
  406ef0:	3301      	adds	r3, #1
  406ef2:	f831 2f02 	ldrh.w	r2, [r1, #2]!
  406ef6:	2a20      	cmp	r2, #32
  406ef8:	d0fa      	beq.n	406ef0 <follow_path+0xfc>
  406efa:	2a2e      	cmp	r2, #46	; 0x2e
  406efc:	d0f8      	beq.n	406ef0 <follow_path+0xfc>
  406efe:	b10b      	cbz	r3, 406f04 <follow_path+0x110>
  406f00:	f046 0603 	orr.w	r6, r6, #3
  406f04:	3f02      	subs	r7, #2
  406f06:	eb0b 0207 	add.w	r2, fp, r7
  406f0a:	f83b 1007 	ldrh.w	r1, [fp, r7]
  406f0e:	292e      	cmp	r1, #46	; 0x2e
  406f10:	d005      	beq.n	406f1e <follow_path+0x12a>
  406f12:	3d01      	subs	r5, #1
  406f14:	d003      	beq.n	406f1e <follow_path+0x12a>
  406f16:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
  406f1a:	292e      	cmp	r1, #46	; 0x2e
  406f1c:	d1f9      	bne.n	406f12 <follow_path+0x11e>
  406f1e:	2208      	movs	r2, #8
  406f20:	9200      	str	r2, [sp, #0]
  406f22:	f04f 0800 	mov.w	r8, #0
  406f26:	f8cd 8004 	str.w	r8, [sp, #4]
  406f2a:	e005      	b.n	406f38 <follow_path+0x144>
  406f2c:	42af      	cmp	r7, r5
  406f2e:	f000 80d1 	beq.w	4070d4 <follow_path+0x2e0>
  406f32:	f046 0603 	orr.w	r6, r6, #3
  406f36:	463b      	mov	r3, r7
  406f38:	1c5f      	adds	r7, r3, #1
  406f3a:	f83b 0013 	ldrh.w	r0, [fp, r3, lsl #1]
  406f3e:	b350      	cbz	r0, 406f96 <follow_path+0x1a2>
  406f40:	2820      	cmp	r0, #32
  406f42:	d0f6      	beq.n	406f32 <follow_path+0x13e>
  406f44:	282e      	cmp	r0, #46	; 0x2e
  406f46:	d0f1      	beq.n	406f2c <follow_path+0x138>
  406f48:	9b00      	ldr	r3, [sp, #0]
  406f4a:	4598      	cmp	r8, r3
  406f4c:	d219      	bcs.n	406f82 <follow_path+0x18e>
  406f4e:	42af      	cmp	r7, r5
  406f50:	f000 80c0 	beq.w	4070d4 <follow_path+0x2e0>
  406f54:	287f      	cmp	r0, #127	; 0x7f
  406f56:	d86c      	bhi.n	407032 <follow_path+0x23e>
  406f58:	282b      	cmp	r0, #43	; 0x2b
  406f5a:	d079      	beq.n	407050 <follow_path+0x25c>
  406f5c:	232c      	movs	r3, #44	; 0x2c
  406f5e:	4a68      	ldr	r2, [pc, #416]	; (407100 <follow_path+0x30c>)
  406f60:	b299      	uxth	r1, r3
  406f62:	4281      	cmp	r1, r0
  406f64:	d072      	beq.n	40704c <follow_path+0x258>
  406f66:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  406f6a:	2b00      	cmp	r3, #0
  406f6c:	d1f8      	bne.n	406f60 <follow_path+0x16c>
  406f6e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
  406f72:	b29b      	uxth	r3, r3
  406f74:	2b19      	cmp	r3, #25
  406f76:	d876      	bhi.n	407066 <follow_path+0x272>
  406f78:	9b01      	ldr	r3, [sp, #4]
  406f7a:	f043 0302 	orr.w	r3, r3, #2
  406f7e:	9301      	str	r3, [sp, #4]
  406f80:	e069      	b.n	407056 <follow_path+0x262>
  406f82:	9b00      	ldr	r3, [sp, #0]
  406f84:	2b0b      	cmp	r3, #11
  406f86:	d048      	beq.n	40701a <follow_path+0x226>
  406f88:	42af      	cmp	r7, r5
  406f8a:	f000 80a6 	beq.w	4070da <follow_path+0x2e6>
  406f8e:	f046 0603 	orr.w	r6, r6, #3
  406f92:	f240 80a2 	bls.w	4070da <follow_path+0x2e6>
  406f96:	f8da 3018 	ldr.w	r3, [sl, #24]
  406f9a:	781a      	ldrb	r2, [r3, #0]
  406f9c:	2ae5      	cmp	r2, #229	; 0xe5
  406f9e:	d045      	beq.n	40702c <follow_path+0x238>
  406fa0:	9b00      	ldr	r3, [sp, #0]
  406fa2:	2b08      	cmp	r3, #8
  406fa4:	d06b      	beq.n	40707e <follow_path+0x28a>
  406fa6:	9a01      	ldr	r2, [sp, #4]
  406fa8:	f002 030c 	and.w	r3, r2, #12
  406fac:	2b0c      	cmp	r3, #12
  406fae:	d06d      	beq.n	40708c <follow_path+0x298>
  406fb0:	f002 0203 	and.w	r2, r2, #3
  406fb4:	2a03      	cmp	r2, #3
  406fb6:	d069      	beq.n	40708c <follow_path+0x298>
  406fb8:	f016 0f02 	tst.w	r6, #2
  406fbc:	d10b      	bne.n	406fd6 <follow_path+0x1e2>
  406fbe:	9a01      	ldr	r2, [sp, #4]
  406fc0:	f002 0b03 	and.w	fp, r2, #3
  406fc4:	f1bb 0f01 	cmp.w	fp, #1
  406fc8:	bf08      	it	eq
  406fca:	f046 0610 	orreq.w	r6, r6, #16
  406fce:	2b04      	cmp	r3, #4
  406fd0:	bf08      	it	eq
  406fd2:	f046 0608 	orreq.w	r6, r6, #8
  406fd6:	f8da 3018 	ldr.w	r3, [sl, #24]
  406fda:	72de      	strb	r6, [r3, #11]
  406fdc:	4650      	mov	r0, sl
  406fde:	4b49      	ldr	r3, [pc, #292]	; (407104 <follow_path+0x310>)
  406fe0:	4798      	blx	r3
  406fe2:	f8da 3018 	ldr.w	r3, [sl, #24]
  406fe6:	7ada      	ldrb	r2, [r3, #11]
  406fe8:	4603      	mov	r3, r0
  406fea:	2800      	cmp	r0, #0
  406fec:	d156      	bne.n	40709c <follow_path+0x2a8>
  406fee:	f012 0f04 	tst.w	r2, #4
  406ff2:	d14f      	bne.n	407094 <follow_path+0x2a0>
  406ff4:	f8da 2014 	ldr.w	r2, [sl, #20]
  406ff8:	7ad3      	ldrb	r3, [r2, #11]
  406ffa:	f013 0f10 	tst.w	r3, #16
  406ffe:	d056      	beq.n	4070ae <follow_path+0x2ba>
  407000:	7d51      	ldrb	r1, [r2, #21]
  407002:	7d13      	ldrb	r3, [r2, #20]
  407004:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
  407008:	7ed0      	ldrb	r0, [r2, #27]
  40700a:	7e93      	ldrb	r3, [r2, #26]
  40700c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  407010:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  407014:	f8ca 3008 	str.w	r3, [sl, #8]
  407018:	e70e      	b.n	406e38 <follow_path+0x44>
  40701a:	f046 0603 	orr.w	r6, r6, #3
  40701e:	f8da 3018 	ldr.w	r3, [sl, #24]
  407022:	781a      	ldrb	r2, [r3, #0]
  407024:	2ae5      	cmp	r2, #229	; 0xe5
  407026:	d1be      	bne.n	406fa6 <follow_path+0x1b2>
  407028:	220b      	movs	r2, #11
  40702a:	9200      	str	r2, [sp, #0]
  40702c:	2205      	movs	r2, #5
  40702e:	701a      	strb	r2, [r3, #0]
  407030:	e7b6      	b.n	406fa0 <follow_path+0x1ac>
  407032:	2100      	movs	r1, #0
  407034:	47c8      	blx	r9
  407036:	4603      	mov	r3, r0
  407038:	2800      	cmp	r0, #0
  40703a:	d058      	beq.n	4070ee <follow_path+0x2fa>
  40703c:	4a32      	ldr	r2, [pc, #200]	; (407108 <follow_path+0x314>)
  40703e:	4413      	add	r3, r2
  407040:	f813 0c80 	ldrb.w	r0, [r3, #-128]
  407044:	f046 0602 	orr.w	r6, r6, #2
  407048:	b110      	cbz	r0, 407050 <follow_path+0x25c>
  40704a:	e785      	b.n	406f58 <follow_path+0x164>
  40704c:	2b00      	cmp	r3, #0
  40704e:	d08e      	beq.n	406f6e <follow_path+0x17a>
  407050:	f046 0603 	orr.w	r6, r6, #3
  407054:	205f      	movs	r0, #95	; 0x5f
  407056:	f8da 3018 	ldr.w	r3, [sl, #24]
  40705a:	f803 0008 	strb.w	r0, [r3, r8]
  40705e:	463b      	mov	r3, r7
  407060:	f108 0801 	add.w	r8, r8, #1
  407064:	e768      	b.n	406f38 <follow_path+0x144>
  407066:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
  40706a:	b29b      	uxth	r3, r3
  40706c:	2b19      	cmp	r3, #25
  40706e:	d8f2      	bhi.n	407056 <follow_path+0x262>
  407070:	9b01      	ldr	r3, [sp, #4]
  407072:	f043 0301 	orr.w	r3, r3, #1
  407076:	9301      	str	r3, [sp, #4]
  407078:	3820      	subs	r0, #32
  40707a:	b280      	uxth	r0, r0
  40707c:	e7eb      	b.n	407056 <follow_path+0x262>
  40707e:	9b01      	ldr	r3, [sp, #4]
  407080:	ea4f 0b83 	mov.w	fp, r3, lsl #2
  407084:	fa5f f38b 	uxtb.w	r3, fp
  407088:	9301      	str	r3, [sp, #4]
  40708a:	e78c      	b.n	406fa6 <follow_path+0x1b2>
  40708c:	f046 0602 	orr.w	r6, r6, #2
  407090:	e792      	b.n	406fb8 <follow_path+0x1c4>
  407092:	2306      	movs	r3, #6
  407094:	4618      	mov	r0, r3
  407096:	b003      	add	sp, #12
  407098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40709c:	2804      	cmp	r0, #4
  40709e:	d1f9      	bne.n	407094 <follow_path+0x2a0>
  4070a0:	f002 0204 	and.w	r2, r2, #4
  4070a4:	2a00      	cmp	r2, #0
  4070a6:	bf14      	ite	ne
  4070a8:	4603      	movne	r3, r0
  4070aa:	2305      	moveq	r3, #5
  4070ac:	e7f2      	b.n	407094 <follow_path+0x2a0>
  4070ae:	2305      	movs	r3, #5
  4070b0:	e7f0      	b.n	407094 <follow_path+0x2a0>
  4070b2:	2301      	movs	r3, #1
  4070b4:	2500      	movs	r5, #0
  4070b6:	18fc      	adds	r4, r7, r3
  4070b8:	2604      	movs	r6, #4
  4070ba:	e003      	b.n	4070c4 <follow_path+0x2d0>
  4070bc:	2301      	movs	r3, #1
  4070be:	2500      	movs	r5, #0
  4070c0:	18fc      	adds	r4, r7, r3
  4070c2:	2600      	movs	r6, #0
  4070c4:	2d00      	cmp	r5, #0
  4070c6:	d0e4      	beq.n	407092 <follow_path+0x29e>
  4070c8:	eb0b 0245 	add.w	r2, fp, r5, lsl #1
  4070cc:	e6f8      	b.n	406ec0 <follow_path+0xcc>
  4070ce:	2301      	movs	r3, #1
  4070d0:	2500      	movs	r5, #0
  4070d2:	e7f5      	b.n	4070c0 <follow_path+0x2cc>
  4070d4:	9b00      	ldr	r3, [sp, #0]
  4070d6:	2b0b      	cmp	r3, #11
  4070d8:	d09f      	beq.n	40701a <follow_path+0x226>
  4070da:	9b01      	ldr	r3, [sp, #4]
  4070dc:	009b      	lsls	r3, r3, #2
  4070de:	b2db      	uxtb	r3, r3
  4070e0:	9301      	str	r3, [sp, #4]
  4070e2:	462b      	mov	r3, r5
  4070e4:	220b      	movs	r2, #11
  4070e6:	9200      	str	r2, [sp, #0]
  4070e8:	f04f 0808 	mov.w	r8, #8
  4070ec:	e724      	b.n	406f38 <follow_path+0x144>
  4070ee:	f046 0602 	orr.w	r6, r6, #2
  4070f2:	e7ad      	b.n	407050 <follow_path+0x25c>
  4070f4:	00406455 	.word	0x00406455
  4070f8:	0040b921 	.word	0x0040b921
  4070fc:	00405e69 	.word	0x00405e69
  407100:	0040b92d 	.word	0x0040b92d
  407104:	004068a1 	.word	0x004068a1
  407108:	0040b86c 	.word	0x0040b86c
  40710c:	00407c31 	.word	0x00407c31

00407110 <f_mount>:
  407110:	2807      	cmp	r0, #7
  407112:	d901      	bls.n	407118 <f_mount+0x8>
  407114:	200b      	movs	r0, #11
  407116:	4770      	bx	lr
  407118:	4b06      	ldr	r3, [pc, #24]	; (407134 <f_mount+0x24>)
  40711a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
  40711e:	b10b      	cbz	r3, 407124 <f_mount+0x14>
  407120:	2200      	movs	r2, #0
  407122:	701a      	strb	r2, [r3, #0]
  407124:	b109      	cbz	r1, 40712a <f_mount+0x1a>
  407126:	2300      	movs	r3, #0
  407128:	700b      	strb	r3, [r1, #0]
  40712a:	4b02      	ldr	r3, [pc, #8]	; (407134 <f_mount+0x24>)
  40712c:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
  407130:	2000      	movs	r0, #0
  407132:	4770      	bx	lr
  407134:	2001a2d0 	.word	0x2001a2d0

00407138 <f_open>:
  407138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40713c:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
  407140:	4605      	mov	r5, r0
  407142:	9101      	str	r1, [sp, #4]
  407144:	4616      	mov	r6, r2
  407146:	2300      	movs	r3, #0
  407148:	6003      	str	r3, [r0, #0]
  40714a:	f002 071f 	and.w	r7, r2, #31
  40714e:	f002 021e 	and.w	r2, r2, #30
  407152:	a985      	add	r1, sp, #532	; 0x214
  407154:	a801      	add	r0, sp, #4
  407156:	4b58      	ldr	r3, [pc, #352]	; (4072b8 <f_open+0x180>)
  407158:	4798      	blx	r3
  40715a:	ab82      	add	r3, sp, #520	; 0x208
  40715c:	938b      	str	r3, [sp, #556]	; 0x22c
  40715e:	ab02      	add	r3, sp, #8
  407160:	938c      	str	r3, [sp, #560]	; 0x230
  407162:	b140      	cbz	r0, 407176 <f_open+0x3e>
  407164:	4603      	mov	r3, r0
  407166:	9c8a      	ldr	r4, [sp, #552]	; 0x228
  407168:	f016 0f1c 	tst.w	r6, #28
  40716c:	d117      	bne.n	40719e <f_open+0x66>
  40716e:	2b00      	cmp	r3, #0
  407170:	f040 8092 	bne.w	407298 <f_open+0x160>
  407174:	e00d      	b.n	407192 <f_open+0x5a>
  407176:	9901      	ldr	r1, [sp, #4]
  407178:	a885      	add	r0, sp, #532	; 0x214
  40717a:	4b50      	ldr	r3, [pc, #320]	; (4072bc <f_open+0x184>)
  40717c:	4798      	blx	r3
  40717e:	9c8a      	ldr	r4, [sp, #552]	; 0x228
  407180:	4603      	mov	r3, r0
  407182:	2800      	cmp	r0, #0
  407184:	d1f0      	bne.n	407168 <f_open+0x30>
  407186:	2c00      	cmp	r4, #0
  407188:	f000 808b 	beq.w	4072a2 <f_open+0x16a>
  40718c:	f016 0f1c 	tst.w	r6, #28
  407190:	d116      	bne.n	4071c0 <f_open+0x88>
  407192:	7ae3      	ldrb	r3, [r4, #11]
  407194:	f013 0f10 	tst.w	r3, #16
  407198:	d04f      	beq.n	40723a <f_open+0x102>
  40719a:	2304      	movs	r3, #4
  40719c:	e07c      	b.n	407298 <f_open+0x160>
  40719e:	2b04      	cmp	r3, #4
  4071a0:	d005      	beq.n	4071ae <f_open+0x76>
  4071a2:	f047 0708 	orr.w	r7, r7, #8
  4071a6:	9c8a      	ldr	r4, [sp, #552]	; 0x228
  4071a8:	2b00      	cmp	r3, #0
  4071aa:	d057      	beq.n	40725c <f_open+0x124>
  4071ac:	e074      	b.n	407298 <f_open+0x160>
  4071ae:	a885      	add	r0, sp, #532	; 0x214
  4071b0:	4b43      	ldr	r3, [pc, #268]	; (4072c0 <f_open+0x188>)
  4071b2:	4798      	blx	r3
  4071b4:	f047 0708 	orr.w	r7, r7, #8
  4071b8:	9c8a      	ldr	r4, [sp, #552]	; 0x228
  4071ba:	4603      	mov	r3, r0
  4071bc:	b138      	cbz	r0, 4071ce <f_open+0x96>
  4071be:	e06b      	b.n	407298 <f_open+0x160>
  4071c0:	7ae3      	ldrb	r3, [r4, #11]
  4071c2:	f013 0f11 	tst.w	r3, #17
  4071c6:	d173      	bne.n	4072b0 <f_open+0x178>
  4071c8:	f016 0f04 	tst.w	r6, #4
  4071cc:	d172      	bne.n	4072b4 <f_open+0x17c>
  4071ce:	f017 0f08 	tst.w	r7, #8
  4071d2:	d03f      	beq.n	407254 <f_open+0x11c>
  4071d4:	4b3b      	ldr	r3, [pc, #236]	; (4072c4 <f_open+0x18c>)
  4071d6:	4798      	blx	r3
  4071d8:	73a0      	strb	r0, [r4, #14]
  4071da:	f3c0 2307 	ubfx	r3, r0, #8, #8
  4071de:	73e3      	strb	r3, [r4, #15]
  4071e0:	0c03      	lsrs	r3, r0, #16
  4071e2:	7423      	strb	r3, [r4, #16]
  4071e4:	0e00      	lsrs	r0, r0, #24
  4071e6:	7460      	strb	r0, [r4, #17]
  4071e8:	2300      	movs	r3, #0
  4071ea:	72e3      	strb	r3, [r4, #11]
  4071ec:	7723      	strb	r3, [r4, #28]
  4071ee:	7763      	strb	r3, [r4, #29]
  4071f0:	77a3      	strb	r3, [r4, #30]
  4071f2:	77e3      	strb	r3, [r4, #31]
  4071f4:	7d62      	ldrb	r2, [r4, #21]
  4071f6:	7d26      	ldrb	r6, [r4, #20]
  4071f8:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
  4071fc:	7ee1      	ldrb	r1, [r4, #27]
  4071fe:	7ea2      	ldrb	r2, [r4, #26]
  407200:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  407204:	76a3      	strb	r3, [r4, #26]
  407206:	76e3      	strb	r3, [r4, #27]
  407208:	7523      	strb	r3, [r4, #20]
  40720a:	7563      	strb	r3, [r4, #21]
  40720c:	9885      	ldr	r0, [sp, #532]	; 0x214
  40720e:	2301      	movs	r3, #1
  407210:	7103      	strb	r3, [r0, #4]
  407212:	ea52 4606 	orrs.w	r6, r2, r6, lsl #16
  407216:	d01b      	beq.n	407250 <f_open+0x118>
  407218:	f8d0 802c 	ldr.w	r8, [r0, #44]	; 0x2c
  40721c:	4631      	mov	r1, r6
  40721e:	4b2a      	ldr	r3, [pc, #168]	; (4072c8 <f_open+0x190>)
  407220:	4798      	blx	r3
  407222:	4603      	mov	r3, r0
  407224:	2800      	cmp	r0, #0
  407226:	d137      	bne.n	407298 <f_open+0x160>
  407228:	9885      	ldr	r0, [sp, #532]	; 0x214
  40722a:	3e01      	subs	r6, #1
  40722c:	60c6      	str	r6, [r0, #12]
  40722e:	4641      	mov	r1, r8
  407230:	4b26      	ldr	r3, [pc, #152]	; (4072cc <f_open+0x194>)
  407232:	4798      	blx	r3
  407234:	4603      	mov	r3, r0
  407236:	b158      	cbz	r0, 407250 <f_open+0x118>
  407238:	e02e      	b.n	407298 <f_open+0x160>
  40723a:	f016 0f02 	tst.w	r6, #2
  40723e:	d004      	beq.n	40724a <f_open+0x112>
  407240:	f013 0f01 	tst.w	r3, #1
  407244:	d001      	beq.n	40724a <f_open+0x112>
  407246:	2307      	movs	r3, #7
  407248:	e026      	b.n	407298 <f_open+0x160>
  40724a:	f016 0f08 	tst.w	r6, #8
  40724e:	d001      	beq.n	407254 <f_open+0x11c>
  407250:	f047 0720 	orr.w	r7, r7, #32
  407254:	9b85      	ldr	r3, [sp, #532]	; 0x214
  407256:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407258:	61eb      	str	r3, [r5, #28]
  40725a:	622c      	str	r4, [r5, #32]
  40725c:	71af      	strb	r7, [r5, #6]
  40725e:	7d62      	ldrb	r2, [r4, #21]
  407260:	7d23      	ldrb	r3, [r4, #20]
  407262:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
  407266:	7ee1      	ldrb	r1, [r4, #27]
  407268:	7ea3      	ldrb	r3, [r4, #26]
  40726a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  40726e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  407272:	612b      	str	r3, [r5, #16]
  407274:	7fe2      	ldrb	r2, [r4, #31]
  407276:	7fa3      	ldrb	r3, [r4, #30]
  407278:	041b      	lsls	r3, r3, #16
  40727a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  40727e:	7f22      	ldrb	r2, [r4, #28]
  407280:	4313      	orrs	r3, r2
  407282:	7f62      	ldrb	r2, [r4, #29]
  407284:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  407288:	60eb      	str	r3, [r5, #12]
  40728a:	2300      	movs	r3, #0
  40728c:	60ab      	str	r3, [r5, #8]
  40728e:	61ab      	str	r3, [r5, #24]
  407290:	9a85      	ldr	r2, [sp, #532]	; 0x214
  407292:	602a      	str	r2, [r5, #0]
  407294:	88d2      	ldrh	r2, [r2, #6]
  407296:	80aa      	strh	r2, [r5, #4]
  407298:	4618      	mov	r0, r3
  40729a:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
  40729e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4072a2:	f016 0f1c 	tst.w	r6, #28
  4072a6:	d101      	bne.n	4072ac <f_open+0x174>
  4072a8:	2306      	movs	r3, #6
  4072aa:	e77d      	b.n	4071a8 <f_open+0x70>
  4072ac:	2306      	movs	r3, #6
  4072ae:	e778      	b.n	4071a2 <f_open+0x6a>
  4072b0:	2307      	movs	r3, #7
  4072b2:	e7f1      	b.n	407298 <f_open+0x160>
  4072b4:	2308      	movs	r3, #8
  4072b6:	e7ef      	b.n	407298 <f_open+0x160>
  4072b8:	00405f71 	.word	0x00405f71
  4072bc:	00406df5 	.word	0x00406df5
  4072c0:	00406a4d 	.word	0x00406a4d
  4072c4:	00405dfd 	.word	0x00405dfd
  4072c8:	004066ed 	.word	0x004066ed
  4072cc:	004062dd 	.word	0x004062dd

004072d0 <f_write>:
  4072d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4072d4:	b083      	sub	sp, #12
  4072d6:	4604      	mov	r4, r0
  4072d8:	4689      	mov	r9, r1
  4072da:	4616      	mov	r6, r2
  4072dc:	4698      	mov	r8, r3
  4072de:	2300      	movs	r3, #0
  4072e0:	f8c8 3000 	str.w	r3, [r8]
  4072e4:	8881      	ldrh	r1, [r0, #4]
  4072e6:	6800      	ldr	r0, [r0, #0]
  4072e8:	4b75      	ldr	r3, [pc, #468]	; (4074c0 <f_write+0x1f0>)
  4072ea:	4798      	blx	r3
  4072ec:	9001      	str	r0, [sp, #4]
  4072ee:	2800      	cmp	r0, #0
  4072f0:	f040 80e2 	bne.w	4074b8 <f_write+0x1e8>
  4072f4:	79a3      	ldrb	r3, [r4, #6]
  4072f6:	f013 0f80 	tst.w	r3, #128	; 0x80
  4072fa:	f040 80db 	bne.w	4074b4 <f_write+0x1e4>
  4072fe:	f013 0f02 	tst.w	r3, #2
  407302:	d102      	bne.n	40730a <f_write+0x3a>
  407304:	2307      	movs	r3, #7
  407306:	9301      	str	r3, [sp, #4]
  407308:	e0d6      	b.n	4074b8 <f_write+0x1e8>
  40730a:	68e3      	ldr	r3, [r4, #12]
  40730c:	42f3      	cmn	r3, r6
  40730e:	d20f      	bcs.n	407330 <f_write+0x60>
  407310:	2e00      	cmp	r6, #0
  407312:	d17a      	bne.n	40740a <f_write+0x13a>
  407314:	e00c      	b.n	407330 <f_write+0x60>
  407316:	2100      	movs	r1, #0
  407318:	4b6a      	ldr	r3, [pc, #424]	; (4074c4 <f_write+0x1f4>)
  40731a:	4798      	blx	r3
  40731c:	4603      	mov	r3, r0
  40731e:	6120      	str	r0, [r4, #16]
  407320:	e003      	b.n	40732a <f_write+0x5a>
  407322:	6961      	ldr	r1, [r4, #20]
  407324:	4b67      	ldr	r3, [pc, #412]	; (4074c4 <f_write+0x1f4>)
  407326:	4798      	blx	r3
  407328:	4603      	mov	r3, r0
  40732a:	2b00      	cmp	r3, #0
  40732c:	f040 8081 	bne.w	407432 <f_write+0x162>
  407330:	68a3      	ldr	r3, [r4, #8]
  407332:	68e2      	ldr	r2, [r4, #12]
  407334:	4293      	cmp	r3, r2
  407336:	bf88      	it	hi
  407338:	60e3      	strhi	r3, [r4, #12]
  40733a:	79a3      	ldrb	r3, [r4, #6]
  40733c:	f043 0320 	orr.w	r3, r3, #32
  407340:	71a3      	strb	r3, [r4, #6]
  407342:	e0b9      	b.n	4074b8 <f_write+0x1e8>
  407344:	79a3      	ldrb	r3, [r4, #6]
  407346:	f063 037f 	orn	r3, r3, #127	; 0x7f
  40734a:	71a3      	strb	r3, [r4, #6]
  40734c:	2302      	movs	r3, #2
  40734e:	9301      	str	r3, [sp, #4]
  407350:	e0b2      	b.n	4074b8 <f_write+0x1e8>
  407352:	79a3      	ldrb	r3, [r4, #6]
  407354:	f063 037f 	orn	r3, r3, #127	; 0x7f
  407358:	71a3      	strb	r3, [r4, #6]
  40735a:	2301      	movs	r3, #1
  40735c:	9301      	str	r3, [sp, #4]
  40735e:	e0ab      	b.n	4074b8 <f_write+0x1e8>
  407360:	6820      	ldr	r0, [r4, #0]
  407362:	2301      	movs	r3, #1
  407364:	69a2      	ldr	r2, [r4, #24]
  407366:	f104 0124 	add.w	r1, r4, #36	; 0x24
  40736a:	7840      	ldrb	r0, [r0, #1]
  40736c:	4d56      	ldr	r5, [pc, #344]	; (4074c8 <f_write+0x1f8>)
  40736e:	47a8      	blx	r5
  407370:	b920      	cbnz	r0, 40737c <f_write+0xac>
  407372:	79a3      	ldrb	r3, [r4, #6]
  407374:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  407378:	71a3      	strb	r3, [r4, #6]
  40737a:	e064      	b.n	407446 <f_write+0x176>
  40737c:	79a3      	ldrb	r3, [r4, #6]
  40737e:	f063 037f 	orn	r3, r3, #127	; 0x7f
  407382:	71a3      	strb	r3, [r4, #6]
  407384:	2301      	movs	r3, #1
  407386:	9301      	str	r3, [sp, #4]
  407388:	e096      	b.n	4074b8 <f_write+0x1e8>
  40738a:	79a3      	ldrb	r3, [r4, #6]
  40738c:	f063 037f 	orn	r3, r3, #127	; 0x7f
  407390:	71a3      	strb	r3, [r4, #6]
  407392:	2302      	movs	r3, #2
  407394:	9301      	str	r3, [sp, #4]
  407396:	e08f      	b.n	4074b8 <f_write+0x1e8>
  407398:	79a3      	ldrb	r3, [r4, #6]
  40739a:	f063 037f 	orn	r3, r3, #127	; 0x7f
  40739e:	71a3      	strb	r3, [r4, #6]
  4073a0:	2301      	movs	r3, #1
  4073a2:	9301      	str	r3, [sp, #4]
  4073a4:	e088      	b.n	4074b8 <f_write+0x1e8>
  4073a6:	f44f 7200 	mov.w	r2, #512	; 0x200
  4073aa:	eb09 2141 	add.w	r1, r9, r1, lsl #9
  4073ae:	f104 0024 	add.w	r0, r4, #36	; 0x24
  4073b2:	4b46      	ldr	r3, [pc, #280]	; (4074cc <f_write+0x1fc>)
  4073b4:	4798      	blx	r3
  4073b6:	79a3      	ldrb	r3, [r4, #6]
  4073b8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  4073bc:	71a3      	strb	r3, [r4, #6]
  4073be:	e065      	b.n	40748c <f_write+0x1bc>
  4073c0:	69a3      	ldr	r3, [r4, #24]
  4073c2:	429d      	cmp	r5, r3
  4073c4:	d003      	beq.n	4073ce <f_write+0xfe>
  4073c6:	68a2      	ldr	r2, [r4, #8]
  4073c8:	68e3      	ldr	r3, [r4, #12]
  4073ca:	429a      	cmp	r2, r3
  4073cc:	d361      	bcc.n	407492 <f_write+0x1c2>
  4073ce:	61a5      	str	r5, [r4, #24]
  4073d0:	68a0      	ldr	r0, [r4, #8]
  4073d2:	f3c0 0008 	ubfx	r0, r0, #0, #9
  4073d6:	f5c0 7500 	rsb	r5, r0, #512	; 0x200
  4073da:	42b5      	cmp	r5, r6
  4073dc:	bf28      	it	cs
  4073de:	4635      	movcs	r5, r6
  4073e0:	3024      	adds	r0, #36	; 0x24
  4073e2:	462a      	mov	r2, r5
  4073e4:	4649      	mov	r1, r9
  4073e6:	4420      	add	r0, r4
  4073e8:	4b38      	ldr	r3, [pc, #224]	; (4074cc <f_write+0x1fc>)
  4073ea:	4798      	blx	r3
  4073ec:	79a3      	ldrb	r3, [r4, #6]
  4073ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4073f2:	71a3      	strb	r3, [r4, #6]
  4073f4:	44a9      	add	r9, r5
  4073f6:	68a3      	ldr	r3, [r4, #8]
  4073f8:	442b      	add	r3, r5
  4073fa:	60a3      	str	r3, [r4, #8]
  4073fc:	f8d8 3000 	ldr.w	r3, [r8]
  407400:	442b      	add	r3, r5
  407402:	f8c8 3000 	str.w	r3, [r8]
  407406:	1b76      	subs	r6, r6, r5
  407408:	d092      	beq.n	407330 <f_write+0x60>
  40740a:	68a2      	ldr	r2, [r4, #8]
  40740c:	f3c2 0308 	ubfx	r3, r2, #0, #9
  407410:	2b00      	cmp	r3, #0
  407412:	d1dd      	bne.n	4073d0 <f_write+0x100>
  407414:	6820      	ldr	r0, [r4, #0]
  407416:	7883      	ldrb	r3, [r0, #2]
  407418:	3b01      	subs	r3, #1
  40741a:	ea03 2352 	and.w	r3, r3, r2, lsr #9
  40741e:	f013 07ff 	ands.w	r7, r3, #255	; 0xff
  407422:	d10c      	bne.n	40743e <f_write+0x16e>
  407424:	2a00      	cmp	r2, #0
  407426:	f47f af7c 	bne.w	407322 <f_write+0x52>
  40742a:	6923      	ldr	r3, [r4, #16]
  40742c:	2b00      	cmp	r3, #0
  40742e:	f43f af72 	beq.w	407316 <f_write+0x46>
  407432:	2b01      	cmp	r3, #1
  407434:	d086      	beq.n	407344 <f_write+0x74>
  407436:	f1b3 3fff 	cmp.w	r3, #4294967295
  40743a:	d08a      	beq.n	407352 <f_write+0x82>
  40743c:	6163      	str	r3, [r4, #20]
  40743e:	79a3      	ldrb	r3, [r4, #6]
  407440:	f013 0f40 	tst.w	r3, #64	; 0x40
  407444:	d18c      	bne.n	407360 <f_write+0x90>
  407446:	f8d4 a000 	ldr.w	sl, [r4]
  40744a:	6961      	ldr	r1, [r4, #20]
  40744c:	4650      	mov	r0, sl
  40744e:	4b20      	ldr	r3, [pc, #128]	; (4074d0 <f_write+0x200>)
  407450:	4798      	blx	r3
  407452:	4605      	mov	r5, r0
  407454:	2800      	cmp	r0, #0
  407456:	d098      	beq.n	40738a <f_write+0xba>
  407458:	443d      	add	r5, r7
  40745a:	ea5f 2b56 	movs.w	fp, r6, lsr #9
  40745e:	d0af      	beq.n	4073c0 <f_write+0xf0>
  407460:	f89a 3002 	ldrb.w	r3, [sl, #2]
  407464:	eb07 020b 	add.w	r2, r7, fp
  407468:	429a      	cmp	r2, r3
  40746a:	bf88      	it	hi
  40746c:	eba3 0b07 	subhi.w	fp, r3, r7
  407470:	fa5f f38b 	uxtb.w	r3, fp
  407474:	462a      	mov	r2, r5
  407476:	4649      	mov	r1, r9
  407478:	f89a 0001 	ldrb.w	r0, [sl, #1]
  40747c:	4f12      	ldr	r7, [pc, #72]	; (4074c8 <f_write+0x1f8>)
  40747e:	47b8      	blx	r7
  407480:	2800      	cmp	r0, #0
  407482:	d189      	bne.n	407398 <f_write+0xc8>
  407484:	69a1      	ldr	r1, [r4, #24]
  407486:	1b49      	subs	r1, r1, r5
  407488:	458b      	cmp	fp, r1
  40748a:	d88c      	bhi.n	4073a6 <f_write+0xd6>
  40748c:	ea4f 254b 	mov.w	r5, fp, lsl #9
  407490:	e7b0      	b.n	4073f4 <f_write+0x124>
  407492:	2301      	movs	r3, #1
  407494:	462a      	mov	r2, r5
  407496:	f104 0124 	add.w	r1, r4, #36	; 0x24
  40749a:	f89a 0001 	ldrb.w	r0, [sl, #1]
  40749e:	4f0d      	ldr	r7, [pc, #52]	; (4074d4 <f_write+0x204>)
  4074a0:	47b8      	blx	r7
  4074a2:	2800      	cmp	r0, #0
  4074a4:	d093      	beq.n	4073ce <f_write+0xfe>
  4074a6:	79a3      	ldrb	r3, [r4, #6]
  4074a8:	f063 037f 	orn	r3, r3, #127	; 0x7f
  4074ac:	71a3      	strb	r3, [r4, #6]
  4074ae:	2301      	movs	r3, #1
  4074b0:	9301      	str	r3, [sp, #4]
  4074b2:	e001      	b.n	4074b8 <f_write+0x1e8>
  4074b4:	2302      	movs	r3, #2
  4074b6:	9301      	str	r3, [sp, #4]
  4074b8:	9801      	ldr	r0, [sp, #4]
  4074ba:	b003      	add	sp, #12
  4074bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4074c0:	00405ead 	.word	0x00405ead
  4074c4:	0040662d 	.word	0x0040662d
  4074c8:	00405d1d 	.word	0x00405d1d
  4074cc:	00405e55 	.word	0x00405e55
  4074d0:	00405e77 	.word	0x00405e77
  4074d4:	00405cad 	.word	0x00405cad

004074d8 <f_sync>:
  4074d8:	b538      	push	{r3, r4, r5, lr}
  4074da:	4604      	mov	r4, r0
  4074dc:	8881      	ldrh	r1, [r0, #4]
  4074de:	6800      	ldr	r0, [r0, #0]
  4074e0:	4b28      	ldr	r3, [pc, #160]	; (407584 <f_sync+0xac>)
  4074e2:	4798      	blx	r3
  4074e4:	4603      	mov	r3, r0
  4074e6:	b9d0      	cbnz	r0, 40751e <f_sync+0x46>
  4074e8:	79a2      	ldrb	r2, [r4, #6]
  4074ea:	f012 0f20 	tst.w	r2, #32
  4074ee:	d016      	beq.n	40751e <f_sync+0x46>
  4074f0:	f012 0f40 	tst.w	r2, #64	; 0x40
  4074f4:	d00d      	beq.n	407512 <f_sync+0x3a>
  4074f6:	6820      	ldr	r0, [r4, #0]
  4074f8:	2301      	movs	r3, #1
  4074fa:	69a2      	ldr	r2, [r4, #24]
  4074fc:	f104 0124 	add.w	r1, r4, #36	; 0x24
  407500:	7840      	ldrb	r0, [r0, #1]
  407502:	4d21      	ldr	r5, [pc, #132]	; (407588 <f_sync+0xb0>)
  407504:	47a8      	blx	r5
  407506:	2800      	cmp	r0, #0
  407508:	d139      	bne.n	40757e <f_sync+0xa6>
  40750a:	79a3      	ldrb	r3, [r4, #6]
  40750c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  407510:	71a3      	strb	r3, [r4, #6]
  407512:	69e1      	ldr	r1, [r4, #28]
  407514:	6820      	ldr	r0, [r4, #0]
  407516:	4b1d      	ldr	r3, [pc, #116]	; (40758c <f_sync+0xb4>)
  407518:	4798      	blx	r3
  40751a:	4603      	mov	r3, r0
  40751c:	b108      	cbz	r0, 407522 <f_sync+0x4a>
  40751e:	4618      	mov	r0, r3
  407520:	bd38      	pop	{r3, r4, r5, pc}
  407522:	6a25      	ldr	r5, [r4, #32]
  407524:	7aeb      	ldrb	r3, [r5, #11]
  407526:	f043 0320 	orr.w	r3, r3, #32
  40752a:	72eb      	strb	r3, [r5, #11]
  40752c:	68e3      	ldr	r3, [r4, #12]
  40752e:	772b      	strb	r3, [r5, #28]
  407530:	89a3      	ldrh	r3, [r4, #12]
  407532:	0a1b      	lsrs	r3, r3, #8
  407534:	776b      	strb	r3, [r5, #29]
  407536:	89e3      	ldrh	r3, [r4, #14]
  407538:	77ab      	strb	r3, [r5, #30]
  40753a:	7be3      	ldrb	r3, [r4, #15]
  40753c:	77eb      	strb	r3, [r5, #31]
  40753e:	6923      	ldr	r3, [r4, #16]
  407540:	76ab      	strb	r3, [r5, #26]
  407542:	8a23      	ldrh	r3, [r4, #16]
  407544:	0a1b      	lsrs	r3, r3, #8
  407546:	76eb      	strb	r3, [r5, #27]
  407548:	8a63      	ldrh	r3, [r4, #18]
  40754a:	752b      	strb	r3, [r5, #20]
  40754c:	8a63      	ldrh	r3, [r4, #18]
  40754e:	0a1b      	lsrs	r3, r3, #8
  407550:	756b      	strb	r3, [r5, #21]
  407552:	4b0f      	ldr	r3, [pc, #60]	; (407590 <f_sync+0xb8>)
  407554:	4798      	blx	r3
  407556:	75a8      	strb	r0, [r5, #22]
  407558:	f3c0 2307 	ubfx	r3, r0, #8, #8
  40755c:	75eb      	strb	r3, [r5, #23]
  40755e:	0c03      	lsrs	r3, r0, #16
  407560:	762b      	strb	r3, [r5, #24]
  407562:	0e00      	lsrs	r0, r0, #24
  407564:	7668      	strb	r0, [r5, #25]
  407566:	79a3      	ldrb	r3, [r4, #6]
  407568:	f023 0320 	bic.w	r3, r3, #32
  40756c:	71a3      	strb	r3, [r4, #6]
  40756e:	6823      	ldr	r3, [r4, #0]
  407570:	2201      	movs	r2, #1
  407572:	711a      	strb	r2, [r3, #4]
  407574:	6820      	ldr	r0, [r4, #0]
  407576:	4b07      	ldr	r3, [pc, #28]	; (407594 <f_sync+0xbc>)
  407578:	4798      	blx	r3
  40757a:	4603      	mov	r3, r0
  40757c:	e7cf      	b.n	40751e <f_sync+0x46>
  40757e:	2301      	movs	r3, #1
  407580:	e7cd      	b.n	40751e <f_sync+0x46>
  407582:	bf00      	nop
  407584:	00405ead 	.word	0x00405ead
  407588:	00405d1d 	.word	0x00405d1d
  40758c:	004062dd 	.word	0x004062dd
  407590:	00405dfd 	.word	0x00405dfd
  407594:	00406d29 	.word	0x00406d29

00407598 <f_close>:
  407598:	b510      	push	{r4, lr}
  40759a:	4604      	mov	r4, r0
  40759c:	4b03      	ldr	r3, [pc, #12]	; (4075ac <f_close+0x14>)
  40759e:	4798      	blx	r3
  4075a0:	4603      	mov	r3, r0
  4075a2:	b908      	cbnz	r0, 4075a8 <f_close+0x10>
  4075a4:	2200      	movs	r2, #0
  4075a6:	6022      	str	r2, [r4, #0]
  4075a8:	4618      	mov	r0, r3
  4075aa:	bd10      	pop	{r4, pc}
  4075ac:	004074d9 	.word	0x004074d9

004075b0 <f_mkfs>:
  4075b0:	2807      	cmp	r0, #7
  4075b2:	d901      	bls.n	4075b8 <f_mkfs+0x8>
  4075b4:	200b      	movs	r0, #11
  4075b6:	4770      	bx	lr
  4075b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4075bc:	b089      	sub	sp, #36	; 0x24
  4075be:	4604      	mov	r4, r0
  4075c0:	4688      	mov	r8, r1
  4075c2:	4616      	mov	r6, r2
  4075c4:	2901      	cmp	r1, #1
  4075c6:	d903      	bls.n	4075d0 <f_mkfs+0x20>
  4075c8:	2013      	movs	r0, #19
  4075ca:	b009      	add	sp, #36	; 0x24
  4075cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4075d0:	f102 39ff 	add.w	r9, r2, #4294967295
  4075d4:	ea19 0902 	ands.w	r9, r9, r2
  4075d8:	d001      	beq.n	4075de <f_mkfs+0x2e>
  4075da:	2013      	movs	r0, #19
  4075dc:	e7f5      	b.n	4075ca <f_mkfs+0x1a>
  4075de:	4bcd      	ldr	r3, [pc, #820]	; (407914 <f_mkfs+0x364>)
  4075e0:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
  4075e4:	2d00      	cmp	r5, #0
  4075e6:	f000 82a0 	beq.w	407b2a <f_mkfs+0x57a>
  4075ea:	2300      	movs	r3, #0
  4075ec:	702b      	strb	r3, [r5, #0]
  4075ee:	4bca      	ldr	r3, [pc, #808]	; (407918 <f_mkfs+0x368>)
  4075f0:	4798      	blx	r3
  4075f2:	f010 0f01 	tst.w	r0, #1
  4075f6:	d001      	beq.n	4075fc <f_mkfs+0x4c>
  4075f8:	2003      	movs	r0, #3
  4075fa:	e7e6      	b.n	4075ca <f_mkfs+0x1a>
  4075fc:	f010 0f04 	tst.w	r0, #4
  407600:	d001      	beq.n	407606 <f_mkfs+0x56>
  407602:	200a      	movs	r0, #10
  407604:	e7e1      	b.n	4075ca <f_mkfs+0x1a>
  407606:	aa06      	add	r2, sp, #24
  407608:	2101      	movs	r1, #1
  40760a:	4620      	mov	r0, r4
  40760c:	4bc3      	ldr	r3, [pc, #780]	; (40791c <f_mkfs+0x36c>)
  40760e:	4798      	blx	r3
  407610:	2800      	cmp	r0, #0
  407612:	f040 828c 	bne.w	407b2e <f_mkfs+0x57e>
  407616:	9a06      	ldr	r2, [sp, #24]
  407618:	2a7f      	cmp	r2, #127	; 0x7f
  40761a:	f240 828a 	bls.w	407b32 <f_mkfs+0x582>
  40761e:	f1b8 0f00 	cmp.w	r8, #0
  407622:	bf14      	ite	ne
  407624:	2300      	movne	r3, #0
  407626:	233f      	moveq	r3, #63	; 0x3f
  407628:	9302      	str	r3, [sp, #8]
  40762a:	1ad2      	subs	r2, r2, r3
  40762c:	9206      	str	r2, [sp, #24]
  40762e:	b97e      	cbnz	r6, 407650 <f_mkfs+0xa0>
  407630:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  407634:	fbb2 f3f3 	udiv	r3, r2, r3
  407638:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  40763c:	d205      	bcs.n	40764a <f_mkfs+0x9a>
  40763e:	49b8      	ldr	r1, [pc, #736]	; (407920 <f_mkfs+0x370>)
  407640:	3601      	adds	r6, #1
  407642:	f831 0016 	ldrh.w	r0, [r1, r6, lsl #1]
  407646:	4283      	cmp	r3, r0
  407648:	d3fa      	bcc.n	407640 <f_mkfs+0x90>
  40764a:	4bb6      	ldr	r3, [pc, #728]	; (407924 <f_mkfs+0x374>)
  40764c:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
  407650:	0a76      	lsrs	r6, r6, #9
  407652:	2e00      	cmp	r6, #0
  407654:	bf08      	it	eq
  407656:	2601      	moveq	r6, #1
  407658:	2e80      	cmp	r6, #128	; 0x80
  40765a:	bf28      	it	cs
  40765c:	2680      	movcs	r6, #128	; 0x80
  40765e:	9604      	str	r6, [sp, #16]
  407660:	fbb2 f3f6 	udiv	r3, r2, r6
  407664:	f640 71f5 	movw	r1, #4085	; 0xff5
  407668:	428b      	cmp	r3, r1
  40766a:	f240 8270 	bls.w	407b4e <f_mkfs+0x59e>
  40766e:	f64f 71f5 	movw	r1, #65525	; 0xfff5
  407672:	428b      	cmp	r3, r1
  407674:	f200 8270 	bhi.w	407b58 <f_mkfs+0x5a8>
  407678:	3302      	adds	r3, #2
  40767a:	005b      	lsls	r3, r3, #1
  40767c:	2702      	movs	r7, #2
  40767e:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
  407682:	0a5e      	lsrs	r6, r3, #9
  407684:	2320      	movs	r3, #32
  407686:	9303      	str	r3, [sp, #12]
  407688:	f04f 0b01 	mov.w	fp, #1
  40768c:	e26d      	b.n	407b6a <f_mkfs+0x5ba>
  40768e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  407692:	3301      	adds	r3, #1
  407694:	085b      	lsrs	r3, r3, #1
  407696:	3303      	adds	r3, #3
  407698:	2701      	movs	r7, #1
  40769a:	e7f0      	b.n	40767e <f_mkfs+0xce>
  40769c:	aa07      	add	r2, sp, #28
  40769e:	2103      	movs	r1, #3
  4076a0:	4620      	mov	r0, r4
  4076a2:	4b9e      	ldr	r3, [pc, #632]	; (40791c <f_mkfs+0x36c>)
  4076a4:	4798      	blx	r3
  4076a6:	b920      	cbnz	r0, 4076b2 <f_mkfs+0x102>
  4076a8:	9b07      	ldr	r3, [sp, #28]
  4076aa:	3b01      	subs	r3, #1
  4076ac:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4076b0:	d301      	bcc.n	4076b6 <f_mkfs+0x106>
  4076b2:	2301      	movs	r3, #1
  4076b4:	9307      	str	r3, [sp, #28]
  4076b6:	9a07      	ldr	r2, [sp, #28]
  4076b8:	1e53      	subs	r3, r2, #1
  4076ba:	4453      	add	r3, sl
  4076bc:	4252      	negs	r2, r2
  4076be:	4013      	ands	r3, r2
  4076c0:	eba3 030a 	sub.w	r3, r3, sl
  4076c4:	9307      	str	r3, [sp, #28]
  4076c6:	2f03      	cmp	r7, #3
  4076c8:	d114      	bne.n	4076f4 <f_mkfs+0x144>
  4076ca:	449b      	add	fp, r3
  4076cc:	9a05      	ldr	r2, [sp, #20]
  4076ce:	441a      	add	r2, r3
  4076d0:	9205      	str	r2, [sp, #20]
  4076d2:	9b06      	ldr	r3, [sp, #24]
  4076d4:	eba3 030b 	sub.w	r3, r3, fp
  4076d8:	1b9b      	subs	r3, r3, r6
  4076da:	9a03      	ldr	r2, [sp, #12]
  4076dc:	1a9b      	subs	r3, r3, r2
  4076de:	9a04      	ldr	r2, [sp, #16]
  4076e0:	fbb3 faf2 	udiv	sl, r3, r2
  4076e4:	f64f 73f5 	movw	r3, #65525	; 0xfff5
  4076e8:	459a      	cmp	sl, r3
  4076ea:	f240 8224 	bls.w	407b36 <f_mkfs+0x586>
  4076ee:	230c      	movs	r3, #12
  4076f0:	9301      	str	r3, [sp, #4]
  4076f2:	e017      	b.n	407724 <f_mkfs+0x174>
  4076f4:	441e      	add	r6, r3
  4076f6:	9a06      	ldr	r2, [sp, #24]
  4076f8:	eba2 030b 	sub.w	r3, r2, fp
  4076fc:	1b9b      	subs	r3, r3, r6
  4076fe:	9903      	ldr	r1, [sp, #12]
  407700:	1a5b      	subs	r3, r3, r1
  407702:	9904      	ldr	r1, [sp, #16]
  407704:	fbb3 faf1 	udiv	sl, r3, r1
  407708:	2f02      	cmp	r7, #2
  40770a:	f040 80f8 	bne.w	4078fe <f_mkfs+0x34e>
  40770e:	f640 73f5 	movw	r3, #4085	; 0xff5
  407712:	459a      	cmp	sl, r3
  407714:	f240 8211 	bls.w	407b3a <f_mkfs+0x58a>
  407718:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
  40771c:	bf34      	ite	cc
  40771e:	2304      	movcc	r3, #4
  407720:	2306      	movcs	r3, #6
  407722:	9301      	str	r3, [sp, #4]
  407724:	f1b8 0f00 	cmp.w	r8, #0
  407728:	f040 80f1 	bne.w	40790e <f_mkfs+0x35e>
  40772c:	f105 0830 	add.w	r8, r5, #48	; 0x30
  407730:	f44f 7200 	mov.w	r2, #512	; 0x200
  407734:	2100      	movs	r1, #0
  407736:	4640      	mov	r0, r8
  407738:	4b7b      	ldr	r3, [pc, #492]	; (407928 <f_mkfs+0x378>)
  40773a:	4798      	blx	r3
  40773c:	2301      	movs	r3, #1
  40773e:	f885 31ef 	strb.w	r3, [r5, #495]	; 0x1ef
  407742:	f885 31f0 	strb.w	r3, [r5, #496]	; 0x1f0
  407746:	2200      	movs	r2, #0
  407748:	f885 21f1 	strb.w	r2, [r5, #497]	; 0x1f1
  40774c:	f89d 1004 	ldrb.w	r1, [sp, #4]
  407750:	f885 11f2 	strb.w	r1, [r5, #498]	; 0x1f2
  407754:	21fe      	movs	r1, #254	; 0xfe
  407756:	f885 11f3 	strb.w	r1, [r5, #499]	; 0x1f3
  40775a:	9906      	ldr	r1, [sp, #24]
  40775c:	9802      	ldr	r0, [sp, #8]
  40775e:	4408      	add	r0, r1
  407760:	f643 6ec1 	movw	lr, #16065	; 0x3ec1
  407764:	fbb0 f0fe 	udiv	r0, r0, lr
  407768:	9007      	str	r0, [sp, #28]
  40776a:	ea4f 0e90 	mov.w	lr, r0, lsr #2
  40776e:	f04e 0e3f 	orr.w	lr, lr, #63	; 0x3f
  407772:	f885 e1f4 	strb.w	lr, [r5, #500]	; 0x1f4
  407776:	f885 01f5 	strb.w	r0, [r5, #501]	; 0x1f5
  40777a:	203f      	movs	r0, #63	; 0x3f
  40777c:	f885 01f6 	strb.w	r0, [r5, #502]	; 0x1f6
  407780:	f885 21f7 	strb.w	r2, [r5, #503]	; 0x1f7
  407784:	f885 21f8 	strb.w	r2, [r5, #504]	; 0x1f8
  407788:	f885 21f9 	strb.w	r2, [r5, #505]	; 0x1f9
  40778c:	f885 11fa 	strb.w	r1, [r5, #506]	; 0x1fa
  407790:	f3c1 2007 	ubfx	r0, r1, #8, #8
  407794:	f885 01fb 	strb.w	r0, [r5, #507]	; 0x1fb
  407798:	0c08      	lsrs	r0, r1, #16
  40779a:	f885 01fc 	strb.w	r0, [r5, #508]	; 0x1fc
  40779e:	0e09      	lsrs	r1, r1, #24
  4077a0:	f885 11fd 	strb.w	r1, [r5, #509]	; 0x1fd
  4077a4:	2155      	movs	r1, #85	; 0x55
  4077a6:	f885 122e 	strb.w	r1, [r5, #558]	; 0x22e
  4077aa:	21aa      	movs	r1, #170	; 0xaa
  4077ac:	f885 122f 	strb.w	r1, [r5, #559]	; 0x22f
  4077b0:	4641      	mov	r1, r8
  4077b2:	4620      	mov	r0, r4
  4077b4:	f8df 8184 	ldr.w	r8, [pc, #388]	; 40793c <f_mkfs+0x38c>
  4077b8:	47c0      	blx	r8
  4077ba:	2800      	cmp	r0, #0
  4077bc:	f040 81bf 	bne.w	407b3e <f_mkfs+0x58e>
  4077c0:	f04f 08f8 	mov.w	r8, #248	; 0xf8
  4077c4:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4077c8:	f44f 7200 	mov.w	r2, #512	; 0x200
  4077cc:	2100      	movs	r1, #0
  4077ce:	9301      	str	r3, [sp, #4]
  4077d0:	4618      	mov	r0, r3
  4077d2:	4b55      	ldr	r3, [pc, #340]	; (407928 <f_mkfs+0x378>)
  4077d4:	4798      	blx	r3
  4077d6:	220b      	movs	r2, #11
  4077d8:	4954      	ldr	r1, [pc, #336]	; (40792c <f_mkfs+0x37c>)
  4077da:	9801      	ldr	r0, [sp, #4]
  4077dc:	4b54      	ldr	r3, [pc, #336]	; (407930 <f_mkfs+0x380>)
  4077de:	4798      	blx	r3
  4077e0:	2300      	movs	r3, #0
  4077e2:	f885 303b 	strb.w	r3, [r5, #59]	; 0x3b
  4077e6:	2302      	movs	r3, #2
  4077e8:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
  4077ec:	f89d 3010 	ldrb.w	r3, [sp, #16]
  4077f0:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
  4077f4:	f885 b03e 	strb.w	fp, [r5, #62]	; 0x3e
  4077f8:	f3cb 2b07 	ubfx	fp, fp, #8, #8
  4077fc:	f885 b03f 	strb.w	fp, [r5, #63]	; 0x3f
  407800:	2301      	movs	r3, #1
  407802:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
  407806:	2f03      	cmp	r7, #3
  407808:	bf18      	it	ne
  40780a:	f44f 7900 	movne.w	r9, #512	; 0x200
  40780e:	2300      	movs	r3, #0
  407810:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
  407814:	f3c9 2907 	ubfx	r9, r9, #8, #8
  407818:	f885 9042 	strb.w	r9, [r5, #66]	; 0x42
  40781c:	9b06      	ldr	r3, [sp, #24]
  40781e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
  407822:	f080 808d 	bcs.w	407940 <f_mkfs+0x390>
  407826:	f885 3043 	strb.w	r3, [r5, #67]	; 0x43
  40782a:	f3c3 2307 	ubfx	r3, r3, #8, #8
  40782e:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
  407832:	f885 8045 	strb.w	r8, [r5, #69]	; 0x45
  407836:	233f      	movs	r3, #63	; 0x3f
  407838:	f885 3048 	strb.w	r3, [r5, #72]	; 0x48
  40783c:	2300      	movs	r3, #0
  40783e:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
  407842:	22ff      	movs	r2, #255	; 0xff
  407844:	f885 204a 	strb.w	r2, [r5, #74]	; 0x4a
  407848:	f885 304b 	strb.w	r3, [r5, #75]	; 0x4b
  40784c:	f89d 2008 	ldrb.w	r2, [sp, #8]
  407850:	f885 204c 	strb.w	r2, [r5, #76]	; 0x4c
  407854:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
  407858:	f885 304e 	strb.w	r3, [r5, #78]	; 0x4e
  40785c:	f885 304f 	strb.w	r3, [r5, #79]	; 0x4f
  407860:	4b34      	ldr	r3, [pc, #208]	; (407934 <f_mkfs+0x384>)
  407862:	4798      	blx	r3
  407864:	9007      	str	r0, [sp, #28]
  407866:	2f03      	cmp	r7, #3
  407868:	d177      	bne.n	40795a <f_mkfs+0x3aa>
  40786a:	f885 0073 	strb.w	r0, [r5, #115]	; 0x73
  40786e:	f3c0 2307 	ubfx	r3, r0, #8, #8
  407872:	f885 3074 	strb.w	r3, [r5, #116]	; 0x74
  407876:	0c03      	lsrs	r3, r0, #16
  407878:	f885 3075 	strb.w	r3, [r5, #117]	; 0x75
  40787c:	0e00      	lsrs	r0, r0, #24
  40787e:	f885 0076 	strb.w	r0, [r5, #118]	; 0x76
  407882:	f885 6054 	strb.w	r6, [r5, #84]	; 0x54
  407886:	f3c6 2307 	ubfx	r3, r6, #8, #8
  40788a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
  40788e:	0c33      	lsrs	r3, r6, #16
  407890:	f885 3056 	strb.w	r3, [r5, #86]	; 0x56
  407894:	0e33      	lsrs	r3, r6, #24
  407896:	f885 3057 	strb.w	r3, [r5, #87]	; 0x57
  40789a:	2302      	movs	r3, #2
  40789c:	f885 305c 	strb.w	r3, [r5, #92]	; 0x5c
  4078a0:	2300      	movs	r3, #0
  4078a2:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
  4078a6:	f885 305e 	strb.w	r3, [r5, #94]	; 0x5e
  4078aa:	f885 305f 	strb.w	r3, [r5, #95]	; 0x5f
  4078ae:	f04f 0901 	mov.w	r9, #1
  4078b2:	f885 9060 	strb.w	r9, [r5, #96]	; 0x60
  4078b6:	f885 3061 	strb.w	r3, [r5, #97]	; 0x61
  4078ba:	2206      	movs	r2, #6
  4078bc:	f885 2062 	strb.w	r2, [r5, #98]	; 0x62
  4078c0:	f885 3063 	strb.w	r3, [r5, #99]	; 0x63
  4078c4:	2380      	movs	r3, #128	; 0x80
  4078c6:	f885 3070 	strb.w	r3, [r5, #112]	; 0x70
  4078ca:	2329      	movs	r3, #41	; 0x29
  4078cc:	f885 3072 	strb.w	r3, [r5, #114]	; 0x72
  4078d0:	2213      	movs	r2, #19
  4078d2:	4919      	ldr	r1, [pc, #100]	; (407938 <f_mkfs+0x388>)
  4078d4:	f105 0077 	add.w	r0, r5, #119	; 0x77
  4078d8:	4b15      	ldr	r3, [pc, #84]	; (407930 <f_mkfs+0x380>)
  4078da:	4798      	blx	r3
  4078dc:	2355      	movs	r3, #85	; 0x55
  4078de:	f885 322e 	strb.w	r3, [r5, #558]	; 0x22e
  4078e2:	23aa      	movs	r3, #170	; 0xaa
  4078e4:	f885 322f 	strb.w	r3, [r5, #559]	; 0x22f
  4078e8:	464b      	mov	r3, r9
  4078ea:	9a02      	ldr	r2, [sp, #8]
  4078ec:	9901      	ldr	r1, [sp, #4]
  4078ee:	4620      	mov	r0, r4
  4078f0:	f8df 9048 	ldr.w	r9, [pc, #72]	; 40793c <f_mkfs+0x38c>
  4078f4:	47c8      	blx	r9
  4078f6:	2800      	cmp	r0, #0
  4078f8:	d05f      	beq.n	4079ba <f_mkfs+0x40a>
  4078fa:	2001      	movs	r0, #1
  4078fc:	e665      	b.n	4075ca <f_mkfs+0x1a>
  4078fe:	2f01      	cmp	r7, #1
  407900:	d003      	beq.n	40790a <f_mkfs+0x35a>
  407902:	2f02      	cmp	r7, #2
  407904:	f47f aef3 	bne.w	4076ee <f_mkfs+0x13e>
  407908:	e706      	b.n	407718 <f_mkfs+0x168>
  40790a:	9701      	str	r7, [sp, #4]
  40790c:	e70a      	b.n	407724 <f_mkfs+0x174>
  40790e:	f04f 08f0 	mov.w	r8, #240	; 0xf0
  407912:	e757      	b.n	4077c4 <f_mkfs+0x214>
  407914:	2001a2d0 	.word	0x2001a2d0
  407918:	00405c51 	.word	0x00405c51
  40791c:	00405d8d 	.word	0x00405d8d
  407920:	0040b934 	.word	0x0040b934
  407924:	0040b854 	.word	0x0040b854
  407928:	00405e69 	.word	0x00405e69
  40792c:	0040b8ec 	.word	0x0040b8ec
  407930:	00405e55 	.word	0x00405e55
  407934:	00405dfd 	.word	0x00405dfd
  407938:	0040b8f8 	.word	0x0040b8f8
  40793c:	00405d1d 	.word	0x00405d1d
  407940:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
  407944:	f3c3 2207 	ubfx	r2, r3, #8, #8
  407948:	f885 2051 	strb.w	r2, [r5, #81]	; 0x51
  40794c:	0c1a      	lsrs	r2, r3, #16
  40794e:	f885 2052 	strb.w	r2, [r5, #82]	; 0x52
  407952:	0e1b      	lsrs	r3, r3, #24
  407954:	f885 3053 	strb.w	r3, [r5, #83]	; 0x53
  407958:	e76b      	b.n	407832 <f_mkfs+0x282>
  40795a:	f885 0057 	strb.w	r0, [r5, #87]	; 0x57
  40795e:	f3c0 2307 	ubfx	r3, r0, #8, #8
  407962:	f885 3058 	strb.w	r3, [r5, #88]	; 0x58
  407966:	0c03      	lsrs	r3, r0, #16
  407968:	f885 3059 	strb.w	r3, [r5, #89]	; 0x59
  40796c:	0e00      	lsrs	r0, r0, #24
  40796e:	f885 005a 	strb.w	r0, [r5, #90]	; 0x5a
  407972:	f885 6046 	strb.w	r6, [r5, #70]	; 0x46
  407976:	f3c6 2307 	ubfx	r3, r6, #8, #8
  40797a:	f885 3047 	strb.w	r3, [r5, #71]	; 0x47
  40797e:	2380      	movs	r3, #128	; 0x80
  407980:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
  407984:	2329      	movs	r3, #41	; 0x29
  407986:	f885 3056 	strb.w	r3, [r5, #86]	; 0x56
  40798a:	2213      	movs	r2, #19
  40798c:	498b      	ldr	r1, [pc, #556]	; (407bbc <f_mkfs+0x60c>)
  40798e:	f105 005b 	add.w	r0, r5, #91	; 0x5b
  407992:	4b8b      	ldr	r3, [pc, #556]	; (407bc0 <f_mkfs+0x610>)
  407994:	4798      	blx	r3
  407996:	2355      	movs	r3, #85	; 0x55
  407998:	f885 322e 	strb.w	r3, [r5, #558]	; 0x22e
  40799c:	23aa      	movs	r3, #170	; 0xaa
  40799e:	f885 322f 	strb.w	r3, [r5, #559]	; 0x22f
  4079a2:	2301      	movs	r3, #1
  4079a4:	9a02      	ldr	r2, [sp, #8]
  4079a6:	9901      	ldr	r1, [sp, #4]
  4079a8:	4620      	mov	r0, r4
  4079aa:	f8df 921c 	ldr.w	r9, [pc, #540]	; 407bc8 <f_mkfs+0x618>
  4079ae:	47c8      	blx	r9
  4079b0:	2800      	cmp	r0, #0
  4079b2:	f000 80ea 	beq.w	407b8a <f_mkfs+0x5da>
  4079b6:	2001      	movs	r0, #1
  4079b8:	e607      	b.n	4075ca <f_mkfs+0x1a>
  4079ba:	2301      	movs	r3, #1
  4079bc:	9a02      	ldr	r2, [sp, #8]
  4079be:	3206      	adds	r2, #6
  4079c0:	f8dd b004 	ldr.w	fp, [sp, #4]
  4079c4:	4659      	mov	r1, fp
  4079c6:	4620      	mov	r0, r4
  4079c8:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 407bc8 <f_mkfs+0x618>
  4079cc:	47c8      	blx	r9
  4079ce:	f44f 7200 	mov.w	r2, #512	; 0x200
  4079d2:	2100      	movs	r1, #0
  4079d4:	4658      	mov	r0, fp
  4079d6:	4b7b      	ldr	r3, [pc, #492]	; (407bc4 <f_mkfs+0x614>)
  4079d8:	4798      	blx	r3
  4079da:	f068 03ff 	orn	r3, r8, #255	; 0xff
  4079de:	9307      	str	r3, [sp, #28]
  4079e0:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
  4079e4:	23ff      	movs	r3, #255	; 0xff
  4079e6:	f885 3031 	strb.w	r3, [r5, #49]	; 0x31
  4079ea:	f885 3032 	strb.w	r3, [r5, #50]	; 0x32
  4079ee:	f885 3033 	strb.w	r3, [r5, #51]	; 0x33
  4079f2:	f885 3034 	strb.w	r3, [r5, #52]	; 0x34
  4079f6:	f885 3035 	strb.w	r3, [r5, #53]	; 0x35
  4079fa:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
  4079fe:	f885 3037 	strb.w	r3, [r5, #55]	; 0x37
  407a02:	f885 3038 	strb.w	r3, [r5, #56]	; 0x38
  407a06:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
  407a0a:	f885 303a 	strb.w	r3, [r5, #58]	; 0x3a
  407a0e:	230f      	movs	r3, #15
  407a10:	f885 303b 	strb.w	r3, [r5, #59]	; 0x3b
  407a14:	9a05      	ldr	r2, [sp, #20]
  407a16:	f102 0801 	add.w	r8, r2, #1
  407a1a:	2301      	movs	r3, #1
  407a1c:	f8dd b004 	ldr.w	fp, [sp, #4]
  407a20:	4659      	mov	r1, fp
  407a22:	4620      	mov	r0, r4
  407a24:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 407bc8 <f_mkfs+0x618>
  407a28:	47c8      	blx	r9
  407a2a:	2800      	cmp	r0, #0
  407a2c:	f040 8089 	bne.w	407b42 <f_mkfs+0x592>
  407a30:	f44f 7200 	mov.w	r2, #512	; 0x200
  407a34:	2100      	movs	r1, #0
  407a36:	4658      	mov	r0, fp
  407a38:	4b62      	ldr	r3, [pc, #392]	; (407bc4 <f_mkfs+0x614>)
  407a3a:	4798      	blx	r3
  407a3c:	2301      	movs	r3, #1
  407a3e:	9307      	str	r3, [sp, #28]
  407a40:	4642      	mov	r2, r8
  407a42:	e00b      	b.n	407a5c <f_mkfs+0x4ac>
  407a44:	f102 0b01 	add.w	fp, r2, #1
  407a48:	2301      	movs	r3, #1
  407a4a:	9901      	ldr	r1, [sp, #4]
  407a4c:	4620      	mov	r0, r4
  407a4e:	47c8      	blx	r9
  407a50:	2800      	cmp	r0, #0
  407a52:	d178      	bne.n	407b46 <f_mkfs+0x596>
  407a54:	9b07      	ldr	r3, [sp, #28]
  407a56:	3301      	adds	r3, #1
  407a58:	9307      	str	r3, [sp, #28]
  407a5a:	465a      	mov	r2, fp
  407a5c:	9b07      	ldr	r3, [sp, #28]
  407a5e:	42b3      	cmp	r3, r6
  407a60:	d3f0      	bcc.n	407a44 <f_mkfs+0x494>
  407a62:	4690      	mov	r8, r2
  407a64:	9b04      	ldr	r3, [sp, #16]
  407a66:	9a03      	ldr	r2, [sp, #12]
  407a68:	2f03      	cmp	r7, #3
  407a6a:	bf18      	it	ne
  407a6c:	4613      	movne	r3, r2
  407a6e:	4642      	mov	r2, r8
  407a70:	f04f 0901 	mov.w	r9, #1
  407a74:	4e54      	ldr	r6, [pc, #336]	; (407bc8 <f_mkfs+0x618>)
  407a76:	4498      	add	r8, r3
  407a78:	f102 0b01 	add.w	fp, r2, #1
  407a7c:	464b      	mov	r3, r9
  407a7e:	9901      	ldr	r1, [sp, #4]
  407a80:	4620      	mov	r0, r4
  407a82:	47b0      	blx	r6
  407a84:	2800      	cmp	r0, #0
  407a86:	d160      	bne.n	407b4a <f_mkfs+0x59a>
  407a88:	465a      	mov	r2, fp
  407a8a:	45c3      	cmp	fp, r8
  407a8c:	d1f4      	bne.n	407a78 <f_mkfs+0x4c8>
  407a8e:	2f03      	cmp	r7, #3
  407a90:	d142      	bne.n	407b18 <f_mkfs+0x568>
  407a92:	2352      	movs	r3, #82	; 0x52
  407a94:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
  407a98:	f885 3031 	strb.w	r3, [r5, #49]	; 0x31
  407a9c:	2361      	movs	r3, #97	; 0x61
  407a9e:	f885 3032 	strb.w	r3, [r5, #50]	; 0x32
  407aa2:	2241      	movs	r2, #65	; 0x41
  407aa4:	f885 2033 	strb.w	r2, [r5, #51]	; 0x33
  407aa8:	2172      	movs	r1, #114	; 0x72
  407aaa:	f885 1214 	strb.w	r1, [r5, #532]	; 0x214
  407aae:	f885 1215 	strb.w	r1, [r5, #533]	; 0x215
  407ab2:	f885 2216 	strb.w	r2, [r5, #534]	; 0x216
  407ab6:	f885 3217 	strb.w	r3, [r5, #535]	; 0x217
  407aba:	f10a 33ff 	add.w	r3, sl, #4294967295
  407abe:	f885 3218 	strb.w	r3, [r5, #536]	; 0x218
  407ac2:	f3c3 2307 	ubfx	r3, r3, #8, #8
  407ac6:	f885 3219 	strb.w	r3, [r5, #537]	; 0x219
  407aca:	f10a 33ff 	add.w	r3, sl, #4294967295
  407ace:	0c1a      	lsrs	r2, r3, #16
  407ad0:	f885 221a 	strb.w	r2, [r5, #538]	; 0x21a
  407ad4:	0e1b      	lsrs	r3, r3, #24
  407ad6:	f885 321b 	strb.w	r3, [r5, #539]	; 0x21b
  407ada:	2302      	movs	r3, #2
  407adc:	f885 321c 	strb.w	r3, [r5, #540]	; 0x21c
  407ae0:	2300      	movs	r3, #0
  407ae2:	f885 321d 	strb.w	r3, [r5, #541]	; 0x21d
  407ae6:	f885 321e 	strb.w	r3, [r5, #542]	; 0x21e
  407aea:	f885 321f 	strb.w	r3, [r5, #543]	; 0x21f
  407aee:	2355      	movs	r3, #85	; 0x55
  407af0:	f885 322e 	strb.w	r3, [r5, #558]	; 0x22e
  407af4:	23aa      	movs	r3, #170	; 0xaa
  407af6:	f885 322f 	strb.w	r3, [r5, #559]	; 0x22f
  407afa:	2301      	movs	r3, #1
  407afc:	9e02      	ldr	r6, [sp, #8]
  407afe:	4632      	mov	r2, r6
  407b00:	441a      	add	r2, r3
  407b02:	9f01      	ldr	r7, [sp, #4]
  407b04:	4639      	mov	r1, r7
  407b06:	4620      	mov	r0, r4
  407b08:	4d2f      	ldr	r5, [pc, #188]	; (407bc8 <f_mkfs+0x618>)
  407b0a:	47a8      	blx	r5
  407b0c:	2301      	movs	r3, #1
  407b0e:	4632      	mov	r2, r6
  407b10:	3207      	adds	r2, #7
  407b12:	4639      	mov	r1, r7
  407b14:	4620      	mov	r0, r4
  407b16:	47a8      	blx	r5
  407b18:	2200      	movs	r2, #0
  407b1a:	4611      	mov	r1, r2
  407b1c:	4620      	mov	r0, r4
  407b1e:	4b2b      	ldr	r3, [pc, #172]	; (407bcc <f_mkfs+0x61c>)
  407b20:	4798      	blx	r3
  407b22:	3000      	adds	r0, #0
  407b24:	bf18      	it	ne
  407b26:	2001      	movne	r0, #1
  407b28:	e54f      	b.n	4075ca <f_mkfs+0x1a>
  407b2a:	200c      	movs	r0, #12
  407b2c:	e54d      	b.n	4075ca <f_mkfs+0x1a>
  407b2e:	2001      	movs	r0, #1
  407b30:	e54b      	b.n	4075ca <f_mkfs+0x1a>
  407b32:	2001      	movs	r0, #1
  407b34:	e549      	b.n	4075ca <f_mkfs+0x1a>
  407b36:	200e      	movs	r0, #14
  407b38:	e547      	b.n	4075ca <f_mkfs+0x1a>
  407b3a:	200e      	movs	r0, #14
  407b3c:	e545      	b.n	4075ca <f_mkfs+0x1a>
  407b3e:	2001      	movs	r0, #1
  407b40:	e543      	b.n	4075ca <f_mkfs+0x1a>
  407b42:	2001      	movs	r0, #1
  407b44:	e541      	b.n	4075ca <f_mkfs+0x1a>
  407b46:	2001      	movs	r0, #1
  407b48:	e53f      	b.n	4075ca <f_mkfs+0x1a>
  407b4a:	2001      	movs	r0, #1
  407b4c:	e53d      	b.n	4075ca <f_mkfs+0x1a>
  407b4e:	f64f 71f5 	movw	r1, #65525	; 0xfff5
  407b52:	428b      	cmp	r3, r1
  407b54:	f67f ad9b 	bls.w	40768e <f_mkfs+0xde>
  407b58:	009e      	lsls	r6, r3, #2
  407b5a:	f206 2607 	addw	r6, r6, #519	; 0x207
  407b5e:	0a76      	lsrs	r6, r6, #9
  407b60:	2703      	movs	r7, #3
  407b62:	2300      	movs	r3, #0
  407b64:	9303      	str	r3, [sp, #12]
  407b66:	f04f 0b20 	mov.w	fp, #32
  407b6a:	9902      	ldr	r1, [sp, #8]
  407b6c:	eb0b 0301 	add.w	r3, fp, r1
  407b70:	9305      	str	r3, [sp, #20]
  407b72:	9803      	ldr	r0, [sp, #12]
  407b74:	eb06 0a00 	add.w	sl, r6, r0
  407b78:	449a      	add	sl, r3
  407b7a:	9804      	ldr	r0, [sp, #16]
  407b7c:	1a43      	subs	r3, r0, r1
  407b7e:	4453      	add	r3, sl
  407b80:	429a      	cmp	r2, r3
  407b82:	f4bf ad8b 	bcs.w	40769c <f_mkfs+0xec>
  407b86:	200e      	movs	r0, #14
  407b88:	e51f      	b.n	4075ca <f_mkfs+0x1a>
  407b8a:	f44f 7200 	mov.w	r2, #512	; 0x200
  407b8e:	2100      	movs	r1, #0
  407b90:	9801      	ldr	r0, [sp, #4]
  407b92:	4b0c      	ldr	r3, [pc, #48]	; (407bc4 <f_mkfs+0x614>)
  407b94:	4798      	blx	r3
  407b96:	2f01      	cmp	r7, #1
  407b98:	4b0d      	ldr	r3, [pc, #52]	; (407bd0 <f_mkfs+0x620>)
  407b9a:	bf18      	it	ne
  407b9c:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
  407ba0:	ea43 0308 	orr.w	r3, r3, r8
  407ba4:	9307      	str	r3, [sp, #28]
  407ba6:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
  407baa:	22ff      	movs	r2, #255	; 0xff
  407bac:	f885 2031 	strb.w	r2, [r5, #49]	; 0x31
  407bb0:	f885 2032 	strb.w	r2, [r5, #50]	; 0x32
  407bb4:	0e1b      	lsrs	r3, r3, #24
  407bb6:	f885 3033 	strb.w	r3, [r5, #51]	; 0x33
  407bba:	e72b      	b.n	407a14 <f_mkfs+0x464>
  407bbc:	0040b90c 	.word	0x0040b90c
  407bc0:	00405e55 	.word	0x00405e55
  407bc4:	00405e69 	.word	0x00405e69
  407bc8:	00405d1d 	.word	0x00405d1d
  407bcc:	00405d8d 	.word	0x00405d8d
  407bd0:	00ffff00 	.word	0x00ffff00

00407bd4 <f_putc>:
  407bd4:	b510      	push	{r4, lr}
  407bd6:	b082      	sub	sp, #8
  407bd8:	460c      	mov	r4, r1
  407bda:	f88d 0000 	strb.w	r0, [sp]
  407bde:	ab01      	add	r3, sp, #4
  407be0:	2201      	movs	r2, #1
  407be2:	4669      	mov	r1, sp
  407be4:	4620      	mov	r0, r4
  407be6:	4c05      	ldr	r4, [pc, #20]	; (407bfc <f_putc+0x28>)
  407be8:	47a0      	blx	r4
  407bea:	9b01      	ldr	r3, [sp, #4]
  407bec:	2b01      	cmp	r3, #1
  407bee:	bf0c      	ite	eq
  407bf0:	2001      	moveq	r0, #1
  407bf2:	f04f 30ff 	movne.w	r0, #4294967295
  407bf6:	b002      	add	sp, #8
  407bf8:	bd10      	pop	{r4, pc}
  407bfa:	bf00      	nop
  407bfc:	004072d1 	.word	0x004072d1

00407c00 <f_puts>:
  407c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407c02:	7803      	ldrb	r3, [r0, #0]
  407c04:	b17b      	cbz	r3, 407c26 <f_puts+0x26>
  407c06:	460e      	mov	r6, r1
  407c08:	4605      	mov	r5, r0
  407c0a:	1c44      	adds	r4, r0, #1
  407c0c:	4f07      	ldr	r7, [pc, #28]	; (407c2c <f_puts+0x2c>)
  407c0e:	4631      	mov	r1, r6
  407c10:	4618      	mov	r0, r3
  407c12:	47b8      	blx	r7
  407c14:	f1b0 3fff 	cmp.w	r0, #4294967295
  407c18:	d006      	beq.n	407c28 <f_puts+0x28>
  407c1a:	1b60      	subs	r0, r4, r5
  407c1c:	f814 3b01 	ldrb.w	r3, [r4], #1
  407c20:	2b00      	cmp	r3, #0
  407c22:	d1f4      	bne.n	407c0e <f_puts+0xe>
  407c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407c26:	2000      	movs	r0, #0
  407c28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407c2a:	bf00      	nop
  407c2c:	00407bd5 	.word	0x00407bd5

00407c30 <ff_convert>:
  407c30:	287f      	cmp	r0, #127	; 0x7f
  407c32:	d919      	bls.n	407c68 <ff_convert+0x38>
  407c34:	b971      	cbnz	r1, 407c54 <ff_convert+0x24>
  407c36:	28c7      	cmp	r0, #199	; 0xc7
  407c38:	d013      	beq.n	407c62 <ff_convert+0x32>
  407c3a:	4a0c      	ldr	r2, [pc, #48]	; (407c6c <ff_convert+0x3c>)
  407c3c:	2301      	movs	r3, #1
  407c3e:	f832 1f02 	ldrh.w	r1, [r2, #2]!
  407c42:	4281      	cmp	r1, r0
  407c44:	d003      	beq.n	407c4e <ff_convert+0x1e>
  407c46:	3301      	adds	r3, #1
  407c48:	b29b      	uxth	r3, r3
  407c4a:	2b80      	cmp	r3, #128	; 0x80
  407c4c:	d1f7      	bne.n	407c3e <ff_convert+0xe>
  407c4e:	3380      	adds	r3, #128	; 0x80
  407c50:	b2d8      	uxtb	r0, r3
  407c52:	4770      	bx	lr
  407c54:	28ff      	cmp	r0, #255	; 0xff
  407c56:	d806      	bhi.n	407c66 <ff_convert+0x36>
  407c58:	3880      	subs	r0, #128	; 0x80
  407c5a:	4b04      	ldr	r3, [pc, #16]	; (407c6c <ff_convert+0x3c>)
  407c5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
  407c60:	4770      	bx	lr
  407c62:	2300      	movs	r3, #0
  407c64:	e7f3      	b.n	407c4e <ff_convert+0x1e>
  407c66:	2000      	movs	r0, #0
  407c68:	4770      	bx	lr
  407c6a:	bf00      	nop
  407c6c:	0040b94c 	.word	0x0040b94c

00407c70 <ff_wtoupper>:
  407c70:	2861      	cmp	r0, #97	; 0x61
  407c72:	d010      	beq.n	407c96 <ff_wtoupper+0x26>
  407c74:	4909      	ldr	r1, [pc, #36]	; (407c9c <ff_wtoupper+0x2c>)
  407c76:	2201      	movs	r2, #1
  407c78:	2362      	movs	r3, #98	; 0x62
  407c7a:	4298      	cmp	r0, r3
  407c7c:	d005      	beq.n	407c8a <ff_wtoupper+0x1a>
  407c7e:	3201      	adds	r2, #1
  407c80:	f831 3f02 	ldrh.w	r3, [r1, #2]!
  407c84:	2b00      	cmp	r3, #0
  407c86:	d1f8      	bne.n	407c7a <ff_wtoupper+0xa>
  407c88:	e003      	b.n	407c92 <ff_wtoupper+0x22>
  407c8a:	b118      	cbz	r0, 407c94 <ff_wtoupper+0x24>
  407c8c:	4b04      	ldr	r3, [pc, #16]	; (407ca0 <ff_wtoupper+0x30>)
  407c8e:	f833 0012 	ldrh.w	r0, [r3, r2, lsl #1]
  407c92:	4770      	bx	lr
  407c94:	4770      	bx	lr
  407c96:	2200      	movs	r2, #0
  407c98:	e7f8      	b.n	407c8c <ff_wtoupper+0x1c>
  407c9a:	bf00      	nop
  407c9c:	0040ba4e 	.word	0x0040ba4e
  407ca0:	0040bc2c 	.word	0x0040bc2c

00407ca4 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  407ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
  407ca6:	b083      	sub	sp, #12
  407ca8:	4604      	mov	r4, r0
  407caa:	460e      	mov	r6, r1
	uint32_t val = 0;
  407cac:	2300      	movs	r3, #0
  407cae:	9301      	str	r3, [sp, #4]
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  407cb0:	4b34      	ldr	r3, [pc, #208]	; (407d84 <usart_serial_getchar+0xe0>)
  407cb2:	4298      	cmp	r0, r3
  407cb4:	d016      	beq.n	407ce4 <usart_serial_getchar+0x40>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  407cb6:	4b34      	ldr	r3, [pc, #208]	; (407d88 <usart_serial_getchar+0xe4>)
  407cb8:	4298      	cmp	r0, r3
  407cba:	d01d      	beq.n	407cf8 <usart_serial_getchar+0x54>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  407cbc:	4b33      	ldr	r3, [pc, #204]	; (407d8c <usart_serial_getchar+0xe8>)
  407cbe:	4298      	cmp	r0, r3
  407cc0:	d024      	beq.n	407d0c <usart_serial_getchar+0x68>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
  407cc2:	4b33      	ldr	r3, [pc, #204]	; (407d90 <usart_serial_getchar+0xec>)
  407cc4:	429c      	cmp	r4, r3
  407cc6:	d02b      	beq.n	407d20 <usart_serial_getchar+0x7c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART4
	if (USART4 == p_usart) {
  407cc8:	4b32      	ldr	r3, [pc, #200]	; (407d94 <usart_serial_getchar+0xf0>)
  407cca:	429c      	cmp	r4, r3
  407ccc:	d032      	beq.n	407d34 <usart_serial_getchar+0x90>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART5
	if (USART5 == p_usart) {
  407cce:	4b32      	ldr	r3, [pc, #200]	; (407d98 <usart_serial_getchar+0xf4>)
  407cd0:	429c      	cmp	r4, r3
  407cd2:	d039      	beq.n	407d48 <usart_serial_getchar+0xa4>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART6
	if (USART6 == p_usart) {
  407cd4:	4b31      	ldr	r3, [pc, #196]	; (407d9c <usart_serial_getchar+0xf8>)
  407cd6:	429c      	cmp	r4, r3
  407cd8:	d040      	beq.n	407d5c <usart_serial_getchar+0xb8>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART7
	if (USART7 == p_usart) {
  407cda:	4b31      	ldr	r3, [pc, #196]	; (407da0 <usart_serial_getchar+0xfc>)
  407cdc:	429c      	cmp	r4, r3
  407cde:	d047      	beq.n	407d70 <usart_serial_getchar+0xcc>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  407ce0:	b003      	add	sp, #12
  407ce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (usart_read(p_usart, &val));
  407ce4:	461f      	mov	r7, r3
  407ce6:	4d2f      	ldr	r5, [pc, #188]	; (407da4 <usart_serial_getchar+0x100>)
  407ce8:	a901      	add	r1, sp, #4
  407cea:	4638      	mov	r0, r7
  407cec:	47a8      	blx	r5
  407cee:	2800      	cmp	r0, #0
  407cf0:	d1fa      	bne.n	407ce8 <usart_serial_getchar+0x44>
		*data = (uint8_t)(val & 0xFF);
  407cf2:	9b01      	ldr	r3, [sp, #4]
  407cf4:	7033      	strb	r3, [r6, #0]
  407cf6:	e7e4      	b.n	407cc2 <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
  407cf8:	461f      	mov	r7, r3
  407cfa:	4d2a      	ldr	r5, [pc, #168]	; (407da4 <usart_serial_getchar+0x100>)
  407cfc:	a901      	add	r1, sp, #4
  407cfe:	4638      	mov	r0, r7
  407d00:	47a8      	blx	r5
  407d02:	2800      	cmp	r0, #0
  407d04:	d1fa      	bne.n	407cfc <usart_serial_getchar+0x58>
		*data = (uint8_t)(val & 0xFF);
  407d06:	9b01      	ldr	r3, [sp, #4]
  407d08:	7033      	strb	r3, [r6, #0]
  407d0a:	e7dd      	b.n	407cc8 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  407d0c:	461f      	mov	r7, r3
  407d0e:	4d25      	ldr	r5, [pc, #148]	; (407da4 <usart_serial_getchar+0x100>)
  407d10:	a901      	add	r1, sp, #4
  407d12:	4638      	mov	r0, r7
  407d14:	47a8      	blx	r5
  407d16:	2800      	cmp	r0, #0
  407d18:	d1fa      	bne.n	407d10 <usart_serial_getchar+0x6c>
		*data = (uint8_t)(val & 0xFF);
  407d1a:	9b01      	ldr	r3, [sp, #4]
  407d1c:	7033      	strb	r3, [r6, #0]
  407d1e:	e7d6      	b.n	407cce <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
  407d20:	461f      	mov	r7, r3
  407d22:	4d20      	ldr	r5, [pc, #128]	; (407da4 <usart_serial_getchar+0x100>)
  407d24:	a901      	add	r1, sp, #4
  407d26:	4638      	mov	r0, r7
  407d28:	47a8      	blx	r5
  407d2a:	2800      	cmp	r0, #0
  407d2c:	d1fa      	bne.n	407d24 <usart_serial_getchar+0x80>
		*data = (uint8_t)(val & 0xFF);
  407d2e:	9b01      	ldr	r3, [sp, #4]
  407d30:	7033      	strb	r3, [r6, #0]
  407d32:	e7cf      	b.n	407cd4 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  407d34:	461f      	mov	r7, r3
  407d36:	4d1b      	ldr	r5, [pc, #108]	; (407da4 <usart_serial_getchar+0x100>)
  407d38:	a901      	add	r1, sp, #4
  407d3a:	4638      	mov	r0, r7
  407d3c:	47a8      	blx	r5
  407d3e:	2800      	cmp	r0, #0
  407d40:	d1fa      	bne.n	407d38 <usart_serial_getchar+0x94>
		*data = (uint8_t)(val & 0xFF);
  407d42:	9b01      	ldr	r3, [sp, #4]
  407d44:	7033      	strb	r3, [r6, #0]
  407d46:	e7c8      	b.n	407cda <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  407d48:	461d      	mov	r5, r3
  407d4a:	4c16      	ldr	r4, [pc, #88]	; (407da4 <usart_serial_getchar+0x100>)
  407d4c:	a901      	add	r1, sp, #4
  407d4e:	4628      	mov	r0, r5
  407d50:	47a0      	blx	r4
  407d52:	2800      	cmp	r0, #0
  407d54:	d1fa      	bne.n	407d4c <usart_serial_getchar+0xa8>
		*data = (uint8_t)(val & 0xFF);
  407d56:	9b01      	ldr	r3, [sp, #4]
  407d58:	7033      	strb	r3, [r6, #0]
  407d5a:	e7c1      	b.n	407ce0 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
  407d5c:	461d      	mov	r5, r3
  407d5e:	4c11      	ldr	r4, [pc, #68]	; (407da4 <usart_serial_getchar+0x100>)
  407d60:	a901      	add	r1, sp, #4
  407d62:	4628      	mov	r0, r5
  407d64:	47a0      	blx	r4
  407d66:	2800      	cmp	r0, #0
  407d68:	d1fa      	bne.n	407d60 <usart_serial_getchar+0xbc>
		*data = (uint8_t)(val & 0xFF);
  407d6a:	9b01      	ldr	r3, [sp, #4]
  407d6c:	7033      	strb	r3, [r6, #0]
  407d6e:	e7b7      	b.n	407ce0 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
  407d70:	461d      	mov	r5, r3
  407d72:	4c0c      	ldr	r4, [pc, #48]	; (407da4 <usart_serial_getchar+0x100>)
  407d74:	a901      	add	r1, sp, #4
  407d76:	4628      	mov	r0, r5
  407d78:	47a0      	blx	r4
  407d7a:	2800      	cmp	r0, #0
  407d7c:	d1fa      	bne.n	407d74 <usart_serial_getchar+0xd0>
		*data = (uint8_t)(val & 0xFF);
  407d7e:	9b01      	ldr	r3, [sp, #4]
  407d80:	7033      	strb	r3, [r6, #0]
}
  407d82:	e7ad      	b.n	407ce0 <usart_serial_getchar+0x3c>
  407d84:	4000c200 	.word	0x4000c200
  407d88:	40020200 	.word	0x40020200
  407d8c:	40024200 	.word	0x40024200
  407d90:	40018200 	.word	0x40018200
  407d94:	4001c200 	.word	0x4001c200
  407d98:	40008200 	.word	0x40008200
  407d9c:	40040200 	.word	0x40040200
  407da0:	40034200 	.word	0x40034200
  407da4:	004059ad 	.word	0x004059ad

00407da8 <usart_serial_putchar>:
{
  407da8:	b570      	push	{r4, r5, r6, lr}
  407daa:	460c      	mov	r4, r1
	if (USART0 == p_usart) {
  407dac:	4b30      	ldr	r3, [pc, #192]	; (407e70 <usart_serial_putchar+0xc8>)
  407dae:	4298      	cmp	r0, r3
  407db0:	d016      	beq.n	407de0 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
  407db2:	4b30      	ldr	r3, [pc, #192]	; (407e74 <usart_serial_putchar+0xcc>)
  407db4:	4298      	cmp	r0, r3
  407db6:	d01c      	beq.n	407df2 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
  407db8:	4b2f      	ldr	r3, [pc, #188]	; (407e78 <usart_serial_putchar+0xd0>)
  407dba:	4298      	cmp	r0, r3
  407dbc:	d022      	beq.n	407e04 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
  407dbe:	4b2f      	ldr	r3, [pc, #188]	; (407e7c <usart_serial_putchar+0xd4>)
  407dc0:	4298      	cmp	r0, r3
  407dc2:	d028      	beq.n	407e16 <usart_serial_putchar+0x6e>
	if (USART4 == p_usart) {
  407dc4:	4b2e      	ldr	r3, [pc, #184]	; (407e80 <usart_serial_putchar+0xd8>)
  407dc6:	4298      	cmp	r0, r3
  407dc8:	d02e      	beq.n	407e28 <usart_serial_putchar+0x80>
	if (USART5 == p_usart) {
  407dca:	4b2e      	ldr	r3, [pc, #184]	; (407e84 <usart_serial_putchar+0xdc>)
  407dcc:	4298      	cmp	r0, r3
  407dce:	d034      	beq.n	407e3a <usart_serial_putchar+0x92>
	if (USART6 == p_usart) {
  407dd0:	4b2d      	ldr	r3, [pc, #180]	; (407e88 <usart_serial_putchar+0xe0>)
  407dd2:	4298      	cmp	r0, r3
  407dd4:	d03a      	beq.n	407e4c <usart_serial_putchar+0xa4>
	if (USART7 == p_usart) {
  407dd6:	4b2d      	ldr	r3, [pc, #180]	; (407e8c <usart_serial_putchar+0xe4>)
  407dd8:	4298      	cmp	r0, r3
  407dda:	d040      	beq.n	407e5e <usart_serial_putchar+0xb6>
	return 0;
  407ddc:	2000      	movs	r0, #0
}
  407dde:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407de0:	461e      	mov	r6, r3
  407de2:	4d2b      	ldr	r5, [pc, #172]	; (407e90 <usart_serial_putchar+0xe8>)
  407de4:	4621      	mov	r1, r4
  407de6:	4630      	mov	r0, r6
  407de8:	47a8      	blx	r5
  407dea:	2800      	cmp	r0, #0
  407dec:	d1fa      	bne.n	407de4 <usart_serial_putchar+0x3c>
		return 1;
  407dee:	2001      	movs	r0, #1
  407df0:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407df2:	461e      	mov	r6, r3
  407df4:	4d26      	ldr	r5, [pc, #152]	; (407e90 <usart_serial_putchar+0xe8>)
  407df6:	4621      	mov	r1, r4
  407df8:	4630      	mov	r0, r6
  407dfa:	47a8      	blx	r5
  407dfc:	2800      	cmp	r0, #0
  407dfe:	d1fa      	bne.n	407df6 <usart_serial_putchar+0x4e>
		return 1;
  407e00:	2001      	movs	r0, #1
  407e02:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e04:	461e      	mov	r6, r3
  407e06:	4d22      	ldr	r5, [pc, #136]	; (407e90 <usart_serial_putchar+0xe8>)
  407e08:	4621      	mov	r1, r4
  407e0a:	4630      	mov	r0, r6
  407e0c:	47a8      	blx	r5
  407e0e:	2800      	cmp	r0, #0
  407e10:	d1fa      	bne.n	407e08 <usart_serial_putchar+0x60>
		return 1;
  407e12:	2001      	movs	r0, #1
  407e14:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e16:	461e      	mov	r6, r3
  407e18:	4d1d      	ldr	r5, [pc, #116]	; (407e90 <usart_serial_putchar+0xe8>)
  407e1a:	4621      	mov	r1, r4
  407e1c:	4630      	mov	r0, r6
  407e1e:	47a8      	blx	r5
  407e20:	2800      	cmp	r0, #0
  407e22:	d1fa      	bne.n	407e1a <usart_serial_putchar+0x72>
		return 1;
  407e24:	2001      	movs	r0, #1
  407e26:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e28:	461e      	mov	r6, r3
  407e2a:	4d19      	ldr	r5, [pc, #100]	; (407e90 <usart_serial_putchar+0xe8>)
  407e2c:	4621      	mov	r1, r4
  407e2e:	4630      	mov	r0, r6
  407e30:	47a8      	blx	r5
  407e32:	2800      	cmp	r0, #0
  407e34:	d1fa      	bne.n	407e2c <usart_serial_putchar+0x84>
		return 1;
  407e36:	2001      	movs	r0, #1
  407e38:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e3a:	461e      	mov	r6, r3
  407e3c:	4d14      	ldr	r5, [pc, #80]	; (407e90 <usart_serial_putchar+0xe8>)
  407e3e:	4621      	mov	r1, r4
  407e40:	4630      	mov	r0, r6
  407e42:	47a8      	blx	r5
  407e44:	2800      	cmp	r0, #0
  407e46:	d1fa      	bne.n	407e3e <usart_serial_putchar+0x96>
		return 1;
  407e48:	2001      	movs	r0, #1
  407e4a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e4c:	461e      	mov	r6, r3
  407e4e:	4d10      	ldr	r5, [pc, #64]	; (407e90 <usart_serial_putchar+0xe8>)
  407e50:	4621      	mov	r1, r4
  407e52:	4630      	mov	r0, r6
  407e54:	47a8      	blx	r5
  407e56:	2800      	cmp	r0, #0
  407e58:	d1fa      	bne.n	407e50 <usart_serial_putchar+0xa8>
		return 1;
  407e5a:	2001      	movs	r0, #1
  407e5c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  407e5e:	461e      	mov	r6, r3
  407e60:	4d0b      	ldr	r5, [pc, #44]	; (407e90 <usart_serial_putchar+0xe8>)
  407e62:	4621      	mov	r1, r4
  407e64:	4630      	mov	r0, r6
  407e66:	47a8      	blx	r5
  407e68:	2800      	cmp	r0, #0
  407e6a:	d1fa      	bne.n	407e62 <usart_serial_putchar+0xba>
		return 1;
  407e6c:	2001      	movs	r0, #1
  407e6e:	bd70      	pop	{r4, r5, r6, pc}
  407e70:	4000c200 	.word	0x4000c200
  407e74:	40020200 	.word	0x40020200
  407e78:	40024200 	.word	0x40024200
  407e7c:	40018200 	.word	0x40018200
  407e80:	4001c200 	.word	0x4001c200
  407e84:	40008200 	.word	0x40008200
  407e88:	40040200 	.word	0x40040200
  407e8c:	40034200 	.word	0x40034200
  407e90:	00405999 	.word	0x00405999

00407e94 <configure_console>:

//static void cdc_read_callback(struct usart_module *const usart_module);
static void cdc_read_callback(void);

void configure_console(void)
{
  407e94:	b5f0      	push	{r4, r5, r6, r7, lr}
  407e96:	b087      	sub	sp, #28
		.charlength =	CONSOLE_UART_CHAR_LENGTH,
		.paritytype =	CONSOLE_UART_PARITY,
		.stopbits =		CONSOLE_UART_STOP_BITS,
	};
	
	pio_configure_pin(CONSOLE_UART_TXD_PIN, CONSOLE_UART_TXD_FLAG);
  407e98:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  407e9c:	201c      	movs	r0, #28
  407e9e:	4c21      	ldr	r4, [pc, #132]	; (407f24 <configure_console+0x90>)
  407ea0:	47a0      	blx	r4
	pio_configure_pin(CONSOLE_UART_RXD_PIN, CONSOLE_UART_RXD_FLAG);
  407ea2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  407ea6:	201b      	movs	r0, #27
  407ea8:	47a0      	blx	r4
  407eaa:	2007      	movs	r0, #7
  407eac:	4b1e      	ldr	r3, [pc, #120]	; (407f28 <configure_console+0x94>)
  407eae:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  407eb0:	4c1e      	ldr	r4, [pc, #120]	; (407f2c <configure_console+0x98>)
  407eb2:	4b1f      	ldr	r3, [pc, #124]	; (407f30 <configure_console+0x9c>)
  407eb4:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  407eb6:	4a1f      	ldr	r2, [pc, #124]	; (407f34 <configure_console+0xa0>)
  407eb8:	4b1f      	ldr	r3, [pc, #124]	; (407f38 <configure_console+0xa4>)
  407eba:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  407ebc:	4a1f      	ldr	r2, [pc, #124]	; (407f3c <configure_console+0xa8>)
  407ebe:	4b20      	ldr	r3, [pc, #128]	; (407f40 <configure_console+0xac>)
  407ec0:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  407ec2:	f44f 2361 	mov.w	r3, #921600	; 0xe1000
  407ec6:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  407ec8:	23c0      	movs	r3, #192	; 0xc0
  407eca:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  407ecc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  407ed0:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  407ed2:	2500      	movs	r5, #0
  407ed4:	9503      	str	r5, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  407ed6:	9504      	str	r5, [sp, #16]
		flexcom_enable(FLEXCOM7);
  407ed8:	4e1a      	ldr	r6, [pc, #104]	; (407f44 <configure_console+0xb0>)
  407eda:	4630      	mov	r0, r6
  407edc:	4b1a      	ldr	r3, [pc, #104]	; (407f48 <configure_console+0xb4>)
  407ede:	4798      	blx	r3
		flexcom_set_opmode(FLEXCOM7, FLEXCOM_USART);
  407ee0:	2101      	movs	r1, #1
  407ee2:	4630      	mov	r0, r6
  407ee4:	4b19      	ldr	r3, [pc, #100]	; (407f4c <configure_console+0xb8>)
  407ee6:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
  407ee8:	4a19      	ldr	r2, [pc, #100]	; (407f50 <configure_console+0xbc>)
  407eea:	4669      	mov	r1, sp
  407eec:	4620      	mov	r0, r4
  407eee:	4b19      	ldr	r3, [pc, #100]	; (407f54 <configure_console+0xc0>)
  407ef0:	4798      	blx	r3
		usart_enable_tx(p_usart);
  407ef2:	4620      	mov	r0, r4
  407ef4:	4b18      	ldr	r3, [pc, #96]	; (407f58 <configure_console+0xc4>)
  407ef6:	4798      	blx	r3
		usart_enable_rx(p_usart);
  407ef8:	4620      	mov	r0, r4
  407efa:	4b18      	ldr	r3, [pc, #96]	; (407f5c <configure_console+0xc8>)
  407efc:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  407efe:	4f18      	ldr	r7, [pc, #96]	; (407f60 <configure_console+0xcc>)
  407f00:	683b      	ldr	r3, [r7, #0]
  407f02:	4629      	mov	r1, r5
  407f04:	6898      	ldr	r0, [r3, #8]
  407f06:	4e17      	ldr	r6, [pc, #92]	; (407f64 <configure_console+0xd0>)
  407f08:	47b0      	blx	r6
	setbuf(stdin, NULL);
  407f0a:	683b      	ldr	r3, [r7, #0]
  407f0c:	4629      	mov	r1, r5
  407f0e:	6858      	ldr	r0, [r3, #4]
  407f10:	47b0      	blx	r6
	/* Configure UART console. */
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONSOLE_UART, &uart_serial_options);
	
		#if (USE_SCANF != true)
	usart_enable_interrupt(CONSOLE_UART, US_IER_RXRDY);
  407f12:	2101      	movs	r1, #1
  407f14:	4620      	mov	r0, r4
  407f16:	4b14      	ldr	r3, [pc, #80]	; (407f68 <configure_console+0xd4>)
  407f18:	4798      	blx	r3
  407f1a:	2280      	movs	r2, #128	; 0x80
  407f1c:	4b13      	ldr	r3, [pc, #76]	; (407f6c <configure_console+0xd8>)
  407f1e:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(CONSOLE_UART_IRQN);
		#endif
	#endif
}
  407f20:	b007      	add	sp, #28
  407f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407f24:	00403625 	.word	0x00403625
  407f28:	0040384d 	.word	0x0040384d
  407f2c:	40034200 	.word	0x40034200
  407f30:	2001ab40 	.word	0x2001ab40
  407f34:	00407da9 	.word	0x00407da9
  407f38:	2001ab3c 	.word	0x2001ab3c
  407f3c:	00407ca5 	.word	0x00407ca5
  407f40:	2001ab38 	.word	0x2001ab38
  407f44:	40034000 	.word	0x40034000
  407f48:	004033b5 	.word	0x004033b5
  407f4c:	00403541 	.word	0x00403541
  407f50:	03938000 	.word	0x03938000
  407f54:	00405935 	.word	0x00405935
  407f58:	00405989 	.word	0x00405989
  407f5c:	0040598f 	.word	0x0040598f
  407f60:	20000240 	.word	0x20000240
  407f64:	0040858d 	.word	0x0040858d
  407f68:	00405995 	.word	0x00405995
  407f6c:	e000e100 	.word	0xe000e100

00407f70 <FLEXCOM7_Handler>:
		cdcRxBufferIndex = 0;
	}
}

void CONSOLE_UART_HANDLER(void)
{
  407f70:	b510      	push	{r4, lr}
  __ASM volatile ("cpsid i" : : : "memory");
  407f72:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  407f74:	f3bf 8f5f 	dmb	sy
	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
  407f78:	2200      	movs	r2, #0
  407f7a:	4b0f      	ldr	r3, [pc, #60]	; (407fb8 <FLEXCOM7_Handler+0x48>)
  407f7c:	701a      	strb	r2, [r3, #0]
	usart_serial_read_packet(CONSOLE_UART, &cdcRxData, 1);
  407f7e:	4c0f      	ldr	r4, [pc, #60]	; (407fbc <FLEXCOM7_Handler+0x4c>)
  407f80:	2201      	movs	r2, #1
  407f82:	4621      	mov	r1, r4
  407f84:	480e      	ldr	r0, [pc, #56]	; (407fc0 <FLEXCOM7_Handler+0x50>)
  407f86:	4b0f      	ldr	r3, [pc, #60]	; (407fc4 <FLEXCOM7_Handler+0x54>)
  407f88:	4798      	blx	r3
	cdcRxBuffer[cdcRxBufferIndex] = cdcRxData;
  407f8a:	4b0f      	ldr	r3, [pc, #60]	; (407fc8 <FLEXCOM7_Handler+0x58>)
  407f8c:	881b      	ldrh	r3, [r3, #0]
  407f8e:	8821      	ldrh	r1, [r4, #0]
  407f90:	4a0e      	ldr	r2, [pc, #56]	; (407fcc <FLEXCOM7_Handler+0x5c>)
  407f92:	54d1      	strb	r1, [r2, r3]
	if((++ cdcRxBufferIndex) >= sizeof(cdcRxBuffer))
  407f94:	3301      	adds	r3, #1
  407f96:	b29b      	uxth	r3, r3
  407f98:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  407f9c:	d309      	bcc.n	407fb2 <FLEXCOM7_Handler+0x42>
		cdcRxBufferIndex = 0;
  407f9e:	2200      	movs	r2, #0
  407fa0:	4b09      	ldr	r3, [pc, #36]	; (407fc8 <FLEXCOM7_Handler+0x58>)
  407fa2:	801a      	strh	r2, [r3, #0]
	cdc_read_callback();
	cpu_irq_enable();
  407fa4:	2201      	movs	r2, #1
  407fa6:	4b04      	ldr	r3, [pc, #16]	; (407fb8 <FLEXCOM7_Handler+0x48>)
  407fa8:	701a      	strb	r2, [r3, #0]
  407faa:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  407fae:	b662      	cpsie	i
  407fb0:	bd10      	pop	{r4, pc}
	if((++ cdcRxBufferIndex) >= sizeof(cdcRxBuffer))
  407fb2:	4a05      	ldr	r2, [pc, #20]	; (407fc8 <FLEXCOM7_Handler+0x58>)
  407fb4:	8013      	strh	r3, [r2, #0]
  407fb6:	e7f5      	b.n	407fa4 <FLEXCOM7_Handler+0x34>
  407fb8:	200001fc 	.word	0x200001fc
  407fbc:	2001a6f6 	.word	0x2001a6f6
  407fc0:	40034200 	.word	0x40034200
  407fc4:	004015b9 	.word	0x004015b9
  407fc8:	2001a6f4 	.word	0x2001a6f4
  407fcc:	2001a2f4 	.word	0x2001a2f4

00407fd0 <main>:
static volatile bool main_b_cdc_enable = false;

/*! \brief Main function. Execution starts here.
 */
int main(void)
{
  407fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407fd4:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
	bool MSCEnableStatus = false;
	uint32_t MSCEnableCount = 0;
	
	char test_file_name[] = "0:sd_mmc_test.txt";
  407fd8:	f20d 4454 	addw	r4, sp, #1108	; 0x454
  407fdc:	4d74      	ldr	r5, [pc, #464]	; (4081b0 <main+0x1e0>)
  407fde:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  407fe0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  407fe2:	682b      	ldr	r3, [r5, #0]
  407fe4:	8023      	strh	r3, [r4, #0]
	FRESULT res;
	FATFS fs;
	FIL file_object;
	
	irq_initialize_vectors();
	cpu_irq_enable();
  407fe6:	2501      	movs	r5, #1
  407fe8:	4b72      	ldr	r3, [pc, #456]	; (4081b4 <main+0x1e4>)
  407fea:	701d      	strb	r5, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  407fec:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  407ff0:	b662      	cpsie	i
		sleepmgr_locks[i] = 0;
  407ff2:	4b71      	ldr	r3, [pc, #452]	; (4081b8 <main+0x1e8>)
  407ff4:	2400      	movs	r4, #0
  407ff6:	701c      	strb	r4, [r3, #0]
  407ff8:	705c      	strb	r4, [r3, #1]
  407ffa:	709c      	strb	r4, [r3, #2]
  407ffc:	70dc      	strb	r4, [r3, #3]
  407ffe:	711c      	strb	r4, [r3, #4]
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
  408000:	715d      	strb	r5, [r3, #5]

	// Initialize the sleep manager
	sleepmgr_init();
#if !SAM0
	sysclk_init();
  408002:	4b6e      	ldr	r3, [pc, #440]	; (4081bc <main+0x1ec>)
  408004:	4798      	blx	r3
	board_init();
  408006:	4b6e      	ldr	r3, [pc, #440]	; (4081c0 <main+0x1f0>)
  408008:	4798      	blx	r3
#else
	system_init();
#endif

	//Set PA17 as PCK1 output pin, peripheral B
	pio_configure_pin(PIO_PA17_IDX, (PIO_PERIPH_B | PIO_DEFAULT));
  40800a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40800e:	2011      	movs	r0, #17
  408010:	4b6c      	ldr	r3, [pc, #432]	; (4081c4 <main+0x1f4>)
  408012:	4798      	blx	r3
	
	pmc_enable_pck(1);
  408014:	4628      	mov	r0, r5
  408016:	4b6c      	ldr	r3, [pc, #432]	; (4081c8 <main+0x1f8>)
  408018:	4798      	blx	r3
	pmc_pck_set_source(1, PMC_PCK_CSS_PLLB_CLK);
  40801a:	2103      	movs	r1, #3
  40801c:	4628      	mov	r0, r5
  40801e:	4b6b      	ldr	r3, [pc, #428]	; (4081cc <main+0x1fc>)
  408020:	4798      	blx	r3
	
	configure_console();
  408022:	4b6b      	ldr	r3, [pc, #428]	; (4081d0 <main+0x200>)
  408024:	4798      	blx	r3
	
	DBG_MSG_PRINT(STRING_HEADER);
  408026:	486b      	ldr	r0, [pc, #428]	; (4081d4 <main+0x204>)
  408028:	4d6b      	ldr	r5, [pc, #428]	; (4081d8 <main+0x208>)
  40802a:	47a8      	blx	r5
	
	ui_init();
  40802c:	4b6b      	ldr	r3, [pc, #428]	; (4081dc <main+0x20c>)
  40802e:	4798      	blx	r3
	ui_powerdown();
  408030:	4b6b      	ldr	r3, [pc, #428]	; (4081e0 <main+0x210>)
  408032:	4798      	blx	r3
	
	memories_initialization();
  408034:	4b6b      	ldr	r3, [pc, #428]	; (4081e4 <main+0x214>)
  408036:	4798      	blx	r3
	/* Initialize SD MMC stack */
	sd_mmc_init();
  408038:	4b6b      	ldr	r3, [pc, #428]	; (4081e8 <main+0x218>)
  40803a:	4798      	blx	r3
	MATRIX->CCFG_USBMR |= (1 << 4);
  40803c:	4a6b      	ldr	r2, [pc, #428]	; (4081ec <main+0x21c>)
  40803e:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
  408042:	f043 0310 	orr.w	r3, r3, #16
  408046:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
	
	/* Insert application code here, after the board has been initialized. */
	DBG_MSG_PRINT("Mount disk (f_mount)...\r\n");
  40804a:	4869      	ldr	r0, [pc, #420]	; (4081f0 <main+0x220>)
  40804c:	47a8      	blx	r5
	memset(&fs, 0, sizeof(FATFS));
  40804e:	f44f 720c 	mov.w	r2, #560	; 0x230
  408052:	4621      	mov	r1, r4
  408054:	a889      	add	r0, sp, #548	; 0x224
  408056:	4b67      	ldr	r3, [pc, #412]	; (4081f4 <main+0x224>)
  408058:	4798      	blx	r3
	res = f_mount(LUN_ID_VIRTUAL_MEM, &fs);
  40805a:	a989      	add	r1, sp, #548	; 0x224
  40805c:	4620      	mov	r0, r4
  40805e:	4b66      	ldr	r3, [pc, #408]	; (4081f8 <main+0x228>)
  408060:	4798      	blx	r3
	if (FR_INVALID_DRIVE == res)
  408062:	280b      	cmp	r0, #11
  408064:	d01c      	beq.n	4080a0 <main+0xd0>
	{
		DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
		goto main_end_of_test;
	}
	DBG_MSG_PRINT("[OK]\r\n");
  408066:	4865      	ldr	r0, [pc, #404]	; (4081fc <main+0x22c>)
  408068:	4c5b      	ldr	r4, [pc, #364]	; (4081d8 <main+0x208>)
  40806a:	47a0      	blx	r4
	
	DBG_MSG_PRINT("Format the virtual disk\r\n");
  40806c:	4864      	ldr	r0, [pc, #400]	; (408200 <main+0x230>)
  40806e:	47a0      	blx	r4
	res = f_mkfs(LUN_ID_VIRTUAL_MEM, /* Drv */
  408070:	f44f 7200 	mov.w	r2, #512	; 0x200
  408074:	2100      	movs	r1, #0
  408076:	4608      	mov	r0, r1
  408078:	4b62      	ldr	r3, [pc, #392]	; (408204 <main+0x234>)
  40807a:	4798      	blx	r3
					0, /* FDISK partition */
					512); /* AllocSize */
	if (res != FR_OK)
  40807c:	4601      	mov	r1, r0
  40807e:	b198      	cbz	r0, 4080a8 <main+0xd8>
	{
		DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
  408080:	4861      	ldr	r0, [pc, #388]	; (408208 <main+0x238>)
  408082:	47a0      	blx	r4
			}
		}
	}
	
main_end_of_test:
	DBG_MSG_PRINT("Please unplug the card.\n\r");
  408084:	4861      	ldr	r0, [pc, #388]	; (40820c <main+0x23c>)
  408086:	4b54      	ldr	r3, [pc, #336]	; (4081d8 <main+0x208>)
  408088:	4798      	blx	r3
	while (CTRL_NO_PRESENT != sd_mmc_check(0))
  40808a:	2500      	movs	r5, #0
  40808c:	4c60      	ldr	r4, [pc, #384]	; (408210 <main+0x240>)
  40808e:	4628      	mov	r0, r5
  408090:	47a0      	blx	r4
  408092:	2802      	cmp	r0, #2
  408094:	d1fb      	bne.n	40808e <main+0xbe>
	{
	
	}
}
  408096:	2000      	movs	r0, #0
  408098:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40809c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
  4080a0:	210b      	movs	r1, #11
  4080a2:	4859      	ldr	r0, [pc, #356]	; (408208 <main+0x238>)
  4080a4:	47a8      	blx	r5
		goto main_end_of_test;
  4080a6:	e7ed      	b.n	408084 <main+0xb4>
	DBG_MSG_PRINT("Please plug an SD, MMC or SDIO card in slot.\n\r");
  4080a8:	485a      	ldr	r0, [pc, #360]	; (408214 <main+0x244>)
  4080aa:	4b4b      	ldr	r3, [pc, #300]	; (4081d8 <main+0x208>)
  4080ac:	4798      	blx	r3
		status = sd_mmc_test_unit_ready(0);
  4080ae:	4e5a      	ldr	r6, [pc, #360]	; (408218 <main+0x248>)
			DBG_MSG_PRINT("Card install FAIL\n\r");
  4080b0:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 408254 <main+0x284>
  4080b4:	4f48      	ldr	r7, [pc, #288]	; (4081d8 <main+0x208>)
  4080b6:	e009      	b.n	4080cc <main+0xfc>
  4080b8:	4640      	mov	r0, r8
  4080ba:	47b8      	blx	r7
			DBG_MSG_PRINT("Please unplug and re-plug the card.\n\r");
  4080bc:	4857      	ldr	r0, [pc, #348]	; (40821c <main+0x24c>)
  4080be:	47b8      	blx	r7
			while (CTRL_NO_PRESENT != sd_mmc_check(0))
  4080c0:	2500      	movs	r5, #0
  4080c2:	4c53      	ldr	r4, [pc, #332]	; (408210 <main+0x240>)
  4080c4:	4628      	mov	r0, r5
  4080c6:	47a0      	blx	r4
  4080c8:	2802      	cmp	r0, #2
  4080ca:	d1fb      	bne.n	4080c4 <main+0xf4>
		status = sd_mmc_test_unit_ready(0);
  4080cc:	2000      	movs	r0, #0
  4080ce:	47b0      	blx	r6
		if (CTRL_FAIL == status)
  4080d0:	2801      	cmp	r0, #1
  4080d2:	d0f1      	beq.n	4080b8 <main+0xe8>
	}while (CTRL_GOOD != status);
  4080d4:	2800      	cmp	r0, #0
  4080d6:	d1f9      	bne.n	4080cc <main+0xfc>
	DBG_MSG_PRINT("SD, MMC or SDIO card is in the slot\n\r");
  4080d8:	4851      	ldr	r0, [pc, #324]	; (408220 <main+0x250>)
  4080da:	4c3f      	ldr	r4, [pc, #252]	; (4081d8 <main+0x208>)
  4080dc:	47a0      	blx	r4
	DBG_MSG_PRINT("Mount disk (f_mount)...\r\n");
  4080de:	4844      	ldr	r0, [pc, #272]	; (4081f0 <main+0x220>)
  4080e0:	47a0      	blx	r4
	memset(&fs, 0, sizeof(FATFS));
  4080e2:	f44f 720c 	mov.w	r2, #560	; 0x230
  4080e6:	2100      	movs	r1, #0
  4080e8:	a889      	add	r0, sp, #548	; 0x224
  4080ea:	4b42      	ldr	r3, [pc, #264]	; (4081f4 <main+0x224>)
  4080ec:	4798      	blx	r3
	res = f_mount(LUN_ID_SD_MMC_0_MEM, &fs);
  4080ee:	a989      	add	r1, sp, #548	; 0x224
  4080f0:	2001      	movs	r0, #1
  4080f2:	4b41      	ldr	r3, [pc, #260]	; (4081f8 <main+0x228>)
  4080f4:	4798      	blx	r3
	if (FR_INVALID_DRIVE == res)
  4080f6:	280b      	cmp	r0, #11
  4080f8:	d024      	beq.n	408144 <main+0x174>
	DBG_MSG_PRINT("[OK]\r\n");
  4080fa:	4840      	ldr	r0, [pc, #256]	; (4081fc <main+0x22c>)
  4080fc:	4c36      	ldr	r4, [pc, #216]	; (4081d8 <main+0x208>)
  4080fe:	47a0      	blx	r4
	DBG_MSG_PRINT("Create a file (f_open)...\r\n");
  408100:	4848      	ldr	r0, [pc, #288]	; (408224 <main+0x254>)
  408102:	47a0      	blx	r4
	test_file_name[0] = LUN_ID_SD_MMC_0_MEM + '0';
  408104:	f50d 618d 	add.w	r1, sp, #1128	; 0x468
  408108:	2331      	movs	r3, #49	; 0x31
  40810a:	f801 3d14 	strb.w	r3, [r1, #-20]!
	res = f_open(&file_object, (char const *)test_file_name, FA_CREATE_ALWAYS | FA_WRITE);
  40810e:	220a      	movs	r2, #10
  408110:	4668      	mov	r0, sp
  408112:	4b45      	ldr	r3, [pc, #276]	; (408228 <main+0x258>)
  408114:	4798      	blx	r3
	if (res != FR_OK)
  408116:	4604      	mov	r4, r0
  408118:	b1c0      	cbz	r0, 40814c <main+0x17c>
		DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
  40811a:	4601      	mov	r1, r0
  40811c:	483a      	ldr	r0, [pc, #232]	; (408208 <main+0x238>)
  40811e:	4b2e      	ldr	r3, [pc, #184]	; (4081d8 <main+0x208>)
  408120:	4798      	blx	r3
		if(res == FR_NO_FILESYSTEM)
  408122:	2c0d      	cmp	r4, #13
  408124:	d1ae      	bne.n	408084 <main+0xb4>
			DBG_MSG_PRINT("No file system, format the disk\r\n");
  408126:	4841      	ldr	r0, [pc, #260]	; (40822c <main+0x25c>)
  408128:	4b2b      	ldr	r3, [pc, #172]	; (4081d8 <main+0x208>)
  40812a:	4798      	blx	r3
			res = f_mkfs(LUN_ID_SD_MMC_0_MEM, /* Drv */
  40812c:	f44f 7200 	mov.w	r2, #512	; 0x200
  408130:	2100      	movs	r1, #0
  408132:	2001      	movs	r0, #1
  408134:	4b33      	ldr	r3, [pc, #204]	; (408204 <main+0x234>)
  408136:	4798      	blx	r3
			if (res != FR_OK)
  408138:	4601      	mov	r1, r0
  40813a:	b138      	cbz	r0, 40814c <main+0x17c>
				DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
  40813c:	4832      	ldr	r0, [pc, #200]	; (408208 <main+0x238>)
  40813e:	4b26      	ldr	r3, [pc, #152]	; (4081d8 <main+0x208>)
  408140:	4798      	blx	r3
				goto main_end_of_test;
  408142:	e79f      	b.n	408084 <main+0xb4>
		DBG_MSG_PRINT("[FAIL] res %d\r\n", res);
  408144:	210b      	movs	r1, #11
  408146:	4830      	ldr	r0, [pc, #192]	; (408208 <main+0x238>)
  408148:	47a0      	blx	r4
		goto main_end_of_test;
  40814a:	e79b      	b.n	408084 <main+0xb4>
	if (0 == f_puts("Test SD/MMC stack\n", &file_object))
  40814c:	4669      	mov	r1, sp
  40814e:	4838      	ldr	r0, [pc, #224]	; (408230 <main+0x260>)
  408150:	4b38      	ldr	r3, [pc, #224]	; (408234 <main+0x264>)
  408152:	4798      	blx	r3
  408154:	b930      	cbnz	r0, 408164 <main+0x194>
		f_close(&file_object);
  408156:	4668      	mov	r0, sp
  408158:	4b37      	ldr	r3, [pc, #220]	; (408238 <main+0x268>)
  40815a:	4798      	blx	r3
		DBG_MSG_PRINT("[FAIL]\r\n");
  40815c:	4837      	ldr	r0, [pc, #220]	; (40823c <main+0x26c>)
  40815e:	4b1e      	ldr	r3, [pc, #120]	; (4081d8 <main+0x208>)
  408160:	4798      	blx	r3
		goto main_end_of_test;
  408162:	e78f      	b.n	408084 <main+0xb4>
	DBG_MSG_PRINT("[OK]\r\n");
  408164:	4825      	ldr	r0, [pc, #148]	; (4081fc <main+0x22c>)
  408166:	4c1c      	ldr	r4, [pc, #112]	; (4081d8 <main+0x208>)
  408168:	47a0      	blx	r4
	f_close(&file_object);
  40816a:	4668      	mov	r0, sp
  40816c:	4b32      	ldr	r3, [pc, #200]	; (408238 <main+0x268>)
  40816e:	4798      	blx	r3
	DBG_MSG_PRINT("Test is successful.\n\r");
  408170:	4833      	ldr	r0, [pc, #204]	; (408240 <main+0x270>)
  408172:	47a0      	blx	r4
	udc_start();
  408174:	4b33      	ldr	r3, [pc, #204]	; (408244 <main+0x274>)
  408176:	4798      	blx	r3
	uint32_t MSCEnableCount = 0;
  408178:	2600      	movs	r6, #0
	bool MSCEnableStatus = false;
  40817a:	4632      	mov	r2, r6
		if (main_b_msc_enable) {
  40817c:	4d32      	ldr	r5, [pc, #200]	; (408248 <main+0x278>)
				DBG_MSG_PRINT("\r\nMSC Disabled!\r\n");
  40817e:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 408258 <main+0x288>
  408182:	4627      	mov	r7, r4
  408184:	e002      	b.n	40818c <main+0x1bc>
			if (!udi_msc_process_trans()) {
  408186:	4b31      	ldr	r3, [pc, #196]	; (40824c <main+0x27c>)
  408188:	4798      	blx	r3
  40818a:	4622      	mov	r2, r4
		if (main_b_msc_enable) {
  40818c:	782b      	ldrb	r3, [r5, #0]
  40818e:	f003 04ff 	and.w	r4, r3, #255	; 0xff
  408192:	b133      	cbz	r3, 4081a2 <main+0x1d2>
			if(MSCEnableStatus == false)
  408194:	2a00      	cmp	r2, #0
  408196:	d1f6      	bne.n	408186 <main+0x1b6>
				MSCEnableCount ++;
  408198:	3601      	adds	r6, #1
				DBG_MSG_PRINT("\r\nMSC Enabled! Count %d\r\n", MSCEnableCount);
  40819a:	4631      	mov	r1, r6
  40819c:	482c      	ldr	r0, [pc, #176]	; (408250 <main+0x280>)
  40819e:	47b8      	blx	r7
  4081a0:	e7f1      	b.n	408186 <main+0x1b6>
			if(MSCEnableStatus == true)
  4081a2:	2a00      	cmp	r2, #0
  4081a4:	d0f2      	beq.n	40818c <main+0x1bc>
				DBG_MSG_PRINT("\r\nMSC Disabled!\r\n");
  4081a6:	4640      	mov	r0, r8
  4081a8:	47b8      	blx	r7
				MSCEnableStatus = false;
  4081aa:	4622      	mov	r2, r4
  4081ac:	e7ee      	b.n	40818c <main+0x1bc>
  4081ae:	bf00      	nop
  4081b0:	0040c044 	.word	0x0040c044
  4081b4:	200001fc 	.word	0x200001fc
  4081b8:	2001ab30 	.word	0x2001ab30
  4081bc:	00401a59 	.word	0x00401a59
  4081c0:	00403265 	.word	0x00403265
  4081c4:	00403625 	.word	0x00403625
  4081c8:	0040395d 	.word	0x0040395d
  4081cc:	004038f5 	.word	0x004038f5
  4081d0:	00407e95 	.word	0x00407e95
  4081d4:	0040be0c 	.word	0x0040be0c
  4081d8:	00408395 	.word	0x00408395
  4081dc:	00401881 	.word	0x00401881
  4081e0:	0040188d 	.word	0x0040188d
  4081e4:	00408341 	.word	0x00408341
  4081e8:	004003cd 	.word	0x004003cd
  4081ec:	400e0200 	.word	0x400e0200
  4081f0:	0040be9c 	.word	0x0040be9c
  4081f4:	004084f1 	.word	0x004084f1
  4081f8:	00407111 	.word	0x00407111
  4081fc:	0040bec8 	.word	0x0040bec8
  408200:	0040bed0 	.word	0x0040bed0
  408204:	004075b1 	.word	0x004075b1
  408208:	0040beb8 	.word	0x0040beb8
  40820c:	0040c028 	.word	0x0040c028
  408210:	004003f9 	.word	0x004003f9
  408214:	0040beec 	.word	0x0040beec
  408218:	00400cdd 	.word	0x00400cdd
  40821c:	0040bf30 	.word	0x0040bf30
  408220:	0040bf58 	.word	0x0040bf58
  408224:	0040bf80 	.word	0x0040bf80
  408228:	00407139 	.word	0x00407139
  40822c:	0040bf9c 	.word	0x0040bf9c
  408230:	0040bfc0 	.word	0x0040bfc0
  408234:	00407c01 	.word	0x00407c01
  408238:	00407599 	.word	0x00407599
  40823c:	0040bfd4 	.word	0x0040bfd4
  408240:	0040bfe0 	.word	0x0040bfe0
  408244:	00402cd1 	.word	0x00402cd1
  408248:	2001a6f9 	.word	0x2001a6f9
  40824c:	004029f9 	.word	0x004029f9
  408250:	0040bff8 	.word	0x0040bff8
  408254:	0040bf1c 	.word	0x0040bf1c
  408258:	0040c014 	.word	0x0040c014

0040825c <main_suspend_action>:

void main_suspend_action(void)
{
  40825c:	b508      	push	{r3, lr}
	ui_powerdown();
  40825e:	4b01      	ldr	r3, [pc, #4]	; (408264 <main_suspend_action+0x8>)
  408260:	4798      	blx	r3
  408262:	bd08      	pop	{r3, pc}
  408264:	0040188d 	.word	0x0040188d

00408268 <main_resume_action>:
}

void main_resume_action(void)
{
  408268:	b508      	push	{r3, lr}
	ui_wakeup();
  40826a:	4b01      	ldr	r3, [pc, #4]	; (408270 <main_resume_action+0x8>)
  40826c:	4798      	blx	r3
  40826e:	bd08      	pop	{r3, pc}
  408270:	00401899 	.word	0x00401899

00408274 <main_sof_action>:
}

void main_sof_action(void)
{
  408274:	b508      	push	{r3, lr}
	if ((!main_b_msc_enable) ||
  408276:	4b06      	ldr	r3, [pc, #24]	; (408290 <main_sof_action+0x1c>)
  408278:	781b      	ldrb	r3, [r3, #0]
  40827a:	b113      	cbz	r3, 408282 <main_sof_action+0xe>
		(!main_b_cdc_enable))
  40827c:	4b05      	ldr	r3, [pc, #20]	; (408294 <main_sof_action+0x20>)
  40827e:	781b      	ldrb	r3, [r3, #0]
	if ((!main_b_msc_enable) ||
  408280:	b903      	cbnz	r3, 408284 <main_sof_action+0x10>
  408282:	bd08      	pop	{r3, pc}
		return;
	ui_process(udd_get_frame_number());
  408284:	4b04      	ldr	r3, [pc, #16]	; (408298 <main_sof_action+0x24>)
  408286:	4798      	blx	r3
  408288:	4b04      	ldr	r3, [pc, #16]	; (40829c <main_sof_action+0x28>)
  40828a:	4798      	blx	r3
  40828c:	e7f9      	b.n	408282 <main_sof_action+0xe>
  40828e:	bf00      	nop
  408290:	2001a6f9 	.word	0x2001a6f9
  408294:	2001a6f8 	.word	0x2001a6f8
  408298:	00404fdd 	.word	0x00404fdd
  40829c:	004018b1 	.word	0x004018b1

004082a0 <main_extra_string>:
	uint8_t i;
	uint8_t *str;
	uint8_t str_lgt=0;

	// Link payload pointer to the string corresponding at request
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
  4082a0:	4b11      	ldr	r3, [pc, #68]	; (4082e8 <main_extra_string+0x48>)
  4082a2:	789b      	ldrb	r3, [r3, #2]
  4082a4:	2b04      	cmp	r3, #4
  4082a6:	d018      	beq.n	4082da <main_extra_string+0x3a>
  4082a8:	2b05      	cmp	r3, #5
  4082aa:	d118      	bne.n	4082de <main_extra_string+0x3e>
		str_lgt = sizeof(udi_cdc_name)-1;
		str = udi_cdc_name;
		break;
	case UDI_MSC_STRING_ID:
		str_lgt = sizeof(udi_msc_name)-1;
		str = udi_msc_name;
  4082ac:	480f      	ldr	r0, [pc, #60]	; (4082ec <main_extra_string+0x4c>)
  4082ae:	1e43      	subs	r3, r0, #1
  4082b0:	4a0f      	ldr	r2, [pc, #60]	; (4082f0 <main_extra_string+0x50>)
  4082b2:	300c      	adds	r0, #12
		return false;
	}

	if (str_lgt!=0) {
		for( i=0; i<str_lgt; i++) {
			extra_strings_desc.string[i] = cpu_to_le16((le16_t)str[i]);
  4082b4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
  4082b8:	f822 1f02 	strh.w	r1, [r2, #2]!
		for( i=0; i<str_lgt; i++) {
  4082bc:	4283      	cmp	r3, r0
  4082be:	d1f9      	bne.n	4082b4 <main_extra_string+0x14>
		}
		extra_strings_desc.header.bLength = 2+ (str_lgt)*2;
  4082c0:	4a0b      	ldr	r2, [pc, #44]	; (4082f0 <main_extra_string+0x50>)
  4082c2:	211c      	movs	r1, #28
  4082c4:	7011      	strb	r1, [r2, #0]
		udd_g_ctrlreq.payload_size = extra_strings_desc.header.bLength;
  4082c6:	4b08      	ldr	r3, [pc, #32]	; (4082e8 <main_extra_string+0x48>)
  4082c8:	8199      	strh	r1, [r3, #12]
		udd_g_ctrlreq.payload = (uint8_t *) &extra_strings_desc;
  4082ca:	609a      	str	r2, [r3, #8]
	}

	// if the string is larger than request length, then cut it
	if (udd_g_ctrlreq.payload_size > udd_g_ctrlreq.req.wLength) {
  4082cc:	88db      	ldrh	r3, [r3, #6]
  4082ce:	2b1b      	cmp	r3, #27
  4082d0:	d807      	bhi.n	4082e2 <main_extra_string+0x42>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
  4082d2:	4a05      	ldr	r2, [pc, #20]	; (4082e8 <main_extra_string+0x48>)
  4082d4:	8193      	strh	r3, [r2, #12]
	}
	return true;
  4082d6:	2001      	movs	r0, #1
  4082d8:	4770      	bx	lr
		str = udi_cdc_name;
  4082da:	4806      	ldr	r0, [pc, #24]	; (4082f4 <main_extra_string+0x54>)
  4082dc:	e7e7      	b.n	4082ae <main_extra_string+0xe>
		return false;
  4082de:	2000      	movs	r0, #0
  4082e0:	4770      	bx	lr
	return true;
  4082e2:	2001      	movs	r0, #1
}
  4082e4:	4770      	bx	lr
  4082e6:	bf00      	nop
  4082e8:	2001ab44 	.word	0x2001ab44
  4082ec:	20000230 	.word	0x20000230
  4082f0:	20000204 	.word	0x20000204
  4082f4:	20000220 	.word	0x20000220

004082f8 <main_msc_enable>:

bool main_msc_enable(void)
{
	main_b_msc_enable = true;
  4082f8:	2001      	movs	r0, #1
  4082fa:	4b01      	ldr	r3, [pc, #4]	; (408300 <main_msc_enable+0x8>)
  4082fc:	7018      	strb	r0, [r3, #0]
	return true;
}
  4082fe:	4770      	bx	lr
  408300:	2001a6f9 	.word	0x2001a6f9

00408304 <main_msc_disable>:

void main_msc_disable(void)
{
	main_b_msc_enable = false;
  408304:	2200      	movs	r2, #0
  408306:	4b01      	ldr	r3, [pc, #4]	; (40830c <main_msc_disable+0x8>)
  408308:	701a      	strb	r2, [r3, #0]
  40830a:	4770      	bx	lr
  40830c:	2001a6f9 	.word	0x2001a6f9

00408310 <main_cdc_enable>:
}

bool main_cdc_enable(uint8_t port)
{
	main_b_cdc_enable = true;
  408310:	2001      	movs	r0, #1
  408312:	4b01      	ldr	r3, [pc, #4]	; (408318 <main_cdc_enable+0x8>)
  408314:	7018      	strb	r0, [r3, #0]
	// Open communication
	//uart_open(port);
	return true;
}
  408316:	4770      	bx	lr
  408318:	2001a6f8 	.word	0x2001a6f8

0040831c <main_cdc_disable>:

void main_cdc_disable(uint8_t port)
{
	main_b_cdc_enable = false;
  40831c:	2200      	movs	r2, #0
  40831e:	4b01      	ldr	r3, [pc, #4]	; (408324 <main_cdc_disable+0x8>)
  408320:	701a      	strb	r2, [r3, #0]
  408322:	4770      	bx	lr
  408324:	2001a6f8 	.word	0x2001a6f8

00408328 <main_cdc_set_dtr>:
	// Close communication
	//uart_close(port);
}

void main_cdc_set_dtr(uint8_t port, bool b_enable)
{
  408328:	b508      	push	{r3, lr}
	if (b_enable) {
  40832a:	b911      	cbnz	r1, 408332 <main_cdc_set_dtr+0xa>
		// Host terminal has open COM
		ui_com_open(port);
	}else{
		// Host terminal has close COM
		ui_com_close(port);
  40832c:	4b02      	ldr	r3, [pc, #8]	; (408338 <main_cdc_set_dtr+0x10>)
  40832e:	4798      	blx	r3
  408330:	bd08      	pop	{r3, pc}
		ui_com_open(port);
  408332:	4b02      	ldr	r3, [pc, #8]	; (40833c <main_cdc_set_dtr+0x14>)
  408334:	4798      	blx	r3
  408336:	bd08      	pop	{r3, pc}
  408338:	004018a7 	.word	0x004018a7
  40833c:	004018a5 	.word	0x004018a5

00408340 <memories_initialization>:
	pio_set_pin_low(PIN_EBI_NLB);
}
#endif

void memories_initialization(void)
{
  408340:	4770      	bx	lr
	...

00408344 <__libc_init_array>:
  408344:	b570      	push	{r4, r5, r6, lr}
  408346:	4e0f      	ldr	r6, [pc, #60]	; (408384 <__libc_init_array+0x40>)
  408348:	4d0f      	ldr	r5, [pc, #60]	; (408388 <__libc_init_array+0x44>)
  40834a:	1b76      	subs	r6, r6, r5
  40834c:	10b6      	asrs	r6, r6, #2
  40834e:	bf18      	it	ne
  408350:	2400      	movne	r4, #0
  408352:	d005      	beq.n	408360 <__libc_init_array+0x1c>
  408354:	3401      	adds	r4, #1
  408356:	f855 3b04 	ldr.w	r3, [r5], #4
  40835a:	4798      	blx	r3
  40835c:	42a6      	cmp	r6, r4
  40835e:	d1f9      	bne.n	408354 <__libc_init_array+0x10>
  408360:	4e0a      	ldr	r6, [pc, #40]	; (40838c <__libc_init_array+0x48>)
  408362:	4d0b      	ldr	r5, [pc, #44]	; (408390 <__libc_init_array+0x4c>)
  408364:	1b76      	subs	r6, r6, r5
  408366:	f003 ff2b 	bl	40c1c0 <_init>
  40836a:	10b6      	asrs	r6, r6, #2
  40836c:	bf18      	it	ne
  40836e:	2400      	movne	r4, #0
  408370:	d006      	beq.n	408380 <__libc_init_array+0x3c>
  408372:	3401      	adds	r4, #1
  408374:	f855 3b04 	ldr.w	r3, [r5], #4
  408378:	4798      	blx	r3
  40837a:	42a6      	cmp	r6, r4
  40837c:	d1f9      	bne.n	408372 <__libc_init_array+0x2e>
  40837e:	bd70      	pop	{r4, r5, r6, pc}
  408380:	bd70      	pop	{r4, r5, r6, pc}
  408382:	bf00      	nop
  408384:	0040c1cc 	.word	0x0040c1cc
  408388:	0040c1cc 	.word	0x0040c1cc
  40838c:	0040c1d4 	.word	0x0040c1d4
  408390:	0040c1cc 	.word	0x0040c1cc

00408394 <iprintf>:
  408394:	b40f      	push	{r0, r1, r2, r3}
  408396:	b500      	push	{lr}
  408398:	4907      	ldr	r1, [pc, #28]	; (4083b8 <iprintf+0x24>)
  40839a:	b083      	sub	sp, #12
  40839c:	ab04      	add	r3, sp, #16
  40839e:	6808      	ldr	r0, [r1, #0]
  4083a0:	f853 2b04 	ldr.w	r2, [r3], #4
  4083a4:	6881      	ldr	r1, [r0, #8]
  4083a6:	9301      	str	r3, [sp, #4]
  4083a8:	f000 fa00 	bl	4087ac <_vfiprintf_r>
  4083ac:	b003      	add	sp, #12
  4083ae:	f85d eb04 	ldr.w	lr, [sp], #4
  4083b2:	b004      	add	sp, #16
  4083b4:	4770      	bx	lr
  4083b6:	bf00      	nop
  4083b8:	20000240 	.word	0x20000240

004083bc <memcpy>:
  4083bc:	4684      	mov	ip, r0
  4083be:	ea41 0300 	orr.w	r3, r1, r0
  4083c2:	f013 0303 	ands.w	r3, r3, #3
  4083c6:	d16d      	bne.n	4084a4 <memcpy+0xe8>
  4083c8:	3a40      	subs	r2, #64	; 0x40
  4083ca:	d341      	bcc.n	408450 <memcpy+0x94>
  4083cc:	f851 3b04 	ldr.w	r3, [r1], #4
  4083d0:	f840 3b04 	str.w	r3, [r0], #4
  4083d4:	f851 3b04 	ldr.w	r3, [r1], #4
  4083d8:	f840 3b04 	str.w	r3, [r0], #4
  4083dc:	f851 3b04 	ldr.w	r3, [r1], #4
  4083e0:	f840 3b04 	str.w	r3, [r0], #4
  4083e4:	f851 3b04 	ldr.w	r3, [r1], #4
  4083e8:	f840 3b04 	str.w	r3, [r0], #4
  4083ec:	f851 3b04 	ldr.w	r3, [r1], #4
  4083f0:	f840 3b04 	str.w	r3, [r0], #4
  4083f4:	f851 3b04 	ldr.w	r3, [r1], #4
  4083f8:	f840 3b04 	str.w	r3, [r0], #4
  4083fc:	f851 3b04 	ldr.w	r3, [r1], #4
  408400:	f840 3b04 	str.w	r3, [r0], #4
  408404:	f851 3b04 	ldr.w	r3, [r1], #4
  408408:	f840 3b04 	str.w	r3, [r0], #4
  40840c:	f851 3b04 	ldr.w	r3, [r1], #4
  408410:	f840 3b04 	str.w	r3, [r0], #4
  408414:	f851 3b04 	ldr.w	r3, [r1], #4
  408418:	f840 3b04 	str.w	r3, [r0], #4
  40841c:	f851 3b04 	ldr.w	r3, [r1], #4
  408420:	f840 3b04 	str.w	r3, [r0], #4
  408424:	f851 3b04 	ldr.w	r3, [r1], #4
  408428:	f840 3b04 	str.w	r3, [r0], #4
  40842c:	f851 3b04 	ldr.w	r3, [r1], #4
  408430:	f840 3b04 	str.w	r3, [r0], #4
  408434:	f851 3b04 	ldr.w	r3, [r1], #4
  408438:	f840 3b04 	str.w	r3, [r0], #4
  40843c:	f851 3b04 	ldr.w	r3, [r1], #4
  408440:	f840 3b04 	str.w	r3, [r0], #4
  408444:	f851 3b04 	ldr.w	r3, [r1], #4
  408448:	f840 3b04 	str.w	r3, [r0], #4
  40844c:	3a40      	subs	r2, #64	; 0x40
  40844e:	d2bd      	bcs.n	4083cc <memcpy+0x10>
  408450:	3230      	adds	r2, #48	; 0x30
  408452:	d311      	bcc.n	408478 <memcpy+0xbc>
  408454:	f851 3b04 	ldr.w	r3, [r1], #4
  408458:	f840 3b04 	str.w	r3, [r0], #4
  40845c:	f851 3b04 	ldr.w	r3, [r1], #4
  408460:	f840 3b04 	str.w	r3, [r0], #4
  408464:	f851 3b04 	ldr.w	r3, [r1], #4
  408468:	f840 3b04 	str.w	r3, [r0], #4
  40846c:	f851 3b04 	ldr.w	r3, [r1], #4
  408470:	f840 3b04 	str.w	r3, [r0], #4
  408474:	3a10      	subs	r2, #16
  408476:	d2ed      	bcs.n	408454 <memcpy+0x98>
  408478:	320c      	adds	r2, #12
  40847a:	d305      	bcc.n	408488 <memcpy+0xcc>
  40847c:	f851 3b04 	ldr.w	r3, [r1], #4
  408480:	f840 3b04 	str.w	r3, [r0], #4
  408484:	3a04      	subs	r2, #4
  408486:	d2f9      	bcs.n	40847c <memcpy+0xc0>
  408488:	3204      	adds	r2, #4
  40848a:	d008      	beq.n	40849e <memcpy+0xe2>
  40848c:	07d2      	lsls	r2, r2, #31
  40848e:	bf1c      	itt	ne
  408490:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408494:	f800 3b01 	strbne.w	r3, [r0], #1
  408498:	d301      	bcc.n	40849e <memcpy+0xe2>
  40849a:	880b      	ldrh	r3, [r1, #0]
  40849c:	8003      	strh	r3, [r0, #0]
  40849e:	4660      	mov	r0, ip
  4084a0:	4770      	bx	lr
  4084a2:	bf00      	nop
  4084a4:	2a08      	cmp	r2, #8
  4084a6:	d313      	bcc.n	4084d0 <memcpy+0x114>
  4084a8:	078b      	lsls	r3, r1, #30
  4084aa:	d08d      	beq.n	4083c8 <memcpy+0xc>
  4084ac:	f010 0303 	ands.w	r3, r0, #3
  4084b0:	d08a      	beq.n	4083c8 <memcpy+0xc>
  4084b2:	f1c3 0304 	rsb	r3, r3, #4
  4084b6:	1ad2      	subs	r2, r2, r3
  4084b8:	07db      	lsls	r3, r3, #31
  4084ba:	bf1c      	itt	ne
  4084bc:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4084c0:	f800 3b01 	strbne.w	r3, [r0], #1
  4084c4:	d380      	bcc.n	4083c8 <memcpy+0xc>
  4084c6:	f831 3b02 	ldrh.w	r3, [r1], #2
  4084ca:	f820 3b02 	strh.w	r3, [r0], #2
  4084ce:	e77b      	b.n	4083c8 <memcpy+0xc>
  4084d0:	3a04      	subs	r2, #4
  4084d2:	d3d9      	bcc.n	408488 <memcpy+0xcc>
  4084d4:	3a01      	subs	r2, #1
  4084d6:	f811 3b01 	ldrb.w	r3, [r1], #1
  4084da:	f800 3b01 	strb.w	r3, [r0], #1
  4084de:	d2f9      	bcs.n	4084d4 <memcpy+0x118>
  4084e0:	780b      	ldrb	r3, [r1, #0]
  4084e2:	7003      	strb	r3, [r0, #0]
  4084e4:	784b      	ldrb	r3, [r1, #1]
  4084e6:	7043      	strb	r3, [r0, #1]
  4084e8:	788b      	ldrb	r3, [r1, #2]
  4084ea:	7083      	strb	r3, [r0, #2]
  4084ec:	4660      	mov	r0, ip
  4084ee:	4770      	bx	lr

004084f0 <memset>:
  4084f0:	b470      	push	{r4, r5, r6}
  4084f2:	0786      	lsls	r6, r0, #30
  4084f4:	d046      	beq.n	408584 <memset+0x94>
  4084f6:	1e54      	subs	r4, r2, #1
  4084f8:	2a00      	cmp	r2, #0
  4084fa:	d041      	beq.n	408580 <memset+0x90>
  4084fc:	b2ca      	uxtb	r2, r1
  4084fe:	4603      	mov	r3, r0
  408500:	e002      	b.n	408508 <memset+0x18>
  408502:	f114 34ff 	adds.w	r4, r4, #4294967295
  408506:	d33b      	bcc.n	408580 <memset+0x90>
  408508:	f803 2b01 	strb.w	r2, [r3], #1
  40850c:	079d      	lsls	r5, r3, #30
  40850e:	d1f8      	bne.n	408502 <memset+0x12>
  408510:	2c03      	cmp	r4, #3
  408512:	d92e      	bls.n	408572 <memset+0x82>
  408514:	b2cd      	uxtb	r5, r1
  408516:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40851a:	2c0f      	cmp	r4, #15
  40851c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  408520:	d919      	bls.n	408556 <memset+0x66>
  408522:	f103 0210 	add.w	r2, r3, #16
  408526:	4626      	mov	r6, r4
  408528:	3e10      	subs	r6, #16
  40852a:	2e0f      	cmp	r6, #15
  40852c:	f842 5c10 	str.w	r5, [r2, #-16]
  408530:	f842 5c0c 	str.w	r5, [r2, #-12]
  408534:	f842 5c08 	str.w	r5, [r2, #-8]
  408538:	f842 5c04 	str.w	r5, [r2, #-4]
  40853c:	f102 0210 	add.w	r2, r2, #16
  408540:	d8f2      	bhi.n	408528 <memset+0x38>
  408542:	f1a4 0210 	sub.w	r2, r4, #16
  408546:	f022 020f 	bic.w	r2, r2, #15
  40854a:	f004 040f 	and.w	r4, r4, #15
  40854e:	3210      	adds	r2, #16
  408550:	2c03      	cmp	r4, #3
  408552:	4413      	add	r3, r2
  408554:	d90d      	bls.n	408572 <memset+0x82>
  408556:	461e      	mov	r6, r3
  408558:	4622      	mov	r2, r4
  40855a:	3a04      	subs	r2, #4
  40855c:	2a03      	cmp	r2, #3
  40855e:	f846 5b04 	str.w	r5, [r6], #4
  408562:	d8fa      	bhi.n	40855a <memset+0x6a>
  408564:	1f22      	subs	r2, r4, #4
  408566:	f022 0203 	bic.w	r2, r2, #3
  40856a:	3204      	adds	r2, #4
  40856c:	4413      	add	r3, r2
  40856e:	f004 0403 	and.w	r4, r4, #3
  408572:	b12c      	cbz	r4, 408580 <memset+0x90>
  408574:	b2c9      	uxtb	r1, r1
  408576:	441c      	add	r4, r3
  408578:	f803 1b01 	strb.w	r1, [r3], #1
  40857c:	429c      	cmp	r4, r3
  40857e:	d1fb      	bne.n	408578 <memset+0x88>
  408580:	bc70      	pop	{r4, r5, r6}
  408582:	4770      	bx	lr
  408584:	4614      	mov	r4, r2
  408586:	4603      	mov	r3, r0
  408588:	e7c2      	b.n	408510 <memset+0x20>
  40858a:	bf00      	nop

0040858c <setbuf>:
  40858c:	2900      	cmp	r1, #0
  40858e:	bf0c      	ite	eq
  408590:	2202      	moveq	r2, #2
  408592:	2200      	movne	r2, #0
  408594:	f44f 6380 	mov.w	r3, #1024	; 0x400
  408598:	f000 b800 	b.w	40859c <setvbuf>

0040859c <setvbuf>:
  40859c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4085a0:	4c61      	ldr	r4, [pc, #388]	; (408728 <setvbuf+0x18c>)
  4085a2:	6825      	ldr	r5, [r4, #0]
  4085a4:	b083      	sub	sp, #12
  4085a6:	4604      	mov	r4, r0
  4085a8:	460f      	mov	r7, r1
  4085aa:	4690      	mov	r8, r2
  4085ac:	461e      	mov	r6, r3
  4085ae:	b115      	cbz	r5, 4085b6 <setvbuf+0x1a>
  4085b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4085b2:	2b00      	cmp	r3, #0
  4085b4:	d064      	beq.n	408680 <setvbuf+0xe4>
  4085b6:	f1b8 0f02 	cmp.w	r8, #2
  4085ba:	d006      	beq.n	4085ca <setvbuf+0x2e>
  4085bc:	f1b8 0f01 	cmp.w	r8, #1
  4085c0:	f200 809f 	bhi.w	408702 <setvbuf+0x166>
  4085c4:	2e00      	cmp	r6, #0
  4085c6:	f2c0 809c 	blt.w	408702 <setvbuf+0x166>
  4085ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4085cc:	07d8      	lsls	r0, r3, #31
  4085ce:	d534      	bpl.n	40863a <setvbuf+0x9e>
  4085d0:	4621      	mov	r1, r4
  4085d2:	4628      	mov	r0, r5
  4085d4:	f001 f888 	bl	4096e8 <_fflush_r>
  4085d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4085da:	b141      	cbz	r1, 4085ee <setvbuf+0x52>
  4085dc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4085e0:	4299      	cmp	r1, r3
  4085e2:	d002      	beq.n	4085ea <setvbuf+0x4e>
  4085e4:	4628      	mov	r0, r5
  4085e6:	f001 f9fd 	bl	4099e4 <_free_r>
  4085ea:	2300      	movs	r3, #0
  4085ec:	6323      	str	r3, [r4, #48]	; 0x30
  4085ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4085f2:	2200      	movs	r2, #0
  4085f4:	61a2      	str	r2, [r4, #24]
  4085f6:	6062      	str	r2, [r4, #4]
  4085f8:	061a      	lsls	r2, r3, #24
  4085fa:	d43a      	bmi.n	408672 <setvbuf+0xd6>
  4085fc:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  408600:	f023 0303 	bic.w	r3, r3, #3
  408604:	f1b8 0f02 	cmp.w	r8, #2
  408608:	81a3      	strh	r3, [r4, #12]
  40860a:	d01d      	beq.n	408648 <setvbuf+0xac>
  40860c:	ab01      	add	r3, sp, #4
  40860e:	466a      	mov	r2, sp
  408610:	4621      	mov	r1, r4
  408612:	4628      	mov	r0, r5
  408614:	f001 fc84 	bl	409f20 <__swhatbuf_r>
  408618:	89a3      	ldrh	r3, [r4, #12]
  40861a:	4318      	orrs	r0, r3
  40861c:	81a0      	strh	r0, [r4, #12]
  40861e:	2e00      	cmp	r6, #0
  408620:	d132      	bne.n	408688 <setvbuf+0xec>
  408622:	9e00      	ldr	r6, [sp, #0]
  408624:	4630      	mov	r0, r6
  408626:	f001 fcf3 	bl	40a010 <malloc>
  40862a:	4607      	mov	r7, r0
  40862c:	2800      	cmp	r0, #0
  40862e:	d06b      	beq.n	408708 <setvbuf+0x16c>
  408630:	89a3      	ldrh	r3, [r4, #12]
  408632:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  408636:	81a3      	strh	r3, [r4, #12]
  408638:	e028      	b.n	40868c <setvbuf+0xf0>
  40863a:	89a3      	ldrh	r3, [r4, #12]
  40863c:	0599      	lsls	r1, r3, #22
  40863e:	d4c7      	bmi.n	4085d0 <setvbuf+0x34>
  408640:	6da0      	ldr	r0, [r4, #88]	; 0x58
  408642:	f001 fc69 	bl	409f18 <__retarget_lock_acquire_recursive>
  408646:	e7c3      	b.n	4085d0 <setvbuf+0x34>
  408648:	2500      	movs	r5, #0
  40864a:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40864c:	2600      	movs	r6, #0
  40864e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  408652:	f043 0302 	orr.w	r3, r3, #2
  408656:	2001      	movs	r0, #1
  408658:	60a6      	str	r6, [r4, #8]
  40865a:	07ce      	lsls	r6, r1, #31
  40865c:	81a3      	strh	r3, [r4, #12]
  40865e:	6022      	str	r2, [r4, #0]
  408660:	6122      	str	r2, [r4, #16]
  408662:	6160      	str	r0, [r4, #20]
  408664:	d401      	bmi.n	40866a <setvbuf+0xce>
  408666:	0598      	lsls	r0, r3, #22
  408668:	d53e      	bpl.n	4086e8 <setvbuf+0x14c>
  40866a:	4628      	mov	r0, r5
  40866c:	b003      	add	sp, #12
  40866e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  408672:	6921      	ldr	r1, [r4, #16]
  408674:	4628      	mov	r0, r5
  408676:	f001 f9b5 	bl	4099e4 <_free_r>
  40867a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40867e:	e7bd      	b.n	4085fc <setvbuf+0x60>
  408680:	4628      	mov	r0, r5
  408682:	f001 f889 	bl	409798 <__sinit>
  408686:	e796      	b.n	4085b6 <setvbuf+0x1a>
  408688:	2f00      	cmp	r7, #0
  40868a:	d0cb      	beq.n	408624 <setvbuf+0x88>
  40868c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40868e:	2b00      	cmp	r3, #0
  408690:	d033      	beq.n	4086fa <setvbuf+0x15e>
  408692:	9b00      	ldr	r3, [sp, #0]
  408694:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  408698:	6027      	str	r7, [r4, #0]
  40869a:	429e      	cmp	r6, r3
  40869c:	bf1c      	itt	ne
  40869e:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  4086a2:	81a2      	strhne	r2, [r4, #12]
  4086a4:	f1b8 0f01 	cmp.w	r8, #1
  4086a8:	bf04      	itt	eq
  4086aa:	f042 0201 	orreq.w	r2, r2, #1
  4086ae:	81a2      	strheq	r2, [r4, #12]
  4086b0:	b292      	uxth	r2, r2
  4086b2:	f012 0308 	ands.w	r3, r2, #8
  4086b6:	6127      	str	r7, [r4, #16]
  4086b8:	6166      	str	r6, [r4, #20]
  4086ba:	d00e      	beq.n	4086da <setvbuf+0x13e>
  4086bc:	07d1      	lsls	r1, r2, #31
  4086be:	d51a      	bpl.n	4086f6 <setvbuf+0x15a>
  4086c0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4086c2:	4276      	negs	r6, r6
  4086c4:	2300      	movs	r3, #0
  4086c6:	f015 0501 	ands.w	r5, r5, #1
  4086ca:	61a6      	str	r6, [r4, #24]
  4086cc:	60a3      	str	r3, [r4, #8]
  4086ce:	d009      	beq.n	4086e4 <setvbuf+0x148>
  4086d0:	2500      	movs	r5, #0
  4086d2:	4628      	mov	r0, r5
  4086d4:	b003      	add	sp, #12
  4086d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4086da:	60a3      	str	r3, [r4, #8]
  4086dc:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4086de:	f015 0501 	ands.w	r5, r5, #1
  4086e2:	d1f5      	bne.n	4086d0 <setvbuf+0x134>
  4086e4:	0593      	lsls	r3, r2, #22
  4086e6:	d4c0      	bmi.n	40866a <setvbuf+0xce>
  4086e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4086ea:	f001 fc17 	bl	409f1c <__retarget_lock_release_recursive>
  4086ee:	4628      	mov	r0, r5
  4086f0:	b003      	add	sp, #12
  4086f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4086f6:	60a6      	str	r6, [r4, #8]
  4086f8:	e7f0      	b.n	4086dc <setvbuf+0x140>
  4086fa:	4628      	mov	r0, r5
  4086fc:	f001 f84c 	bl	409798 <__sinit>
  408700:	e7c7      	b.n	408692 <setvbuf+0xf6>
  408702:	f04f 35ff 	mov.w	r5, #4294967295
  408706:	e7b0      	b.n	40866a <setvbuf+0xce>
  408708:	f8dd 9000 	ldr.w	r9, [sp]
  40870c:	45b1      	cmp	r9, r6
  40870e:	d004      	beq.n	40871a <setvbuf+0x17e>
  408710:	4648      	mov	r0, r9
  408712:	f001 fc7d 	bl	40a010 <malloc>
  408716:	4607      	mov	r7, r0
  408718:	b920      	cbnz	r0, 408724 <setvbuf+0x188>
  40871a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40871e:	f04f 35ff 	mov.w	r5, #4294967295
  408722:	e792      	b.n	40864a <setvbuf+0xae>
  408724:	464e      	mov	r6, r9
  408726:	e783      	b.n	408630 <setvbuf+0x94>
  408728:	20000240 	.word	0x20000240

0040872c <__sprint_r.part.0>:
  40872c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408730:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  408732:	049c      	lsls	r4, r3, #18
  408734:	4693      	mov	fp, r2
  408736:	d52f      	bpl.n	408798 <__sprint_r.part.0+0x6c>
  408738:	6893      	ldr	r3, [r2, #8]
  40873a:	6812      	ldr	r2, [r2, #0]
  40873c:	b353      	cbz	r3, 408794 <__sprint_r.part.0+0x68>
  40873e:	460e      	mov	r6, r1
  408740:	4607      	mov	r7, r0
  408742:	f102 0908 	add.w	r9, r2, #8
  408746:	e919 0420 	ldmdb	r9, {r5, sl}
  40874a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40874e:	d017      	beq.n	408780 <__sprint_r.part.0+0x54>
  408750:	3d04      	subs	r5, #4
  408752:	2400      	movs	r4, #0
  408754:	e001      	b.n	40875a <__sprint_r.part.0+0x2e>
  408756:	45a0      	cmp	r8, r4
  408758:	d010      	beq.n	40877c <__sprint_r.part.0+0x50>
  40875a:	4632      	mov	r2, r6
  40875c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  408760:	4638      	mov	r0, r7
  408762:	f001 f8bb 	bl	4098dc <_fputwc_r>
  408766:	1c43      	adds	r3, r0, #1
  408768:	f104 0401 	add.w	r4, r4, #1
  40876c:	d1f3      	bne.n	408756 <__sprint_r.part.0+0x2a>
  40876e:	2300      	movs	r3, #0
  408770:	f8cb 3008 	str.w	r3, [fp, #8]
  408774:	f8cb 3004 	str.w	r3, [fp, #4]
  408778:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40877c:	f8db 3008 	ldr.w	r3, [fp, #8]
  408780:	f02a 0a03 	bic.w	sl, sl, #3
  408784:	eba3 030a 	sub.w	r3, r3, sl
  408788:	f8cb 3008 	str.w	r3, [fp, #8]
  40878c:	f109 0908 	add.w	r9, r9, #8
  408790:	2b00      	cmp	r3, #0
  408792:	d1d8      	bne.n	408746 <__sprint_r.part.0+0x1a>
  408794:	2000      	movs	r0, #0
  408796:	e7ea      	b.n	40876e <__sprint_r.part.0+0x42>
  408798:	f001 fa0a 	bl	409bb0 <__sfvwrite_r>
  40879c:	2300      	movs	r3, #0
  40879e:	f8cb 3008 	str.w	r3, [fp, #8]
  4087a2:	f8cb 3004 	str.w	r3, [fp, #4]
  4087a6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4087aa:	bf00      	nop

004087ac <_vfiprintf_r>:
  4087ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4087b0:	b0ad      	sub	sp, #180	; 0xb4
  4087b2:	461d      	mov	r5, r3
  4087b4:	468b      	mov	fp, r1
  4087b6:	4690      	mov	r8, r2
  4087b8:	9307      	str	r3, [sp, #28]
  4087ba:	9006      	str	r0, [sp, #24]
  4087bc:	b118      	cbz	r0, 4087c6 <_vfiprintf_r+0x1a>
  4087be:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4087c0:	2b00      	cmp	r3, #0
  4087c2:	f000 80f3 	beq.w	4089ac <_vfiprintf_r+0x200>
  4087c6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4087ca:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4087ce:	07df      	lsls	r7, r3, #31
  4087d0:	b281      	uxth	r1, r0
  4087d2:	d402      	bmi.n	4087da <_vfiprintf_r+0x2e>
  4087d4:	058e      	lsls	r6, r1, #22
  4087d6:	f140 80fc 	bpl.w	4089d2 <_vfiprintf_r+0x226>
  4087da:	048c      	lsls	r4, r1, #18
  4087dc:	d40a      	bmi.n	4087f4 <_vfiprintf_r+0x48>
  4087de:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4087e2:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4087e6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4087ea:	f8ab 100c 	strh.w	r1, [fp, #12]
  4087ee:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4087f2:	b289      	uxth	r1, r1
  4087f4:	0708      	lsls	r0, r1, #28
  4087f6:	f140 80b3 	bpl.w	408960 <_vfiprintf_r+0x1b4>
  4087fa:	f8db 3010 	ldr.w	r3, [fp, #16]
  4087fe:	2b00      	cmp	r3, #0
  408800:	f000 80ae 	beq.w	408960 <_vfiprintf_r+0x1b4>
  408804:	f001 031a 	and.w	r3, r1, #26
  408808:	2b0a      	cmp	r3, #10
  40880a:	f000 80b5 	beq.w	408978 <_vfiprintf_r+0x1cc>
  40880e:	2300      	movs	r3, #0
  408810:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  408814:	930b      	str	r3, [sp, #44]	; 0x2c
  408816:	9311      	str	r3, [sp, #68]	; 0x44
  408818:	9310      	str	r3, [sp, #64]	; 0x40
  40881a:	9303      	str	r3, [sp, #12]
  40881c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  408820:	46ca      	mov	sl, r9
  408822:	f8cd b010 	str.w	fp, [sp, #16]
  408826:	f898 3000 	ldrb.w	r3, [r8]
  40882a:	4644      	mov	r4, r8
  40882c:	b1fb      	cbz	r3, 40886e <_vfiprintf_r+0xc2>
  40882e:	2b25      	cmp	r3, #37	; 0x25
  408830:	d102      	bne.n	408838 <_vfiprintf_r+0x8c>
  408832:	e01c      	b.n	40886e <_vfiprintf_r+0xc2>
  408834:	2b25      	cmp	r3, #37	; 0x25
  408836:	d003      	beq.n	408840 <_vfiprintf_r+0x94>
  408838:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40883c:	2b00      	cmp	r3, #0
  40883e:	d1f9      	bne.n	408834 <_vfiprintf_r+0x88>
  408840:	eba4 0508 	sub.w	r5, r4, r8
  408844:	b19d      	cbz	r5, 40886e <_vfiprintf_r+0xc2>
  408846:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408848:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40884a:	f8ca 8000 	str.w	r8, [sl]
  40884e:	3301      	adds	r3, #1
  408850:	442a      	add	r2, r5
  408852:	2b07      	cmp	r3, #7
  408854:	f8ca 5004 	str.w	r5, [sl, #4]
  408858:	9211      	str	r2, [sp, #68]	; 0x44
  40885a:	9310      	str	r3, [sp, #64]	; 0x40
  40885c:	dd7a      	ble.n	408954 <_vfiprintf_r+0x1a8>
  40885e:	2a00      	cmp	r2, #0
  408860:	f040 84b0 	bne.w	4091c4 <_vfiprintf_r+0xa18>
  408864:	9b03      	ldr	r3, [sp, #12]
  408866:	9210      	str	r2, [sp, #64]	; 0x40
  408868:	442b      	add	r3, r5
  40886a:	46ca      	mov	sl, r9
  40886c:	9303      	str	r3, [sp, #12]
  40886e:	7823      	ldrb	r3, [r4, #0]
  408870:	2b00      	cmp	r3, #0
  408872:	f000 83e0 	beq.w	409036 <_vfiprintf_r+0x88a>
  408876:	2000      	movs	r0, #0
  408878:	f04f 0300 	mov.w	r3, #0
  40887c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  408880:	f104 0801 	add.w	r8, r4, #1
  408884:	7862      	ldrb	r2, [r4, #1]
  408886:	4605      	mov	r5, r0
  408888:	4606      	mov	r6, r0
  40888a:	4603      	mov	r3, r0
  40888c:	f04f 34ff 	mov.w	r4, #4294967295
  408890:	f108 0801 	add.w	r8, r8, #1
  408894:	f1a2 0120 	sub.w	r1, r2, #32
  408898:	2958      	cmp	r1, #88	; 0x58
  40889a:	f200 82de 	bhi.w	408e5a <_vfiprintf_r+0x6ae>
  40889e:	e8df f011 	tbh	[pc, r1, lsl #1]
  4088a2:	0221      	.short	0x0221
  4088a4:	02dc02dc 	.word	0x02dc02dc
  4088a8:	02dc0229 	.word	0x02dc0229
  4088ac:	02dc02dc 	.word	0x02dc02dc
  4088b0:	02dc02dc 	.word	0x02dc02dc
  4088b4:	028902dc 	.word	0x028902dc
  4088b8:	02dc0295 	.word	0x02dc0295
  4088bc:	02bd00a2 	.word	0x02bd00a2
  4088c0:	019f02dc 	.word	0x019f02dc
  4088c4:	01a401a4 	.word	0x01a401a4
  4088c8:	01a401a4 	.word	0x01a401a4
  4088cc:	01a401a4 	.word	0x01a401a4
  4088d0:	01a401a4 	.word	0x01a401a4
  4088d4:	02dc01a4 	.word	0x02dc01a4
  4088d8:	02dc02dc 	.word	0x02dc02dc
  4088dc:	02dc02dc 	.word	0x02dc02dc
  4088e0:	02dc02dc 	.word	0x02dc02dc
  4088e4:	02dc02dc 	.word	0x02dc02dc
  4088e8:	01b202dc 	.word	0x01b202dc
  4088ec:	02dc02dc 	.word	0x02dc02dc
  4088f0:	02dc02dc 	.word	0x02dc02dc
  4088f4:	02dc02dc 	.word	0x02dc02dc
  4088f8:	02dc02dc 	.word	0x02dc02dc
  4088fc:	02dc02dc 	.word	0x02dc02dc
  408900:	02dc0197 	.word	0x02dc0197
  408904:	02dc02dc 	.word	0x02dc02dc
  408908:	02dc02dc 	.word	0x02dc02dc
  40890c:	02dc019b 	.word	0x02dc019b
  408910:	025302dc 	.word	0x025302dc
  408914:	02dc02dc 	.word	0x02dc02dc
  408918:	02dc02dc 	.word	0x02dc02dc
  40891c:	02dc02dc 	.word	0x02dc02dc
  408920:	02dc02dc 	.word	0x02dc02dc
  408924:	02dc02dc 	.word	0x02dc02dc
  408928:	021b025a 	.word	0x021b025a
  40892c:	02dc02dc 	.word	0x02dc02dc
  408930:	026e02dc 	.word	0x026e02dc
  408934:	02dc021b 	.word	0x02dc021b
  408938:	027302dc 	.word	0x027302dc
  40893c:	01f502dc 	.word	0x01f502dc
  408940:	02090182 	.word	0x02090182
  408944:	02dc02d7 	.word	0x02dc02d7
  408948:	02dc029a 	.word	0x02dc029a
  40894c:	02dc00a7 	.word	0x02dc00a7
  408950:	022e02dc 	.word	0x022e02dc
  408954:	f10a 0a08 	add.w	sl, sl, #8
  408958:	9b03      	ldr	r3, [sp, #12]
  40895a:	442b      	add	r3, r5
  40895c:	9303      	str	r3, [sp, #12]
  40895e:	e786      	b.n	40886e <_vfiprintf_r+0xc2>
  408960:	4659      	mov	r1, fp
  408962:	9806      	ldr	r0, [sp, #24]
  408964:	f000 fdac 	bl	4094c0 <__swsetup_r>
  408968:	bb18      	cbnz	r0, 4089b2 <_vfiprintf_r+0x206>
  40896a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40896e:	f001 031a 	and.w	r3, r1, #26
  408972:	2b0a      	cmp	r3, #10
  408974:	f47f af4b 	bne.w	40880e <_vfiprintf_r+0x62>
  408978:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40897c:	2b00      	cmp	r3, #0
  40897e:	f6ff af46 	blt.w	40880e <_vfiprintf_r+0x62>
  408982:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  408986:	07db      	lsls	r3, r3, #31
  408988:	d405      	bmi.n	408996 <_vfiprintf_r+0x1ea>
  40898a:	058f      	lsls	r7, r1, #22
  40898c:	d403      	bmi.n	408996 <_vfiprintf_r+0x1ea>
  40898e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408992:	f001 fac3 	bl	409f1c <__retarget_lock_release_recursive>
  408996:	462b      	mov	r3, r5
  408998:	4642      	mov	r2, r8
  40899a:	4659      	mov	r1, fp
  40899c:	9806      	ldr	r0, [sp, #24]
  40899e:	f000 fd4d 	bl	40943c <__sbprintf>
  4089a2:	9003      	str	r0, [sp, #12]
  4089a4:	9803      	ldr	r0, [sp, #12]
  4089a6:	b02d      	add	sp, #180	; 0xb4
  4089a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4089ac:	f000 fef4 	bl	409798 <__sinit>
  4089b0:	e709      	b.n	4087c6 <_vfiprintf_r+0x1a>
  4089b2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4089b6:	07d9      	lsls	r1, r3, #31
  4089b8:	d404      	bmi.n	4089c4 <_vfiprintf_r+0x218>
  4089ba:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4089be:	059a      	lsls	r2, r3, #22
  4089c0:	f140 84aa 	bpl.w	409318 <_vfiprintf_r+0xb6c>
  4089c4:	f04f 33ff 	mov.w	r3, #4294967295
  4089c8:	9303      	str	r3, [sp, #12]
  4089ca:	9803      	ldr	r0, [sp, #12]
  4089cc:	b02d      	add	sp, #180	; 0xb4
  4089ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4089d2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4089d6:	f001 fa9f 	bl	409f18 <__retarget_lock_acquire_recursive>
  4089da:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4089de:	b281      	uxth	r1, r0
  4089e0:	e6fb      	b.n	4087da <_vfiprintf_r+0x2e>
  4089e2:	4276      	negs	r6, r6
  4089e4:	9207      	str	r2, [sp, #28]
  4089e6:	f043 0304 	orr.w	r3, r3, #4
  4089ea:	f898 2000 	ldrb.w	r2, [r8]
  4089ee:	e74f      	b.n	408890 <_vfiprintf_r+0xe4>
  4089f0:	9608      	str	r6, [sp, #32]
  4089f2:	069e      	lsls	r6, r3, #26
  4089f4:	f100 8450 	bmi.w	409298 <_vfiprintf_r+0xaec>
  4089f8:	9907      	ldr	r1, [sp, #28]
  4089fa:	06dd      	lsls	r5, r3, #27
  4089fc:	460a      	mov	r2, r1
  4089fe:	f100 83ef 	bmi.w	4091e0 <_vfiprintf_r+0xa34>
  408a02:	0658      	lsls	r0, r3, #25
  408a04:	f140 83ec 	bpl.w	4091e0 <_vfiprintf_r+0xa34>
  408a08:	880e      	ldrh	r6, [r1, #0]
  408a0a:	3104      	adds	r1, #4
  408a0c:	2700      	movs	r7, #0
  408a0e:	2201      	movs	r2, #1
  408a10:	9107      	str	r1, [sp, #28]
  408a12:	f04f 0100 	mov.w	r1, #0
  408a16:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  408a1a:	2500      	movs	r5, #0
  408a1c:	1c61      	adds	r1, r4, #1
  408a1e:	f000 8116 	beq.w	408c4e <_vfiprintf_r+0x4a2>
  408a22:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  408a26:	9102      	str	r1, [sp, #8]
  408a28:	ea56 0107 	orrs.w	r1, r6, r7
  408a2c:	f040 8114 	bne.w	408c58 <_vfiprintf_r+0x4ac>
  408a30:	2c00      	cmp	r4, #0
  408a32:	f040 835c 	bne.w	4090ee <_vfiprintf_r+0x942>
  408a36:	2a00      	cmp	r2, #0
  408a38:	f040 83b7 	bne.w	4091aa <_vfiprintf_r+0x9fe>
  408a3c:	f013 0301 	ands.w	r3, r3, #1
  408a40:	9305      	str	r3, [sp, #20]
  408a42:	f000 8457 	beq.w	4092f4 <_vfiprintf_r+0xb48>
  408a46:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  408a4a:	2330      	movs	r3, #48	; 0x30
  408a4c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  408a50:	9b05      	ldr	r3, [sp, #20]
  408a52:	42a3      	cmp	r3, r4
  408a54:	bfb8      	it	lt
  408a56:	4623      	movlt	r3, r4
  408a58:	9301      	str	r3, [sp, #4]
  408a5a:	b10d      	cbz	r5, 408a60 <_vfiprintf_r+0x2b4>
  408a5c:	3301      	adds	r3, #1
  408a5e:	9301      	str	r3, [sp, #4]
  408a60:	9b02      	ldr	r3, [sp, #8]
  408a62:	f013 0302 	ands.w	r3, r3, #2
  408a66:	9309      	str	r3, [sp, #36]	; 0x24
  408a68:	d002      	beq.n	408a70 <_vfiprintf_r+0x2c4>
  408a6a:	9b01      	ldr	r3, [sp, #4]
  408a6c:	3302      	adds	r3, #2
  408a6e:	9301      	str	r3, [sp, #4]
  408a70:	9b02      	ldr	r3, [sp, #8]
  408a72:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  408a76:	930a      	str	r3, [sp, #40]	; 0x28
  408a78:	f040 8217 	bne.w	408eaa <_vfiprintf_r+0x6fe>
  408a7c:	9b08      	ldr	r3, [sp, #32]
  408a7e:	9a01      	ldr	r2, [sp, #4]
  408a80:	1a9d      	subs	r5, r3, r2
  408a82:	2d00      	cmp	r5, #0
  408a84:	f340 8211 	ble.w	408eaa <_vfiprintf_r+0x6fe>
  408a88:	2d10      	cmp	r5, #16
  408a8a:	f340 8490 	ble.w	4093ae <_vfiprintf_r+0xc02>
  408a8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408a90:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408a92:	4ec4      	ldr	r6, [pc, #784]	; (408da4 <_vfiprintf_r+0x5f8>)
  408a94:	46d6      	mov	lr, sl
  408a96:	2710      	movs	r7, #16
  408a98:	46a2      	mov	sl, r4
  408a9a:	4619      	mov	r1, r3
  408a9c:	9c06      	ldr	r4, [sp, #24]
  408a9e:	e007      	b.n	408ab0 <_vfiprintf_r+0x304>
  408aa0:	f101 0c02 	add.w	ip, r1, #2
  408aa4:	f10e 0e08 	add.w	lr, lr, #8
  408aa8:	4601      	mov	r1, r0
  408aaa:	3d10      	subs	r5, #16
  408aac:	2d10      	cmp	r5, #16
  408aae:	dd11      	ble.n	408ad4 <_vfiprintf_r+0x328>
  408ab0:	1c48      	adds	r0, r1, #1
  408ab2:	3210      	adds	r2, #16
  408ab4:	2807      	cmp	r0, #7
  408ab6:	9211      	str	r2, [sp, #68]	; 0x44
  408ab8:	e88e 00c0 	stmia.w	lr, {r6, r7}
  408abc:	9010      	str	r0, [sp, #64]	; 0x40
  408abe:	ddef      	ble.n	408aa0 <_vfiprintf_r+0x2f4>
  408ac0:	2a00      	cmp	r2, #0
  408ac2:	f040 81e4 	bne.w	408e8e <_vfiprintf_r+0x6e2>
  408ac6:	3d10      	subs	r5, #16
  408ac8:	2d10      	cmp	r5, #16
  408aca:	4611      	mov	r1, r2
  408acc:	f04f 0c01 	mov.w	ip, #1
  408ad0:	46ce      	mov	lr, r9
  408ad2:	dced      	bgt.n	408ab0 <_vfiprintf_r+0x304>
  408ad4:	4654      	mov	r4, sl
  408ad6:	4661      	mov	r1, ip
  408ad8:	46f2      	mov	sl, lr
  408ada:	442a      	add	r2, r5
  408adc:	2907      	cmp	r1, #7
  408ade:	9211      	str	r2, [sp, #68]	; 0x44
  408ae0:	f8ca 6000 	str.w	r6, [sl]
  408ae4:	f8ca 5004 	str.w	r5, [sl, #4]
  408ae8:	9110      	str	r1, [sp, #64]	; 0x40
  408aea:	f300 82ec 	bgt.w	4090c6 <_vfiprintf_r+0x91a>
  408aee:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408af2:	f10a 0a08 	add.w	sl, sl, #8
  408af6:	1c48      	adds	r0, r1, #1
  408af8:	2d00      	cmp	r5, #0
  408afa:	f040 81de 	bne.w	408eba <_vfiprintf_r+0x70e>
  408afe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408b00:	2b00      	cmp	r3, #0
  408b02:	f000 81f8 	beq.w	408ef6 <_vfiprintf_r+0x74a>
  408b06:	3202      	adds	r2, #2
  408b08:	a90e      	add	r1, sp, #56	; 0x38
  408b0a:	2302      	movs	r3, #2
  408b0c:	2807      	cmp	r0, #7
  408b0e:	9211      	str	r2, [sp, #68]	; 0x44
  408b10:	9010      	str	r0, [sp, #64]	; 0x40
  408b12:	e88a 000a 	stmia.w	sl, {r1, r3}
  408b16:	f340 81ea 	ble.w	408eee <_vfiprintf_r+0x742>
  408b1a:	2a00      	cmp	r2, #0
  408b1c:	f040 838c 	bne.w	409238 <_vfiprintf_r+0xa8c>
  408b20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408b22:	2b80      	cmp	r3, #128	; 0x80
  408b24:	f04f 0001 	mov.w	r0, #1
  408b28:	4611      	mov	r1, r2
  408b2a:	46ca      	mov	sl, r9
  408b2c:	f040 81e7 	bne.w	408efe <_vfiprintf_r+0x752>
  408b30:	9b08      	ldr	r3, [sp, #32]
  408b32:	9d01      	ldr	r5, [sp, #4]
  408b34:	1b5e      	subs	r6, r3, r5
  408b36:	2e00      	cmp	r6, #0
  408b38:	f340 81e1 	ble.w	408efe <_vfiprintf_r+0x752>
  408b3c:	2e10      	cmp	r6, #16
  408b3e:	4d9a      	ldr	r5, [pc, #616]	; (408da8 <_vfiprintf_r+0x5fc>)
  408b40:	f340 8450 	ble.w	4093e4 <_vfiprintf_r+0xc38>
  408b44:	46d4      	mov	ip, sl
  408b46:	2710      	movs	r7, #16
  408b48:	46a2      	mov	sl, r4
  408b4a:	9c06      	ldr	r4, [sp, #24]
  408b4c:	e007      	b.n	408b5e <_vfiprintf_r+0x3b2>
  408b4e:	f101 0e02 	add.w	lr, r1, #2
  408b52:	f10c 0c08 	add.w	ip, ip, #8
  408b56:	4601      	mov	r1, r0
  408b58:	3e10      	subs	r6, #16
  408b5a:	2e10      	cmp	r6, #16
  408b5c:	dd11      	ble.n	408b82 <_vfiprintf_r+0x3d6>
  408b5e:	1c48      	adds	r0, r1, #1
  408b60:	3210      	adds	r2, #16
  408b62:	2807      	cmp	r0, #7
  408b64:	9211      	str	r2, [sp, #68]	; 0x44
  408b66:	e88c 00a0 	stmia.w	ip, {r5, r7}
  408b6a:	9010      	str	r0, [sp, #64]	; 0x40
  408b6c:	ddef      	ble.n	408b4e <_vfiprintf_r+0x3a2>
  408b6e:	2a00      	cmp	r2, #0
  408b70:	f040 829d 	bne.w	4090ae <_vfiprintf_r+0x902>
  408b74:	3e10      	subs	r6, #16
  408b76:	2e10      	cmp	r6, #16
  408b78:	f04f 0e01 	mov.w	lr, #1
  408b7c:	4611      	mov	r1, r2
  408b7e:	46cc      	mov	ip, r9
  408b80:	dced      	bgt.n	408b5e <_vfiprintf_r+0x3b2>
  408b82:	4654      	mov	r4, sl
  408b84:	46e2      	mov	sl, ip
  408b86:	4432      	add	r2, r6
  408b88:	f1be 0f07 	cmp.w	lr, #7
  408b8c:	9211      	str	r2, [sp, #68]	; 0x44
  408b8e:	e88a 0060 	stmia.w	sl, {r5, r6}
  408b92:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  408b96:	f300 8369 	bgt.w	40926c <_vfiprintf_r+0xac0>
  408b9a:	f10a 0a08 	add.w	sl, sl, #8
  408b9e:	f10e 0001 	add.w	r0, lr, #1
  408ba2:	4671      	mov	r1, lr
  408ba4:	e1ab      	b.n	408efe <_vfiprintf_r+0x752>
  408ba6:	9608      	str	r6, [sp, #32]
  408ba8:	f013 0220 	ands.w	r2, r3, #32
  408bac:	f040 838c 	bne.w	4092c8 <_vfiprintf_r+0xb1c>
  408bb0:	f013 0110 	ands.w	r1, r3, #16
  408bb4:	f040 831a 	bne.w	4091ec <_vfiprintf_r+0xa40>
  408bb8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  408bbc:	f000 8316 	beq.w	4091ec <_vfiprintf_r+0xa40>
  408bc0:	9807      	ldr	r0, [sp, #28]
  408bc2:	460a      	mov	r2, r1
  408bc4:	4601      	mov	r1, r0
  408bc6:	3104      	adds	r1, #4
  408bc8:	8806      	ldrh	r6, [r0, #0]
  408bca:	9107      	str	r1, [sp, #28]
  408bcc:	2700      	movs	r7, #0
  408bce:	e720      	b.n	408a12 <_vfiprintf_r+0x266>
  408bd0:	9608      	str	r6, [sp, #32]
  408bd2:	f043 0310 	orr.w	r3, r3, #16
  408bd6:	e7e7      	b.n	408ba8 <_vfiprintf_r+0x3fc>
  408bd8:	9608      	str	r6, [sp, #32]
  408bda:	f043 0310 	orr.w	r3, r3, #16
  408bde:	e708      	b.n	4089f2 <_vfiprintf_r+0x246>
  408be0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  408be4:	f898 2000 	ldrb.w	r2, [r8]
  408be8:	e652      	b.n	408890 <_vfiprintf_r+0xe4>
  408bea:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408bee:	2600      	movs	r6, #0
  408bf0:	f818 2b01 	ldrb.w	r2, [r8], #1
  408bf4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  408bf8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  408bfc:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408c00:	2909      	cmp	r1, #9
  408c02:	d9f5      	bls.n	408bf0 <_vfiprintf_r+0x444>
  408c04:	e646      	b.n	408894 <_vfiprintf_r+0xe8>
  408c06:	9608      	str	r6, [sp, #32]
  408c08:	2800      	cmp	r0, #0
  408c0a:	f040 8408 	bne.w	40941e <_vfiprintf_r+0xc72>
  408c0e:	f043 0310 	orr.w	r3, r3, #16
  408c12:	069e      	lsls	r6, r3, #26
  408c14:	f100 834c 	bmi.w	4092b0 <_vfiprintf_r+0xb04>
  408c18:	06dd      	lsls	r5, r3, #27
  408c1a:	f100 82f3 	bmi.w	409204 <_vfiprintf_r+0xa58>
  408c1e:	0658      	lsls	r0, r3, #25
  408c20:	f140 82f0 	bpl.w	409204 <_vfiprintf_r+0xa58>
  408c24:	9d07      	ldr	r5, [sp, #28]
  408c26:	f9b5 6000 	ldrsh.w	r6, [r5]
  408c2a:	462a      	mov	r2, r5
  408c2c:	17f7      	asrs	r7, r6, #31
  408c2e:	3204      	adds	r2, #4
  408c30:	4630      	mov	r0, r6
  408c32:	4639      	mov	r1, r7
  408c34:	9207      	str	r2, [sp, #28]
  408c36:	2800      	cmp	r0, #0
  408c38:	f171 0200 	sbcs.w	r2, r1, #0
  408c3c:	f2c0 835d 	blt.w	4092fa <_vfiprintf_r+0xb4e>
  408c40:	1c61      	adds	r1, r4, #1
  408c42:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408c46:	f04f 0201 	mov.w	r2, #1
  408c4a:	f47f aeea 	bne.w	408a22 <_vfiprintf_r+0x276>
  408c4e:	ea56 0107 	orrs.w	r1, r6, r7
  408c52:	f000 824d 	beq.w	4090f0 <_vfiprintf_r+0x944>
  408c56:	9302      	str	r3, [sp, #8]
  408c58:	2a01      	cmp	r2, #1
  408c5a:	f000 828c 	beq.w	409176 <_vfiprintf_r+0x9ca>
  408c5e:	2a02      	cmp	r2, #2
  408c60:	f040 825c 	bne.w	40911c <_vfiprintf_r+0x970>
  408c64:	980b      	ldr	r0, [sp, #44]	; 0x2c
  408c66:	46cb      	mov	fp, r9
  408c68:	0933      	lsrs	r3, r6, #4
  408c6a:	f006 010f 	and.w	r1, r6, #15
  408c6e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  408c72:	093a      	lsrs	r2, r7, #4
  408c74:	461e      	mov	r6, r3
  408c76:	4617      	mov	r7, r2
  408c78:	5c43      	ldrb	r3, [r0, r1]
  408c7a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  408c7e:	ea56 0307 	orrs.w	r3, r6, r7
  408c82:	d1f1      	bne.n	408c68 <_vfiprintf_r+0x4bc>
  408c84:	eba9 030b 	sub.w	r3, r9, fp
  408c88:	9305      	str	r3, [sp, #20]
  408c8a:	e6e1      	b.n	408a50 <_vfiprintf_r+0x2a4>
  408c8c:	2800      	cmp	r0, #0
  408c8e:	f040 83c0 	bne.w	409412 <_vfiprintf_r+0xc66>
  408c92:	0699      	lsls	r1, r3, #26
  408c94:	f100 8367 	bmi.w	409366 <_vfiprintf_r+0xbba>
  408c98:	06da      	lsls	r2, r3, #27
  408c9a:	f100 80f1 	bmi.w	408e80 <_vfiprintf_r+0x6d4>
  408c9e:	065b      	lsls	r3, r3, #25
  408ca0:	f140 80ee 	bpl.w	408e80 <_vfiprintf_r+0x6d4>
  408ca4:	9a07      	ldr	r2, [sp, #28]
  408ca6:	6813      	ldr	r3, [r2, #0]
  408ca8:	3204      	adds	r2, #4
  408caa:	9207      	str	r2, [sp, #28]
  408cac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  408cb0:	801a      	strh	r2, [r3, #0]
  408cb2:	e5b8      	b.n	408826 <_vfiprintf_r+0x7a>
  408cb4:	9807      	ldr	r0, [sp, #28]
  408cb6:	4a3d      	ldr	r2, [pc, #244]	; (408dac <_vfiprintf_r+0x600>)
  408cb8:	9608      	str	r6, [sp, #32]
  408cba:	920b      	str	r2, [sp, #44]	; 0x2c
  408cbc:	6806      	ldr	r6, [r0, #0]
  408cbe:	2278      	movs	r2, #120	; 0x78
  408cc0:	2130      	movs	r1, #48	; 0x30
  408cc2:	3004      	adds	r0, #4
  408cc4:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  408cc8:	f043 0302 	orr.w	r3, r3, #2
  408ccc:	9007      	str	r0, [sp, #28]
  408cce:	2700      	movs	r7, #0
  408cd0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408cd4:	2202      	movs	r2, #2
  408cd6:	e69c      	b.n	408a12 <_vfiprintf_r+0x266>
  408cd8:	9608      	str	r6, [sp, #32]
  408cda:	2800      	cmp	r0, #0
  408cdc:	d099      	beq.n	408c12 <_vfiprintf_r+0x466>
  408cde:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408ce2:	e796      	b.n	408c12 <_vfiprintf_r+0x466>
  408ce4:	f898 2000 	ldrb.w	r2, [r8]
  408ce8:	2d00      	cmp	r5, #0
  408cea:	f47f add1 	bne.w	408890 <_vfiprintf_r+0xe4>
  408cee:	2001      	movs	r0, #1
  408cf0:	2520      	movs	r5, #32
  408cf2:	e5cd      	b.n	408890 <_vfiprintf_r+0xe4>
  408cf4:	f043 0301 	orr.w	r3, r3, #1
  408cf8:	f898 2000 	ldrb.w	r2, [r8]
  408cfc:	e5c8      	b.n	408890 <_vfiprintf_r+0xe4>
  408cfe:	9608      	str	r6, [sp, #32]
  408d00:	2800      	cmp	r0, #0
  408d02:	f040 8393 	bne.w	40942c <_vfiprintf_r+0xc80>
  408d06:	4929      	ldr	r1, [pc, #164]	; (408dac <_vfiprintf_r+0x600>)
  408d08:	910b      	str	r1, [sp, #44]	; 0x2c
  408d0a:	069f      	lsls	r7, r3, #26
  408d0c:	f100 82e8 	bmi.w	4092e0 <_vfiprintf_r+0xb34>
  408d10:	9807      	ldr	r0, [sp, #28]
  408d12:	06de      	lsls	r6, r3, #27
  408d14:	4601      	mov	r1, r0
  408d16:	f100 8270 	bmi.w	4091fa <_vfiprintf_r+0xa4e>
  408d1a:	065d      	lsls	r5, r3, #25
  408d1c:	f140 826d 	bpl.w	4091fa <_vfiprintf_r+0xa4e>
  408d20:	3104      	adds	r1, #4
  408d22:	8806      	ldrh	r6, [r0, #0]
  408d24:	9107      	str	r1, [sp, #28]
  408d26:	2700      	movs	r7, #0
  408d28:	07d8      	lsls	r0, r3, #31
  408d2a:	f140 8222 	bpl.w	409172 <_vfiprintf_r+0x9c6>
  408d2e:	ea56 0107 	orrs.w	r1, r6, r7
  408d32:	f000 821e 	beq.w	409172 <_vfiprintf_r+0x9c6>
  408d36:	2130      	movs	r1, #48	; 0x30
  408d38:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  408d3c:	f043 0302 	orr.w	r3, r3, #2
  408d40:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408d44:	2202      	movs	r2, #2
  408d46:	e664      	b.n	408a12 <_vfiprintf_r+0x266>
  408d48:	9608      	str	r6, [sp, #32]
  408d4a:	2800      	cmp	r0, #0
  408d4c:	f040 836b 	bne.w	409426 <_vfiprintf_r+0xc7a>
  408d50:	4917      	ldr	r1, [pc, #92]	; (408db0 <_vfiprintf_r+0x604>)
  408d52:	910b      	str	r1, [sp, #44]	; 0x2c
  408d54:	e7d9      	b.n	408d0a <_vfiprintf_r+0x55e>
  408d56:	9907      	ldr	r1, [sp, #28]
  408d58:	9608      	str	r6, [sp, #32]
  408d5a:	680a      	ldr	r2, [r1, #0]
  408d5c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  408d60:	f04f 0000 	mov.w	r0, #0
  408d64:	460a      	mov	r2, r1
  408d66:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  408d6a:	3204      	adds	r2, #4
  408d6c:	2001      	movs	r0, #1
  408d6e:	9001      	str	r0, [sp, #4]
  408d70:	9207      	str	r2, [sp, #28]
  408d72:	9005      	str	r0, [sp, #20]
  408d74:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  408d78:	9302      	str	r3, [sp, #8]
  408d7a:	2400      	movs	r4, #0
  408d7c:	e670      	b.n	408a60 <_vfiprintf_r+0x2b4>
  408d7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408d82:	f898 2000 	ldrb.w	r2, [r8]
  408d86:	e583      	b.n	408890 <_vfiprintf_r+0xe4>
  408d88:	f898 2000 	ldrb.w	r2, [r8]
  408d8c:	2a6c      	cmp	r2, #108	; 0x6c
  408d8e:	bf03      	ittte	eq
  408d90:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  408d94:	f043 0320 	orreq.w	r3, r3, #32
  408d98:	f108 0801 	addeq.w	r8, r8, #1
  408d9c:	f043 0310 	orrne.w	r3, r3, #16
  408da0:	e576      	b.n	408890 <_vfiprintf_r+0xe4>
  408da2:	bf00      	nop
  408da4:	0040c08c 	.word	0x0040c08c
  408da8:	0040c09c 	.word	0x0040c09c
  408dac:	0040c070 	.word	0x0040c070
  408db0:	0040c05c 	.word	0x0040c05c
  408db4:	9907      	ldr	r1, [sp, #28]
  408db6:	680e      	ldr	r6, [r1, #0]
  408db8:	460a      	mov	r2, r1
  408dba:	2e00      	cmp	r6, #0
  408dbc:	f102 0204 	add.w	r2, r2, #4
  408dc0:	f6ff ae0f 	blt.w	4089e2 <_vfiprintf_r+0x236>
  408dc4:	9207      	str	r2, [sp, #28]
  408dc6:	f898 2000 	ldrb.w	r2, [r8]
  408dca:	e561      	b.n	408890 <_vfiprintf_r+0xe4>
  408dcc:	f898 2000 	ldrb.w	r2, [r8]
  408dd0:	2001      	movs	r0, #1
  408dd2:	252b      	movs	r5, #43	; 0x2b
  408dd4:	e55c      	b.n	408890 <_vfiprintf_r+0xe4>
  408dd6:	9907      	ldr	r1, [sp, #28]
  408dd8:	9608      	str	r6, [sp, #32]
  408dda:	f8d1 b000 	ldr.w	fp, [r1]
  408dde:	f04f 0200 	mov.w	r2, #0
  408de2:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  408de6:	1d0e      	adds	r6, r1, #4
  408de8:	f1bb 0f00 	cmp.w	fp, #0
  408dec:	f000 82e5 	beq.w	4093ba <_vfiprintf_r+0xc0e>
  408df0:	1c67      	adds	r7, r4, #1
  408df2:	f000 82c4 	beq.w	40937e <_vfiprintf_r+0xbd2>
  408df6:	4622      	mov	r2, r4
  408df8:	2100      	movs	r1, #0
  408dfa:	4658      	mov	r0, fp
  408dfc:	9301      	str	r3, [sp, #4]
  408dfe:	f001 fbd7 	bl	40a5b0 <memchr>
  408e02:	9b01      	ldr	r3, [sp, #4]
  408e04:	2800      	cmp	r0, #0
  408e06:	f000 82e5 	beq.w	4093d4 <_vfiprintf_r+0xc28>
  408e0a:	eba0 020b 	sub.w	r2, r0, fp
  408e0e:	9205      	str	r2, [sp, #20]
  408e10:	9607      	str	r6, [sp, #28]
  408e12:	9302      	str	r3, [sp, #8]
  408e14:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408e18:	2400      	movs	r4, #0
  408e1a:	e619      	b.n	408a50 <_vfiprintf_r+0x2a4>
  408e1c:	f898 2000 	ldrb.w	r2, [r8]
  408e20:	2a2a      	cmp	r2, #42	; 0x2a
  408e22:	f108 0701 	add.w	r7, r8, #1
  408e26:	f000 82e9 	beq.w	4093fc <_vfiprintf_r+0xc50>
  408e2a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408e2e:	2909      	cmp	r1, #9
  408e30:	46b8      	mov	r8, r7
  408e32:	f04f 0400 	mov.w	r4, #0
  408e36:	f63f ad2d 	bhi.w	408894 <_vfiprintf_r+0xe8>
  408e3a:	f818 2b01 	ldrb.w	r2, [r8], #1
  408e3e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  408e42:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  408e46:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408e4a:	2909      	cmp	r1, #9
  408e4c:	d9f5      	bls.n	408e3a <_vfiprintf_r+0x68e>
  408e4e:	e521      	b.n	408894 <_vfiprintf_r+0xe8>
  408e50:	f043 0320 	orr.w	r3, r3, #32
  408e54:	f898 2000 	ldrb.w	r2, [r8]
  408e58:	e51a      	b.n	408890 <_vfiprintf_r+0xe4>
  408e5a:	9608      	str	r6, [sp, #32]
  408e5c:	2800      	cmp	r0, #0
  408e5e:	f040 82db 	bne.w	409418 <_vfiprintf_r+0xc6c>
  408e62:	2a00      	cmp	r2, #0
  408e64:	f000 80e7 	beq.w	409036 <_vfiprintf_r+0x88a>
  408e68:	2101      	movs	r1, #1
  408e6a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  408e6e:	f04f 0200 	mov.w	r2, #0
  408e72:	9101      	str	r1, [sp, #4]
  408e74:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  408e78:	9105      	str	r1, [sp, #20]
  408e7a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  408e7e:	e77b      	b.n	408d78 <_vfiprintf_r+0x5cc>
  408e80:	9a07      	ldr	r2, [sp, #28]
  408e82:	6813      	ldr	r3, [r2, #0]
  408e84:	3204      	adds	r2, #4
  408e86:	9207      	str	r2, [sp, #28]
  408e88:	9a03      	ldr	r2, [sp, #12]
  408e8a:	601a      	str	r2, [r3, #0]
  408e8c:	e4cb      	b.n	408826 <_vfiprintf_r+0x7a>
  408e8e:	aa0f      	add	r2, sp, #60	; 0x3c
  408e90:	9904      	ldr	r1, [sp, #16]
  408e92:	4620      	mov	r0, r4
  408e94:	f7ff fc4a 	bl	40872c <__sprint_r.part.0>
  408e98:	2800      	cmp	r0, #0
  408e9a:	f040 8139 	bne.w	409110 <_vfiprintf_r+0x964>
  408e9e:	9910      	ldr	r1, [sp, #64]	; 0x40
  408ea0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408ea2:	f101 0c01 	add.w	ip, r1, #1
  408ea6:	46ce      	mov	lr, r9
  408ea8:	e5ff      	b.n	408aaa <_vfiprintf_r+0x2fe>
  408eaa:	9910      	ldr	r1, [sp, #64]	; 0x40
  408eac:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408eae:	1c48      	adds	r0, r1, #1
  408eb0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408eb4:	2d00      	cmp	r5, #0
  408eb6:	f43f ae22 	beq.w	408afe <_vfiprintf_r+0x352>
  408eba:	3201      	adds	r2, #1
  408ebc:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  408ec0:	2101      	movs	r1, #1
  408ec2:	2807      	cmp	r0, #7
  408ec4:	9211      	str	r2, [sp, #68]	; 0x44
  408ec6:	9010      	str	r0, [sp, #64]	; 0x40
  408ec8:	f8ca 5000 	str.w	r5, [sl]
  408ecc:	f8ca 1004 	str.w	r1, [sl, #4]
  408ed0:	f340 8108 	ble.w	4090e4 <_vfiprintf_r+0x938>
  408ed4:	2a00      	cmp	r2, #0
  408ed6:	f040 81bc 	bne.w	409252 <_vfiprintf_r+0xaa6>
  408eda:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408edc:	2b00      	cmp	r3, #0
  408ede:	f43f ae1f 	beq.w	408b20 <_vfiprintf_r+0x374>
  408ee2:	ab0e      	add	r3, sp, #56	; 0x38
  408ee4:	2202      	movs	r2, #2
  408ee6:	4608      	mov	r0, r1
  408ee8:	931c      	str	r3, [sp, #112]	; 0x70
  408eea:	921d      	str	r2, [sp, #116]	; 0x74
  408eec:	46ca      	mov	sl, r9
  408eee:	4601      	mov	r1, r0
  408ef0:	f10a 0a08 	add.w	sl, sl, #8
  408ef4:	3001      	adds	r0, #1
  408ef6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408ef8:	2b80      	cmp	r3, #128	; 0x80
  408efa:	f43f ae19 	beq.w	408b30 <_vfiprintf_r+0x384>
  408efe:	9b05      	ldr	r3, [sp, #20]
  408f00:	1ae4      	subs	r4, r4, r3
  408f02:	2c00      	cmp	r4, #0
  408f04:	dd2e      	ble.n	408f64 <_vfiprintf_r+0x7b8>
  408f06:	2c10      	cmp	r4, #16
  408f08:	4db3      	ldr	r5, [pc, #716]	; (4091d8 <_vfiprintf_r+0xa2c>)
  408f0a:	dd1e      	ble.n	408f4a <_vfiprintf_r+0x79e>
  408f0c:	46d6      	mov	lr, sl
  408f0e:	2610      	movs	r6, #16
  408f10:	9f06      	ldr	r7, [sp, #24]
  408f12:	f8dd a010 	ldr.w	sl, [sp, #16]
  408f16:	e006      	b.n	408f26 <_vfiprintf_r+0x77a>
  408f18:	1c88      	adds	r0, r1, #2
  408f1a:	f10e 0e08 	add.w	lr, lr, #8
  408f1e:	4619      	mov	r1, r3
  408f20:	3c10      	subs	r4, #16
  408f22:	2c10      	cmp	r4, #16
  408f24:	dd10      	ble.n	408f48 <_vfiprintf_r+0x79c>
  408f26:	1c4b      	adds	r3, r1, #1
  408f28:	3210      	adds	r2, #16
  408f2a:	2b07      	cmp	r3, #7
  408f2c:	9211      	str	r2, [sp, #68]	; 0x44
  408f2e:	e88e 0060 	stmia.w	lr, {r5, r6}
  408f32:	9310      	str	r3, [sp, #64]	; 0x40
  408f34:	ddf0      	ble.n	408f18 <_vfiprintf_r+0x76c>
  408f36:	2a00      	cmp	r2, #0
  408f38:	d165      	bne.n	409006 <_vfiprintf_r+0x85a>
  408f3a:	3c10      	subs	r4, #16
  408f3c:	2c10      	cmp	r4, #16
  408f3e:	f04f 0001 	mov.w	r0, #1
  408f42:	4611      	mov	r1, r2
  408f44:	46ce      	mov	lr, r9
  408f46:	dcee      	bgt.n	408f26 <_vfiprintf_r+0x77a>
  408f48:	46f2      	mov	sl, lr
  408f4a:	4422      	add	r2, r4
  408f4c:	2807      	cmp	r0, #7
  408f4e:	9211      	str	r2, [sp, #68]	; 0x44
  408f50:	f8ca 5000 	str.w	r5, [sl]
  408f54:	f8ca 4004 	str.w	r4, [sl, #4]
  408f58:	9010      	str	r0, [sp, #64]	; 0x40
  408f5a:	f300 8085 	bgt.w	409068 <_vfiprintf_r+0x8bc>
  408f5e:	f10a 0a08 	add.w	sl, sl, #8
  408f62:	3001      	adds	r0, #1
  408f64:	9905      	ldr	r1, [sp, #20]
  408f66:	f8ca b000 	str.w	fp, [sl]
  408f6a:	440a      	add	r2, r1
  408f6c:	2807      	cmp	r0, #7
  408f6e:	9211      	str	r2, [sp, #68]	; 0x44
  408f70:	f8ca 1004 	str.w	r1, [sl, #4]
  408f74:	9010      	str	r0, [sp, #64]	; 0x40
  408f76:	f340 8082 	ble.w	40907e <_vfiprintf_r+0x8d2>
  408f7a:	2a00      	cmp	r2, #0
  408f7c:	f040 8118 	bne.w	4091b0 <_vfiprintf_r+0xa04>
  408f80:	9b02      	ldr	r3, [sp, #8]
  408f82:	9210      	str	r2, [sp, #64]	; 0x40
  408f84:	0758      	lsls	r0, r3, #29
  408f86:	d535      	bpl.n	408ff4 <_vfiprintf_r+0x848>
  408f88:	9b08      	ldr	r3, [sp, #32]
  408f8a:	9901      	ldr	r1, [sp, #4]
  408f8c:	1a5c      	subs	r4, r3, r1
  408f8e:	2c00      	cmp	r4, #0
  408f90:	f340 80e7 	ble.w	409162 <_vfiprintf_r+0x9b6>
  408f94:	46ca      	mov	sl, r9
  408f96:	2c10      	cmp	r4, #16
  408f98:	f340 8218 	ble.w	4093cc <_vfiprintf_r+0xc20>
  408f9c:	9910      	ldr	r1, [sp, #64]	; 0x40
  408f9e:	4e8f      	ldr	r6, [pc, #572]	; (4091dc <_vfiprintf_r+0xa30>)
  408fa0:	9f06      	ldr	r7, [sp, #24]
  408fa2:	f8dd b010 	ldr.w	fp, [sp, #16]
  408fa6:	2510      	movs	r5, #16
  408fa8:	e006      	b.n	408fb8 <_vfiprintf_r+0x80c>
  408faa:	1c88      	adds	r0, r1, #2
  408fac:	f10a 0a08 	add.w	sl, sl, #8
  408fb0:	4619      	mov	r1, r3
  408fb2:	3c10      	subs	r4, #16
  408fb4:	2c10      	cmp	r4, #16
  408fb6:	dd11      	ble.n	408fdc <_vfiprintf_r+0x830>
  408fb8:	1c4b      	adds	r3, r1, #1
  408fba:	3210      	adds	r2, #16
  408fbc:	2b07      	cmp	r3, #7
  408fbe:	9211      	str	r2, [sp, #68]	; 0x44
  408fc0:	f8ca 6000 	str.w	r6, [sl]
  408fc4:	f8ca 5004 	str.w	r5, [sl, #4]
  408fc8:	9310      	str	r3, [sp, #64]	; 0x40
  408fca:	ddee      	ble.n	408faa <_vfiprintf_r+0x7fe>
  408fcc:	bb42      	cbnz	r2, 409020 <_vfiprintf_r+0x874>
  408fce:	3c10      	subs	r4, #16
  408fd0:	2c10      	cmp	r4, #16
  408fd2:	f04f 0001 	mov.w	r0, #1
  408fd6:	4611      	mov	r1, r2
  408fd8:	46ca      	mov	sl, r9
  408fda:	dced      	bgt.n	408fb8 <_vfiprintf_r+0x80c>
  408fdc:	4422      	add	r2, r4
  408fde:	2807      	cmp	r0, #7
  408fe0:	9211      	str	r2, [sp, #68]	; 0x44
  408fe2:	f8ca 6000 	str.w	r6, [sl]
  408fe6:	f8ca 4004 	str.w	r4, [sl, #4]
  408fea:	9010      	str	r0, [sp, #64]	; 0x40
  408fec:	dd51      	ble.n	409092 <_vfiprintf_r+0x8e6>
  408fee:	2a00      	cmp	r2, #0
  408ff0:	f040 819b 	bne.w	40932a <_vfiprintf_r+0xb7e>
  408ff4:	9b03      	ldr	r3, [sp, #12]
  408ff6:	9a08      	ldr	r2, [sp, #32]
  408ff8:	9901      	ldr	r1, [sp, #4]
  408ffa:	428a      	cmp	r2, r1
  408ffc:	bfac      	ite	ge
  408ffe:	189b      	addge	r3, r3, r2
  409000:	185b      	addlt	r3, r3, r1
  409002:	9303      	str	r3, [sp, #12]
  409004:	e04e      	b.n	4090a4 <_vfiprintf_r+0x8f8>
  409006:	aa0f      	add	r2, sp, #60	; 0x3c
  409008:	4651      	mov	r1, sl
  40900a:	4638      	mov	r0, r7
  40900c:	f7ff fb8e 	bl	40872c <__sprint_r.part.0>
  409010:	2800      	cmp	r0, #0
  409012:	f040 813f 	bne.w	409294 <_vfiprintf_r+0xae8>
  409016:	9910      	ldr	r1, [sp, #64]	; 0x40
  409018:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40901a:	1c48      	adds	r0, r1, #1
  40901c:	46ce      	mov	lr, r9
  40901e:	e77f      	b.n	408f20 <_vfiprintf_r+0x774>
  409020:	aa0f      	add	r2, sp, #60	; 0x3c
  409022:	4659      	mov	r1, fp
  409024:	4638      	mov	r0, r7
  409026:	f7ff fb81 	bl	40872c <__sprint_r.part.0>
  40902a:	b960      	cbnz	r0, 409046 <_vfiprintf_r+0x89a>
  40902c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40902e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409030:	1c48      	adds	r0, r1, #1
  409032:	46ca      	mov	sl, r9
  409034:	e7bd      	b.n	408fb2 <_vfiprintf_r+0x806>
  409036:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409038:	f8dd b010 	ldr.w	fp, [sp, #16]
  40903c:	2b00      	cmp	r3, #0
  40903e:	f040 81d4 	bne.w	4093ea <_vfiprintf_r+0xc3e>
  409042:	2300      	movs	r3, #0
  409044:	9310      	str	r3, [sp, #64]	; 0x40
  409046:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40904a:	f013 0f01 	tst.w	r3, #1
  40904e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  409052:	d102      	bne.n	40905a <_vfiprintf_r+0x8ae>
  409054:	059a      	lsls	r2, r3, #22
  409056:	f140 80de 	bpl.w	409216 <_vfiprintf_r+0xa6a>
  40905a:	065b      	lsls	r3, r3, #25
  40905c:	f53f acb2 	bmi.w	4089c4 <_vfiprintf_r+0x218>
  409060:	9803      	ldr	r0, [sp, #12]
  409062:	b02d      	add	sp, #180	; 0xb4
  409064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409068:	2a00      	cmp	r2, #0
  40906a:	f040 8106 	bne.w	40927a <_vfiprintf_r+0xace>
  40906e:	9a05      	ldr	r2, [sp, #20]
  409070:	921d      	str	r2, [sp, #116]	; 0x74
  409072:	2301      	movs	r3, #1
  409074:	9211      	str	r2, [sp, #68]	; 0x44
  409076:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  40907a:	9310      	str	r3, [sp, #64]	; 0x40
  40907c:	46ca      	mov	sl, r9
  40907e:	f10a 0a08 	add.w	sl, sl, #8
  409082:	9b02      	ldr	r3, [sp, #8]
  409084:	0759      	lsls	r1, r3, #29
  409086:	d504      	bpl.n	409092 <_vfiprintf_r+0x8e6>
  409088:	9b08      	ldr	r3, [sp, #32]
  40908a:	9901      	ldr	r1, [sp, #4]
  40908c:	1a5c      	subs	r4, r3, r1
  40908e:	2c00      	cmp	r4, #0
  409090:	dc81      	bgt.n	408f96 <_vfiprintf_r+0x7ea>
  409092:	9b03      	ldr	r3, [sp, #12]
  409094:	9908      	ldr	r1, [sp, #32]
  409096:	9801      	ldr	r0, [sp, #4]
  409098:	4281      	cmp	r1, r0
  40909a:	bfac      	ite	ge
  40909c:	185b      	addge	r3, r3, r1
  40909e:	181b      	addlt	r3, r3, r0
  4090a0:	9303      	str	r3, [sp, #12]
  4090a2:	bb72      	cbnz	r2, 409102 <_vfiprintf_r+0x956>
  4090a4:	2300      	movs	r3, #0
  4090a6:	9310      	str	r3, [sp, #64]	; 0x40
  4090a8:	46ca      	mov	sl, r9
  4090aa:	f7ff bbbc 	b.w	408826 <_vfiprintf_r+0x7a>
  4090ae:	aa0f      	add	r2, sp, #60	; 0x3c
  4090b0:	9904      	ldr	r1, [sp, #16]
  4090b2:	4620      	mov	r0, r4
  4090b4:	f7ff fb3a 	bl	40872c <__sprint_r.part.0>
  4090b8:	bb50      	cbnz	r0, 409110 <_vfiprintf_r+0x964>
  4090ba:	9910      	ldr	r1, [sp, #64]	; 0x40
  4090bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4090be:	f101 0e01 	add.w	lr, r1, #1
  4090c2:	46cc      	mov	ip, r9
  4090c4:	e548      	b.n	408b58 <_vfiprintf_r+0x3ac>
  4090c6:	2a00      	cmp	r2, #0
  4090c8:	f040 8140 	bne.w	40934c <_vfiprintf_r+0xba0>
  4090cc:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  4090d0:	2900      	cmp	r1, #0
  4090d2:	f000 811b 	beq.w	40930c <_vfiprintf_r+0xb60>
  4090d6:	2201      	movs	r2, #1
  4090d8:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  4090dc:	4610      	mov	r0, r2
  4090de:	921d      	str	r2, [sp, #116]	; 0x74
  4090e0:	911c      	str	r1, [sp, #112]	; 0x70
  4090e2:	46ca      	mov	sl, r9
  4090e4:	4601      	mov	r1, r0
  4090e6:	f10a 0a08 	add.w	sl, sl, #8
  4090ea:	3001      	adds	r0, #1
  4090ec:	e507      	b.n	408afe <_vfiprintf_r+0x352>
  4090ee:	9b02      	ldr	r3, [sp, #8]
  4090f0:	2a01      	cmp	r2, #1
  4090f2:	f000 8098 	beq.w	409226 <_vfiprintf_r+0xa7a>
  4090f6:	2a02      	cmp	r2, #2
  4090f8:	d10d      	bne.n	409116 <_vfiprintf_r+0x96a>
  4090fa:	9302      	str	r3, [sp, #8]
  4090fc:	2600      	movs	r6, #0
  4090fe:	2700      	movs	r7, #0
  409100:	e5b0      	b.n	408c64 <_vfiprintf_r+0x4b8>
  409102:	aa0f      	add	r2, sp, #60	; 0x3c
  409104:	9904      	ldr	r1, [sp, #16]
  409106:	9806      	ldr	r0, [sp, #24]
  409108:	f7ff fb10 	bl	40872c <__sprint_r.part.0>
  40910c:	2800      	cmp	r0, #0
  40910e:	d0c9      	beq.n	4090a4 <_vfiprintf_r+0x8f8>
  409110:	f8dd b010 	ldr.w	fp, [sp, #16]
  409114:	e797      	b.n	409046 <_vfiprintf_r+0x89a>
  409116:	9302      	str	r3, [sp, #8]
  409118:	2600      	movs	r6, #0
  40911a:	2700      	movs	r7, #0
  40911c:	4649      	mov	r1, r9
  40911e:	e000      	b.n	409122 <_vfiprintf_r+0x976>
  409120:	4659      	mov	r1, fp
  409122:	08f2      	lsrs	r2, r6, #3
  409124:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  409128:	08f8      	lsrs	r0, r7, #3
  40912a:	f006 0307 	and.w	r3, r6, #7
  40912e:	4607      	mov	r7, r0
  409130:	4616      	mov	r6, r2
  409132:	3330      	adds	r3, #48	; 0x30
  409134:	ea56 0207 	orrs.w	r2, r6, r7
  409138:	f801 3c01 	strb.w	r3, [r1, #-1]
  40913c:	f101 3bff 	add.w	fp, r1, #4294967295
  409140:	d1ee      	bne.n	409120 <_vfiprintf_r+0x974>
  409142:	9a02      	ldr	r2, [sp, #8]
  409144:	07d6      	lsls	r6, r2, #31
  409146:	f57f ad9d 	bpl.w	408c84 <_vfiprintf_r+0x4d8>
  40914a:	2b30      	cmp	r3, #48	; 0x30
  40914c:	f43f ad9a 	beq.w	408c84 <_vfiprintf_r+0x4d8>
  409150:	3902      	subs	r1, #2
  409152:	2330      	movs	r3, #48	; 0x30
  409154:	f80b 3c01 	strb.w	r3, [fp, #-1]
  409158:	eba9 0301 	sub.w	r3, r9, r1
  40915c:	9305      	str	r3, [sp, #20]
  40915e:	468b      	mov	fp, r1
  409160:	e476      	b.n	408a50 <_vfiprintf_r+0x2a4>
  409162:	9b03      	ldr	r3, [sp, #12]
  409164:	9a08      	ldr	r2, [sp, #32]
  409166:	428a      	cmp	r2, r1
  409168:	bfac      	ite	ge
  40916a:	189b      	addge	r3, r3, r2
  40916c:	185b      	addlt	r3, r3, r1
  40916e:	9303      	str	r3, [sp, #12]
  409170:	e798      	b.n	4090a4 <_vfiprintf_r+0x8f8>
  409172:	2202      	movs	r2, #2
  409174:	e44d      	b.n	408a12 <_vfiprintf_r+0x266>
  409176:	2f00      	cmp	r7, #0
  409178:	bf08      	it	eq
  40917a:	2e0a      	cmpeq	r6, #10
  40917c:	d352      	bcc.n	409224 <_vfiprintf_r+0xa78>
  40917e:	46cb      	mov	fp, r9
  409180:	4630      	mov	r0, r6
  409182:	4639      	mov	r1, r7
  409184:	220a      	movs	r2, #10
  409186:	2300      	movs	r3, #0
  409188:	f001 ff16 	bl	40afb8 <__aeabi_uldivmod>
  40918c:	3230      	adds	r2, #48	; 0x30
  40918e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  409192:	4630      	mov	r0, r6
  409194:	4639      	mov	r1, r7
  409196:	2300      	movs	r3, #0
  409198:	220a      	movs	r2, #10
  40919a:	f001 ff0d 	bl	40afb8 <__aeabi_uldivmod>
  40919e:	4606      	mov	r6, r0
  4091a0:	460f      	mov	r7, r1
  4091a2:	ea56 0307 	orrs.w	r3, r6, r7
  4091a6:	d1eb      	bne.n	409180 <_vfiprintf_r+0x9d4>
  4091a8:	e56c      	b.n	408c84 <_vfiprintf_r+0x4d8>
  4091aa:	9405      	str	r4, [sp, #20]
  4091ac:	46cb      	mov	fp, r9
  4091ae:	e44f      	b.n	408a50 <_vfiprintf_r+0x2a4>
  4091b0:	aa0f      	add	r2, sp, #60	; 0x3c
  4091b2:	9904      	ldr	r1, [sp, #16]
  4091b4:	9806      	ldr	r0, [sp, #24]
  4091b6:	f7ff fab9 	bl	40872c <__sprint_r.part.0>
  4091ba:	2800      	cmp	r0, #0
  4091bc:	d1a8      	bne.n	409110 <_vfiprintf_r+0x964>
  4091be:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4091c0:	46ca      	mov	sl, r9
  4091c2:	e75e      	b.n	409082 <_vfiprintf_r+0x8d6>
  4091c4:	aa0f      	add	r2, sp, #60	; 0x3c
  4091c6:	9904      	ldr	r1, [sp, #16]
  4091c8:	9806      	ldr	r0, [sp, #24]
  4091ca:	f7ff faaf 	bl	40872c <__sprint_r.part.0>
  4091ce:	2800      	cmp	r0, #0
  4091d0:	d19e      	bne.n	409110 <_vfiprintf_r+0x964>
  4091d2:	46ca      	mov	sl, r9
  4091d4:	f7ff bbc0 	b.w	408958 <_vfiprintf_r+0x1ac>
  4091d8:	0040c09c 	.word	0x0040c09c
  4091dc:	0040c08c 	.word	0x0040c08c
  4091e0:	3104      	adds	r1, #4
  4091e2:	6816      	ldr	r6, [r2, #0]
  4091e4:	9107      	str	r1, [sp, #28]
  4091e6:	2201      	movs	r2, #1
  4091e8:	2700      	movs	r7, #0
  4091ea:	e412      	b.n	408a12 <_vfiprintf_r+0x266>
  4091ec:	9807      	ldr	r0, [sp, #28]
  4091ee:	4601      	mov	r1, r0
  4091f0:	3104      	adds	r1, #4
  4091f2:	6806      	ldr	r6, [r0, #0]
  4091f4:	9107      	str	r1, [sp, #28]
  4091f6:	2700      	movs	r7, #0
  4091f8:	e40b      	b.n	408a12 <_vfiprintf_r+0x266>
  4091fa:	680e      	ldr	r6, [r1, #0]
  4091fc:	3104      	adds	r1, #4
  4091fe:	9107      	str	r1, [sp, #28]
  409200:	2700      	movs	r7, #0
  409202:	e591      	b.n	408d28 <_vfiprintf_r+0x57c>
  409204:	9907      	ldr	r1, [sp, #28]
  409206:	680e      	ldr	r6, [r1, #0]
  409208:	460a      	mov	r2, r1
  40920a:	17f7      	asrs	r7, r6, #31
  40920c:	3204      	adds	r2, #4
  40920e:	9207      	str	r2, [sp, #28]
  409210:	4630      	mov	r0, r6
  409212:	4639      	mov	r1, r7
  409214:	e50f      	b.n	408c36 <_vfiprintf_r+0x48a>
  409216:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40921a:	f000 fe7f 	bl	409f1c <__retarget_lock_release_recursive>
  40921e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  409222:	e71a      	b.n	40905a <_vfiprintf_r+0x8ae>
  409224:	9b02      	ldr	r3, [sp, #8]
  409226:	9302      	str	r3, [sp, #8]
  409228:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40922c:	3630      	adds	r6, #48	; 0x30
  40922e:	2301      	movs	r3, #1
  409230:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  409234:	9305      	str	r3, [sp, #20]
  409236:	e40b      	b.n	408a50 <_vfiprintf_r+0x2a4>
  409238:	aa0f      	add	r2, sp, #60	; 0x3c
  40923a:	9904      	ldr	r1, [sp, #16]
  40923c:	9806      	ldr	r0, [sp, #24]
  40923e:	f7ff fa75 	bl	40872c <__sprint_r.part.0>
  409242:	2800      	cmp	r0, #0
  409244:	f47f af64 	bne.w	409110 <_vfiprintf_r+0x964>
  409248:	9910      	ldr	r1, [sp, #64]	; 0x40
  40924a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40924c:	1c48      	adds	r0, r1, #1
  40924e:	46ca      	mov	sl, r9
  409250:	e651      	b.n	408ef6 <_vfiprintf_r+0x74a>
  409252:	aa0f      	add	r2, sp, #60	; 0x3c
  409254:	9904      	ldr	r1, [sp, #16]
  409256:	9806      	ldr	r0, [sp, #24]
  409258:	f7ff fa68 	bl	40872c <__sprint_r.part.0>
  40925c:	2800      	cmp	r0, #0
  40925e:	f47f af57 	bne.w	409110 <_vfiprintf_r+0x964>
  409262:	9910      	ldr	r1, [sp, #64]	; 0x40
  409264:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409266:	1c48      	adds	r0, r1, #1
  409268:	46ca      	mov	sl, r9
  40926a:	e448      	b.n	408afe <_vfiprintf_r+0x352>
  40926c:	2a00      	cmp	r2, #0
  40926e:	f040 8091 	bne.w	409394 <_vfiprintf_r+0xbe8>
  409272:	2001      	movs	r0, #1
  409274:	4611      	mov	r1, r2
  409276:	46ca      	mov	sl, r9
  409278:	e641      	b.n	408efe <_vfiprintf_r+0x752>
  40927a:	aa0f      	add	r2, sp, #60	; 0x3c
  40927c:	9904      	ldr	r1, [sp, #16]
  40927e:	9806      	ldr	r0, [sp, #24]
  409280:	f7ff fa54 	bl	40872c <__sprint_r.part.0>
  409284:	2800      	cmp	r0, #0
  409286:	f47f af43 	bne.w	409110 <_vfiprintf_r+0x964>
  40928a:	9810      	ldr	r0, [sp, #64]	; 0x40
  40928c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40928e:	3001      	adds	r0, #1
  409290:	46ca      	mov	sl, r9
  409292:	e667      	b.n	408f64 <_vfiprintf_r+0x7b8>
  409294:	46d3      	mov	fp, sl
  409296:	e6d6      	b.n	409046 <_vfiprintf_r+0x89a>
  409298:	9e07      	ldr	r6, [sp, #28]
  40929a:	3607      	adds	r6, #7
  40929c:	f026 0207 	bic.w	r2, r6, #7
  4092a0:	f102 0108 	add.w	r1, r2, #8
  4092a4:	e9d2 6700 	ldrd	r6, r7, [r2]
  4092a8:	9107      	str	r1, [sp, #28]
  4092aa:	2201      	movs	r2, #1
  4092ac:	f7ff bbb1 	b.w	408a12 <_vfiprintf_r+0x266>
  4092b0:	9e07      	ldr	r6, [sp, #28]
  4092b2:	3607      	adds	r6, #7
  4092b4:	f026 0607 	bic.w	r6, r6, #7
  4092b8:	e9d6 0100 	ldrd	r0, r1, [r6]
  4092bc:	f106 0208 	add.w	r2, r6, #8
  4092c0:	9207      	str	r2, [sp, #28]
  4092c2:	4606      	mov	r6, r0
  4092c4:	460f      	mov	r7, r1
  4092c6:	e4b6      	b.n	408c36 <_vfiprintf_r+0x48a>
  4092c8:	9e07      	ldr	r6, [sp, #28]
  4092ca:	3607      	adds	r6, #7
  4092cc:	f026 0207 	bic.w	r2, r6, #7
  4092d0:	f102 0108 	add.w	r1, r2, #8
  4092d4:	e9d2 6700 	ldrd	r6, r7, [r2]
  4092d8:	9107      	str	r1, [sp, #28]
  4092da:	2200      	movs	r2, #0
  4092dc:	f7ff bb99 	b.w	408a12 <_vfiprintf_r+0x266>
  4092e0:	9e07      	ldr	r6, [sp, #28]
  4092e2:	3607      	adds	r6, #7
  4092e4:	f026 0107 	bic.w	r1, r6, #7
  4092e8:	f101 0008 	add.w	r0, r1, #8
  4092ec:	9007      	str	r0, [sp, #28]
  4092ee:	e9d1 6700 	ldrd	r6, r7, [r1]
  4092f2:	e519      	b.n	408d28 <_vfiprintf_r+0x57c>
  4092f4:	46cb      	mov	fp, r9
  4092f6:	f7ff bbab 	b.w	408a50 <_vfiprintf_r+0x2a4>
  4092fa:	252d      	movs	r5, #45	; 0x2d
  4092fc:	4276      	negs	r6, r6
  4092fe:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  409302:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409306:	2201      	movs	r2, #1
  409308:	f7ff bb88 	b.w	408a1c <_vfiprintf_r+0x270>
  40930c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40930e:	b9b3      	cbnz	r3, 40933e <_vfiprintf_r+0xb92>
  409310:	4611      	mov	r1, r2
  409312:	2001      	movs	r0, #1
  409314:	46ca      	mov	sl, r9
  409316:	e5f2      	b.n	408efe <_vfiprintf_r+0x752>
  409318:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40931c:	f000 fdfe 	bl	409f1c <__retarget_lock_release_recursive>
  409320:	f04f 33ff 	mov.w	r3, #4294967295
  409324:	9303      	str	r3, [sp, #12]
  409326:	f7ff bb50 	b.w	4089ca <_vfiprintf_r+0x21e>
  40932a:	aa0f      	add	r2, sp, #60	; 0x3c
  40932c:	9904      	ldr	r1, [sp, #16]
  40932e:	9806      	ldr	r0, [sp, #24]
  409330:	f7ff f9fc 	bl	40872c <__sprint_r.part.0>
  409334:	2800      	cmp	r0, #0
  409336:	f47f aeeb 	bne.w	409110 <_vfiprintf_r+0x964>
  40933a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40933c:	e6a9      	b.n	409092 <_vfiprintf_r+0x8e6>
  40933e:	ab0e      	add	r3, sp, #56	; 0x38
  409340:	2202      	movs	r2, #2
  409342:	931c      	str	r3, [sp, #112]	; 0x70
  409344:	921d      	str	r2, [sp, #116]	; 0x74
  409346:	2001      	movs	r0, #1
  409348:	46ca      	mov	sl, r9
  40934a:	e5d0      	b.n	408eee <_vfiprintf_r+0x742>
  40934c:	aa0f      	add	r2, sp, #60	; 0x3c
  40934e:	9904      	ldr	r1, [sp, #16]
  409350:	9806      	ldr	r0, [sp, #24]
  409352:	f7ff f9eb 	bl	40872c <__sprint_r.part.0>
  409356:	2800      	cmp	r0, #0
  409358:	f47f aeda 	bne.w	409110 <_vfiprintf_r+0x964>
  40935c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40935e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409360:	1c48      	adds	r0, r1, #1
  409362:	46ca      	mov	sl, r9
  409364:	e5a4      	b.n	408eb0 <_vfiprintf_r+0x704>
  409366:	9a07      	ldr	r2, [sp, #28]
  409368:	9903      	ldr	r1, [sp, #12]
  40936a:	6813      	ldr	r3, [r2, #0]
  40936c:	17cd      	asrs	r5, r1, #31
  40936e:	4608      	mov	r0, r1
  409370:	3204      	adds	r2, #4
  409372:	4629      	mov	r1, r5
  409374:	9207      	str	r2, [sp, #28]
  409376:	e9c3 0100 	strd	r0, r1, [r3]
  40937a:	f7ff ba54 	b.w	408826 <_vfiprintf_r+0x7a>
  40937e:	4658      	mov	r0, fp
  409380:	9607      	str	r6, [sp, #28]
  409382:	9302      	str	r3, [sp, #8]
  409384:	f001 fbdc 	bl	40ab40 <strlen>
  409388:	2400      	movs	r4, #0
  40938a:	9005      	str	r0, [sp, #20]
  40938c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  409390:	f7ff bb5e 	b.w	408a50 <_vfiprintf_r+0x2a4>
  409394:	aa0f      	add	r2, sp, #60	; 0x3c
  409396:	9904      	ldr	r1, [sp, #16]
  409398:	9806      	ldr	r0, [sp, #24]
  40939a:	f7ff f9c7 	bl	40872c <__sprint_r.part.0>
  40939e:	2800      	cmp	r0, #0
  4093a0:	f47f aeb6 	bne.w	409110 <_vfiprintf_r+0x964>
  4093a4:	9910      	ldr	r1, [sp, #64]	; 0x40
  4093a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4093a8:	1c48      	adds	r0, r1, #1
  4093aa:	46ca      	mov	sl, r9
  4093ac:	e5a7      	b.n	408efe <_vfiprintf_r+0x752>
  4093ae:	9910      	ldr	r1, [sp, #64]	; 0x40
  4093b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4093b2:	4e20      	ldr	r6, [pc, #128]	; (409434 <_vfiprintf_r+0xc88>)
  4093b4:	3101      	adds	r1, #1
  4093b6:	f7ff bb90 	b.w	408ada <_vfiprintf_r+0x32e>
  4093ba:	2c06      	cmp	r4, #6
  4093bc:	bf28      	it	cs
  4093be:	2406      	movcs	r4, #6
  4093c0:	9405      	str	r4, [sp, #20]
  4093c2:	9607      	str	r6, [sp, #28]
  4093c4:	9401      	str	r4, [sp, #4]
  4093c6:	f8df b070 	ldr.w	fp, [pc, #112]	; 409438 <_vfiprintf_r+0xc8c>
  4093ca:	e4d5      	b.n	408d78 <_vfiprintf_r+0x5cc>
  4093cc:	9810      	ldr	r0, [sp, #64]	; 0x40
  4093ce:	4e19      	ldr	r6, [pc, #100]	; (409434 <_vfiprintf_r+0xc88>)
  4093d0:	3001      	adds	r0, #1
  4093d2:	e603      	b.n	408fdc <_vfiprintf_r+0x830>
  4093d4:	9405      	str	r4, [sp, #20]
  4093d6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4093da:	9607      	str	r6, [sp, #28]
  4093dc:	9302      	str	r3, [sp, #8]
  4093de:	4604      	mov	r4, r0
  4093e0:	f7ff bb36 	b.w	408a50 <_vfiprintf_r+0x2a4>
  4093e4:	4686      	mov	lr, r0
  4093e6:	f7ff bbce 	b.w	408b86 <_vfiprintf_r+0x3da>
  4093ea:	9806      	ldr	r0, [sp, #24]
  4093ec:	aa0f      	add	r2, sp, #60	; 0x3c
  4093ee:	4659      	mov	r1, fp
  4093f0:	f7ff f99c 	bl	40872c <__sprint_r.part.0>
  4093f4:	2800      	cmp	r0, #0
  4093f6:	f43f ae24 	beq.w	409042 <_vfiprintf_r+0x896>
  4093fa:	e624      	b.n	409046 <_vfiprintf_r+0x89a>
  4093fc:	9907      	ldr	r1, [sp, #28]
  4093fe:	f898 2001 	ldrb.w	r2, [r8, #1]
  409402:	680c      	ldr	r4, [r1, #0]
  409404:	3104      	adds	r1, #4
  409406:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  40940a:	46b8      	mov	r8, r7
  40940c:	9107      	str	r1, [sp, #28]
  40940e:	f7ff ba3f 	b.w	408890 <_vfiprintf_r+0xe4>
  409412:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409416:	e43c      	b.n	408c92 <_vfiprintf_r+0x4e6>
  409418:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40941c:	e521      	b.n	408e62 <_vfiprintf_r+0x6b6>
  40941e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409422:	f7ff bbf4 	b.w	408c0e <_vfiprintf_r+0x462>
  409426:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40942a:	e491      	b.n	408d50 <_vfiprintf_r+0x5a4>
  40942c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409430:	e469      	b.n	408d06 <_vfiprintf_r+0x55a>
  409432:	bf00      	nop
  409434:	0040c08c 	.word	0x0040c08c
  409438:	0040c084 	.word	0x0040c084

0040943c <__sbprintf>:
  40943c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  409440:	460c      	mov	r4, r1
  409442:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  409446:	8989      	ldrh	r1, [r1, #12]
  409448:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40944a:	89e5      	ldrh	r5, [r4, #14]
  40944c:	9619      	str	r6, [sp, #100]	; 0x64
  40944e:	f021 0102 	bic.w	r1, r1, #2
  409452:	4606      	mov	r6, r0
  409454:	69e0      	ldr	r0, [r4, #28]
  409456:	f8ad 100c 	strh.w	r1, [sp, #12]
  40945a:	4617      	mov	r7, r2
  40945c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  409460:	6a62      	ldr	r2, [r4, #36]	; 0x24
  409462:	f8ad 500e 	strh.w	r5, [sp, #14]
  409466:	4698      	mov	r8, r3
  409468:	ad1a      	add	r5, sp, #104	; 0x68
  40946a:	2300      	movs	r3, #0
  40946c:	9007      	str	r0, [sp, #28]
  40946e:	a816      	add	r0, sp, #88	; 0x58
  409470:	9209      	str	r2, [sp, #36]	; 0x24
  409472:	9306      	str	r3, [sp, #24]
  409474:	9500      	str	r5, [sp, #0]
  409476:	9504      	str	r5, [sp, #16]
  409478:	9102      	str	r1, [sp, #8]
  40947a:	9105      	str	r1, [sp, #20]
  40947c:	f000 fd48 	bl	409f10 <__retarget_lock_init_recursive>
  409480:	4643      	mov	r3, r8
  409482:	463a      	mov	r2, r7
  409484:	4669      	mov	r1, sp
  409486:	4630      	mov	r0, r6
  409488:	f7ff f990 	bl	4087ac <_vfiprintf_r>
  40948c:	1e05      	subs	r5, r0, #0
  40948e:	db07      	blt.n	4094a0 <__sbprintf+0x64>
  409490:	4630      	mov	r0, r6
  409492:	4669      	mov	r1, sp
  409494:	f000 f928 	bl	4096e8 <_fflush_r>
  409498:	2800      	cmp	r0, #0
  40949a:	bf18      	it	ne
  40949c:	f04f 35ff 	movne.w	r5, #4294967295
  4094a0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4094a4:	065b      	lsls	r3, r3, #25
  4094a6:	d503      	bpl.n	4094b0 <__sbprintf+0x74>
  4094a8:	89a3      	ldrh	r3, [r4, #12]
  4094aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4094ae:	81a3      	strh	r3, [r4, #12]
  4094b0:	9816      	ldr	r0, [sp, #88]	; 0x58
  4094b2:	f000 fd2f 	bl	409f14 <__retarget_lock_close_recursive>
  4094b6:	4628      	mov	r0, r5
  4094b8:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4094bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004094c0 <__swsetup_r>:
  4094c0:	b538      	push	{r3, r4, r5, lr}
  4094c2:	4b30      	ldr	r3, [pc, #192]	; (409584 <__swsetup_r+0xc4>)
  4094c4:	681b      	ldr	r3, [r3, #0]
  4094c6:	4605      	mov	r5, r0
  4094c8:	460c      	mov	r4, r1
  4094ca:	b113      	cbz	r3, 4094d2 <__swsetup_r+0x12>
  4094cc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4094ce:	2a00      	cmp	r2, #0
  4094d0:	d038      	beq.n	409544 <__swsetup_r+0x84>
  4094d2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4094d6:	b293      	uxth	r3, r2
  4094d8:	0718      	lsls	r0, r3, #28
  4094da:	d50c      	bpl.n	4094f6 <__swsetup_r+0x36>
  4094dc:	6920      	ldr	r0, [r4, #16]
  4094de:	b1a8      	cbz	r0, 40950c <__swsetup_r+0x4c>
  4094e0:	f013 0201 	ands.w	r2, r3, #1
  4094e4:	d01e      	beq.n	409524 <__swsetup_r+0x64>
  4094e6:	6963      	ldr	r3, [r4, #20]
  4094e8:	2200      	movs	r2, #0
  4094ea:	425b      	negs	r3, r3
  4094ec:	61a3      	str	r3, [r4, #24]
  4094ee:	60a2      	str	r2, [r4, #8]
  4094f0:	b1f0      	cbz	r0, 409530 <__swsetup_r+0x70>
  4094f2:	2000      	movs	r0, #0
  4094f4:	bd38      	pop	{r3, r4, r5, pc}
  4094f6:	06d9      	lsls	r1, r3, #27
  4094f8:	d53c      	bpl.n	409574 <__swsetup_r+0xb4>
  4094fa:	0758      	lsls	r0, r3, #29
  4094fc:	d426      	bmi.n	40954c <__swsetup_r+0x8c>
  4094fe:	6920      	ldr	r0, [r4, #16]
  409500:	f042 0308 	orr.w	r3, r2, #8
  409504:	81a3      	strh	r3, [r4, #12]
  409506:	b29b      	uxth	r3, r3
  409508:	2800      	cmp	r0, #0
  40950a:	d1e9      	bne.n	4094e0 <__swsetup_r+0x20>
  40950c:	f403 7220 	and.w	r2, r3, #640	; 0x280
  409510:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  409514:	d0e4      	beq.n	4094e0 <__swsetup_r+0x20>
  409516:	4628      	mov	r0, r5
  409518:	4621      	mov	r1, r4
  40951a:	f000 fd2f 	bl	409f7c <__smakebuf_r>
  40951e:	89a3      	ldrh	r3, [r4, #12]
  409520:	6920      	ldr	r0, [r4, #16]
  409522:	e7dd      	b.n	4094e0 <__swsetup_r+0x20>
  409524:	0799      	lsls	r1, r3, #30
  409526:	bf58      	it	pl
  409528:	6962      	ldrpl	r2, [r4, #20]
  40952a:	60a2      	str	r2, [r4, #8]
  40952c:	2800      	cmp	r0, #0
  40952e:	d1e0      	bne.n	4094f2 <__swsetup_r+0x32>
  409530:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409534:	061a      	lsls	r2, r3, #24
  409536:	d5dd      	bpl.n	4094f4 <__swsetup_r+0x34>
  409538:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40953c:	81a3      	strh	r3, [r4, #12]
  40953e:	f04f 30ff 	mov.w	r0, #4294967295
  409542:	bd38      	pop	{r3, r4, r5, pc}
  409544:	4618      	mov	r0, r3
  409546:	f000 f927 	bl	409798 <__sinit>
  40954a:	e7c2      	b.n	4094d2 <__swsetup_r+0x12>
  40954c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40954e:	b151      	cbz	r1, 409566 <__swsetup_r+0xa6>
  409550:	f104 0340 	add.w	r3, r4, #64	; 0x40
  409554:	4299      	cmp	r1, r3
  409556:	d004      	beq.n	409562 <__swsetup_r+0xa2>
  409558:	4628      	mov	r0, r5
  40955a:	f000 fa43 	bl	4099e4 <_free_r>
  40955e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  409562:	2300      	movs	r3, #0
  409564:	6323      	str	r3, [r4, #48]	; 0x30
  409566:	2300      	movs	r3, #0
  409568:	6920      	ldr	r0, [r4, #16]
  40956a:	6063      	str	r3, [r4, #4]
  40956c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  409570:	6020      	str	r0, [r4, #0]
  409572:	e7c5      	b.n	409500 <__swsetup_r+0x40>
  409574:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  409578:	2309      	movs	r3, #9
  40957a:	602b      	str	r3, [r5, #0]
  40957c:	f04f 30ff 	mov.w	r0, #4294967295
  409580:	81a2      	strh	r2, [r4, #12]
  409582:	bd38      	pop	{r3, r4, r5, pc}
  409584:	20000240 	.word	0x20000240

00409588 <register_fini>:
  409588:	4b02      	ldr	r3, [pc, #8]	; (409594 <register_fini+0xc>)
  40958a:	b113      	cbz	r3, 409592 <register_fini+0xa>
  40958c:	4802      	ldr	r0, [pc, #8]	; (409598 <register_fini+0x10>)
  40958e:	f000 b805 	b.w	40959c <atexit>
  409592:	4770      	bx	lr
  409594:	00000000 	.word	0x00000000
  409598:	00409809 	.word	0x00409809

0040959c <atexit>:
  40959c:	2300      	movs	r3, #0
  40959e:	4601      	mov	r1, r0
  4095a0:	461a      	mov	r2, r3
  4095a2:	4618      	mov	r0, r3
  4095a4:	f001 bbe0 	b.w	40ad68 <__register_exitproc>

004095a8 <__sflush_r>:
  4095a8:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  4095ac:	b29a      	uxth	r2, r3
  4095ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4095b2:	460d      	mov	r5, r1
  4095b4:	0711      	lsls	r1, r2, #28
  4095b6:	4680      	mov	r8, r0
  4095b8:	d43a      	bmi.n	409630 <__sflush_r+0x88>
  4095ba:	686a      	ldr	r2, [r5, #4]
  4095bc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4095c0:	2a00      	cmp	r2, #0
  4095c2:	81ab      	strh	r3, [r5, #12]
  4095c4:	dd6f      	ble.n	4096a6 <__sflush_r+0xfe>
  4095c6:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4095c8:	2c00      	cmp	r4, #0
  4095ca:	d049      	beq.n	409660 <__sflush_r+0xb8>
  4095cc:	2200      	movs	r2, #0
  4095ce:	b29b      	uxth	r3, r3
  4095d0:	f8d8 6000 	ldr.w	r6, [r8]
  4095d4:	f8c8 2000 	str.w	r2, [r8]
  4095d8:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4095dc:	d067      	beq.n	4096ae <__sflush_r+0x106>
  4095de:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4095e0:	075f      	lsls	r7, r3, #29
  4095e2:	d505      	bpl.n	4095f0 <__sflush_r+0x48>
  4095e4:	6869      	ldr	r1, [r5, #4]
  4095e6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4095e8:	1a52      	subs	r2, r2, r1
  4095ea:	b10b      	cbz	r3, 4095f0 <__sflush_r+0x48>
  4095ec:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4095ee:	1ad2      	subs	r2, r2, r3
  4095f0:	2300      	movs	r3, #0
  4095f2:	69e9      	ldr	r1, [r5, #28]
  4095f4:	4640      	mov	r0, r8
  4095f6:	47a0      	blx	r4
  4095f8:	1c44      	adds	r4, r0, #1
  4095fa:	d03c      	beq.n	409676 <__sflush_r+0xce>
  4095fc:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  409600:	692a      	ldr	r2, [r5, #16]
  409602:	602a      	str	r2, [r5, #0]
  409604:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  409608:	2200      	movs	r2, #0
  40960a:	81ab      	strh	r3, [r5, #12]
  40960c:	04db      	lsls	r3, r3, #19
  40960e:	606a      	str	r2, [r5, #4]
  409610:	d447      	bmi.n	4096a2 <__sflush_r+0xfa>
  409612:	6b29      	ldr	r1, [r5, #48]	; 0x30
  409614:	f8c8 6000 	str.w	r6, [r8]
  409618:	b311      	cbz	r1, 409660 <__sflush_r+0xb8>
  40961a:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40961e:	4299      	cmp	r1, r3
  409620:	d002      	beq.n	409628 <__sflush_r+0x80>
  409622:	4640      	mov	r0, r8
  409624:	f000 f9de 	bl	4099e4 <_free_r>
  409628:	2000      	movs	r0, #0
  40962a:	6328      	str	r0, [r5, #48]	; 0x30
  40962c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409630:	692e      	ldr	r6, [r5, #16]
  409632:	b1ae      	cbz	r6, 409660 <__sflush_r+0xb8>
  409634:	682c      	ldr	r4, [r5, #0]
  409636:	602e      	str	r6, [r5, #0]
  409638:	0791      	lsls	r1, r2, #30
  40963a:	bf0c      	ite	eq
  40963c:	696b      	ldreq	r3, [r5, #20]
  40963e:	2300      	movne	r3, #0
  409640:	1ba4      	subs	r4, r4, r6
  409642:	60ab      	str	r3, [r5, #8]
  409644:	e00a      	b.n	40965c <__sflush_r+0xb4>
  409646:	4623      	mov	r3, r4
  409648:	4632      	mov	r2, r6
  40964a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40964c:	69e9      	ldr	r1, [r5, #28]
  40964e:	4640      	mov	r0, r8
  409650:	47b8      	blx	r7
  409652:	2800      	cmp	r0, #0
  409654:	eba4 0400 	sub.w	r4, r4, r0
  409658:	4406      	add	r6, r0
  40965a:	dd04      	ble.n	409666 <__sflush_r+0xbe>
  40965c:	2c00      	cmp	r4, #0
  40965e:	dcf2      	bgt.n	409646 <__sflush_r+0x9e>
  409660:	2000      	movs	r0, #0
  409662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409666:	89ab      	ldrh	r3, [r5, #12]
  409668:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40966c:	81ab      	strh	r3, [r5, #12]
  40966e:	f04f 30ff 	mov.w	r0, #4294967295
  409672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409676:	f8d8 4000 	ldr.w	r4, [r8]
  40967a:	2c1d      	cmp	r4, #29
  40967c:	d8f3      	bhi.n	409666 <__sflush_r+0xbe>
  40967e:	4b19      	ldr	r3, [pc, #100]	; (4096e4 <__sflush_r+0x13c>)
  409680:	40e3      	lsrs	r3, r4
  409682:	43db      	mvns	r3, r3
  409684:	f013 0301 	ands.w	r3, r3, #1
  409688:	d1ed      	bne.n	409666 <__sflush_r+0xbe>
  40968a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40968e:	606b      	str	r3, [r5, #4]
  409690:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  409694:	6929      	ldr	r1, [r5, #16]
  409696:	81ab      	strh	r3, [r5, #12]
  409698:	04da      	lsls	r2, r3, #19
  40969a:	6029      	str	r1, [r5, #0]
  40969c:	d5b9      	bpl.n	409612 <__sflush_r+0x6a>
  40969e:	2c00      	cmp	r4, #0
  4096a0:	d1b7      	bne.n	409612 <__sflush_r+0x6a>
  4096a2:	6528      	str	r0, [r5, #80]	; 0x50
  4096a4:	e7b5      	b.n	409612 <__sflush_r+0x6a>
  4096a6:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  4096a8:	2a00      	cmp	r2, #0
  4096aa:	dc8c      	bgt.n	4095c6 <__sflush_r+0x1e>
  4096ac:	e7d8      	b.n	409660 <__sflush_r+0xb8>
  4096ae:	2301      	movs	r3, #1
  4096b0:	69e9      	ldr	r1, [r5, #28]
  4096b2:	4640      	mov	r0, r8
  4096b4:	47a0      	blx	r4
  4096b6:	1c43      	adds	r3, r0, #1
  4096b8:	4602      	mov	r2, r0
  4096ba:	d002      	beq.n	4096c2 <__sflush_r+0x11a>
  4096bc:	89ab      	ldrh	r3, [r5, #12]
  4096be:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4096c0:	e78e      	b.n	4095e0 <__sflush_r+0x38>
  4096c2:	f8d8 3000 	ldr.w	r3, [r8]
  4096c6:	2b00      	cmp	r3, #0
  4096c8:	d0f8      	beq.n	4096bc <__sflush_r+0x114>
  4096ca:	2b1d      	cmp	r3, #29
  4096cc:	d001      	beq.n	4096d2 <__sflush_r+0x12a>
  4096ce:	2b16      	cmp	r3, #22
  4096d0:	d102      	bne.n	4096d8 <__sflush_r+0x130>
  4096d2:	f8c8 6000 	str.w	r6, [r8]
  4096d6:	e7c3      	b.n	409660 <__sflush_r+0xb8>
  4096d8:	89ab      	ldrh	r3, [r5, #12]
  4096da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4096de:	81ab      	strh	r3, [r5, #12]
  4096e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4096e4:	20400001 	.word	0x20400001

004096e8 <_fflush_r>:
  4096e8:	b538      	push	{r3, r4, r5, lr}
  4096ea:	460d      	mov	r5, r1
  4096ec:	4604      	mov	r4, r0
  4096ee:	b108      	cbz	r0, 4096f4 <_fflush_r+0xc>
  4096f0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4096f2:	b1bb      	cbz	r3, 409724 <_fflush_r+0x3c>
  4096f4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4096f8:	b188      	cbz	r0, 40971e <_fflush_r+0x36>
  4096fa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4096fc:	07db      	lsls	r3, r3, #31
  4096fe:	d401      	bmi.n	409704 <_fflush_r+0x1c>
  409700:	0581      	lsls	r1, r0, #22
  409702:	d517      	bpl.n	409734 <_fflush_r+0x4c>
  409704:	4620      	mov	r0, r4
  409706:	4629      	mov	r1, r5
  409708:	f7ff ff4e 	bl	4095a8 <__sflush_r>
  40970c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40970e:	07da      	lsls	r2, r3, #31
  409710:	4604      	mov	r4, r0
  409712:	d402      	bmi.n	40971a <_fflush_r+0x32>
  409714:	89ab      	ldrh	r3, [r5, #12]
  409716:	059b      	lsls	r3, r3, #22
  409718:	d507      	bpl.n	40972a <_fflush_r+0x42>
  40971a:	4620      	mov	r0, r4
  40971c:	bd38      	pop	{r3, r4, r5, pc}
  40971e:	4604      	mov	r4, r0
  409720:	4620      	mov	r0, r4
  409722:	bd38      	pop	{r3, r4, r5, pc}
  409724:	f000 f838 	bl	409798 <__sinit>
  409728:	e7e4      	b.n	4096f4 <_fflush_r+0xc>
  40972a:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40972c:	f000 fbf6 	bl	409f1c <__retarget_lock_release_recursive>
  409730:	4620      	mov	r0, r4
  409732:	bd38      	pop	{r3, r4, r5, pc}
  409734:	6da8      	ldr	r0, [r5, #88]	; 0x58
  409736:	f000 fbef 	bl	409f18 <__retarget_lock_acquire_recursive>
  40973a:	e7e3      	b.n	409704 <_fflush_r+0x1c>

0040973c <_cleanup_r>:
  40973c:	4901      	ldr	r1, [pc, #4]	; (409744 <_cleanup_r+0x8>)
  40973e:	f000 bbaf 	b.w	409ea0 <_fwalk_reent>
  409742:	bf00      	nop
  409744:	0040ae51 	.word	0x0040ae51

00409748 <std.isra.0>:
  409748:	b510      	push	{r4, lr}
  40974a:	2300      	movs	r3, #0
  40974c:	4604      	mov	r4, r0
  40974e:	8181      	strh	r1, [r0, #12]
  409750:	81c2      	strh	r2, [r0, #14]
  409752:	6003      	str	r3, [r0, #0]
  409754:	6043      	str	r3, [r0, #4]
  409756:	6083      	str	r3, [r0, #8]
  409758:	6643      	str	r3, [r0, #100]	; 0x64
  40975a:	6103      	str	r3, [r0, #16]
  40975c:	6143      	str	r3, [r0, #20]
  40975e:	6183      	str	r3, [r0, #24]
  409760:	4619      	mov	r1, r3
  409762:	2208      	movs	r2, #8
  409764:	305c      	adds	r0, #92	; 0x5c
  409766:	f7fe fec3 	bl	4084f0 <memset>
  40976a:	4807      	ldr	r0, [pc, #28]	; (409788 <std.isra.0+0x40>)
  40976c:	4907      	ldr	r1, [pc, #28]	; (40978c <std.isra.0+0x44>)
  40976e:	4a08      	ldr	r2, [pc, #32]	; (409790 <std.isra.0+0x48>)
  409770:	4b08      	ldr	r3, [pc, #32]	; (409794 <std.isra.0+0x4c>)
  409772:	6220      	str	r0, [r4, #32]
  409774:	61e4      	str	r4, [r4, #28]
  409776:	6261      	str	r1, [r4, #36]	; 0x24
  409778:	62a2      	str	r2, [r4, #40]	; 0x28
  40977a:	62e3      	str	r3, [r4, #44]	; 0x2c
  40977c:	f104 0058 	add.w	r0, r4, #88	; 0x58
  409780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  409784:	f000 bbc4 	b.w	409f10 <__retarget_lock_init_recursive>
  409788:	0040aaa1 	.word	0x0040aaa1
  40978c:	0040aac5 	.word	0x0040aac5
  409790:	0040ab01 	.word	0x0040ab01
  409794:	0040ab21 	.word	0x0040ab21

00409798 <__sinit>:
  409798:	b510      	push	{r4, lr}
  40979a:	4604      	mov	r4, r0
  40979c:	4812      	ldr	r0, [pc, #72]	; (4097e8 <__sinit+0x50>)
  40979e:	f000 fbbb 	bl	409f18 <__retarget_lock_acquire_recursive>
  4097a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  4097a4:	b9d2      	cbnz	r2, 4097dc <__sinit+0x44>
  4097a6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  4097aa:	4810      	ldr	r0, [pc, #64]	; (4097ec <__sinit+0x54>)
  4097ac:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  4097b0:	2103      	movs	r1, #3
  4097b2:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  4097b6:	63e0      	str	r0, [r4, #60]	; 0x3c
  4097b8:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4097bc:	6860      	ldr	r0, [r4, #4]
  4097be:	2104      	movs	r1, #4
  4097c0:	f7ff ffc2 	bl	409748 <std.isra.0>
  4097c4:	2201      	movs	r2, #1
  4097c6:	2109      	movs	r1, #9
  4097c8:	68a0      	ldr	r0, [r4, #8]
  4097ca:	f7ff ffbd 	bl	409748 <std.isra.0>
  4097ce:	2202      	movs	r2, #2
  4097d0:	2112      	movs	r1, #18
  4097d2:	68e0      	ldr	r0, [r4, #12]
  4097d4:	f7ff ffb8 	bl	409748 <std.isra.0>
  4097d8:	2301      	movs	r3, #1
  4097da:	63a3      	str	r3, [r4, #56]	; 0x38
  4097dc:	4802      	ldr	r0, [pc, #8]	; (4097e8 <__sinit+0x50>)
  4097de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4097e2:	f000 bb9b 	b.w	409f1c <__retarget_lock_release_recursive>
  4097e6:	bf00      	nop
  4097e8:	2001ab68 	.word	0x2001ab68
  4097ec:	0040973d 	.word	0x0040973d

004097f0 <__sfp_lock_acquire>:
  4097f0:	4801      	ldr	r0, [pc, #4]	; (4097f8 <__sfp_lock_acquire+0x8>)
  4097f2:	f000 bb91 	b.w	409f18 <__retarget_lock_acquire_recursive>
  4097f6:	bf00      	nop
  4097f8:	2001ab7c 	.word	0x2001ab7c

004097fc <__sfp_lock_release>:
  4097fc:	4801      	ldr	r0, [pc, #4]	; (409804 <__sfp_lock_release+0x8>)
  4097fe:	f000 bb8d 	b.w	409f1c <__retarget_lock_release_recursive>
  409802:	bf00      	nop
  409804:	2001ab7c 	.word	0x2001ab7c

00409808 <__libc_fini_array>:
  409808:	b538      	push	{r3, r4, r5, lr}
  40980a:	4c0a      	ldr	r4, [pc, #40]	; (409834 <__libc_fini_array+0x2c>)
  40980c:	4d0a      	ldr	r5, [pc, #40]	; (409838 <__libc_fini_array+0x30>)
  40980e:	1b64      	subs	r4, r4, r5
  409810:	10a4      	asrs	r4, r4, #2
  409812:	d00a      	beq.n	40982a <__libc_fini_array+0x22>
  409814:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  409818:	3b01      	subs	r3, #1
  40981a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40981e:	3c01      	subs	r4, #1
  409820:	f855 3904 	ldr.w	r3, [r5], #-4
  409824:	4798      	blx	r3
  409826:	2c00      	cmp	r4, #0
  409828:	d1f9      	bne.n	40981e <__libc_fini_array+0x16>
  40982a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40982e:	f002 bcd1 	b.w	40c1d4 <_fini>
  409832:	bf00      	nop
  409834:	0040c1e4 	.word	0x0040c1e4
  409838:	0040c1e0 	.word	0x0040c1e0

0040983c <__fputwc>:
  40983c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  409840:	b082      	sub	sp, #8
  409842:	4680      	mov	r8, r0
  409844:	4689      	mov	r9, r1
  409846:	4614      	mov	r4, r2
  409848:	f000 fb54 	bl	409ef4 <__locale_mb_cur_max>
  40984c:	2801      	cmp	r0, #1
  40984e:	d036      	beq.n	4098be <__fputwc+0x82>
  409850:	464a      	mov	r2, r9
  409852:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  409856:	a901      	add	r1, sp, #4
  409858:	4640      	mov	r0, r8
  40985a:	f001 fa37 	bl	40accc <_wcrtomb_r>
  40985e:	1c42      	adds	r2, r0, #1
  409860:	4606      	mov	r6, r0
  409862:	d025      	beq.n	4098b0 <__fputwc+0x74>
  409864:	b3a8      	cbz	r0, 4098d2 <__fputwc+0x96>
  409866:	f89d e004 	ldrb.w	lr, [sp, #4]
  40986a:	2500      	movs	r5, #0
  40986c:	f10d 0a04 	add.w	sl, sp, #4
  409870:	e009      	b.n	409886 <__fputwc+0x4a>
  409872:	6823      	ldr	r3, [r4, #0]
  409874:	1c5a      	adds	r2, r3, #1
  409876:	6022      	str	r2, [r4, #0]
  409878:	f883 e000 	strb.w	lr, [r3]
  40987c:	3501      	adds	r5, #1
  40987e:	42b5      	cmp	r5, r6
  409880:	d227      	bcs.n	4098d2 <__fputwc+0x96>
  409882:	f815 e00a 	ldrb.w	lr, [r5, sl]
  409886:	68a3      	ldr	r3, [r4, #8]
  409888:	3b01      	subs	r3, #1
  40988a:	2b00      	cmp	r3, #0
  40988c:	60a3      	str	r3, [r4, #8]
  40988e:	daf0      	bge.n	409872 <__fputwc+0x36>
  409890:	69a7      	ldr	r7, [r4, #24]
  409892:	42bb      	cmp	r3, r7
  409894:	4671      	mov	r1, lr
  409896:	4622      	mov	r2, r4
  409898:	4640      	mov	r0, r8
  40989a:	db02      	blt.n	4098a2 <__fputwc+0x66>
  40989c:	f1be 0f0a 	cmp.w	lr, #10
  4098a0:	d1e7      	bne.n	409872 <__fputwc+0x36>
  4098a2:	f001 f9bb 	bl	40ac1c <__swbuf_r>
  4098a6:	1c43      	adds	r3, r0, #1
  4098a8:	d1e8      	bne.n	40987c <__fputwc+0x40>
  4098aa:	b002      	add	sp, #8
  4098ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098b0:	89a3      	ldrh	r3, [r4, #12]
  4098b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4098b6:	81a3      	strh	r3, [r4, #12]
  4098b8:	b002      	add	sp, #8
  4098ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098be:	f109 33ff 	add.w	r3, r9, #4294967295
  4098c2:	2bfe      	cmp	r3, #254	; 0xfe
  4098c4:	d8c4      	bhi.n	409850 <__fputwc+0x14>
  4098c6:	fa5f fe89 	uxtb.w	lr, r9
  4098ca:	4606      	mov	r6, r0
  4098cc:	f88d e004 	strb.w	lr, [sp, #4]
  4098d0:	e7cb      	b.n	40986a <__fputwc+0x2e>
  4098d2:	4648      	mov	r0, r9
  4098d4:	b002      	add	sp, #8
  4098d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098da:	bf00      	nop

004098dc <_fputwc_r>:
  4098dc:	b530      	push	{r4, r5, lr}
  4098de:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4098e0:	f013 0f01 	tst.w	r3, #1
  4098e4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4098e8:	4614      	mov	r4, r2
  4098ea:	b083      	sub	sp, #12
  4098ec:	4605      	mov	r5, r0
  4098ee:	b29a      	uxth	r2, r3
  4098f0:	d101      	bne.n	4098f6 <_fputwc_r+0x1a>
  4098f2:	0590      	lsls	r0, r2, #22
  4098f4:	d51c      	bpl.n	409930 <_fputwc_r+0x54>
  4098f6:	0490      	lsls	r0, r2, #18
  4098f8:	d406      	bmi.n	409908 <_fputwc_r+0x2c>
  4098fa:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4098fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  409900:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  409904:	81a3      	strh	r3, [r4, #12]
  409906:	6662      	str	r2, [r4, #100]	; 0x64
  409908:	4628      	mov	r0, r5
  40990a:	4622      	mov	r2, r4
  40990c:	f7ff ff96 	bl	40983c <__fputwc>
  409910:	6e63      	ldr	r3, [r4, #100]	; 0x64
  409912:	07da      	lsls	r2, r3, #31
  409914:	4605      	mov	r5, r0
  409916:	d402      	bmi.n	40991e <_fputwc_r+0x42>
  409918:	89a3      	ldrh	r3, [r4, #12]
  40991a:	059b      	lsls	r3, r3, #22
  40991c:	d502      	bpl.n	409924 <_fputwc_r+0x48>
  40991e:	4628      	mov	r0, r5
  409920:	b003      	add	sp, #12
  409922:	bd30      	pop	{r4, r5, pc}
  409924:	6da0      	ldr	r0, [r4, #88]	; 0x58
  409926:	f000 faf9 	bl	409f1c <__retarget_lock_release_recursive>
  40992a:	4628      	mov	r0, r5
  40992c:	b003      	add	sp, #12
  40992e:	bd30      	pop	{r4, r5, pc}
  409930:	6da0      	ldr	r0, [r4, #88]	; 0x58
  409932:	9101      	str	r1, [sp, #4]
  409934:	f000 faf0 	bl	409f18 <__retarget_lock_acquire_recursive>
  409938:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40993c:	9901      	ldr	r1, [sp, #4]
  40993e:	b29a      	uxth	r2, r3
  409940:	e7d9      	b.n	4098f6 <_fputwc_r+0x1a>
  409942:	bf00      	nop

00409944 <_malloc_trim_r>:
  409944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409946:	4f24      	ldr	r7, [pc, #144]	; (4099d8 <_malloc_trim_r+0x94>)
  409948:	460c      	mov	r4, r1
  40994a:	4606      	mov	r6, r0
  40994c:	f000 fee4 	bl	40a718 <__malloc_lock>
  409950:	68bb      	ldr	r3, [r7, #8]
  409952:	685d      	ldr	r5, [r3, #4]
  409954:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  409958:	310f      	adds	r1, #15
  40995a:	f025 0503 	bic.w	r5, r5, #3
  40995e:	4429      	add	r1, r5
  409960:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  409964:	f021 010f 	bic.w	r1, r1, #15
  409968:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40996c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  409970:	db07      	blt.n	409982 <_malloc_trim_r+0x3e>
  409972:	2100      	movs	r1, #0
  409974:	4630      	mov	r0, r6
  409976:	f001 f881 	bl	40aa7c <_sbrk_r>
  40997a:	68bb      	ldr	r3, [r7, #8]
  40997c:	442b      	add	r3, r5
  40997e:	4298      	cmp	r0, r3
  409980:	d004      	beq.n	40998c <_malloc_trim_r+0x48>
  409982:	4630      	mov	r0, r6
  409984:	f000 fece 	bl	40a724 <__malloc_unlock>
  409988:	2000      	movs	r0, #0
  40998a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40998c:	4261      	negs	r1, r4
  40998e:	4630      	mov	r0, r6
  409990:	f001 f874 	bl	40aa7c <_sbrk_r>
  409994:	3001      	adds	r0, #1
  409996:	d00d      	beq.n	4099b4 <_malloc_trim_r+0x70>
  409998:	4b10      	ldr	r3, [pc, #64]	; (4099dc <_malloc_trim_r+0x98>)
  40999a:	68ba      	ldr	r2, [r7, #8]
  40999c:	6819      	ldr	r1, [r3, #0]
  40999e:	1b2d      	subs	r5, r5, r4
  4099a0:	f045 0501 	orr.w	r5, r5, #1
  4099a4:	4630      	mov	r0, r6
  4099a6:	1b09      	subs	r1, r1, r4
  4099a8:	6055      	str	r5, [r2, #4]
  4099aa:	6019      	str	r1, [r3, #0]
  4099ac:	f000 feba 	bl	40a724 <__malloc_unlock>
  4099b0:	2001      	movs	r0, #1
  4099b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4099b4:	2100      	movs	r1, #0
  4099b6:	4630      	mov	r0, r6
  4099b8:	f001 f860 	bl	40aa7c <_sbrk_r>
  4099bc:	68ba      	ldr	r2, [r7, #8]
  4099be:	1a83      	subs	r3, r0, r2
  4099c0:	2b0f      	cmp	r3, #15
  4099c2:	ddde      	ble.n	409982 <_malloc_trim_r+0x3e>
  4099c4:	4c06      	ldr	r4, [pc, #24]	; (4099e0 <_malloc_trim_r+0x9c>)
  4099c6:	4905      	ldr	r1, [pc, #20]	; (4099dc <_malloc_trim_r+0x98>)
  4099c8:	6824      	ldr	r4, [r4, #0]
  4099ca:	f043 0301 	orr.w	r3, r3, #1
  4099ce:	1b00      	subs	r0, r0, r4
  4099d0:	6053      	str	r3, [r2, #4]
  4099d2:	6008      	str	r0, [r1, #0]
  4099d4:	e7d5      	b.n	409982 <_malloc_trim_r+0x3e>
  4099d6:	bf00      	nop
  4099d8:	200007e0 	.word	0x200007e0
  4099dc:	2001a6fc 	.word	0x2001a6fc
  4099e0:	20000be8 	.word	0x20000be8

004099e4 <_free_r>:
  4099e4:	2900      	cmp	r1, #0
  4099e6:	d044      	beq.n	409a72 <_free_r+0x8e>
  4099e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4099ec:	460d      	mov	r5, r1
  4099ee:	4680      	mov	r8, r0
  4099f0:	f000 fe92 	bl	40a718 <__malloc_lock>
  4099f4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4099f8:	4969      	ldr	r1, [pc, #420]	; (409ba0 <_free_r+0x1bc>)
  4099fa:	f027 0301 	bic.w	r3, r7, #1
  4099fe:	f1a5 0408 	sub.w	r4, r5, #8
  409a02:	18e2      	adds	r2, r4, r3
  409a04:	688e      	ldr	r6, [r1, #8]
  409a06:	6850      	ldr	r0, [r2, #4]
  409a08:	42b2      	cmp	r2, r6
  409a0a:	f020 0003 	bic.w	r0, r0, #3
  409a0e:	d05e      	beq.n	409ace <_free_r+0xea>
  409a10:	07fe      	lsls	r6, r7, #31
  409a12:	6050      	str	r0, [r2, #4]
  409a14:	d40b      	bmi.n	409a2e <_free_r+0x4a>
  409a16:	f855 7c08 	ldr.w	r7, [r5, #-8]
  409a1a:	1be4      	subs	r4, r4, r7
  409a1c:	f101 0e08 	add.w	lr, r1, #8
  409a20:	68a5      	ldr	r5, [r4, #8]
  409a22:	4575      	cmp	r5, lr
  409a24:	443b      	add	r3, r7
  409a26:	d06d      	beq.n	409b04 <_free_r+0x120>
  409a28:	68e7      	ldr	r7, [r4, #12]
  409a2a:	60ef      	str	r7, [r5, #12]
  409a2c:	60bd      	str	r5, [r7, #8]
  409a2e:	1815      	adds	r5, r2, r0
  409a30:	686d      	ldr	r5, [r5, #4]
  409a32:	07ed      	lsls	r5, r5, #31
  409a34:	d53e      	bpl.n	409ab4 <_free_r+0xd0>
  409a36:	f043 0201 	orr.w	r2, r3, #1
  409a3a:	6062      	str	r2, [r4, #4]
  409a3c:	50e3      	str	r3, [r4, r3]
  409a3e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  409a42:	d217      	bcs.n	409a74 <_free_r+0x90>
  409a44:	08db      	lsrs	r3, r3, #3
  409a46:	1c58      	adds	r0, r3, #1
  409a48:	109a      	asrs	r2, r3, #2
  409a4a:	684d      	ldr	r5, [r1, #4]
  409a4c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  409a50:	60a7      	str	r7, [r4, #8]
  409a52:	2301      	movs	r3, #1
  409a54:	4093      	lsls	r3, r2
  409a56:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  409a5a:	432b      	orrs	r3, r5
  409a5c:	3a08      	subs	r2, #8
  409a5e:	60e2      	str	r2, [r4, #12]
  409a60:	604b      	str	r3, [r1, #4]
  409a62:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  409a66:	60fc      	str	r4, [r7, #12]
  409a68:	4640      	mov	r0, r8
  409a6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  409a6e:	f000 be59 	b.w	40a724 <__malloc_unlock>
  409a72:	4770      	bx	lr
  409a74:	0a5a      	lsrs	r2, r3, #9
  409a76:	2a04      	cmp	r2, #4
  409a78:	d852      	bhi.n	409b20 <_free_r+0x13c>
  409a7a:	099a      	lsrs	r2, r3, #6
  409a7c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  409a80:	00ff      	lsls	r7, r7, #3
  409a82:	f102 0538 	add.w	r5, r2, #56	; 0x38
  409a86:	19c8      	adds	r0, r1, r7
  409a88:	59ca      	ldr	r2, [r1, r7]
  409a8a:	3808      	subs	r0, #8
  409a8c:	4290      	cmp	r0, r2
  409a8e:	d04f      	beq.n	409b30 <_free_r+0x14c>
  409a90:	6851      	ldr	r1, [r2, #4]
  409a92:	f021 0103 	bic.w	r1, r1, #3
  409a96:	428b      	cmp	r3, r1
  409a98:	d232      	bcs.n	409b00 <_free_r+0x11c>
  409a9a:	6892      	ldr	r2, [r2, #8]
  409a9c:	4290      	cmp	r0, r2
  409a9e:	d1f7      	bne.n	409a90 <_free_r+0xac>
  409aa0:	68c3      	ldr	r3, [r0, #12]
  409aa2:	60a0      	str	r0, [r4, #8]
  409aa4:	60e3      	str	r3, [r4, #12]
  409aa6:	609c      	str	r4, [r3, #8]
  409aa8:	60c4      	str	r4, [r0, #12]
  409aaa:	4640      	mov	r0, r8
  409aac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  409ab0:	f000 be38 	b.w	40a724 <__malloc_unlock>
  409ab4:	6895      	ldr	r5, [r2, #8]
  409ab6:	4f3b      	ldr	r7, [pc, #236]	; (409ba4 <_free_r+0x1c0>)
  409ab8:	42bd      	cmp	r5, r7
  409aba:	4403      	add	r3, r0
  409abc:	d040      	beq.n	409b40 <_free_r+0x15c>
  409abe:	68d0      	ldr	r0, [r2, #12]
  409ac0:	60e8      	str	r0, [r5, #12]
  409ac2:	f043 0201 	orr.w	r2, r3, #1
  409ac6:	6085      	str	r5, [r0, #8]
  409ac8:	6062      	str	r2, [r4, #4]
  409aca:	50e3      	str	r3, [r4, r3]
  409acc:	e7b7      	b.n	409a3e <_free_r+0x5a>
  409ace:	07ff      	lsls	r7, r7, #31
  409ad0:	4403      	add	r3, r0
  409ad2:	d407      	bmi.n	409ae4 <_free_r+0x100>
  409ad4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  409ad8:	1aa4      	subs	r4, r4, r2
  409ada:	4413      	add	r3, r2
  409adc:	68a0      	ldr	r0, [r4, #8]
  409ade:	68e2      	ldr	r2, [r4, #12]
  409ae0:	60c2      	str	r2, [r0, #12]
  409ae2:	6090      	str	r0, [r2, #8]
  409ae4:	4a30      	ldr	r2, [pc, #192]	; (409ba8 <_free_r+0x1c4>)
  409ae6:	6812      	ldr	r2, [r2, #0]
  409ae8:	f043 0001 	orr.w	r0, r3, #1
  409aec:	4293      	cmp	r3, r2
  409aee:	6060      	str	r0, [r4, #4]
  409af0:	608c      	str	r4, [r1, #8]
  409af2:	d3b9      	bcc.n	409a68 <_free_r+0x84>
  409af4:	4b2d      	ldr	r3, [pc, #180]	; (409bac <_free_r+0x1c8>)
  409af6:	4640      	mov	r0, r8
  409af8:	6819      	ldr	r1, [r3, #0]
  409afa:	f7ff ff23 	bl	409944 <_malloc_trim_r>
  409afe:	e7b3      	b.n	409a68 <_free_r+0x84>
  409b00:	4610      	mov	r0, r2
  409b02:	e7cd      	b.n	409aa0 <_free_r+0xbc>
  409b04:	1811      	adds	r1, r2, r0
  409b06:	6849      	ldr	r1, [r1, #4]
  409b08:	07c9      	lsls	r1, r1, #31
  409b0a:	d444      	bmi.n	409b96 <_free_r+0x1b2>
  409b0c:	6891      	ldr	r1, [r2, #8]
  409b0e:	68d2      	ldr	r2, [r2, #12]
  409b10:	60ca      	str	r2, [r1, #12]
  409b12:	4403      	add	r3, r0
  409b14:	f043 0001 	orr.w	r0, r3, #1
  409b18:	6091      	str	r1, [r2, #8]
  409b1a:	6060      	str	r0, [r4, #4]
  409b1c:	50e3      	str	r3, [r4, r3]
  409b1e:	e7a3      	b.n	409a68 <_free_r+0x84>
  409b20:	2a14      	cmp	r2, #20
  409b22:	d816      	bhi.n	409b52 <_free_r+0x16e>
  409b24:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  409b28:	00ff      	lsls	r7, r7, #3
  409b2a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  409b2e:	e7aa      	b.n	409a86 <_free_r+0xa2>
  409b30:	10aa      	asrs	r2, r5, #2
  409b32:	2301      	movs	r3, #1
  409b34:	684d      	ldr	r5, [r1, #4]
  409b36:	4093      	lsls	r3, r2
  409b38:	432b      	orrs	r3, r5
  409b3a:	604b      	str	r3, [r1, #4]
  409b3c:	4603      	mov	r3, r0
  409b3e:	e7b0      	b.n	409aa2 <_free_r+0xbe>
  409b40:	f043 0201 	orr.w	r2, r3, #1
  409b44:	614c      	str	r4, [r1, #20]
  409b46:	610c      	str	r4, [r1, #16]
  409b48:	60e5      	str	r5, [r4, #12]
  409b4a:	60a5      	str	r5, [r4, #8]
  409b4c:	6062      	str	r2, [r4, #4]
  409b4e:	50e3      	str	r3, [r4, r3]
  409b50:	e78a      	b.n	409a68 <_free_r+0x84>
  409b52:	2a54      	cmp	r2, #84	; 0x54
  409b54:	d806      	bhi.n	409b64 <_free_r+0x180>
  409b56:	0b1a      	lsrs	r2, r3, #12
  409b58:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  409b5c:	00ff      	lsls	r7, r7, #3
  409b5e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  409b62:	e790      	b.n	409a86 <_free_r+0xa2>
  409b64:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  409b68:	d806      	bhi.n	409b78 <_free_r+0x194>
  409b6a:	0bda      	lsrs	r2, r3, #15
  409b6c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  409b70:	00ff      	lsls	r7, r7, #3
  409b72:	f102 0577 	add.w	r5, r2, #119	; 0x77
  409b76:	e786      	b.n	409a86 <_free_r+0xa2>
  409b78:	f240 5054 	movw	r0, #1364	; 0x554
  409b7c:	4282      	cmp	r2, r0
  409b7e:	d806      	bhi.n	409b8e <_free_r+0x1aa>
  409b80:	0c9a      	lsrs	r2, r3, #18
  409b82:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  409b86:	00ff      	lsls	r7, r7, #3
  409b88:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  409b8c:	e77b      	b.n	409a86 <_free_r+0xa2>
  409b8e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  409b92:	257e      	movs	r5, #126	; 0x7e
  409b94:	e777      	b.n	409a86 <_free_r+0xa2>
  409b96:	f043 0101 	orr.w	r1, r3, #1
  409b9a:	6061      	str	r1, [r4, #4]
  409b9c:	6013      	str	r3, [r2, #0]
  409b9e:	e763      	b.n	409a68 <_free_r+0x84>
  409ba0:	200007e0 	.word	0x200007e0
  409ba4:	200007e8 	.word	0x200007e8
  409ba8:	20000bec 	.word	0x20000bec
  409bac:	2001a72c 	.word	0x2001a72c

00409bb0 <__sfvwrite_r>:
  409bb0:	6893      	ldr	r3, [r2, #8]
  409bb2:	2b00      	cmp	r3, #0
  409bb4:	d073      	beq.n	409c9e <__sfvwrite_r+0xee>
  409bb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  409bba:	898b      	ldrh	r3, [r1, #12]
  409bbc:	b083      	sub	sp, #12
  409bbe:	460c      	mov	r4, r1
  409bc0:	0719      	lsls	r1, r3, #28
  409bc2:	9000      	str	r0, [sp, #0]
  409bc4:	4616      	mov	r6, r2
  409bc6:	d526      	bpl.n	409c16 <__sfvwrite_r+0x66>
  409bc8:	6922      	ldr	r2, [r4, #16]
  409bca:	b322      	cbz	r2, 409c16 <__sfvwrite_r+0x66>
  409bcc:	f013 0002 	ands.w	r0, r3, #2
  409bd0:	6835      	ldr	r5, [r6, #0]
  409bd2:	d02c      	beq.n	409c2e <__sfvwrite_r+0x7e>
  409bd4:	f04f 0900 	mov.w	r9, #0
  409bd8:	4fb0      	ldr	r7, [pc, #704]	; (409e9c <__sfvwrite_r+0x2ec>)
  409bda:	46c8      	mov	r8, r9
  409bdc:	46b2      	mov	sl, r6
  409bde:	45b8      	cmp	r8, r7
  409be0:	4643      	mov	r3, r8
  409be2:	464a      	mov	r2, r9
  409be4:	bf28      	it	cs
  409be6:	463b      	movcs	r3, r7
  409be8:	9800      	ldr	r0, [sp, #0]
  409bea:	f1b8 0f00 	cmp.w	r8, #0
  409bee:	d050      	beq.n	409c92 <__sfvwrite_r+0xe2>
  409bf0:	69e1      	ldr	r1, [r4, #28]
  409bf2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  409bf4:	47b0      	blx	r6
  409bf6:	2800      	cmp	r0, #0
  409bf8:	dd58      	ble.n	409cac <__sfvwrite_r+0xfc>
  409bfa:	f8da 3008 	ldr.w	r3, [sl, #8]
  409bfe:	1a1b      	subs	r3, r3, r0
  409c00:	4481      	add	r9, r0
  409c02:	eba8 0800 	sub.w	r8, r8, r0
  409c06:	f8ca 3008 	str.w	r3, [sl, #8]
  409c0a:	2b00      	cmp	r3, #0
  409c0c:	d1e7      	bne.n	409bde <__sfvwrite_r+0x2e>
  409c0e:	2000      	movs	r0, #0
  409c10:	b003      	add	sp, #12
  409c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409c16:	4621      	mov	r1, r4
  409c18:	9800      	ldr	r0, [sp, #0]
  409c1a:	f7ff fc51 	bl	4094c0 <__swsetup_r>
  409c1e:	2800      	cmp	r0, #0
  409c20:	f040 8133 	bne.w	409e8a <__sfvwrite_r+0x2da>
  409c24:	89a3      	ldrh	r3, [r4, #12]
  409c26:	6835      	ldr	r5, [r6, #0]
  409c28:	f013 0002 	ands.w	r0, r3, #2
  409c2c:	d1d2      	bne.n	409bd4 <__sfvwrite_r+0x24>
  409c2e:	f013 0901 	ands.w	r9, r3, #1
  409c32:	d145      	bne.n	409cc0 <__sfvwrite_r+0x110>
  409c34:	464f      	mov	r7, r9
  409c36:	9601      	str	r6, [sp, #4]
  409c38:	b337      	cbz	r7, 409c88 <__sfvwrite_r+0xd8>
  409c3a:	059a      	lsls	r2, r3, #22
  409c3c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  409c40:	f140 8083 	bpl.w	409d4a <__sfvwrite_r+0x19a>
  409c44:	4547      	cmp	r7, r8
  409c46:	46c3      	mov	fp, r8
  409c48:	f0c0 80ab 	bcc.w	409da2 <__sfvwrite_r+0x1f2>
  409c4c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  409c50:	f040 80ac 	bne.w	409dac <__sfvwrite_r+0x1fc>
  409c54:	6820      	ldr	r0, [r4, #0]
  409c56:	46ba      	mov	sl, r7
  409c58:	465a      	mov	r2, fp
  409c5a:	4649      	mov	r1, r9
  409c5c:	f000 fcf8 	bl	40a650 <memmove>
  409c60:	68a2      	ldr	r2, [r4, #8]
  409c62:	6823      	ldr	r3, [r4, #0]
  409c64:	eba2 0208 	sub.w	r2, r2, r8
  409c68:	445b      	add	r3, fp
  409c6a:	60a2      	str	r2, [r4, #8]
  409c6c:	6023      	str	r3, [r4, #0]
  409c6e:	9a01      	ldr	r2, [sp, #4]
  409c70:	6893      	ldr	r3, [r2, #8]
  409c72:	eba3 030a 	sub.w	r3, r3, sl
  409c76:	44d1      	add	r9, sl
  409c78:	eba7 070a 	sub.w	r7, r7, sl
  409c7c:	6093      	str	r3, [r2, #8]
  409c7e:	2b00      	cmp	r3, #0
  409c80:	d0c5      	beq.n	409c0e <__sfvwrite_r+0x5e>
  409c82:	89a3      	ldrh	r3, [r4, #12]
  409c84:	2f00      	cmp	r7, #0
  409c86:	d1d8      	bne.n	409c3a <__sfvwrite_r+0x8a>
  409c88:	f8d5 9000 	ldr.w	r9, [r5]
  409c8c:	686f      	ldr	r7, [r5, #4]
  409c8e:	3508      	adds	r5, #8
  409c90:	e7d2      	b.n	409c38 <__sfvwrite_r+0x88>
  409c92:	f8d5 9000 	ldr.w	r9, [r5]
  409c96:	f8d5 8004 	ldr.w	r8, [r5, #4]
  409c9a:	3508      	adds	r5, #8
  409c9c:	e79f      	b.n	409bde <__sfvwrite_r+0x2e>
  409c9e:	2000      	movs	r0, #0
  409ca0:	4770      	bx	lr
  409ca2:	4621      	mov	r1, r4
  409ca4:	9800      	ldr	r0, [sp, #0]
  409ca6:	f7ff fd1f 	bl	4096e8 <_fflush_r>
  409caa:	b370      	cbz	r0, 409d0a <__sfvwrite_r+0x15a>
  409cac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409cb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  409cb4:	f04f 30ff 	mov.w	r0, #4294967295
  409cb8:	81a3      	strh	r3, [r4, #12]
  409cba:	b003      	add	sp, #12
  409cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409cc0:	4681      	mov	r9, r0
  409cc2:	4633      	mov	r3, r6
  409cc4:	464e      	mov	r6, r9
  409cc6:	46a8      	mov	r8, r5
  409cc8:	469a      	mov	sl, r3
  409cca:	464d      	mov	r5, r9
  409ccc:	b34e      	cbz	r6, 409d22 <__sfvwrite_r+0x172>
  409cce:	b380      	cbz	r0, 409d32 <__sfvwrite_r+0x182>
  409cd0:	6820      	ldr	r0, [r4, #0]
  409cd2:	6923      	ldr	r3, [r4, #16]
  409cd4:	6962      	ldr	r2, [r4, #20]
  409cd6:	45b1      	cmp	r9, r6
  409cd8:	46cb      	mov	fp, r9
  409cda:	bf28      	it	cs
  409cdc:	46b3      	movcs	fp, r6
  409cde:	4298      	cmp	r0, r3
  409ce0:	465f      	mov	r7, fp
  409ce2:	d904      	bls.n	409cee <__sfvwrite_r+0x13e>
  409ce4:	68a3      	ldr	r3, [r4, #8]
  409ce6:	4413      	add	r3, r2
  409ce8:	459b      	cmp	fp, r3
  409cea:	f300 80a6 	bgt.w	409e3a <__sfvwrite_r+0x28a>
  409cee:	4593      	cmp	fp, r2
  409cf0:	db4b      	blt.n	409d8a <__sfvwrite_r+0x1da>
  409cf2:	4613      	mov	r3, r2
  409cf4:	6a67      	ldr	r7, [r4, #36]	; 0x24
  409cf6:	69e1      	ldr	r1, [r4, #28]
  409cf8:	9800      	ldr	r0, [sp, #0]
  409cfa:	462a      	mov	r2, r5
  409cfc:	47b8      	blx	r7
  409cfe:	1e07      	subs	r7, r0, #0
  409d00:	ddd4      	ble.n	409cac <__sfvwrite_r+0xfc>
  409d02:	ebb9 0907 	subs.w	r9, r9, r7
  409d06:	d0cc      	beq.n	409ca2 <__sfvwrite_r+0xf2>
  409d08:	2001      	movs	r0, #1
  409d0a:	f8da 3008 	ldr.w	r3, [sl, #8]
  409d0e:	1bdb      	subs	r3, r3, r7
  409d10:	443d      	add	r5, r7
  409d12:	1bf6      	subs	r6, r6, r7
  409d14:	f8ca 3008 	str.w	r3, [sl, #8]
  409d18:	2b00      	cmp	r3, #0
  409d1a:	f43f af78 	beq.w	409c0e <__sfvwrite_r+0x5e>
  409d1e:	2e00      	cmp	r6, #0
  409d20:	d1d5      	bne.n	409cce <__sfvwrite_r+0x11e>
  409d22:	f108 0308 	add.w	r3, r8, #8
  409d26:	e913 0060 	ldmdb	r3, {r5, r6}
  409d2a:	4698      	mov	r8, r3
  409d2c:	3308      	adds	r3, #8
  409d2e:	2e00      	cmp	r6, #0
  409d30:	d0f9      	beq.n	409d26 <__sfvwrite_r+0x176>
  409d32:	4632      	mov	r2, r6
  409d34:	210a      	movs	r1, #10
  409d36:	4628      	mov	r0, r5
  409d38:	f000 fc3a 	bl	40a5b0 <memchr>
  409d3c:	2800      	cmp	r0, #0
  409d3e:	f000 80a1 	beq.w	409e84 <__sfvwrite_r+0x2d4>
  409d42:	3001      	adds	r0, #1
  409d44:	eba0 0905 	sub.w	r9, r0, r5
  409d48:	e7c2      	b.n	409cd0 <__sfvwrite_r+0x120>
  409d4a:	6820      	ldr	r0, [r4, #0]
  409d4c:	6923      	ldr	r3, [r4, #16]
  409d4e:	4298      	cmp	r0, r3
  409d50:	d802      	bhi.n	409d58 <__sfvwrite_r+0x1a8>
  409d52:	6963      	ldr	r3, [r4, #20]
  409d54:	429f      	cmp	r7, r3
  409d56:	d25d      	bcs.n	409e14 <__sfvwrite_r+0x264>
  409d58:	45b8      	cmp	r8, r7
  409d5a:	bf28      	it	cs
  409d5c:	46b8      	movcs	r8, r7
  409d5e:	4642      	mov	r2, r8
  409d60:	4649      	mov	r1, r9
  409d62:	f000 fc75 	bl	40a650 <memmove>
  409d66:	68a3      	ldr	r3, [r4, #8]
  409d68:	6822      	ldr	r2, [r4, #0]
  409d6a:	eba3 0308 	sub.w	r3, r3, r8
  409d6e:	4442      	add	r2, r8
  409d70:	60a3      	str	r3, [r4, #8]
  409d72:	6022      	str	r2, [r4, #0]
  409d74:	b10b      	cbz	r3, 409d7a <__sfvwrite_r+0x1ca>
  409d76:	46c2      	mov	sl, r8
  409d78:	e779      	b.n	409c6e <__sfvwrite_r+0xbe>
  409d7a:	4621      	mov	r1, r4
  409d7c:	9800      	ldr	r0, [sp, #0]
  409d7e:	f7ff fcb3 	bl	4096e8 <_fflush_r>
  409d82:	2800      	cmp	r0, #0
  409d84:	d192      	bne.n	409cac <__sfvwrite_r+0xfc>
  409d86:	46c2      	mov	sl, r8
  409d88:	e771      	b.n	409c6e <__sfvwrite_r+0xbe>
  409d8a:	465a      	mov	r2, fp
  409d8c:	4629      	mov	r1, r5
  409d8e:	f000 fc5f 	bl	40a650 <memmove>
  409d92:	68a2      	ldr	r2, [r4, #8]
  409d94:	6823      	ldr	r3, [r4, #0]
  409d96:	eba2 020b 	sub.w	r2, r2, fp
  409d9a:	445b      	add	r3, fp
  409d9c:	60a2      	str	r2, [r4, #8]
  409d9e:	6023      	str	r3, [r4, #0]
  409da0:	e7af      	b.n	409d02 <__sfvwrite_r+0x152>
  409da2:	6820      	ldr	r0, [r4, #0]
  409da4:	46b8      	mov	r8, r7
  409da6:	46ba      	mov	sl, r7
  409da8:	46bb      	mov	fp, r7
  409daa:	e755      	b.n	409c58 <__sfvwrite_r+0xa8>
  409dac:	6962      	ldr	r2, [r4, #20]
  409dae:	6820      	ldr	r0, [r4, #0]
  409db0:	6921      	ldr	r1, [r4, #16]
  409db2:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  409db6:	eba0 0a01 	sub.w	sl, r0, r1
  409dba:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  409dbe:	f10a 0001 	add.w	r0, sl, #1
  409dc2:	ea4f 0868 	mov.w	r8, r8, asr #1
  409dc6:	4438      	add	r0, r7
  409dc8:	4540      	cmp	r0, r8
  409dca:	4642      	mov	r2, r8
  409dcc:	bf84      	itt	hi
  409dce:	4680      	movhi	r8, r0
  409dd0:	4642      	movhi	r2, r8
  409dd2:	055b      	lsls	r3, r3, #21
  409dd4:	d544      	bpl.n	409e60 <__sfvwrite_r+0x2b0>
  409dd6:	4611      	mov	r1, r2
  409dd8:	9800      	ldr	r0, [sp, #0]
  409dda:	f000 f921 	bl	40a020 <_malloc_r>
  409dde:	4683      	mov	fp, r0
  409de0:	2800      	cmp	r0, #0
  409de2:	d055      	beq.n	409e90 <__sfvwrite_r+0x2e0>
  409de4:	4652      	mov	r2, sl
  409de6:	6921      	ldr	r1, [r4, #16]
  409de8:	f7fe fae8 	bl	4083bc <memcpy>
  409dec:	89a3      	ldrh	r3, [r4, #12]
  409dee:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  409df2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  409df6:	81a3      	strh	r3, [r4, #12]
  409df8:	eb0b 000a 	add.w	r0, fp, sl
  409dfc:	eba8 030a 	sub.w	r3, r8, sl
  409e00:	f8c4 b010 	str.w	fp, [r4, #16]
  409e04:	f8c4 8014 	str.w	r8, [r4, #20]
  409e08:	6020      	str	r0, [r4, #0]
  409e0a:	60a3      	str	r3, [r4, #8]
  409e0c:	46b8      	mov	r8, r7
  409e0e:	46ba      	mov	sl, r7
  409e10:	46bb      	mov	fp, r7
  409e12:	e721      	b.n	409c58 <__sfvwrite_r+0xa8>
  409e14:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  409e18:	42b9      	cmp	r1, r7
  409e1a:	bf28      	it	cs
  409e1c:	4639      	movcs	r1, r7
  409e1e:	464a      	mov	r2, r9
  409e20:	fb91 f1f3 	sdiv	r1, r1, r3
  409e24:	9800      	ldr	r0, [sp, #0]
  409e26:	6a66      	ldr	r6, [r4, #36]	; 0x24
  409e28:	fb03 f301 	mul.w	r3, r3, r1
  409e2c:	69e1      	ldr	r1, [r4, #28]
  409e2e:	47b0      	blx	r6
  409e30:	f1b0 0a00 	subs.w	sl, r0, #0
  409e34:	f73f af1b 	bgt.w	409c6e <__sfvwrite_r+0xbe>
  409e38:	e738      	b.n	409cac <__sfvwrite_r+0xfc>
  409e3a:	461a      	mov	r2, r3
  409e3c:	4629      	mov	r1, r5
  409e3e:	9301      	str	r3, [sp, #4]
  409e40:	f000 fc06 	bl	40a650 <memmove>
  409e44:	6822      	ldr	r2, [r4, #0]
  409e46:	9b01      	ldr	r3, [sp, #4]
  409e48:	9800      	ldr	r0, [sp, #0]
  409e4a:	441a      	add	r2, r3
  409e4c:	6022      	str	r2, [r4, #0]
  409e4e:	4621      	mov	r1, r4
  409e50:	f7ff fc4a 	bl	4096e8 <_fflush_r>
  409e54:	9b01      	ldr	r3, [sp, #4]
  409e56:	2800      	cmp	r0, #0
  409e58:	f47f af28 	bne.w	409cac <__sfvwrite_r+0xfc>
  409e5c:	461f      	mov	r7, r3
  409e5e:	e750      	b.n	409d02 <__sfvwrite_r+0x152>
  409e60:	9800      	ldr	r0, [sp, #0]
  409e62:	f000 fc65 	bl	40a730 <_realloc_r>
  409e66:	4683      	mov	fp, r0
  409e68:	2800      	cmp	r0, #0
  409e6a:	d1c5      	bne.n	409df8 <__sfvwrite_r+0x248>
  409e6c:	9d00      	ldr	r5, [sp, #0]
  409e6e:	6921      	ldr	r1, [r4, #16]
  409e70:	4628      	mov	r0, r5
  409e72:	f7ff fdb7 	bl	4099e4 <_free_r>
  409e76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409e7a:	220c      	movs	r2, #12
  409e7c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  409e80:	602a      	str	r2, [r5, #0]
  409e82:	e715      	b.n	409cb0 <__sfvwrite_r+0x100>
  409e84:	f106 0901 	add.w	r9, r6, #1
  409e88:	e722      	b.n	409cd0 <__sfvwrite_r+0x120>
  409e8a:	f04f 30ff 	mov.w	r0, #4294967295
  409e8e:	e6bf      	b.n	409c10 <__sfvwrite_r+0x60>
  409e90:	9a00      	ldr	r2, [sp, #0]
  409e92:	230c      	movs	r3, #12
  409e94:	6013      	str	r3, [r2, #0]
  409e96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409e9a:	e709      	b.n	409cb0 <__sfvwrite_r+0x100>
  409e9c:	7ffffc00 	.word	0x7ffffc00

00409ea0 <_fwalk_reent>:
  409ea0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  409ea4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  409ea8:	d01f      	beq.n	409eea <_fwalk_reent+0x4a>
  409eaa:	4688      	mov	r8, r1
  409eac:	4606      	mov	r6, r0
  409eae:	f04f 0900 	mov.w	r9, #0
  409eb2:	687d      	ldr	r5, [r7, #4]
  409eb4:	68bc      	ldr	r4, [r7, #8]
  409eb6:	3d01      	subs	r5, #1
  409eb8:	d411      	bmi.n	409ede <_fwalk_reent+0x3e>
  409eba:	89a3      	ldrh	r3, [r4, #12]
  409ebc:	2b01      	cmp	r3, #1
  409ebe:	f105 35ff 	add.w	r5, r5, #4294967295
  409ec2:	d908      	bls.n	409ed6 <_fwalk_reent+0x36>
  409ec4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  409ec8:	3301      	adds	r3, #1
  409eca:	4621      	mov	r1, r4
  409ecc:	4630      	mov	r0, r6
  409ece:	d002      	beq.n	409ed6 <_fwalk_reent+0x36>
  409ed0:	47c0      	blx	r8
  409ed2:	ea49 0900 	orr.w	r9, r9, r0
  409ed6:	1c6b      	adds	r3, r5, #1
  409ed8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  409edc:	d1ed      	bne.n	409eba <_fwalk_reent+0x1a>
  409ede:	683f      	ldr	r7, [r7, #0]
  409ee0:	2f00      	cmp	r7, #0
  409ee2:	d1e6      	bne.n	409eb2 <_fwalk_reent+0x12>
  409ee4:	4648      	mov	r0, r9
  409ee6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409eea:	46b9      	mov	r9, r7
  409eec:	4648      	mov	r0, r9
  409eee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409ef2:	bf00      	nop

00409ef4 <__locale_mb_cur_max>:
  409ef4:	4b04      	ldr	r3, [pc, #16]	; (409f08 <__locale_mb_cur_max+0x14>)
  409ef6:	4a05      	ldr	r2, [pc, #20]	; (409f0c <__locale_mb_cur_max+0x18>)
  409ef8:	681b      	ldr	r3, [r3, #0]
  409efa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  409efc:	2b00      	cmp	r3, #0
  409efe:	bf08      	it	eq
  409f00:	4613      	moveq	r3, r2
  409f02:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  409f06:	4770      	bx	lr
  409f08:	20000240 	.word	0x20000240
  409f0c:	20000674 	.word	0x20000674

00409f10 <__retarget_lock_init_recursive>:
  409f10:	4770      	bx	lr
  409f12:	bf00      	nop

00409f14 <__retarget_lock_close_recursive>:
  409f14:	4770      	bx	lr
  409f16:	bf00      	nop

00409f18 <__retarget_lock_acquire_recursive>:
  409f18:	4770      	bx	lr
  409f1a:	bf00      	nop

00409f1c <__retarget_lock_release_recursive>:
  409f1c:	4770      	bx	lr
  409f1e:	bf00      	nop

00409f20 <__swhatbuf_r>:
  409f20:	b570      	push	{r4, r5, r6, lr}
  409f22:	460c      	mov	r4, r1
  409f24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  409f28:	2900      	cmp	r1, #0
  409f2a:	b090      	sub	sp, #64	; 0x40
  409f2c:	4615      	mov	r5, r2
  409f2e:	461e      	mov	r6, r3
  409f30:	db14      	blt.n	409f5c <__swhatbuf_r+0x3c>
  409f32:	aa01      	add	r2, sp, #4
  409f34:	f000 ffee 	bl	40af14 <_fstat_r>
  409f38:	2800      	cmp	r0, #0
  409f3a:	db0f      	blt.n	409f5c <__swhatbuf_r+0x3c>
  409f3c:	9a02      	ldr	r2, [sp, #8]
  409f3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  409f42:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  409f46:	fab2 f282 	clz	r2, r2
  409f4a:	0952      	lsrs	r2, r2, #5
  409f4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  409f50:	f44f 6000 	mov.w	r0, #2048	; 0x800
  409f54:	6032      	str	r2, [r6, #0]
  409f56:	602b      	str	r3, [r5, #0]
  409f58:	b010      	add	sp, #64	; 0x40
  409f5a:	bd70      	pop	{r4, r5, r6, pc}
  409f5c:	89a2      	ldrh	r2, [r4, #12]
  409f5e:	2300      	movs	r3, #0
  409f60:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  409f64:	6033      	str	r3, [r6, #0]
  409f66:	d004      	beq.n	409f72 <__swhatbuf_r+0x52>
  409f68:	2240      	movs	r2, #64	; 0x40
  409f6a:	4618      	mov	r0, r3
  409f6c:	602a      	str	r2, [r5, #0]
  409f6e:	b010      	add	sp, #64	; 0x40
  409f70:	bd70      	pop	{r4, r5, r6, pc}
  409f72:	f44f 6380 	mov.w	r3, #1024	; 0x400
  409f76:	602b      	str	r3, [r5, #0]
  409f78:	b010      	add	sp, #64	; 0x40
  409f7a:	bd70      	pop	{r4, r5, r6, pc}

00409f7c <__smakebuf_r>:
  409f7c:	898a      	ldrh	r2, [r1, #12]
  409f7e:	0792      	lsls	r2, r2, #30
  409f80:	460b      	mov	r3, r1
  409f82:	d506      	bpl.n	409f92 <__smakebuf_r+0x16>
  409f84:	f101 0243 	add.w	r2, r1, #67	; 0x43
  409f88:	2101      	movs	r1, #1
  409f8a:	601a      	str	r2, [r3, #0]
  409f8c:	611a      	str	r2, [r3, #16]
  409f8e:	6159      	str	r1, [r3, #20]
  409f90:	4770      	bx	lr
  409f92:	b5f0      	push	{r4, r5, r6, r7, lr}
  409f94:	b083      	sub	sp, #12
  409f96:	ab01      	add	r3, sp, #4
  409f98:	466a      	mov	r2, sp
  409f9a:	460c      	mov	r4, r1
  409f9c:	4606      	mov	r6, r0
  409f9e:	f7ff ffbf 	bl	409f20 <__swhatbuf_r>
  409fa2:	9900      	ldr	r1, [sp, #0]
  409fa4:	4605      	mov	r5, r0
  409fa6:	4630      	mov	r0, r6
  409fa8:	f000 f83a 	bl	40a020 <_malloc_r>
  409fac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409fb0:	b1d8      	cbz	r0, 409fea <__smakebuf_r+0x6e>
  409fb2:	9a01      	ldr	r2, [sp, #4]
  409fb4:	4f15      	ldr	r7, [pc, #84]	; (40a00c <__smakebuf_r+0x90>)
  409fb6:	9900      	ldr	r1, [sp, #0]
  409fb8:	63f7      	str	r7, [r6, #60]	; 0x3c
  409fba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  409fbe:	81a3      	strh	r3, [r4, #12]
  409fc0:	6020      	str	r0, [r4, #0]
  409fc2:	6120      	str	r0, [r4, #16]
  409fc4:	6161      	str	r1, [r4, #20]
  409fc6:	b91a      	cbnz	r2, 409fd0 <__smakebuf_r+0x54>
  409fc8:	432b      	orrs	r3, r5
  409fca:	81a3      	strh	r3, [r4, #12]
  409fcc:	b003      	add	sp, #12
  409fce:	bdf0      	pop	{r4, r5, r6, r7, pc}
  409fd0:	4630      	mov	r0, r6
  409fd2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  409fd6:	f000 ffb1 	bl	40af3c <_isatty_r>
  409fda:	b1a0      	cbz	r0, 40a006 <__smakebuf_r+0x8a>
  409fdc:	89a3      	ldrh	r3, [r4, #12]
  409fde:	f023 0303 	bic.w	r3, r3, #3
  409fe2:	f043 0301 	orr.w	r3, r3, #1
  409fe6:	b21b      	sxth	r3, r3
  409fe8:	e7ee      	b.n	409fc8 <__smakebuf_r+0x4c>
  409fea:	059a      	lsls	r2, r3, #22
  409fec:	d4ee      	bmi.n	409fcc <__smakebuf_r+0x50>
  409fee:	f023 0303 	bic.w	r3, r3, #3
  409ff2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  409ff6:	f043 0302 	orr.w	r3, r3, #2
  409ffa:	2101      	movs	r1, #1
  409ffc:	81a3      	strh	r3, [r4, #12]
  409ffe:	6022      	str	r2, [r4, #0]
  40a000:	6122      	str	r2, [r4, #16]
  40a002:	6161      	str	r1, [r4, #20]
  40a004:	e7e2      	b.n	409fcc <__smakebuf_r+0x50>
  40a006:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a00a:	e7dd      	b.n	409fc8 <__smakebuf_r+0x4c>
  40a00c:	0040973d 	.word	0x0040973d

0040a010 <malloc>:
  40a010:	4b02      	ldr	r3, [pc, #8]	; (40a01c <malloc+0xc>)
  40a012:	4601      	mov	r1, r0
  40a014:	6818      	ldr	r0, [r3, #0]
  40a016:	f000 b803 	b.w	40a020 <_malloc_r>
  40a01a:	bf00      	nop
  40a01c:	20000240 	.word	0x20000240

0040a020 <_malloc_r>:
  40a020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a024:	f101 060b 	add.w	r6, r1, #11
  40a028:	2e16      	cmp	r6, #22
  40a02a:	b083      	sub	sp, #12
  40a02c:	4605      	mov	r5, r0
  40a02e:	f240 809e 	bls.w	40a16e <_malloc_r+0x14e>
  40a032:	f036 0607 	bics.w	r6, r6, #7
  40a036:	f100 80bd 	bmi.w	40a1b4 <_malloc_r+0x194>
  40a03a:	42b1      	cmp	r1, r6
  40a03c:	f200 80ba 	bhi.w	40a1b4 <_malloc_r+0x194>
  40a040:	f000 fb6a 	bl	40a718 <__malloc_lock>
  40a044:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40a048:	f0c0 8293 	bcc.w	40a572 <_malloc_r+0x552>
  40a04c:	0a73      	lsrs	r3, r6, #9
  40a04e:	f000 80b8 	beq.w	40a1c2 <_malloc_r+0x1a2>
  40a052:	2b04      	cmp	r3, #4
  40a054:	f200 8179 	bhi.w	40a34a <_malloc_r+0x32a>
  40a058:	09b3      	lsrs	r3, r6, #6
  40a05a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40a05e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40a062:	00c3      	lsls	r3, r0, #3
  40a064:	4fbf      	ldr	r7, [pc, #764]	; (40a364 <_malloc_r+0x344>)
  40a066:	443b      	add	r3, r7
  40a068:	f1a3 0108 	sub.w	r1, r3, #8
  40a06c:	685c      	ldr	r4, [r3, #4]
  40a06e:	42a1      	cmp	r1, r4
  40a070:	d106      	bne.n	40a080 <_malloc_r+0x60>
  40a072:	e00c      	b.n	40a08e <_malloc_r+0x6e>
  40a074:	2a00      	cmp	r2, #0
  40a076:	f280 80aa 	bge.w	40a1ce <_malloc_r+0x1ae>
  40a07a:	68e4      	ldr	r4, [r4, #12]
  40a07c:	42a1      	cmp	r1, r4
  40a07e:	d006      	beq.n	40a08e <_malloc_r+0x6e>
  40a080:	6863      	ldr	r3, [r4, #4]
  40a082:	f023 0303 	bic.w	r3, r3, #3
  40a086:	1b9a      	subs	r2, r3, r6
  40a088:	2a0f      	cmp	r2, #15
  40a08a:	ddf3      	ble.n	40a074 <_malloc_r+0x54>
  40a08c:	4670      	mov	r0, lr
  40a08e:	693c      	ldr	r4, [r7, #16]
  40a090:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40a378 <_malloc_r+0x358>
  40a094:	4574      	cmp	r4, lr
  40a096:	f000 81ab 	beq.w	40a3f0 <_malloc_r+0x3d0>
  40a09a:	6863      	ldr	r3, [r4, #4]
  40a09c:	f023 0303 	bic.w	r3, r3, #3
  40a0a0:	1b9a      	subs	r2, r3, r6
  40a0a2:	2a0f      	cmp	r2, #15
  40a0a4:	f300 8190 	bgt.w	40a3c8 <_malloc_r+0x3a8>
  40a0a8:	2a00      	cmp	r2, #0
  40a0aa:	f8c7 e014 	str.w	lr, [r7, #20]
  40a0ae:	f8c7 e010 	str.w	lr, [r7, #16]
  40a0b2:	f280 809d 	bge.w	40a1f0 <_malloc_r+0x1d0>
  40a0b6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40a0ba:	f080 8161 	bcs.w	40a380 <_malloc_r+0x360>
  40a0be:	08db      	lsrs	r3, r3, #3
  40a0c0:	f103 0c01 	add.w	ip, r3, #1
  40a0c4:	1099      	asrs	r1, r3, #2
  40a0c6:	687a      	ldr	r2, [r7, #4]
  40a0c8:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  40a0cc:	f8c4 8008 	str.w	r8, [r4, #8]
  40a0d0:	2301      	movs	r3, #1
  40a0d2:	408b      	lsls	r3, r1
  40a0d4:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40a0d8:	4313      	orrs	r3, r2
  40a0da:	3908      	subs	r1, #8
  40a0dc:	60e1      	str	r1, [r4, #12]
  40a0de:	607b      	str	r3, [r7, #4]
  40a0e0:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40a0e4:	f8c8 400c 	str.w	r4, [r8, #12]
  40a0e8:	1082      	asrs	r2, r0, #2
  40a0ea:	2401      	movs	r4, #1
  40a0ec:	4094      	lsls	r4, r2
  40a0ee:	429c      	cmp	r4, r3
  40a0f0:	f200 808b 	bhi.w	40a20a <_malloc_r+0x1ea>
  40a0f4:	421c      	tst	r4, r3
  40a0f6:	d106      	bne.n	40a106 <_malloc_r+0xe6>
  40a0f8:	f020 0003 	bic.w	r0, r0, #3
  40a0fc:	0064      	lsls	r4, r4, #1
  40a0fe:	421c      	tst	r4, r3
  40a100:	f100 0004 	add.w	r0, r0, #4
  40a104:	d0fa      	beq.n	40a0fc <_malloc_r+0xdc>
  40a106:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40a10a:	46cc      	mov	ip, r9
  40a10c:	4680      	mov	r8, r0
  40a10e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40a112:	459c      	cmp	ip, r3
  40a114:	d107      	bne.n	40a126 <_malloc_r+0x106>
  40a116:	e16d      	b.n	40a3f4 <_malloc_r+0x3d4>
  40a118:	2a00      	cmp	r2, #0
  40a11a:	f280 817b 	bge.w	40a414 <_malloc_r+0x3f4>
  40a11e:	68db      	ldr	r3, [r3, #12]
  40a120:	459c      	cmp	ip, r3
  40a122:	f000 8167 	beq.w	40a3f4 <_malloc_r+0x3d4>
  40a126:	6859      	ldr	r1, [r3, #4]
  40a128:	f021 0103 	bic.w	r1, r1, #3
  40a12c:	1b8a      	subs	r2, r1, r6
  40a12e:	2a0f      	cmp	r2, #15
  40a130:	ddf2      	ble.n	40a118 <_malloc_r+0xf8>
  40a132:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40a136:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40a13a:	9300      	str	r3, [sp, #0]
  40a13c:	199c      	adds	r4, r3, r6
  40a13e:	4628      	mov	r0, r5
  40a140:	f046 0601 	orr.w	r6, r6, #1
  40a144:	f042 0501 	orr.w	r5, r2, #1
  40a148:	605e      	str	r6, [r3, #4]
  40a14a:	f8c8 c00c 	str.w	ip, [r8, #12]
  40a14e:	f8cc 8008 	str.w	r8, [ip, #8]
  40a152:	617c      	str	r4, [r7, #20]
  40a154:	613c      	str	r4, [r7, #16]
  40a156:	f8c4 e00c 	str.w	lr, [r4, #12]
  40a15a:	f8c4 e008 	str.w	lr, [r4, #8]
  40a15e:	6065      	str	r5, [r4, #4]
  40a160:	505a      	str	r2, [r3, r1]
  40a162:	f000 fadf 	bl	40a724 <__malloc_unlock>
  40a166:	9b00      	ldr	r3, [sp, #0]
  40a168:	f103 0408 	add.w	r4, r3, #8
  40a16c:	e01e      	b.n	40a1ac <_malloc_r+0x18c>
  40a16e:	2910      	cmp	r1, #16
  40a170:	d820      	bhi.n	40a1b4 <_malloc_r+0x194>
  40a172:	f000 fad1 	bl	40a718 <__malloc_lock>
  40a176:	2610      	movs	r6, #16
  40a178:	2318      	movs	r3, #24
  40a17a:	2002      	movs	r0, #2
  40a17c:	4f79      	ldr	r7, [pc, #484]	; (40a364 <_malloc_r+0x344>)
  40a17e:	443b      	add	r3, r7
  40a180:	f1a3 0208 	sub.w	r2, r3, #8
  40a184:	685c      	ldr	r4, [r3, #4]
  40a186:	4294      	cmp	r4, r2
  40a188:	f000 813d 	beq.w	40a406 <_malloc_r+0x3e6>
  40a18c:	6863      	ldr	r3, [r4, #4]
  40a18e:	68e1      	ldr	r1, [r4, #12]
  40a190:	68a6      	ldr	r6, [r4, #8]
  40a192:	f023 0303 	bic.w	r3, r3, #3
  40a196:	4423      	add	r3, r4
  40a198:	4628      	mov	r0, r5
  40a19a:	685a      	ldr	r2, [r3, #4]
  40a19c:	60f1      	str	r1, [r6, #12]
  40a19e:	f042 0201 	orr.w	r2, r2, #1
  40a1a2:	608e      	str	r6, [r1, #8]
  40a1a4:	605a      	str	r2, [r3, #4]
  40a1a6:	f000 fabd 	bl	40a724 <__malloc_unlock>
  40a1aa:	3408      	adds	r4, #8
  40a1ac:	4620      	mov	r0, r4
  40a1ae:	b003      	add	sp, #12
  40a1b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a1b4:	2400      	movs	r4, #0
  40a1b6:	230c      	movs	r3, #12
  40a1b8:	4620      	mov	r0, r4
  40a1ba:	602b      	str	r3, [r5, #0]
  40a1bc:	b003      	add	sp, #12
  40a1be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a1c2:	2040      	movs	r0, #64	; 0x40
  40a1c4:	f44f 7300 	mov.w	r3, #512	; 0x200
  40a1c8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  40a1cc:	e74a      	b.n	40a064 <_malloc_r+0x44>
  40a1ce:	4423      	add	r3, r4
  40a1d0:	68e1      	ldr	r1, [r4, #12]
  40a1d2:	685a      	ldr	r2, [r3, #4]
  40a1d4:	68a6      	ldr	r6, [r4, #8]
  40a1d6:	f042 0201 	orr.w	r2, r2, #1
  40a1da:	60f1      	str	r1, [r6, #12]
  40a1dc:	4628      	mov	r0, r5
  40a1de:	608e      	str	r6, [r1, #8]
  40a1e0:	605a      	str	r2, [r3, #4]
  40a1e2:	f000 fa9f 	bl	40a724 <__malloc_unlock>
  40a1e6:	3408      	adds	r4, #8
  40a1e8:	4620      	mov	r0, r4
  40a1ea:	b003      	add	sp, #12
  40a1ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a1f0:	4423      	add	r3, r4
  40a1f2:	4628      	mov	r0, r5
  40a1f4:	685a      	ldr	r2, [r3, #4]
  40a1f6:	f042 0201 	orr.w	r2, r2, #1
  40a1fa:	605a      	str	r2, [r3, #4]
  40a1fc:	f000 fa92 	bl	40a724 <__malloc_unlock>
  40a200:	3408      	adds	r4, #8
  40a202:	4620      	mov	r0, r4
  40a204:	b003      	add	sp, #12
  40a206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a20a:	68bc      	ldr	r4, [r7, #8]
  40a20c:	6863      	ldr	r3, [r4, #4]
  40a20e:	f023 0803 	bic.w	r8, r3, #3
  40a212:	45b0      	cmp	r8, r6
  40a214:	d304      	bcc.n	40a220 <_malloc_r+0x200>
  40a216:	eba8 0306 	sub.w	r3, r8, r6
  40a21a:	2b0f      	cmp	r3, #15
  40a21c:	f300 8085 	bgt.w	40a32a <_malloc_r+0x30a>
  40a220:	f8df 9158 	ldr.w	r9, [pc, #344]	; 40a37c <_malloc_r+0x35c>
  40a224:	4b50      	ldr	r3, [pc, #320]	; (40a368 <_malloc_r+0x348>)
  40a226:	f8d9 2000 	ldr.w	r2, [r9]
  40a22a:	681b      	ldr	r3, [r3, #0]
  40a22c:	3201      	adds	r2, #1
  40a22e:	4433      	add	r3, r6
  40a230:	eb04 0a08 	add.w	sl, r4, r8
  40a234:	f000 8155 	beq.w	40a4e2 <_malloc_r+0x4c2>
  40a238:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40a23c:	330f      	adds	r3, #15
  40a23e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40a242:	f02b 0b0f 	bic.w	fp, fp, #15
  40a246:	4659      	mov	r1, fp
  40a248:	4628      	mov	r0, r5
  40a24a:	f000 fc17 	bl	40aa7c <_sbrk_r>
  40a24e:	1c41      	adds	r1, r0, #1
  40a250:	4602      	mov	r2, r0
  40a252:	f000 80fc 	beq.w	40a44e <_malloc_r+0x42e>
  40a256:	4582      	cmp	sl, r0
  40a258:	f200 80f7 	bhi.w	40a44a <_malloc_r+0x42a>
  40a25c:	4b43      	ldr	r3, [pc, #268]	; (40a36c <_malloc_r+0x34c>)
  40a25e:	6819      	ldr	r1, [r3, #0]
  40a260:	4459      	add	r1, fp
  40a262:	6019      	str	r1, [r3, #0]
  40a264:	f000 814d 	beq.w	40a502 <_malloc_r+0x4e2>
  40a268:	f8d9 0000 	ldr.w	r0, [r9]
  40a26c:	3001      	adds	r0, #1
  40a26e:	bf1b      	ittet	ne
  40a270:	eba2 0a0a 	subne.w	sl, r2, sl
  40a274:	4451      	addne	r1, sl
  40a276:	f8c9 2000 	streq.w	r2, [r9]
  40a27a:	6019      	strne	r1, [r3, #0]
  40a27c:	f012 0107 	ands.w	r1, r2, #7
  40a280:	f000 8115 	beq.w	40a4ae <_malloc_r+0x48e>
  40a284:	f1c1 0008 	rsb	r0, r1, #8
  40a288:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40a28c:	4402      	add	r2, r0
  40a28e:	3108      	adds	r1, #8
  40a290:	eb02 090b 	add.w	r9, r2, fp
  40a294:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40a298:	eba1 0909 	sub.w	r9, r1, r9
  40a29c:	4649      	mov	r1, r9
  40a29e:	4628      	mov	r0, r5
  40a2a0:	9301      	str	r3, [sp, #4]
  40a2a2:	9200      	str	r2, [sp, #0]
  40a2a4:	f000 fbea 	bl	40aa7c <_sbrk_r>
  40a2a8:	1c43      	adds	r3, r0, #1
  40a2aa:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40a2ae:	f000 8143 	beq.w	40a538 <_malloc_r+0x518>
  40a2b2:	1a80      	subs	r0, r0, r2
  40a2b4:	4448      	add	r0, r9
  40a2b6:	f040 0001 	orr.w	r0, r0, #1
  40a2ba:	6819      	ldr	r1, [r3, #0]
  40a2bc:	60ba      	str	r2, [r7, #8]
  40a2be:	4449      	add	r1, r9
  40a2c0:	42bc      	cmp	r4, r7
  40a2c2:	6050      	str	r0, [r2, #4]
  40a2c4:	6019      	str	r1, [r3, #0]
  40a2c6:	d017      	beq.n	40a2f8 <_malloc_r+0x2d8>
  40a2c8:	f1b8 0f0f 	cmp.w	r8, #15
  40a2cc:	f240 80fb 	bls.w	40a4c6 <_malloc_r+0x4a6>
  40a2d0:	6860      	ldr	r0, [r4, #4]
  40a2d2:	f1a8 020c 	sub.w	r2, r8, #12
  40a2d6:	f022 0207 	bic.w	r2, r2, #7
  40a2da:	eb04 0e02 	add.w	lr, r4, r2
  40a2de:	f000 0001 	and.w	r0, r0, #1
  40a2e2:	f04f 0c05 	mov.w	ip, #5
  40a2e6:	4310      	orrs	r0, r2
  40a2e8:	2a0f      	cmp	r2, #15
  40a2ea:	6060      	str	r0, [r4, #4]
  40a2ec:	f8ce c004 	str.w	ip, [lr, #4]
  40a2f0:	f8ce c008 	str.w	ip, [lr, #8]
  40a2f4:	f200 8117 	bhi.w	40a526 <_malloc_r+0x506>
  40a2f8:	4b1d      	ldr	r3, [pc, #116]	; (40a370 <_malloc_r+0x350>)
  40a2fa:	68bc      	ldr	r4, [r7, #8]
  40a2fc:	681a      	ldr	r2, [r3, #0]
  40a2fe:	4291      	cmp	r1, r2
  40a300:	bf88      	it	hi
  40a302:	6019      	strhi	r1, [r3, #0]
  40a304:	4b1b      	ldr	r3, [pc, #108]	; (40a374 <_malloc_r+0x354>)
  40a306:	681a      	ldr	r2, [r3, #0]
  40a308:	4291      	cmp	r1, r2
  40a30a:	6862      	ldr	r2, [r4, #4]
  40a30c:	bf88      	it	hi
  40a30e:	6019      	strhi	r1, [r3, #0]
  40a310:	f022 0203 	bic.w	r2, r2, #3
  40a314:	4296      	cmp	r6, r2
  40a316:	eba2 0306 	sub.w	r3, r2, r6
  40a31a:	d801      	bhi.n	40a320 <_malloc_r+0x300>
  40a31c:	2b0f      	cmp	r3, #15
  40a31e:	dc04      	bgt.n	40a32a <_malloc_r+0x30a>
  40a320:	4628      	mov	r0, r5
  40a322:	f000 f9ff 	bl	40a724 <__malloc_unlock>
  40a326:	2400      	movs	r4, #0
  40a328:	e740      	b.n	40a1ac <_malloc_r+0x18c>
  40a32a:	19a2      	adds	r2, r4, r6
  40a32c:	f043 0301 	orr.w	r3, r3, #1
  40a330:	f046 0601 	orr.w	r6, r6, #1
  40a334:	6066      	str	r6, [r4, #4]
  40a336:	4628      	mov	r0, r5
  40a338:	60ba      	str	r2, [r7, #8]
  40a33a:	6053      	str	r3, [r2, #4]
  40a33c:	f000 f9f2 	bl	40a724 <__malloc_unlock>
  40a340:	3408      	adds	r4, #8
  40a342:	4620      	mov	r0, r4
  40a344:	b003      	add	sp, #12
  40a346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a34a:	2b14      	cmp	r3, #20
  40a34c:	d971      	bls.n	40a432 <_malloc_r+0x412>
  40a34e:	2b54      	cmp	r3, #84	; 0x54
  40a350:	f200 80a3 	bhi.w	40a49a <_malloc_r+0x47a>
  40a354:	0b33      	lsrs	r3, r6, #12
  40a356:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40a35a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40a35e:	00c3      	lsls	r3, r0, #3
  40a360:	e680      	b.n	40a064 <_malloc_r+0x44>
  40a362:	bf00      	nop
  40a364:	200007e0 	.word	0x200007e0
  40a368:	2001a72c 	.word	0x2001a72c
  40a36c:	2001a6fc 	.word	0x2001a6fc
  40a370:	2001a724 	.word	0x2001a724
  40a374:	2001a728 	.word	0x2001a728
  40a378:	200007e8 	.word	0x200007e8
  40a37c:	20000be8 	.word	0x20000be8
  40a380:	0a5a      	lsrs	r2, r3, #9
  40a382:	2a04      	cmp	r2, #4
  40a384:	d95b      	bls.n	40a43e <_malloc_r+0x41e>
  40a386:	2a14      	cmp	r2, #20
  40a388:	f200 80ae 	bhi.w	40a4e8 <_malloc_r+0x4c8>
  40a38c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40a390:	00c9      	lsls	r1, r1, #3
  40a392:	325b      	adds	r2, #91	; 0x5b
  40a394:	eb07 0c01 	add.w	ip, r7, r1
  40a398:	5879      	ldr	r1, [r7, r1]
  40a39a:	f1ac 0c08 	sub.w	ip, ip, #8
  40a39e:	458c      	cmp	ip, r1
  40a3a0:	f000 8088 	beq.w	40a4b4 <_malloc_r+0x494>
  40a3a4:	684a      	ldr	r2, [r1, #4]
  40a3a6:	f022 0203 	bic.w	r2, r2, #3
  40a3aa:	4293      	cmp	r3, r2
  40a3ac:	d273      	bcs.n	40a496 <_malloc_r+0x476>
  40a3ae:	6889      	ldr	r1, [r1, #8]
  40a3b0:	458c      	cmp	ip, r1
  40a3b2:	d1f7      	bne.n	40a3a4 <_malloc_r+0x384>
  40a3b4:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40a3b8:	687b      	ldr	r3, [r7, #4]
  40a3ba:	60e2      	str	r2, [r4, #12]
  40a3bc:	f8c4 c008 	str.w	ip, [r4, #8]
  40a3c0:	6094      	str	r4, [r2, #8]
  40a3c2:	f8cc 400c 	str.w	r4, [ip, #12]
  40a3c6:	e68f      	b.n	40a0e8 <_malloc_r+0xc8>
  40a3c8:	19a1      	adds	r1, r4, r6
  40a3ca:	f046 0c01 	orr.w	ip, r6, #1
  40a3ce:	f042 0601 	orr.w	r6, r2, #1
  40a3d2:	f8c4 c004 	str.w	ip, [r4, #4]
  40a3d6:	4628      	mov	r0, r5
  40a3d8:	6179      	str	r1, [r7, #20]
  40a3da:	6139      	str	r1, [r7, #16]
  40a3dc:	f8c1 e00c 	str.w	lr, [r1, #12]
  40a3e0:	f8c1 e008 	str.w	lr, [r1, #8]
  40a3e4:	604e      	str	r6, [r1, #4]
  40a3e6:	50e2      	str	r2, [r4, r3]
  40a3e8:	f000 f99c 	bl	40a724 <__malloc_unlock>
  40a3ec:	3408      	adds	r4, #8
  40a3ee:	e6dd      	b.n	40a1ac <_malloc_r+0x18c>
  40a3f0:	687b      	ldr	r3, [r7, #4]
  40a3f2:	e679      	b.n	40a0e8 <_malloc_r+0xc8>
  40a3f4:	f108 0801 	add.w	r8, r8, #1
  40a3f8:	f018 0f03 	tst.w	r8, #3
  40a3fc:	f10c 0c08 	add.w	ip, ip, #8
  40a400:	f47f ae85 	bne.w	40a10e <_malloc_r+0xee>
  40a404:	e02d      	b.n	40a462 <_malloc_r+0x442>
  40a406:	68dc      	ldr	r4, [r3, #12]
  40a408:	42a3      	cmp	r3, r4
  40a40a:	bf08      	it	eq
  40a40c:	3002      	addeq	r0, #2
  40a40e:	f43f ae3e 	beq.w	40a08e <_malloc_r+0x6e>
  40a412:	e6bb      	b.n	40a18c <_malloc_r+0x16c>
  40a414:	4419      	add	r1, r3
  40a416:	461c      	mov	r4, r3
  40a418:	684a      	ldr	r2, [r1, #4]
  40a41a:	68db      	ldr	r3, [r3, #12]
  40a41c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40a420:	f042 0201 	orr.w	r2, r2, #1
  40a424:	604a      	str	r2, [r1, #4]
  40a426:	4628      	mov	r0, r5
  40a428:	60f3      	str	r3, [r6, #12]
  40a42a:	609e      	str	r6, [r3, #8]
  40a42c:	f000 f97a 	bl	40a724 <__malloc_unlock>
  40a430:	e6bc      	b.n	40a1ac <_malloc_r+0x18c>
  40a432:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40a436:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40a43a:	00c3      	lsls	r3, r0, #3
  40a43c:	e612      	b.n	40a064 <_malloc_r+0x44>
  40a43e:	099a      	lsrs	r2, r3, #6
  40a440:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40a444:	00c9      	lsls	r1, r1, #3
  40a446:	3238      	adds	r2, #56	; 0x38
  40a448:	e7a4      	b.n	40a394 <_malloc_r+0x374>
  40a44a:	42bc      	cmp	r4, r7
  40a44c:	d054      	beq.n	40a4f8 <_malloc_r+0x4d8>
  40a44e:	68bc      	ldr	r4, [r7, #8]
  40a450:	6862      	ldr	r2, [r4, #4]
  40a452:	f022 0203 	bic.w	r2, r2, #3
  40a456:	e75d      	b.n	40a314 <_malloc_r+0x2f4>
  40a458:	f859 3908 	ldr.w	r3, [r9], #-8
  40a45c:	4599      	cmp	r9, r3
  40a45e:	f040 8086 	bne.w	40a56e <_malloc_r+0x54e>
  40a462:	f010 0f03 	tst.w	r0, #3
  40a466:	f100 30ff 	add.w	r0, r0, #4294967295
  40a46a:	d1f5      	bne.n	40a458 <_malloc_r+0x438>
  40a46c:	687b      	ldr	r3, [r7, #4]
  40a46e:	ea23 0304 	bic.w	r3, r3, r4
  40a472:	607b      	str	r3, [r7, #4]
  40a474:	0064      	lsls	r4, r4, #1
  40a476:	429c      	cmp	r4, r3
  40a478:	f63f aec7 	bhi.w	40a20a <_malloc_r+0x1ea>
  40a47c:	2c00      	cmp	r4, #0
  40a47e:	f43f aec4 	beq.w	40a20a <_malloc_r+0x1ea>
  40a482:	421c      	tst	r4, r3
  40a484:	4640      	mov	r0, r8
  40a486:	f47f ae3e 	bne.w	40a106 <_malloc_r+0xe6>
  40a48a:	0064      	lsls	r4, r4, #1
  40a48c:	421c      	tst	r4, r3
  40a48e:	f100 0004 	add.w	r0, r0, #4
  40a492:	d0fa      	beq.n	40a48a <_malloc_r+0x46a>
  40a494:	e637      	b.n	40a106 <_malloc_r+0xe6>
  40a496:	468c      	mov	ip, r1
  40a498:	e78c      	b.n	40a3b4 <_malloc_r+0x394>
  40a49a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40a49e:	d815      	bhi.n	40a4cc <_malloc_r+0x4ac>
  40a4a0:	0bf3      	lsrs	r3, r6, #15
  40a4a2:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40a4a6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40a4aa:	00c3      	lsls	r3, r0, #3
  40a4ac:	e5da      	b.n	40a064 <_malloc_r+0x44>
  40a4ae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40a4b2:	e6ed      	b.n	40a290 <_malloc_r+0x270>
  40a4b4:	687b      	ldr	r3, [r7, #4]
  40a4b6:	1092      	asrs	r2, r2, #2
  40a4b8:	2101      	movs	r1, #1
  40a4ba:	fa01 f202 	lsl.w	r2, r1, r2
  40a4be:	4313      	orrs	r3, r2
  40a4c0:	607b      	str	r3, [r7, #4]
  40a4c2:	4662      	mov	r2, ip
  40a4c4:	e779      	b.n	40a3ba <_malloc_r+0x39a>
  40a4c6:	2301      	movs	r3, #1
  40a4c8:	6053      	str	r3, [r2, #4]
  40a4ca:	e729      	b.n	40a320 <_malloc_r+0x300>
  40a4cc:	f240 5254 	movw	r2, #1364	; 0x554
  40a4d0:	4293      	cmp	r3, r2
  40a4d2:	d822      	bhi.n	40a51a <_malloc_r+0x4fa>
  40a4d4:	0cb3      	lsrs	r3, r6, #18
  40a4d6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40a4da:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40a4de:	00c3      	lsls	r3, r0, #3
  40a4e0:	e5c0      	b.n	40a064 <_malloc_r+0x44>
  40a4e2:	f103 0b10 	add.w	fp, r3, #16
  40a4e6:	e6ae      	b.n	40a246 <_malloc_r+0x226>
  40a4e8:	2a54      	cmp	r2, #84	; 0x54
  40a4ea:	d829      	bhi.n	40a540 <_malloc_r+0x520>
  40a4ec:	0b1a      	lsrs	r2, r3, #12
  40a4ee:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40a4f2:	00c9      	lsls	r1, r1, #3
  40a4f4:	326e      	adds	r2, #110	; 0x6e
  40a4f6:	e74d      	b.n	40a394 <_malloc_r+0x374>
  40a4f8:	4b20      	ldr	r3, [pc, #128]	; (40a57c <_malloc_r+0x55c>)
  40a4fa:	6819      	ldr	r1, [r3, #0]
  40a4fc:	4459      	add	r1, fp
  40a4fe:	6019      	str	r1, [r3, #0]
  40a500:	e6b2      	b.n	40a268 <_malloc_r+0x248>
  40a502:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40a506:	2800      	cmp	r0, #0
  40a508:	f47f aeae 	bne.w	40a268 <_malloc_r+0x248>
  40a50c:	eb08 030b 	add.w	r3, r8, fp
  40a510:	68ba      	ldr	r2, [r7, #8]
  40a512:	f043 0301 	orr.w	r3, r3, #1
  40a516:	6053      	str	r3, [r2, #4]
  40a518:	e6ee      	b.n	40a2f8 <_malloc_r+0x2d8>
  40a51a:	207f      	movs	r0, #127	; 0x7f
  40a51c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40a520:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  40a524:	e59e      	b.n	40a064 <_malloc_r+0x44>
  40a526:	f104 0108 	add.w	r1, r4, #8
  40a52a:	4628      	mov	r0, r5
  40a52c:	9300      	str	r3, [sp, #0]
  40a52e:	f7ff fa59 	bl	4099e4 <_free_r>
  40a532:	9b00      	ldr	r3, [sp, #0]
  40a534:	6819      	ldr	r1, [r3, #0]
  40a536:	e6df      	b.n	40a2f8 <_malloc_r+0x2d8>
  40a538:	2001      	movs	r0, #1
  40a53a:	f04f 0900 	mov.w	r9, #0
  40a53e:	e6bc      	b.n	40a2ba <_malloc_r+0x29a>
  40a540:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40a544:	d805      	bhi.n	40a552 <_malloc_r+0x532>
  40a546:	0bda      	lsrs	r2, r3, #15
  40a548:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40a54c:	00c9      	lsls	r1, r1, #3
  40a54e:	3277      	adds	r2, #119	; 0x77
  40a550:	e720      	b.n	40a394 <_malloc_r+0x374>
  40a552:	f240 5154 	movw	r1, #1364	; 0x554
  40a556:	428a      	cmp	r2, r1
  40a558:	d805      	bhi.n	40a566 <_malloc_r+0x546>
  40a55a:	0c9a      	lsrs	r2, r3, #18
  40a55c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40a560:	00c9      	lsls	r1, r1, #3
  40a562:	327c      	adds	r2, #124	; 0x7c
  40a564:	e716      	b.n	40a394 <_malloc_r+0x374>
  40a566:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40a56a:	227e      	movs	r2, #126	; 0x7e
  40a56c:	e712      	b.n	40a394 <_malloc_r+0x374>
  40a56e:	687b      	ldr	r3, [r7, #4]
  40a570:	e780      	b.n	40a474 <_malloc_r+0x454>
  40a572:	08f0      	lsrs	r0, r6, #3
  40a574:	f106 0308 	add.w	r3, r6, #8
  40a578:	e600      	b.n	40a17c <_malloc_r+0x15c>
  40a57a:	bf00      	nop
  40a57c:	2001a6fc 	.word	0x2001a6fc

0040a580 <__ascii_mbtowc>:
  40a580:	b082      	sub	sp, #8
  40a582:	b149      	cbz	r1, 40a598 <__ascii_mbtowc+0x18>
  40a584:	b15a      	cbz	r2, 40a59e <__ascii_mbtowc+0x1e>
  40a586:	b16b      	cbz	r3, 40a5a4 <__ascii_mbtowc+0x24>
  40a588:	7813      	ldrb	r3, [r2, #0]
  40a58a:	600b      	str	r3, [r1, #0]
  40a58c:	7812      	ldrb	r2, [r2, #0]
  40a58e:	1c10      	adds	r0, r2, #0
  40a590:	bf18      	it	ne
  40a592:	2001      	movne	r0, #1
  40a594:	b002      	add	sp, #8
  40a596:	4770      	bx	lr
  40a598:	a901      	add	r1, sp, #4
  40a59a:	2a00      	cmp	r2, #0
  40a59c:	d1f3      	bne.n	40a586 <__ascii_mbtowc+0x6>
  40a59e:	4610      	mov	r0, r2
  40a5a0:	b002      	add	sp, #8
  40a5a2:	4770      	bx	lr
  40a5a4:	f06f 0001 	mvn.w	r0, #1
  40a5a8:	e7f4      	b.n	40a594 <__ascii_mbtowc+0x14>
  40a5aa:	bf00      	nop
  40a5ac:	0000      	movs	r0, r0
	...

0040a5b0 <memchr>:
  40a5b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a5b4:	2a10      	cmp	r2, #16
  40a5b6:	db2b      	blt.n	40a610 <memchr+0x60>
  40a5b8:	f010 0f07 	tst.w	r0, #7
  40a5bc:	d008      	beq.n	40a5d0 <memchr+0x20>
  40a5be:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a5c2:	3a01      	subs	r2, #1
  40a5c4:	428b      	cmp	r3, r1
  40a5c6:	d02d      	beq.n	40a624 <memchr+0x74>
  40a5c8:	f010 0f07 	tst.w	r0, #7
  40a5cc:	b342      	cbz	r2, 40a620 <memchr+0x70>
  40a5ce:	d1f6      	bne.n	40a5be <memchr+0xe>
  40a5d0:	b4f0      	push	{r4, r5, r6, r7}
  40a5d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  40a5d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40a5da:	f022 0407 	bic.w	r4, r2, #7
  40a5de:	f07f 0700 	mvns.w	r7, #0
  40a5e2:	2300      	movs	r3, #0
  40a5e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  40a5e8:	3c08      	subs	r4, #8
  40a5ea:	ea85 0501 	eor.w	r5, r5, r1
  40a5ee:	ea86 0601 	eor.w	r6, r6, r1
  40a5f2:	fa85 f547 	uadd8	r5, r5, r7
  40a5f6:	faa3 f587 	sel	r5, r3, r7
  40a5fa:	fa86 f647 	uadd8	r6, r6, r7
  40a5fe:	faa5 f687 	sel	r6, r5, r7
  40a602:	b98e      	cbnz	r6, 40a628 <memchr+0x78>
  40a604:	d1ee      	bne.n	40a5e4 <memchr+0x34>
  40a606:	bcf0      	pop	{r4, r5, r6, r7}
  40a608:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a60c:	f002 0207 	and.w	r2, r2, #7
  40a610:	b132      	cbz	r2, 40a620 <memchr+0x70>
  40a612:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a616:	3a01      	subs	r2, #1
  40a618:	ea83 0301 	eor.w	r3, r3, r1
  40a61c:	b113      	cbz	r3, 40a624 <memchr+0x74>
  40a61e:	d1f8      	bne.n	40a612 <memchr+0x62>
  40a620:	2000      	movs	r0, #0
  40a622:	4770      	bx	lr
  40a624:	3801      	subs	r0, #1
  40a626:	4770      	bx	lr
  40a628:	2d00      	cmp	r5, #0
  40a62a:	bf06      	itte	eq
  40a62c:	4635      	moveq	r5, r6
  40a62e:	3803      	subeq	r0, #3
  40a630:	3807      	subne	r0, #7
  40a632:	f015 0f01 	tst.w	r5, #1
  40a636:	d107      	bne.n	40a648 <memchr+0x98>
  40a638:	3001      	adds	r0, #1
  40a63a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40a63e:	bf02      	ittt	eq
  40a640:	3001      	addeq	r0, #1
  40a642:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  40a646:	3001      	addeq	r0, #1
  40a648:	bcf0      	pop	{r4, r5, r6, r7}
  40a64a:	3801      	subs	r0, #1
  40a64c:	4770      	bx	lr
  40a64e:	bf00      	nop

0040a650 <memmove>:
  40a650:	4288      	cmp	r0, r1
  40a652:	b5f0      	push	{r4, r5, r6, r7, lr}
  40a654:	d90d      	bls.n	40a672 <memmove+0x22>
  40a656:	188b      	adds	r3, r1, r2
  40a658:	4298      	cmp	r0, r3
  40a65a:	d20a      	bcs.n	40a672 <memmove+0x22>
  40a65c:	1884      	adds	r4, r0, r2
  40a65e:	2a00      	cmp	r2, #0
  40a660:	d051      	beq.n	40a706 <memmove+0xb6>
  40a662:	4622      	mov	r2, r4
  40a664:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40a668:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40a66c:	4299      	cmp	r1, r3
  40a66e:	d1f9      	bne.n	40a664 <memmove+0x14>
  40a670:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a672:	2a0f      	cmp	r2, #15
  40a674:	d948      	bls.n	40a708 <memmove+0xb8>
  40a676:	ea41 0300 	orr.w	r3, r1, r0
  40a67a:	079b      	lsls	r3, r3, #30
  40a67c:	d146      	bne.n	40a70c <memmove+0xbc>
  40a67e:	f100 0410 	add.w	r4, r0, #16
  40a682:	f101 0310 	add.w	r3, r1, #16
  40a686:	4615      	mov	r5, r2
  40a688:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40a68c:	f844 6c10 	str.w	r6, [r4, #-16]
  40a690:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  40a694:	f844 6c0c 	str.w	r6, [r4, #-12]
  40a698:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40a69c:	f844 6c08 	str.w	r6, [r4, #-8]
  40a6a0:	3d10      	subs	r5, #16
  40a6a2:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40a6a6:	f844 6c04 	str.w	r6, [r4, #-4]
  40a6aa:	2d0f      	cmp	r5, #15
  40a6ac:	f103 0310 	add.w	r3, r3, #16
  40a6b0:	f104 0410 	add.w	r4, r4, #16
  40a6b4:	d8e8      	bhi.n	40a688 <memmove+0x38>
  40a6b6:	f1a2 0310 	sub.w	r3, r2, #16
  40a6ba:	f023 030f 	bic.w	r3, r3, #15
  40a6be:	f002 0e0f 	and.w	lr, r2, #15
  40a6c2:	3310      	adds	r3, #16
  40a6c4:	f1be 0f03 	cmp.w	lr, #3
  40a6c8:	4419      	add	r1, r3
  40a6ca:	4403      	add	r3, r0
  40a6cc:	d921      	bls.n	40a712 <memmove+0xc2>
  40a6ce:	1f1e      	subs	r6, r3, #4
  40a6d0:	460d      	mov	r5, r1
  40a6d2:	4674      	mov	r4, lr
  40a6d4:	3c04      	subs	r4, #4
  40a6d6:	f855 7b04 	ldr.w	r7, [r5], #4
  40a6da:	f846 7f04 	str.w	r7, [r6, #4]!
  40a6de:	2c03      	cmp	r4, #3
  40a6e0:	d8f8      	bhi.n	40a6d4 <memmove+0x84>
  40a6e2:	f1ae 0404 	sub.w	r4, lr, #4
  40a6e6:	f024 0403 	bic.w	r4, r4, #3
  40a6ea:	3404      	adds	r4, #4
  40a6ec:	4421      	add	r1, r4
  40a6ee:	4423      	add	r3, r4
  40a6f0:	f002 0203 	and.w	r2, r2, #3
  40a6f4:	b162      	cbz	r2, 40a710 <memmove+0xc0>
  40a6f6:	3b01      	subs	r3, #1
  40a6f8:	440a      	add	r2, r1
  40a6fa:	f811 4b01 	ldrb.w	r4, [r1], #1
  40a6fe:	f803 4f01 	strb.w	r4, [r3, #1]!
  40a702:	428a      	cmp	r2, r1
  40a704:	d1f9      	bne.n	40a6fa <memmove+0xaa>
  40a706:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a708:	4603      	mov	r3, r0
  40a70a:	e7f3      	b.n	40a6f4 <memmove+0xa4>
  40a70c:	4603      	mov	r3, r0
  40a70e:	e7f2      	b.n	40a6f6 <memmove+0xa6>
  40a710:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a712:	4672      	mov	r2, lr
  40a714:	e7ee      	b.n	40a6f4 <memmove+0xa4>
  40a716:	bf00      	nop

0040a718 <__malloc_lock>:
  40a718:	4801      	ldr	r0, [pc, #4]	; (40a720 <__malloc_lock+0x8>)
  40a71a:	f7ff bbfd 	b.w	409f18 <__retarget_lock_acquire_recursive>
  40a71e:	bf00      	nop
  40a720:	2001ab6c 	.word	0x2001ab6c

0040a724 <__malloc_unlock>:
  40a724:	4801      	ldr	r0, [pc, #4]	; (40a72c <__malloc_unlock+0x8>)
  40a726:	f7ff bbf9 	b.w	409f1c <__retarget_lock_release_recursive>
  40a72a:	bf00      	nop
  40a72c:	2001ab6c 	.word	0x2001ab6c

0040a730 <_realloc_r>:
  40a730:	2900      	cmp	r1, #0
  40a732:	f000 8095 	beq.w	40a860 <_realloc_r+0x130>
  40a736:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a73a:	460d      	mov	r5, r1
  40a73c:	4616      	mov	r6, r2
  40a73e:	b083      	sub	sp, #12
  40a740:	4680      	mov	r8, r0
  40a742:	f106 070b 	add.w	r7, r6, #11
  40a746:	f7ff ffe7 	bl	40a718 <__malloc_lock>
  40a74a:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40a74e:	2f16      	cmp	r7, #22
  40a750:	f02e 0403 	bic.w	r4, lr, #3
  40a754:	f1a5 0908 	sub.w	r9, r5, #8
  40a758:	d83c      	bhi.n	40a7d4 <_realloc_r+0xa4>
  40a75a:	2210      	movs	r2, #16
  40a75c:	4617      	mov	r7, r2
  40a75e:	42be      	cmp	r6, r7
  40a760:	d83d      	bhi.n	40a7de <_realloc_r+0xae>
  40a762:	4294      	cmp	r4, r2
  40a764:	da43      	bge.n	40a7ee <_realloc_r+0xbe>
  40a766:	4bc4      	ldr	r3, [pc, #784]	; (40aa78 <_realloc_r+0x348>)
  40a768:	6899      	ldr	r1, [r3, #8]
  40a76a:	eb09 0004 	add.w	r0, r9, r4
  40a76e:	4288      	cmp	r0, r1
  40a770:	f000 80b4 	beq.w	40a8dc <_realloc_r+0x1ac>
  40a774:	6843      	ldr	r3, [r0, #4]
  40a776:	f023 0101 	bic.w	r1, r3, #1
  40a77a:	4401      	add	r1, r0
  40a77c:	6849      	ldr	r1, [r1, #4]
  40a77e:	07c9      	lsls	r1, r1, #31
  40a780:	d54c      	bpl.n	40a81c <_realloc_r+0xec>
  40a782:	f01e 0f01 	tst.w	lr, #1
  40a786:	f000 809b 	beq.w	40a8c0 <_realloc_r+0x190>
  40a78a:	4631      	mov	r1, r6
  40a78c:	4640      	mov	r0, r8
  40a78e:	f7ff fc47 	bl	40a020 <_malloc_r>
  40a792:	4606      	mov	r6, r0
  40a794:	2800      	cmp	r0, #0
  40a796:	d03a      	beq.n	40a80e <_realloc_r+0xde>
  40a798:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40a79c:	f023 0301 	bic.w	r3, r3, #1
  40a7a0:	444b      	add	r3, r9
  40a7a2:	f1a0 0208 	sub.w	r2, r0, #8
  40a7a6:	429a      	cmp	r2, r3
  40a7a8:	f000 8121 	beq.w	40a9ee <_realloc_r+0x2be>
  40a7ac:	1f22      	subs	r2, r4, #4
  40a7ae:	2a24      	cmp	r2, #36	; 0x24
  40a7b0:	f200 8107 	bhi.w	40a9c2 <_realloc_r+0x292>
  40a7b4:	2a13      	cmp	r2, #19
  40a7b6:	f200 80db 	bhi.w	40a970 <_realloc_r+0x240>
  40a7ba:	4603      	mov	r3, r0
  40a7bc:	462a      	mov	r2, r5
  40a7be:	6811      	ldr	r1, [r2, #0]
  40a7c0:	6019      	str	r1, [r3, #0]
  40a7c2:	6851      	ldr	r1, [r2, #4]
  40a7c4:	6059      	str	r1, [r3, #4]
  40a7c6:	6892      	ldr	r2, [r2, #8]
  40a7c8:	609a      	str	r2, [r3, #8]
  40a7ca:	4629      	mov	r1, r5
  40a7cc:	4640      	mov	r0, r8
  40a7ce:	f7ff f909 	bl	4099e4 <_free_r>
  40a7d2:	e01c      	b.n	40a80e <_realloc_r+0xde>
  40a7d4:	f027 0707 	bic.w	r7, r7, #7
  40a7d8:	2f00      	cmp	r7, #0
  40a7da:	463a      	mov	r2, r7
  40a7dc:	dabf      	bge.n	40a75e <_realloc_r+0x2e>
  40a7de:	2600      	movs	r6, #0
  40a7e0:	230c      	movs	r3, #12
  40a7e2:	4630      	mov	r0, r6
  40a7e4:	f8c8 3000 	str.w	r3, [r8]
  40a7e8:	b003      	add	sp, #12
  40a7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a7ee:	462e      	mov	r6, r5
  40a7f0:	1be3      	subs	r3, r4, r7
  40a7f2:	2b0f      	cmp	r3, #15
  40a7f4:	d81e      	bhi.n	40a834 <_realloc_r+0x104>
  40a7f6:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40a7fa:	f003 0301 	and.w	r3, r3, #1
  40a7fe:	4323      	orrs	r3, r4
  40a800:	444c      	add	r4, r9
  40a802:	f8c9 3004 	str.w	r3, [r9, #4]
  40a806:	6863      	ldr	r3, [r4, #4]
  40a808:	f043 0301 	orr.w	r3, r3, #1
  40a80c:	6063      	str	r3, [r4, #4]
  40a80e:	4640      	mov	r0, r8
  40a810:	f7ff ff88 	bl	40a724 <__malloc_unlock>
  40a814:	4630      	mov	r0, r6
  40a816:	b003      	add	sp, #12
  40a818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a81c:	f023 0303 	bic.w	r3, r3, #3
  40a820:	18e1      	adds	r1, r4, r3
  40a822:	4291      	cmp	r1, r2
  40a824:	db1f      	blt.n	40a866 <_realloc_r+0x136>
  40a826:	68c3      	ldr	r3, [r0, #12]
  40a828:	6882      	ldr	r2, [r0, #8]
  40a82a:	462e      	mov	r6, r5
  40a82c:	60d3      	str	r3, [r2, #12]
  40a82e:	460c      	mov	r4, r1
  40a830:	609a      	str	r2, [r3, #8]
  40a832:	e7dd      	b.n	40a7f0 <_realloc_r+0xc0>
  40a834:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40a838:	eb09 0107 	add.w	r1, r9, r7
  40a83c:	f002 0201 	and.w	r2, r2, #1
  40a840:	444c      	add	r4, r9
  40a842:	f043 0301 	orr.w	r3, r3, #1
  40a846:	4317      	orrs	r7, r2
  40a848:	f8c9 7004 	str.w	r7, [r9, #4]
  40a84c:	604b      	str	r3, [r1, #4]
  40a84e:	6863      	ldr	r3, [r4, #4]
  40a850:	f043 0301 	orr.w	r3, r3, #1
  40a854:	3108      	adds	r1, #8
  40a856:	6063      	str	r3, [r4, #4]
  40a858:	4640      	mov	r0, r8
  40a85a:	f7ff f8c3 	bl	4099e4 <_free_r>
  40a85e:	e7d6      	b.n	40a80e <_realloc_r+0xde>
  40a860:	4611      	mov	r1, r2
  40a862:	f7ff bbdd 	b.w	40a020 <_malloc_r>
  40a866:	f01e 0f01 	tst.w	lr, #1
  40a86a:	d18e      	bne.n	40a78a <_realloc_r+0x5a>
  40a86c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40a870:	eba9 0a01 	sub.w	sl, r9, r1
  40a874:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a878:	f021 0103 	bic.w	r1, r1, #3
  40a87c:	440b      	add	r3, r1
  40a87e:	4423      	add	r3, r4
  40a880:	4293      	cmp	r3, r2
  40a882:	db25      	blt.n	40a8d0 <_realloc_r+0x1a0>
  40a884:	68c2      	ldr	r2, [r0, #12]
  40a886:	6881      	ldr	r1, [r0, #8]
  40a888:	4656      	mov	r6, sl
  40a88a:	60ca      	str	r2, [r1, #12]
  40a88c:	6091      	str	r1, [r2, #8]
  40a88e:	f8da 100c 	ldr.w	r1, [sl, #12]
  40a892:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40a896:	1f22      	subs	r2, r4, #4
  40a898:	2a24      	cmp	r2, #36	; 0x24
  40a89a:	60c1      	str	r1, [r0, #12]
  40a89c:	6088      	str	r0, [r1, #8]
  40a89e:	f200 8094 	bhi.w	40a9ca <_realloc_r+0x29a>
  40a8a2:	2a13      	cmp	r2, #19
  40a8a4:	d96f      	bls.n	40a986 <_realloc_r+0x256>
  40a8a6:	6829      	ldr	r1, [r5, #0]
  40a8a8:	f8ca 1008 	str.w	r1, [sl, #8]
  40a8ac:	6869      	ldr	r1, [r5, #4]
  40a8ae:	f8ca 100c 	str.w	r1, [sl, #12]
  40a8b2:	2a1b      	cmp	r2, #27
  40a8b4:	f200 80a2 	bhi.w	40a9fc <_realloc_r+0x2cc>
  40a8b8:	3508      	adds	r5, #8
  40a8ba:	f10a 0210 	add.w	r2, sl, #16
  40a8be:	e063      	b.n	40a988 <_realloc_r+0x258>
  40a8c0:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40a8c4:	eba9 0a03 	sub.w	sl, r9, r3
  40a8c8:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a8cc:	f021 0103 	bic.w	r1, r1, #3
  40a8d0:	1863      	adds	r3, r4, r1
  40a8d2:	4293      	cmp	r3, r2
  40a8d4:	f6ff af59 	blt.w	40a78a <_realloc_r+0x5a>
  40a8d8:	4656      	mov	r6, sl
  40a8da:	e7d8      	b.n	40a88e <_realloc_r+0x15e>
  40a8dc:	6841      	ldr	r1, [r0, #4]
  40a8de:	f021 0b03 	bic.w	fp, r1, #3
  40a8e2:	44a3      	add	fp, r4
  40a8e4:	f107 0010 	add.w	r0, r7, #16
  40a8e8:	4583      	cmp	fp, r0
  40a8ea:	da56      	bge.n	40a99a <_realloc_r+0x26a>
  40a8ec:	f01e 0f01 	tst.w	lr, #1
  40a8f0:	f47f af4b 	bne.w	40a78a <_realloc_r+0x5a>
  40a8f4:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40a8f8:	eba9 0a01 	sub.w	sl, r9, r1
  40a8fc:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a900:	f021 0103 	bic.w	r1, r1, #3
  40a904:	448b      	add	fp, r1
  40a906:	4558      	cmp	r0, fp
  40a908:	dce2      	bgt.n	40a8d0 <_realloc_r+0x1a0>
  40a90a:	4656      	mov	r6, sl
  40a90c:	f8da 100c 	ldr.w	r1, [sl, #12]
  40a910:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40a914:	1f22      	subs	r2, r4, #4
  40a916:	2a24      	cmp	r2, #36	; 0x24
  40a918:	60c1      	str	r1, [r0, #12]
  40a91a:	6088      	str	r0, [r1, #8]
  40a91c:	f200 808f 	bhi.w	40aa3e <_realloc_r+0x30e>
  40a920:	2a13      	cmp	r2, #19
  40a922:	f240 808a 	bls.w	40aa3a <_realloc_r+0x30a>
  40a926:	6829      	ldr	r1, [r5, #0]
  40a928:	f8ca 1008 	str.w	r1, [sl, #8]
  40a92c:	6869      	ldr	r1, [r5, #4]
  40a92e:	f8ca 100c 	str.w	r1, [sl, #12]
  40a932:	2a1b      	cmp	r2, #27
  40a934:	f200 808a 	bhi.w	40aa4c <_realloc_r+0x31c>
  40a938:	3508      	adds	r5, #8
  40a93a:	f10a 0210 	add.w	r2, sl, #16
  40a93e:	6829      	ldr	r1, [r5, #0]
  40a940:	6011      	str	r1, [r2, #0]
  40a942:	6869      	ldr	r1, [r5, #4]
  40a944:	6051      	str	r1, [r2, #4]
  40a946:	68a9      	ldr	r1, [r5, #8]
  40a948:	6091      	str	r1, [r2, #8]
  40a94a:	eb0a 0107 	add.w	r1, sl, r7
  40a94e:	ebab 0207 	sub.w	r2, fp, r7
  40a952:	f042 0201 	orr.w	r2, r2, #1
  40a956:	6099      	str	r1, [r3, #8]
  40a958:	604a      	str	r2, [r1, #4]
  40a95a:	f8da 3004 	ldr.w	r3, [sl, #4]
  40a95e:	f003 0301 	and.w	r3, r3, #1
  40a962:	431f      	orrs	r7, r3
  40a964:	4640      	mov	r0, r8
  40a966:	f8ca 7004 	str.w	r7, [sl, #4]
  40a96a:	f7ff fedb 	bl	40a724 <__malloc_unlock>
  40a96e:	e751      	b.n	40a814 <_realloc_r+0xe4>
  40a970:	682b      	ldr	r3, [r5, #0]
  40a972:	6003      	str	r3, [r0, #0]
  40a974:	686b      	ldr	r3, [r5, #4]
  40a976:	6043      	str	r3, [r0, #4]
  40a978:	2a1b      	cmp	r2, #27
  40a97a:	d82d      	bhi.n	40a9d8 <_realloc_r+0x2a8>
  40a97c:	f100 0308 	add.w	r3, r0, #8
  40a980:	f105 0208 	add.w	r2, r5, #8
  40a984:	e71b      	b.n	40a7be <_realloc_r+0x8e>
  40a986:	4632      	mov	r2, r6
  40a988:	6829      	ldr	r1, [r5, #0]
  40a98a:	6011      	str	r1, [r2, #0]
  40a98c:	6869      	ldr	r1, [r5, #4]
  40a98e:	6051      	str	r1, [r2, #4]
  40a990:	68a9      	ldr	r1, [r5, #8]
  40a992:	6091      	str	r1, [r2, #8]
  40a994:	461c      	mov	r4, r3
  40a996:	46d1      	mov	r9, sl
  40a998:	e72a      	b.n	40a7f0 <_realloc_r+0xc0>
  40a99a:	eb09 0107 	add.w	r1, r9, r7
  40a99e:	ebab 0b07 	sub.w	fp, fp, r7
  40a9a2:	f04b 0201 	orr.w	r2, fp, #1
  40a9a6:	6099      	str	r1, [r3, #8]
  40a9a8:	604a      	str	r2, [r1, #4]
  40a9aa:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40a9ae:	f003 0301 	and.w	r3, r3, #1
  40a9b2:	431f      	orrs	r7, r3
  40a9b4:	4640      	mov	r0, r8
  40a9b6:	f845 7c04 	str.w	r7, [r5, #-4]
  40a9ba:	f7ff feb3 	bl	40a724 <__malloc_unlock>
  40a9be:	462e      	mov	r6, r5
  40a9c0:	e728      	b.n	40a814 <_realloc_r+0xe4>
  40a9c2:	4629      	mov	r1, r5
  40a9c4:	f7ff fe44 	bl	40a650 <memmove>
  40a9c8:	e6ff      	b.n	40a7ca <_realloc_r+0x9a>
  40a9ca:	4629      	mov	r1, r5
  40a9cc:	4630      	mov	r0, r6
  40a9ce:	461c      	mov	r4, r3
  40a9d0:	46d1      	mov	r9, sl
  40a9d2:	f7ff fe3d 	bl	40a650 <memmove>
  40a9d6:	e70b      	b.n	40a7f0 <_realloc_r+0xc0>
  40a9d8:	68ab      	ldr	r3, [r5, #8]
  40a9da:	6083      	str	r3, [r0, #8]
  40a9dc:	68eb      	ldr	r3, [r5, #12]
  40a9de:	60c3      	str	r3, [r0, #12]
  40a9e0:	2a24      	cmp	r2, #36	; 0x24
  40a9e2:	d017      	beq.n	40aa14 <_realloc_r+0x2e4>
  40a9e4:	f100 0310 	add.w	r3, r0, #16
  40a9e8:	f105 0210 	add.w	r2, r5, #16
  40a9ec:	e6e7      	b.n	40a7be <_realloc_r+0x8e>
  40a9ee:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40a9f2:	f023 0303 	bic.w	r3, r3, #3
  40a9f6:	441c      	add	r4, r3
  40a9f8:	462e      	mov	r6, r5
  40a9fa:	e6f9      	b.n	40a7f0 <_realloc_r+0xc0>
  40a9fc:	68a9      	ldr	r1, [r5, #8]
  40a9fe:	f8ca 1010 	str.w	r1, [sl, #16]
  40aa02:	68e9      	ldr	r1, [r5, #12]
  40aa04:	f8ca 1014 	str.w	r1, [sl, #20]
  40aa08:	2a24      	cmp	r2, #36	; 0x24
  40aa0a:	d00c      	beq.n	40aa26 <_realloc_r+0x2f6>
  40aa0c:	3510      	adds	r5, #16
  40aa0e:	f10a 0218 	add.w	r2, sl, #24
  40aa12:	e7b9      	b.n	40a988 <_realloc_r+0x258>
  40aa14:	692b      	ldr	r3, [r5, #16]
  40aa16:	6103      	str	r3, [r0, #16]
  40aa18:	696b      	ldr	r3, [r5, #20]
  40aa1a:	6143      	str	r3, [r0, #20]
  40aa1c:	f105 0218 	add.w	r2, r5, #24
  40aa20:	f100 0318 	add.w	r3, r0, #24
  40aa24:	e6cb      	b.n	40a7be <_realloc_r+0x8e>
  40aa26:	692a      	ldr	r2, [r5, #16]
  40aa28:	f8ca 2018 	str.w	r2, [sl, #24]
  40aa2c:	696a      	ldr	r2, [r5, #20]
  40aa2e:	f8ca 201c 	str.w	r2, [sl, #28]
  40aa32:	3518      	adds	r5, #24
  40aa34:	f10a 0220 	add.w	r2, sl, #32
  40aa38:	e7a6      	b.n	40a988 <_realloc_r+0x258>
  40aa3a:	4632      	mov	r2, r6
  40aa3c:	e77f      	b.n	40a93e <_realloc_r+0x20e>
  40aa3e:	4629      	mov	r1, r5
  40aa40:	4630      	mov	r0, r6
  40aa42:	9301      	str	r3, [sp, #4]
  40aa44:	f7ff fe04 	bl	40a650 <memmove>
  40aa48:	9b01      	ldr	r3, [sp, #4]
  40aa4a:	e77e      	b.n	40a94a <_realloc_r+0x21a>
  40aa4c:	68a9      	ldr	r1, [r5, #8]
  40aa4e:	f8ca 1010 	str.w	r1, [sl, #16]
  40aa52:	68e9      	ldr	r1, [r5, #12]
  40aa54:	f8ca 1014 	str.w	r1, [sl, #20]
  40aa58:	2a24      	cmp	r2, #36	; 0x24
  40aa5a:	d003      	beq.n	40aa64 <_realloc_r+0x334>
  40aa5c:	3510      	adds	r5, #16
  40aa5e:	f10a 0218 	add.w	r2, sl, #24
  40aa62:	e76c      	b.n	40a93e <_realloc_r+0x20e>
  40aa64:	692a      	ldr	r2, [r5, #16]
  40aa66:	f8ca 2018 	str.w	r2, [sl, #24]
  40aa6a:	696a      	ldr	r2, [r5, #20]
  40aa6c:	f8ca 201c 	str.w	r2, [sl, #28]
  40aa70:	3518      	adds	r5, #24
  40aa72:	f10a 0220 	add.w	r2, sl, #32
  40aa76:	e762      	b.n	40a93e <_realloc_r+0x20e>
  40aa78:	200007e0 	.word	0x200007e0

0040aa7c <_sbrk_r>:
  40aa7c:	b538      	push	{r3, r4, r5, lr}
  40aa7e:	4c07      	ldr	r4, [pc, #28]	; (40aa9c <_sbrk_r+0x20>)
  40aa80:	2300      	movs	r3, #0
  40aa82:	4605      	mov	r5, r0
  40aa84:	4608      	mov	r0, r1
  40aa86:	6023      	str	r3, [r4, #0]
  40aa88:	f7fb f8ba 	bl	405c00 <_sbrk>
  40aa8c:	1c43      	adds	r3, r0, #1
  40aa8e:	d000      	beq.n	40aa92 <_sbrk_r+0x16>
  40aa90:	bd38      	pop	{r3, r4, r5, pc}
  40aa92:	6823      	ldr	r3, [r4, #0]
  40aa94:	2b00      	cmp	r3, #0
  40aa96:	d0fb      	beq.n	40aa90 <_sbrk_r+0x14>
  40aa98:	602b      	str	r3, [r5, #0]
  40aa9a:	bd38      	pop	{r3, r4, r5, pc}
  40aa9c:	2001ab80 	.word	0x2001ab80

0040aaa0 <__sread>:
  40aaa0:	b510      	push	{r4, lr}
  40aaa2:	460c      	mov	r4, r1
  40aaa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40aaa8:	f000 fa70 	bl	40af8c <_read_r>
  40aaac:	2800      	cmp	r0, #0
  40aaae:	db03      	blt.n	40aab8 <__sread+0x18>
  40aab0:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40aab2:	4403      	add	r3, r0
  40aab4:	6523      	str	r3, [r4, #80]	; 0x50
  40aab6:	bd10      	pop	{r4, pc}
  40aab8:	89a3      	ldrh	r3, [r4, #12]
  40aaba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40aabe:	81a3      	strh	r3, [r4, #12]
  40aac0:	bd10      	pop	{r4, pc}
  40aac2:	bf00      	nop

0040aac4 <__swrite>:
  40aac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40aac8:	4616      	mov	r6, r2
  40aaca:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40aace:	461f      	mov	r7, r3
  40aad0:	05d3      	lsls	r3, r2, #23
  40aad2:	460c      	mov	r4, r1
  40aad4:	4605      	mov	r5, r0
  40aad6:	d507      	bpl.n	40aae8 <__swrite+0x24>
  40aad8:	2200      	movs	r2, #0
  40aada:	2302      	movs	r3, #2
  40aadc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40aae0:	f000 fa3e 	bl	40af60 <_lseek_r>
  40aae4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40aae8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40aaec:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40aaf0:	81a2      	strh	r2, [r4, #12]
  40aaf2:	463b      	mov	r3, r7
  40aaf4:	4632      	mov	r2, r6
  40aaf6:	4628      	mov	r0, r5
  40aaf8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40aafc:	f000 b91e 	b.w	40ad3c <_write_r>

0040ab00 <__sseek>:
  40ab00:	b510      	push	{r4, lr}
  40ab02:	460c      	mov	r4, r1
  40ab04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40ab08:	f000 fa2a 	bl	40af60 <_lseek_r>
  40ab0c:	89a3      	ldrh	r3, [r4, #12]
  40ab0e:	1c42      	adds	r2, r0, #1
  40ab10:	bf0e      	itee	eq
  40ab12:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40ab16:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40ab1a:	6520      	strne	r0, [r4, #80]	; 0x50
  40ab1c:	81a3      	strh	r3, [r4, #12]
  40ab1e:	bd10      	pop	{r4, pc}

0040ab20 <__sclose>:
  40ab20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40ab24:	f000 b982 	b.w	40ae2c <_close_r>
	...

0040ab40 <strlen>:
  40ab40:	f890 f000 	pld	[r0]
  40ab44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  40ab48:	f020 0107 	bic.w	r1, r0, #7
  40ab4c:	f06f 0c00 	mvn.w	ip, #0
  40ab50:	f010 0407 	ands.w	r4, r0, #7
  40ab54:	f891 f020 	pld	[r1, #32]
  40ab58:	f040 8049 	bne.w	40abee <strlen+0xae>
  40ab5c:	f04f 0400 	mov.w	r4, #0
  40ab60:	f06f 0007 	mvn.w	r0, #7
  40ab64:	e9d1 2300 	ldrd	r2, r3, [r1]
  40ab68:	f891 f040 	pld	[r1, #64]	; 0x40
  40ab6c:	f100 0008 	add.w	r0, r0, #8
  40ab70:	fa82 f24c 	uadd8	r2, r2, ip
  40ab74:	faa4 f28c 	sel	r2, r4, ip
  40ab78:	fa83 f34c 	uadd8	r3, r3, ip
  40ab7c:	faa2 f38c 	sel	r3, r2, ip
  40ab80:	bb4b      	cbnz	r3, 40abd6 <strlen+0x96>
  40ab82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  40ab86:	fa82 f24c 	uadd8	r2, r2, ip
  40ab8a:	f100 0008 	add.w	r0, r0, #8
  40ab8e:	faa4 f28c 	sel	r2, r4, ip
  40ab92:	fa83 f34c 	uadd8	r3, r3, ip
  40ab96:	faa2 f38c 	sel	r3, r2, ip
  40ab9a:	b9e3      	cbnz	r3, 40abd6 <strlen+0x96>
  40ab9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  40aba0:	fa82 f24c 	uadd8	r2, r2, ip
  40aba4:	f100 0008 	add.w	r0, r0, #8
  40aba8:	faa4 f28c 	sel	r2, r4, ip
  40abac:	fa83 f34c 	uadd8	r3, r3, ip
  40abb0:	faa2 f38c 	sel	r3, r2, ip
  40abb4:	b97b      	cbnz	r3, 40abd6 <strlen+0x96>
  40abb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40abba:	f101 0120 	add.w	r1, r1, #32
  40abbe:	fa82 f24c 	uadd8	r2, r2, ip
  40abc2:	f100 0008 	add.w	r0, r0, #8
  40abc6:	faa4 f28c 	sel	r2, r4, ip
  40abca:	fa83 f34c 	uadd8	r3, r3, ip
  40abce:	faa2 f38c 	sel	r3, r2, ip
  40abd2:	2b00      	cmp	r3, #0
  40abd4:	d0c6      	beq.n	40ab64 <strlen+0x24>
  40abd6:	2a00      	cmp	r2, #0
  40abd8:	bf04      	itt	eq
  40abda:	3004      	addeq	r0, #4
  40abdc:	461a      	moveq	r2, r3
  40abde:	ba12      	rev	r2, r2
  40abe0:	fab2 f282 	clz	r2, r2
  40abe4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  40abe8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40abec:	4770      	bx	lr
  40abee:	e9d1 2300 	ldrd	r2, r3, [r1]
  40abf2:	f004 0503 	and.w	r5, r4, #3
  40abf6:	f1c4 0000 	rsb	r0, r4, #0
  40abfa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40abfe:	f014 0f04 	tst.w	r4, #4
  40ac02:	f891 f040 	pld	[r1, #64]	; 0x40
  40ac06:	fa0c f505 	lsl.w	r5, ip, r5
  40ac0a:	ea62 0205 	orn	r2, r2, r5
  40ac0e:	bf1c      	itt	ne
  40ac10:	ea63 0305 	ornne	r3, r3, r5
  40ac14:	4662      	movne	r2, ip
  40ac16:	f04f 0400 	mov.w	r4, #0
  40ac1a:	e7a9      	b.n	40ab70 <strlen+0x30>

0040ac1c <__swbuf_r>:
  40ac1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40ac1e:	460d      	mov	r5, r1
  40ac20:	4614      	mov	r4, r2
  40ac22:	4606      	mov	r6, r0
  40ac24:	b110      	cbz	r0, 40ac2c <__swbuf_r+0x10>
  40ac26:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40ac28:	2b00      	cmp	r3, #0
  40ac2a:	d04b      	beq.n	40acc4 <__swbuf_r+0xa8>
  40ac2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40ac30:	69a3      	ldr	r3, [r4, #24]
  40ac32:	60a3      	str	r3, [r4, #8]
  40ac34:	b291      	uxth	r1, r2
  40ac36:	0708      	lsls	r0, r1, #28
  40ac38:	d539      	bpl.n	40acae <__swbuf_r+0x92>
  40ac3a:	6923      	ldr	r3, [r4, #16]
  40ac3c:	2b00      	cmp	r3, #0
  40ac3e:	d036      	beq.n	40acae <__swbuf_r+0x92>
  40ac40:	b2ed      	uxtb	r5, r5
  40ac42:	0489      	lsls	r1, r1, #18
  40ac44:	462f      	mov	r7, r5
  40ac46:	d515      	bpl.n	40ac74 <__swbuf_r+0x58>
  40ac48:	6822      	ldr	r2, [r4, #0]
  40ac4a:	6961      	ldr	r1, [r4, #20]
  40ac4c:	1ad3      	subs	r3, r2, r3
  40ac4e:	428b      	cmp	r3, r1
  40ac50:	da1c      	bge.n	40ac8c <__swbuf_r+0x70>
  40ac52:	3301      	adds	r3, #1
  40ac54:	68a1      	ldr	r1, [r4, #8]
  40ac56:	1c50      	adds	r0, r2, #1
  40ac58:	3901      	subs	r1, #1
  40ac5a:	60a1      	str	r1, [r4, #8]
  40ac5c:	6020      	str	r0, [r4, #0]
  40ac5e:	7015      	strb	r5, [r2, #0]
  40ac60:	6962      	ldr	r2, [r4, #20]
  40ac62:	429a      	cmp	r2, r3
  40ac64:	d01a      	beq.n	40ac9c <__swbuf_r+0x80>
  40ac66:	89a3      	ldrh	r3, [r4, #12]
  40ac68:	07db      	lsls	r3, r3, #31
  40ac6a:	d501      	bpl.n	40ac70 <__swbuf_r+0x54>
  40ac6c:	2d0a      	cmp	r5, #10
  40ac6e:	d015      	beq.n	40ac9c <__swbuf_r+0x80>
  40ac70:	4638      	mov	r0, r7
  40ac72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40ac74:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40ac76:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40ac7a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40ac7e:	81a2      	strh	r2, [r4, #12]
  40ac80:	6822      	ldr	r2, [r4, #0]
  40ac82:	6661      	str	r1, [r4, #100]	; 0x64
  40ac84:	6961      	ldr	r1, [r4, #20]
  40ac86:	1ad3      	subs	r3, r2, r3
  40ac88:	428b      	cmp	r3, r1
  40ac8a:	dbe2      	blt.n	40ac52 <__swbuf_r+0x36>
  40ac8c:	4621      	mov	r1, r4
  40ac8e:	4630      	mov	r0, r6
  40ac90:	f7fe fd2a 	bl	4096e8 <_fflush_r>
  40ac94:	b940      	cbnz	r0, 40aca8 <__swbuf_r+0x8c>
  40ac96:	6822      	ldr	r2, [r4, #0]
  40ac98:	2301      	movs	r3, #1
  40ac9a:	e7db      	b.n	40ac54 <__swbuf_r+0x38>
  40ac9c:	4621      	mov	r1, r4
  40ac9e:	4630      	mov	r0, r6
  40aca0:	f7fe fd22 	bl	4096e8 <_fflush_r>
  40aca4:	2800      	cmp	r0, #0
  40aca6:	d0e3      	beq.n	40ac70 <__swbuf_r+0x54>
  40aca8:	f04f 37ff 	mov.w	r7, #4294967295
  40acac:	e7e0      	b.n	40ac70 <__swbuf_r+0x54>
  40acae:	4621      	mov	r1, r4
  40acb0:	4630      	mov	r0, r6
  40acb2:	f7fe fc05 	bl	4094c0 <__swsetup_r>
  40acb6:	2800      	cmp	r0, #0
  40acb8:	d1f6      	bne.n	40aca8 <__swbuf_r+0x8c>
  40acba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40acbe:	6923      	ldr	r3, [r4, #16]
  40acc0:	b291      	uxth	r1, r2
  40acc2:	e7bd      	b.n	40ac40 <__swbuf_r+0x24>
  40acc4:	f7fe fd68 	bl	409798 <__sinit>
  40acc8:	e7b0      	b.n	40ac2c <__swbuf_r+0x10>
  40acca:	bf00      	nop

0040accc <_wcrtomb_r>:
  40accc:	b5f0      	push	{r4, r5, r6, r7, lr}
  40acce:	4606      	mov	r6, r0
  40acd0:	b085      	sub	sp, #20
  40acd2:	461f      	mov	r7, r3
  40acd4:	b189      	cbz	r1, 40acfa <_wcrtomb_r+0x2e>
  40acd6:	4c10      	ldr	r4, [pc, #64]	; (40ad18 <_wcrtomb_r+0x4c>)
  40acd8:	4d10      	ldr	r5, [pc, #64]	; (40ad1c <_wcrtomb_r+0x50>)
  40acda:	6824      	ldr	r4, [r4, #0]
  40acdc:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40acde:	2c00      	cmp	r4, #0
  40ace0:	bf08      	it	eq
  40ace2:	462c      	moveq	r4, r5
  40ace4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40ace8:	47a0      	blx	r4
  40acea:	1c43      	adds	r3, r0, #1
  40acec:	d103      	bne.n	40acf6 <_wcrtomb_r+0x2a>
  40acee:	2200      	movs	r2, #0
  40acf0:	238a      	movs	r3, #138	; 0x8a
  40acf2:	603a      	str	r2, [r7, #0]
  40acf4:	6033      	str	r3, [r6, #0]
  40acf6:	b005      	add	sp, #20
  40acf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40acfa:	460c      	mov	r4, r1
  40acfc:	4906      	ldr	r1, [pc, #24]	; (40ad18 <_wcrtomb_r+0x4c>)
  40acfe:	4a07      	ldr	r2, [pc, #28]	; (40ad1c <_wcrtomb_r+0x50>)
  40ad00:	6809      	ldr	r1, [r1, #0]
  40ad02:	6b49      	ldr	r1, [r1, #52]	; 0x34
  40ad04:	2900      	cmp	r1, #0
  40ad06:	bf08      	it	eq
  40ad08:	4611      	moveq	r1, r2
  40ad0a:	4622      	mov	r2, r4
  40ad0c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  40ad10:	a901      	add	r1, sp, #4
  40ad12:	47a0      	blx	r4
  40ad14:	e7e9      	b.n	40acea <_wcrtomb_r+0x1e>
  40ad16:	bf00      	nop
  40ad18:	20000240 	.word	0x20000240
  40ad1c:	20000674 	.word	0x20000674

0040ad20 <__ascii_wctomb>:
  40ad20:	b121      	cbz	r1, 40ad2c <__ascii_wctomb+0xc>
  40ad22:	2aff      	cmp	r2, #255	; 0xff
  40ad24:	d804      	bhi.n	40ad30 <__ascii_wctomb+0x10>
  40ad26:	700a      	strb	r2, [r1, #0]
  40ad28:	2001      	movs	r0, #1
  40ad2a:	4770      	bx	lr
  40ad2c:	4608      	mov	r0, r1
  40ad2e:	4770      	bx	lr
  40ad30:	238a      	movs	r3, #138	; 0x8a
  40ad32:	6003      	str	r3, [r0, #0]
  40ad34:	f04f 30ff 	mov.w	r0, #4294967295
  40ad38:	4770      	bx	lr
  40ad3a:	bf00      	nop

0040ad3c <_write_r>:
  40ad3c:	b570      	push	{r4, r5, r6, lr}
  40ad3e:	460d      	mov	r5, r1
  40ad40:	4c08      	ldr	r4, [pc, #32]	; (40ad64 <_write_r+0x28>)
  40ad42:	4611      	mov	r1, r2
  40ad44:	4606      	mov	r6, r0
  40ad46:	461a      	mov	r2, r3
  40ad48:	4628      	mov	r0, r5
  40ad4a:	2300      	movs	r3, #0
  40ad4c:	6023      	str	r3, [r4, #0]
  40ad4e:	f7f8 fa61 	bl	403214 <_write>
  40ad52:	1c43      	adds	r3, r0, #1
  40ad54:	d000      	beq.n	40ad58 <_write_r+0x1c>
  40ad56:	bd70      	pop	{r4, r5, r6, pc}
  40ad58:	6823      	ldr	r3, [r4, #0]
  40ad5a:	2b00      	cmp	r3, #0
  40ad5c:	d0fb      	beq.n	40ad56 <_write_r+0x1a>
  40ad5e:	6033      	str	r3, [r6, #0]
  40ad60:	bd70      	pop	{r4, r5, r6, pc}
  40ad62:	bf00      	nop
  40ad64:	2001ab80 	.word	0x2001ab80

0040ad68 <__register_exitproc>:
  40ad68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40ad6c:	4d2c      	ldr	r5, [pc, #176]	; (40ae20 <__register_exitproc+0xb8>)
  40ad6e:	4606      	mov	r6, r0
  40ad70:	6828      	ldr	r0, [r5, #0]
  40ad72:	4698      	mov	r8, r3
  40ad74:	460f      	mov	r7, r1
  40ad76:	4691      	mov	r9, r2
  40ad78:	f7ff f8ce 	bl	409f18 <__retarget_lock_acquire_recursive>
  40ad7c:	4b29      	ldr	r3, [pc, #164]	; (40ae24 <__register_exitproc+0xbc>)
  40ad7e:	681c      	ldr	r4, [r3, #0]
  40ad80:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40ad84:	2b00      	cmp	r3, #0
  40ad86:	d03e      	beq.n	40ae06 <__register_exitproc+0x9e>
  40ad88:	685a      	ldr	r2, [r3, #4]
  40ad8a:	2a1f      	cmp	r2, #31
  40ad8c:	dc1c      	bgt.n	40adc8 <__register_exitproc+0x60>
  40ad8e:	f102 0e01 	add.w	lr, r2, #1
  40ad92:	b176      	cbz	r6, 40adb2 <__register_exitproc+0x4a>
  40ad94:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40ad98:	2401      	movs	r4, #1
  40ad9a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40ad9e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40ada2:	4094      	lsls	r4, r2
  40ada4:	4320      	orrs	r0, r4
  40ada6:	2e02      	cmp	r6, #2
  40ada8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40adac:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40adb0:	d023      	beq.n	40adfa <__register_exitproc+0x92>
  40adb2:	3202      	adds	r2, #2
  40adb4:	f8c3 e004 	str.w	lr, [r3, #4]
  40adb8:	6828      	ldr	r0, [r5, #0]
  40adba:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40adbe:	f7ff f8ad 	bl	409f1c <__retarget_lock_release_recursive>
  40adc2:	2000      	movs	r0, #0
  40adc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40adc8:	4b17      	ldr	r3, [pc, #92]	; (40ae28 <__register_exitproc+0xc0>)
  40adca:	b30b      	cbz	r3, 40ae10 <__register_exitproc+0xa8>
  40adcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40add0:	f7ff f91e 	bl	40a010 <malloc>
  40add4:	4603      	mov	r3, r0
  40add6:	b1d8      	cbz	r0, 40ae10 <__register_exitproc+0xa8>
  40add8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40addc:	6002      	str	r2, [r0, #0]
  40adde:	2100      	movs	r1, #0
  40ade0:	6041      	str	r1, [r0, #4]
  40ade2:	460a      	mov	r2, r1
  40ade4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40ade8:	f04f 0e01 	mov.w	lr, #1
  40adec:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40adf0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40adf4:	2e00      	cmp	r6, #0
  40adf6:	d0dc      	beq.n	40adb2 <__register_exitproc+0x4a>
  40adf8:	e7cc      	b.n	40ad94 <__register_exitproc+0x2c>
  40adfa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40adfe:	430c      	orrs	r4, r1
  40ae00:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40ae04:	e7d5      	b.n	40adb2 <__register_exitproc+0x4a>
  40ae06:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40ae0a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40ae0e:	e7bb      	b.n	40ad88 <__register_exitproc+0x20>
  40ae10:	6828      	ldr	r0, [r5, #0]
  40ae12:	f7ff f883 	bl	409f1c <__retarget_lock_release_recursive>
  40ae16:	f04f 30ff 	mov.w	r0, #4294967295
  40ae1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40ae1e:	bf00      	nop
  40ae20:	20000670 	.word	0x20000670
  40ae24:	0040c058 	.word	0x0040c058
  40ae28:	0040a011 	.word	0x0040a011

0040ae2c <_close_r>:
  40ae2c:	b538      	push	{r3, r4, r5, lr}
  40ae2e:	4c07      	ldr	r4, [pc, #28]	; (40ae4c <_close_r+0x20>)
  40ae30:	2300      	movs	r3, #0
  40ae32:	4605      	mov	r5, r0
  40ae34:	4608      	mov	r0, r1
  40ae36:	6023      	str	r3, [r4, #0]
  40ae38:	f7fa fefe 	bl	405c38 <_close>
  40ae3c:	1c43      	adds	r3, r0, #1
  40ae3e:	d000      	beq.n	40ae42 <_close_r+0x16>
  40ae40:	bd38      	pop	{r3, r4, r5, pc}
  40ae42:	6823      	ldr	r3, [r4, #0]
  40ae44:	2b00      	cmp	r3, #0
  40ae46:	d0fb      	beq.n	40ae40 <_close_r+0x14>
  40ae48:	602b      	str	r3, [r5, #0]
  40ae4a:	bd38      	pop	{r3, r4, r5, pc}
  40ae4c:	2001ab80 	.word	0x2001ab80

0040ae50 <_fclose_r>:
  40ae50:	b570      	push	{r4, r5, r6, lr}
  40ae52:	b159      	cbz	r1, 40ae6c <_fclose_r+0x1c>
  40ae54:	4605      	mov	r5, r0
  40ae56:	460c      	mov	r4, r1
  40ae58:	b110      	cbz	r0, 40ae60 <_fclose_r+0x10>
  40ae5a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40ae5c:	2b00      	cmp	r3, #0
  40ae5e:	d03c      	beq.n	40aeda <_fclose_r+0x8a>
  40ae60:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40ae62:	07d8      	lsls	r0, r3, #31
  40ae64:	d505      	bpl.n	40ae72 <_fclose_r+0x22>
  40ae66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40ae6a:	b92b      	cbnz	r3, 40ae78 <_fclose_r+0x28>
  40ae6c:	2600      	movs	r6, #0
  40ae6e:	4630      	mov	r0, r6
  40ae70:	bd70      	pop	{r4, r5, r6, pc}
  40ae72:	89a3      	ldrh	r3, [r4, #12]
  40ae74:	0599      	lsls	r1, r3, #22
  40ae76:	d53c      	bpl.n	40aef2 <_fclose_r+0xa2>
  40ae78:	4621      	mov	r1, r4
  40ae7a:	4628      	mov	r0, r5
  40ae7c:	f7fe fb94 	bl	4095a8 <__sflush_r>
  40ae80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40ae82:	4606      	mov	r6, r0
  40ae84:	b133      	cbz	r3, 40ae94 <_fclose_r+0x44>
  40ae86:	69e1      	ldr	r1, [r4, #28]
  40ae88:	4628      	mov	r0, r5
  40ae8a:	4798      	blx	r3
  40ae8c:	2800      	cmp	r0, #0
  40ae8e:	bfb8      	it	lt
  40ae90:	f04f 36ff 	movlt.w	r6, #4294967295
  40ae94:	89a3      	ldrh	r3, [r4, #12]
  40ae96:	061a      	lsls	r2, r3, #24
  40ae98:	d422      	bmi.n	40aee0 <_fclose_r+0x90>
  40ae9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40ae9c:	b141      	cbz	r1, 40aeb0 <_fclose_r+0x60>
  40ae9e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40aea2:	4299      	cmp	r1, r3
  40aea4:	d002      	beq.n	40aeac <_fclose_r+0x5c>
  40aea6:	4628      	mov	r0, r5
  40aea8:	f7fe fd9c 	bl	4099e4 <_free_r>
  40aeac:	2300      	movs	r3, #0
  40aeae:	6323      	str	r3, [r4, #48]	; 0x30
  40aeb0:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40aeb2:	b121      	cbz	r1, 40aebe <_fclose_r+0x6e>
  40aeb4:	4628      	mov	r0, r5
  40aeb6:	f7fe fd95 	bl	4099e4 <_free_r>
  40aeba:	2300      	movs	r3, #0
  40aebc:	6463      	str	r3, [r4, #68]	; 0x44
  40aebe:	f7fe fc97 	bl	4097f0 <__sfp_lock_acquire>
  40aec2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40aec4:	2200      	movs	r2, #0
  40aec6:	07db      	lsls	r3, r3, #31
  40aec8:	81a2      	strh	r2, [r4, #12]
  40aeca:	d50e      	bpl.n	40aeea <_fclose_r+0x9a>
  40aecc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40aece:	f7ff f821 	bl	409f14 <__retarget_lock_close_recursive>
  40aed2:	f7fe fc93 	bl	4097fc <__sfp_lock_release>
  40aed6:	4630      	mov	r0, r6
  40aed8:	bd70      	pop	{r4, r5, r6, pc}
  40aeda:	f7fe fc5d 	bl	409798 <__sinit>
  40aede:	e7bf      	b.n	40ae60 <_fclose_r+0x10>
  40aee0:	6921      	ldr	r1, [r4, #16]
  40aee2:	4628      	mov	r0, r5
  40aee4:	f7fe fd7e 	bl	4099e4 <_free_r>
  40aee8:	e7d7      	b.n	40ae9a <_fclose_r+0x4a>
  40aeea:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40aeec:	f7ff f816 	bl	409f1c <__retarget_lock_release_recursive>
  40aef0:	e7ec      	b.n	40aecc <_fclose_r+0x7c>
  40aef2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40aef4:	f7ff f810 	bl	409f18 <__retarget_lock_acquire_recursive>
  40aef8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40aefc:	2b00      	cmp	r3, #0
  40aefe:	d1bb      	bne.n	40ae78 <_fclose_r+0x28>
  40af00:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40af02:	f016 0601 	ands.w	r6, r6, #1
  40af06:	d1b1      	bne.n	40ae6c <_fclose_r+0x1c>
  40af08:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40af0a:	f7ff f807 	bl	409f1c <__retarget_lock_release_recursive>
  40af0e:	4630      	mov	r0, r6
  40af10:	bd70      	pop	{r4, r5, r6, pc}
  40af12:	bf00      	nop

0040af14 <_fstat_r>:
  40af14:	b538      	push	{r3, r4, r5, lr}
  40af16:	460b      	mov	r3, r1
  40af18:	4c07      	ldr	r4, [pc, #28]	; (40af38 <_fstat_r+0x24>)
  40af1a:	4605      	mov	r5, r0
  40af1c:	4611      	mov	r1, r2
  40af1e:	4618      	mov	r0, r3
  40af20:	2300      	movs	r3, #0
  40af22:	6023      	str	r3, [r4, #0]
  40af24:	f7fa fe8b 	bl	405c3e <_fstat>
  40af28:	1c43      	adds	r3, r0, #1
  40af2a:	d000      	beq.n	40af2e <_fstat_r+0x1a>
  40af2c:	bd38      	pop	{r3, r4, r5, pc}
  40af2e:	6823      	ldr	r3, [r4, #0]
  40af30:	2b00      	cmp	r3, #0
  40af32:	d0fb      	beq.n	40af2c <_fstat_r+0x18>
  40af34:	602b      	str	r3, [r5, #0]
  40af36:	bd38      	pop	{r3, r4, r5, pc}
  40af38:	2001ab80 	.word	0x2001ab80

0040af3c <_isatty_r>:
  40af3c:	b538      	push	{r3, r4, r5, lr}
  40af3e:	4c07      	ldr	r4, [pc, #28]	; (40af5c <_isatty_r+0x20>)
  40af40:	2300      	movs	r3, #0
  40af42:	4605      	mov	r5, r0
  40af44:	4608      	mov	r0, r1
  40af46:	6023      	str	r3, [r4, #0]
  40af48:	f7fa fe7e 	bl	405c48 <_isatty>
  40af4c:	1c43      	adds	r3, r0, #1
  40af4e:	d000      	beq.n	40af52 <_isatty_r+0x16>
  40af50:	bd38      	pop	{r3, r4, r5, pc}
  40af52:	6823      	ldr	r3, [r4, #0]
  40af54:	2b00      	cmp	r3, #0
  40af56:	d0fb      	beq.n	40af50 <_isatty_r+0x14>
  40af58:	602b      	str	r3, [r5, #0]
  40af5a:	bd38      	pop	{r3, r4, r5, pc}
  40af5c:	2001ab80 	.word	0x2001ab80

0040af60 <_lseek_r>:
  40af60:	b570      	push	{r4, r5, r6, lr}
  40af62:	460d      	mov	r5, r1
  40af64:	4c08      	ldr	r4, [pc, #32]	; (40af88 <_lseek_r+0x28>)
  40af66:	4611      	mov	r1, r2
  40af68:	4606      	mov	r6, r0
  40af6a:	461a      	mov	r2, r3
  40af6c:	4628      	mov	r0, r5
  40af6e:	2300      	movs	r3, #0
  40af70:	6023      	str	r3, [r4, #0]
  40af72:	f7fa fe6b 	bl	405c4c <_lseek>
  40af76:	1c43      	adds	r3, r0, #1
  40af78:	d000      	beq.n	40af7c <_lseek_r+0x1c>
  40af7a:	bd70      	pop	{r4, r5, r6, pc}
  40af7c:	6823      	ldr	r3, [r4, #0]
  40af7e:	2b00      	cmp	r3, #0
  40af80:	d0fb      	beq.n	40af7a <_lseek_r+0x1a>
  40af82:	6033      	str	r3, [r6, #0]
  40af84:	bd70      	pop	{r4, r5, r6, pc}
  40af86:	bf00      	nop
  40af88:	2001ab80 	.word	0x2001ab80

0040af8c <_read_r>:
  40af8c:	b570      	push	{r4, r5, r6, lr}
  40af8e:	460d      	mov	r5, r1
  40af90:	4c08      	ldr	r4, [pc, #32]	; (40afb4 <_read_r+0x28>)
  40af92:	4611      	mov	r1, r2
  40af94:	4606      	mov	r6, r0
  40af96:	461a      	mov	r2, r3
  40af98:	4628      	mov	r0, r5
  40af9a:	2300      	movs	r3, #0
  40af9c:	6023      	str	r3, [r4, #0]
  40af9e:	f7f8 f91b 	bl	4031d8 <_read>
  40afa2:	1c43      	adds	r3, r0, #1
  40afa4:	d000      	beq.n	40afa8 <_read_r+0x1c>
  40afa6:	bd70      	pop	{r4, r5, r6, pc}
  40afa8:	6823      	ldr	r3, [r4, #0]
  40afaa:	2b00      	cmp	r3, #0
  40afac:	d0fb      	beq.n	40afa6 <_read_r+0x1a>
  40afae:	6033      	str	r3, [r6, #0]
  40afb0:	bd70      	pop	{r4, r5, r6, pc}
  40afb2:	bf00      	nop
  40afb4:	2001ab80 	.word	0x2001ab80

0040afb8 <__aeabi_uldivmod>:
  40afb8:	b953      	cbnz	r3, 40afd0 <__aeabi_uldivmod+0x18>
  40afba:	b94a      	cbnz	r2, 40afd0 <__aeabi_uldivmod+0x18>
  40afbc:	2900      	cmp	r1, #0
  40afbe:	bf08      	it	eq
  40afc0:	2800      	cmpeq	r0, #0
  40afc2:	bf1c      	itt	ne
  40afc4:	f04f 31ff 	movne.w	r1, #4294967295
  40afc8:	f04f 30ff 	movne.w	r0, #4294967295
  40afcc:	f000 b97a 	b.w	40b2c4 <__aeabi_idiv0>
  40afd0:	f1ad 0c08 	sub.w	ip, sp, #8
  40afd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40afd8:	f000 f806 	bl	40afe8 <__udivmoddi4>
  40afdc:	f8dd e004 	ldr.w	lr, [sp, #4]
  40afe0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40afe4:	b004      	add	sp, #16
  40afe6:	4770      	bx	lr

0040afe8 <__udivmoddi4>:
  40afe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40afec:	468c      	mov	ip, r1
  40afee:	460d      	mov	r5, r1
  40aff0:	4604      	mov	r4, r0
  40aff2:	9e08      	ldr	r6, [sp, #32]
  40aff4:	2b00      	cmp	r3, #0
  40aff6:	d151      	bne.n	40b09c <__udivmoddi4+0xb4>
  40aff8:	428a      	cmp	r2, r1
  40affa:	4617      	mov	r7, r2
  40affc:	d96d      	bls.n	40b0da <__udivmoddi4+0xf2>
  40affe:	fab2 fe82 	clz	lr, r2
  40b002:	f1be 0f00 	cmp.w	lr, #0
  40b006:	d00b      	beq.n	40b020 <__udivmoddi4+0x38>
  40b008:	f1ce 0c20 	rsb	ip, lr, #32
  40b00c:	fa01 f50e 	lsl.w	r5, r1, lr
  40b010:	fa20 fc0c 	lsr.w	ip, r0, ip
  40b014:	fa02 f70e 	lsl.w	r7, r2, lr
  40b018:	ea4c 0c05 	orr.w	ip, ip, r5
  40b01c:	fa00 f40e 	lsl.w	r4, r0, lr
  40b020:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40b024:	0c25      	lsrs	r5, r4, #16
  40b026:	fbbc f8fa 	udiv	r8, ip, sl
  40b02a:	fa1f f987 	uxth.w	r9, r7
  40b02e:	fb0a cc18 	mls	ip, sl, r8, ip
  40b032:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40b036:	fb08 f309 	mul.w	r3, r8, r9
  40b03a:	42ab      	cmp	r3, r5
  40b03c:	d90a      	bls.n	40b054 <__udivmoddi4+0x6c>
  40b03e:	19ed      	adds	r5, r5, r7
  40b040:	f108 32ff 	add.w	r2, r8, #4294967295
  40b044:	f080 8123 	bcs.w	40b28e <__udivmoddi4+0x2a6>
  40b048:	42ab      	cmp	r3, r5
  40b04a:	f240 8120 	bls.w	40b28e <__udivmoddi4+0x2a6>
  40b04e:	f1a8 0802 	sub.w	r8, r8, #2
  40b052:	443d      	add	r5, r7
  40b054:	1aed      	subs	r5, r5, r3
  40b056:	b2a4      	uxth	r4, r4
  40b058:	fbb5 f0fa 	udiv	r0, r5, sl
  40b05c:	fb0a 5510 	mls	r5, sl, r0, r5
  40b060:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40b064:	fb00 f909 	mul.w	r9, r0, r9
  40b068:	45a1      	cmp	r9, r4
  40b06a:	d909      	bls.n	40b080 <__udivmoddi4+0x98>
  40b06c:	19e4      	adds	r4, r4, r7
  40b06e:	f100 33ff 	add.w	r3, r0, #4294967295
  40b072:	f080 810a 	bcs.w	40b28a <__udivmoddi4+0x2a2>
  40b076:	45a1      	cmp	r9, r4
  40b078:	f240 8107 	bls.w	40b28a <__udivmoddi4+0x2a2>
  40b07c:	3802      	subs	r0, #2
  40b07e:	443c      	add	r4, r7
  40b080:	eba4 0409 	sub.w	r4, r4, r9
  40b084:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40b088:	2100      	movs	r1, #0
  40b08a:	2e00      	cmp	r6, #0
  40b08c:	d061      	beq.n	40b152 <__udivmoddi4+0x16a>
  40b08e:	fa24 f40e 	lsr.w	r4, r4, lr
  40b092:	2300      	movs	r3, #0
  40b094:	6034      	str	r4, [r6, #0]
  40b096:	6073      	str	r3, [r6, #4]
  40b098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40b09c:	428b      	cmp	r3, r1
  40b09e:	d907      	bls.n	40b0b0 <__udivmoddi4+0xc8>
  40b0a0:	2e00      	cmp	r6, #0
  40b0a2:	d054      	beq.n	40b14e <__udivmoddi4+0x166>
  40b0a4:	2100      	movs	r1, #0
  40b0a6:	e886 0021 	stmia.w	r6, {r0, r5}
  40b0aa:	4608      	mov	r0, r1
  40b0ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40b0b0:	fab3 f183 	clz	r1, r3
  40b0b4:	2900      	cmp	r1, #0
  40b0b6:	f040 808e 	bne.w	40b1d6 <__udivmoddi4+0x1ee>
  40b0ba:	42ab      	cmp	r3, r5
  40b0bc:	d302      	bcc.n	40b0c4 <__udivmoddi4+0xdc>
  40b0be:	4282      	cmp	r2, r0
  40b0c0:	f200 80fa 	bhi.w	40b2b8 <__udivmoddi4+0x2d0>
  40b0c4:	1a84      	subs	r4, r0, r2
  40b0c6:	eb65 0503 	sbc.w	r5, r5, r3
  40b0ca:	2001      	movs	r0, #1
  40b0cc:	46ac      	mov	ip, r5
  40b0ce:	2e00      	cmp	r6, #0
  40b0d0:	d03f      	beq.n	40b152 <__udivmoddi4+0x16a>
  40b0d2:	e886 1010 	stmia.w	r6, {r4, ip}
  40b0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40b0da:	b912      	cbnz	r2, 40b0e2 <__udivmoddi4+0xfa>
  40b0dc:	2701      	movs	r7, #1
  40b0de:	fbb7 f7f2 	udiv	r7, r7, r2
  40b0e2:	fab7 fe87 	clz	lr, r7
  40b0e6:	f1be 0f00 	cmp.w	lr, #0
  40b0ea:	d134      	bne.n	40b156 <__udivmoddi4+0x16e>
  40b0ec:	1beb      	subs	r3, r5, r7
  40b0ee:	0c3a      	lsrs	r2, r7, #16
  40b0f0:	fa1f fc87 	uxth.w	ip, r7
  40b0f4:	2101      	movs	r1, #1
  40b0f6:	fbb3 f8f2 	udiv	r8, r3, r2
  40b0fa:	0c25      	lsrs	r5, r4, #16
  40b0fc:	fb02 3318 	mls	r3, r2, r8, r3
  40b100:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40b104:	fb0c f308 	mul.w	r3, ip, r8
  40b108:	42ab      	cmp	r3, r5
  40b10a:	d907      	bls.n	40b11c <__udivmoddi4+0x134>
  40b10c:	19ed      	adds	r5, r5, r7
  40b10e:	f108 30ff 	add.w	r0, r8, #4294967295
  40b112:	d202      	bcs.n	40b11a <__udivmoddi4+0x132>
  40b114:	42ab      	cmp	r3, r5
  40b116:	f200 80d1 	bhi.w	40b2bc <__udivmoddi4+0x2d4>
  40b11a:	4680      	mov	r8, r0
  40b11c:	1aed      	subs	r5, r5, r3
  40b11e:	b2a3      	uxth	r3, r4
  40b120:	fbb5 f0f2 	udiv	r0, r5, r2
  40b124:	fb02 5510 	mls	r5, r2, r0, r5
  40b128:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40b12c:	fb0c fc00 	mul.w	ip, ip, r0
  40b130:	45a4      	cmp	ip, r4
  40b132:	d907      	bls.n	40b144 <__udivmoddi4+0x15c>
  40b134:	19e4      	adds	r4, r4, r7
  40b136:	f100 33ff 	add.w	r3, r0, #4294967295
  40b13a:	d202      	bcs.n	40b142 <__udivmoddi4+0x15a>
  40b13c:	45a4      	cmp	ip, r4
  40b13e:	f200 80b8 	bhi.w	40b2b2 <__udivmoddi4+0x2ca>
  40b142:	4618      	mov	r0, r3
  40b144:	eba4 040c 	sub.w	r4, r4, ip
  40b148:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40b14c:	e79d      	b.n	40b08a <__udivmoddi4+0xa2>
  40b14e:	4631      	mov	r1, r6
  40b150:	4630      	mov	r0, r6
  40b152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40b156:	f1ce 0420 	rsb	r4, lr, #32
  40b15a:	fa05 f30e 	lsl.w	r3, r5, lr
  40b15e:	fa07 f70e 	lsl.w	r7, r7, lr
  40b162:	fa20 f804 	lsr.w	r8, r0, r4
  40b166:	0c3a      	lsrs	r2, r7, #16
  40b168:	fa25 f404 	lsr.w	r4, r5, r4
  40b16c:	ea48 0803 	orr.w	r8, r8, r3
  40b170:	fbb4 f1f2 	udiv	r1, r4, r2
  40b174:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40b178:	fb02 4411 	mls	r4, r2, r1, r4
  40b17c:	fa1f fc87 	uxth.w	ip, r7
  40b180:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40b184:	fb01 f30c 	mul.w	r3, r1, ip
  40b188:	42ab      	cmp	r3, r5
  40b18a:	fa00 f40e 	lsl.w	r4, r0, lr
  40b18e:	d909      	bls.n	40b1a4 <__udivmoddi4+0x1bc>
  40b190:	19ed      	adds	r5, r5, r7
  40b192:	f101 30ff 	add.w	r0, r1, #4294967295
  40b196:	f080 808a 	bcs.w	40b2ae <__udivmoddi4+0x2c6>
  40b19a:	42ab      	cmp	r3, r5
  40b19c:	f240 8087 	bls.w	40b2ae <__udivmoddi4+0x2c6>
  40b1a0:	3902      	subs	r1, #2
  40b1a2:	443d      	add	r5, r7
  40b1a4:	1aeb      	subs	r3, r5, r3
  40b1a6:	fa1f f588 	uxth.w	r5, r8
  40b1aa:	fbb3 f0f2 	udiv	r0, r3, r2
  40b1ae:	fb02 3310 	mls	r3, r2, r0, r3
  40b1b2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40b1b6:	fb00 f30c 	mul.w	r3, r0, ip
  40b1ba:	42ab      	cmp	r3, r5
  40b1bc:	d907      	bls.n	40b1ce <__udivmoddi4+0x1e6>
  40b1be:	19ed      	adds	r5, r5, r7
  40b1c0:	f100 38ff 	add.w	r8, r0, #4294967295
  40b1c4:	d26f      	bcs.n	40b2a6 <__udivmoddi4+0x2be>
  40b1c6:	42ab      	cmp	r3, r5
  40b1c8:	d96d      	bls.n	40b2a6 <__udivmoddi4+0x2be>
  40b1ca:	3802      	subs	r0, #2
  40b1cc:	443d      	add	r5, r7
  40b1ce:	1aeb      	subs	r3, r5, r3
  40b1d0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40b1d4:	e78f      	b.n	40b0f6 <__udivmoddi4+0x10e>
  40b1d6:	f1c1 0720 	rsb	r7, r1, #32
  40b1da:	fa22 f807 	lsr.w	r8, r2, r7
  40b1de:	408b      	lsls	r3, r1
  40b1e0:	fa05 f401 	lsl.w	r4, r5, r1
  40b1e4:	ea48 0303 	orr.w	r3, r8, r3
  40b1e8:	fa20 fe07 	lsr.w	lr, r0, r7
  40b1ec:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40b1f0:	40fd      	lsrs	r5, r7
  40b1f2:	ea4e 0e04 	orr.w	lr, lr, r4
  40b1f6:	fbb5 f9fc 	udiv	r9, r5, ip
  40b1fa:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40b1fe:	fb0c 5519 	mls	r5, ip, r9, r5
  40b202:	fa1f f883 	uxth.w	r8, r3
  40b206:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40b20a:	fb09 f408 	mul.w	r4, r9, r8
  40b20e:	42ac      	cmp	r4, r5
  40b210:	fa02 f201 	lsl.w	r2, r2, r1
  40b214:	fa00 fa01 	lsl.w	sl, r0, r1
  40b218:	d908      	bls.n	40b22c <__udivmoddi4+0x244>
  40b21a:	18ed      	adds	r5, r5, r3
  40b21c:	f109 30ff 	add.w	r0, r9, #4294967295
  40b220:	d243      	bcs.n	40b2aa <__udivmoddi4+0x2c2>
  40b222:	42ac      	cmp	r4, r5
  40b224:	d941      	bls.n	40b2aa <__udivmoddi4+0x2c2>
  40b226:	f1a9 0902 	sub.w	r9, r9, #2
  40b22a:	441d      	add	r5, r3
  40b22c:	1b2d      	subs	r5, r5, r4
  40b22e:	fa1f fe8e 	uxth.w	lr, lr
  40b232:	fbb5 f0fc 	udiv	r0, r5, ip
  40b236:	fb0c 5510 	mls	r5, ip, r0, r5
  40b23a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40b23e:	fb00 f808 	mul.w	r8, r0, r8
  40b242:	45a0      	cmp	r8, r4
  40b244:	d907      	bls.n	40b256 <__udivmoddi4+0x26e>
  40b246:	18e4      	adds	r4, r4, r3
  40b248:	f100 35ff 	add.w	r5, r0, #4294967295
  40b24c:	d229      	bcs.n	40b2a2 <__udivmoddi4+0x2ba>
  40b24e:	45a0      	cmp	r8, r4
  40b250:	d927      	bls.n	40b2a2 <__udivmoddi4+0x2ba>
  40b252:	3802      	subs	r0, #2
  40b254:	441c      	add	r4, r3
  40b256:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40b25a:	eba4 0408 	sub.w	r4, r4, r8
  40b25e:	fba0 8902 	umull	r8, r9, r0, r2
  40b262:	454c      	cmp	r4, r9
  40b264:	46c6      	mov	lr, r8
  40b266:	464d      	mov	r5, r9
  40b268:	d315      	bcc.n	40b296 <__udivmoddi4+0x2ae>
  40b26a:	d012      	beq.n	40b292 <__udivmoddi4+0x2aa>
  40b26c:	b156      	cbz	r6, 40b284 <__udivmoddi4+0x29c>
  40b26e:	ebba 030e 	subs.w	r3, sl, lr
  40b272:	eb64 0405 	sbc.w	r4, r4, r5
  40b276:	fa04 f707 	lsl.w	r7, r4, r7
  40b27a:	40cb      	lsrs	r3, r1
  40b27c:	431f      	orrs	r7, r3
  40b27e:	40cc      	lsrs	r4, r1
  40b280:	6037      	str	r7, [r6, #0]
  40b282:	6074      	str	r4, [r6, #4]
  40b284:	2100      	movs	r1, #0
  40b286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40b28a:	4618      	mov	r0, r3
  40b28c:	e6f8      	b.n	40b080 <__udivmoddi4+0x98>
  40b28e:	4690      	mov	r8, r2
  40b290:	e6e0      	b.n	40b054 <__udivmoddi4+0x6c>
  40b292:	45c2      	cmp	sl, r8
  40b294:	d2ea      	bcs.n	40b26c <__udivmoddi4+0x284>
  40b296:	ebb8 0e02 	subs.w	lr, r8, r2
  40b29a:	eb69 0503 	sbc.w	r5, r9, r3
  40b29e:	3801      	subs	r0, #1
  40b2a0:	e7e4      	b.n	40b26c <__udivmoddi4+0x284>
  40b2a2:	4628      	mov	r0, r5
  40b2a4:	e7d7      	b.n	40b256 <__udivmoddi4+0x26e>
  40b2a6:	4640      	mov	r0, r8
  40b2a8:	e791      	b.n	40b1ce <__udivmoddi4+0x1e6>
  40b2aa:	4681      	mov	r9, r0
  40b2ac:	e7be      	b.n	40b22c <__udivmoddi4+0x244>
  40b2ae:	4601      	mov	r1, r0
  40b2b0:	e778      	b.n	40b1a4 <__udivmoddi4+0x1bc>
  40b2b2:	3802      	subs	r0, #2
  40b2b4:	443c      	add	r4, r7
  40b2b6:	e745      	b.n	40b144 <__udivmoddi4+0x15c>
  40b2b8:	4608      	mov	r0, r1
  40b2ba:	e708      	b.n	40b0ce <__udivmoddi4+0xe6>
  40b2bc:	f1a8 0802 	sub.w	r8, r8, #2
  40b2c0:	443d      	add	r5, r7
  40b2c2:	e72b      	b.n	40b11c <__udivmoddi4+0x134>

0040b2c4 <__aeabi_idiv0>:
  40b2c4:	4770      	bx	lr
  40b2c6:	bf00      	nop

0040b2c8 <__func__.9311>:
  40b2c8:	6d6d 5f63 7073 5f69 706f 635f 6e6f 0064     mmc_spi_op_cond.

0040b2d8 <__func__.9328>:
  40b2d8:	6473 735f 6970 6f5f 5f70 6f63 646e 0000     sd_spi_op_cond..

0040b2e8 <__func__.9344>:
  40b2e8:	6473 6f69 6f5f 5f70 6f63 646e 0000 0000     sdio_op_cond....

0040b2f8 <__func__.9400>:
  40b2f8:	6473 635f 646d 0038                         sd_cmd8.

0040b300 <__func__.9448>:
  40b300:	6473 6d5f 636d 635f 646d 3331 0000 0000     sd_mmc_cmd13....

0040b310 <mmc_trans_multipliers>:
  40b310:	0000 0000 000a 0000 000c 0000 000d 0000     ................
  40b320:	000f 0000 0014 0000 001a 0000 001e 0000     ................
  40b330:	0023 0000 0028 0000 002d 0000 0034 0000     #...(...-...4...
  40b340:	0037 0000 003c 0000 0046 0000 0050 0000     7...<...F...P...
  40b350:	7453 7261 2074 4453 6320 7261 2064 6e69     Start SD card in
  40b360:	7473 6c61 0a6c 000d 7325 203a 4d43 3844     stall...%s: CMD8
  40b370:	7220 7365 3370 2032 7830 3025 7838 5520      resp32 0x%08x U
  40b380:	554e 4153 4c42 2045 4143 4452 0d0a 0000     NUSABLE CARD....
  40b390:	4453 6320 7261 2064 3256 0d0a 0000 0000     SD card V2......
  40b3a0:	7325 203a 4d43 3544 4620 6961 0a6c 000d     %s: CMD5 Fail...
  40b3b0:	7325 203a 4d43 3544 5420 6d69 6f65 7475     %s: CMD5 Timeout
  40b3c0:	6f20 206e 7562 7973 0d0a 0000 7325 203a      on busy....%s: 
  40b3d0:	4d43 3544 2035 6146 6c69 0d0a 0000 0000     CMD55 Fail......
  40b3e0:	7325 203a 4341 444d 3134 4620 6961 0a6c     %s: ACMD41 Fail.
  40b3f0:	000d 0000 7325 203a 4341 444d 3134 5420     ....%s: ACMD41 T
  40b400:	6d69 6f65 7475 6f20 206e 7562 7973 202c     imeout on busy, 
  40b410:	6572 7073 3233 3020 2578 3830 2078 0d0a     resp32 0x%08x ..
  40b420:	0000 0000 7325 203a 4d43 3544 2038 6146     ....%s: CMD58 Fa
  40b430:	6c69 0d0a 0000 0000 7325 203a 4d43 3144     il......%s: CMD1
  40b440:	5320 4950 4620 6961 206c 202d 7542 7973      SPI Fail - Busy
  40b450:	7220 7465 7972 2520 0a64 000d 7325 203a      retry %d...%s: 
  40b460:	4d43 3144 5420 6d69 6f65 7475 6f20 206e     CMD1 Timeout on 
  40b470:	7562 7973 0d0a 0000 4453 4d2f 434d 6320     busy....SD/MMC c
  40b480:	7261 2064 6e69 7469 6169 696c 617a 6974     ard initializati
  40b490:	6e6f 6620 6961 656c 0a64 000d 7453 7261     on failed...Star
  40b4a0:	2074 4d4d 2043 6e49 7473 6c61 0a6c 000d     t MMC Install...
  40b4b0:	4453 4d2f 434d 6320 7261 2064 6572 6461     SD/MMC card read
  40b4c0:	0a79 000d 7325 203a 4d43 3144 2033 7542     y...%s: CMD13 Bu
  40b4d0:	7973 7420 6d69 6f65 7475 0d0a 0000 0000     sy timeout......

0040b4e0 <sd_mmc_trans_units>:
  40b4e0:	000a 0000 0064 0000 03e8 0000 2710 0000     ....d........'..
	...

0040b4fc <sd_trans_multipliers>:
  40b4fc:	0000 0000 000a 0000 000c 0000 000d 0000     ................
  40b50c:	000f 0000 0014 0000 0019 0000 001e 0000     ................
  40b51c:	0023 0000 0028 0000 002d 0000 0032 0000     #...(...-...2...
  40b52c:	0037 0000 003c 0000 0046 0000 0050 0000     7...<...F...P...

0040b53c <lun_desc>:
  40b53c:	194d 0040 1961 0040 1981 0040 1979 0040     M.@.a.@...@.y.@.
  40b54c:	197d 0040 198d 0040 199d 0040 19ad 0040     }.@...@...@...@.
  40b55c:	19e1 0040 b58c 0040 0d2d 0040 0d5d 0040     ..@...@.-.@.].@.
  40b56c:	0d6d 0040 0d79 0040 0d89 0040 0e45 0040     m.@.y.@...@.E.@.
  40b57c:	0f11 0040 0f61 0040 0fb1 0040 b5a8 0040     ..@.a.@...@...@.
  40b58c:	4f22 2d6e 6843 7069 5620 7269 7574 6c61     "On-Chip Virtual
  40b59c:	4d20 6d65 726f 2279 0000 0000 5322 2f44      Memory"...."SD/
  40b5ac:	4d4d 2043 6143 6472 5320 6f6c 2074 2230     MMC Card Slot 0"
  40b5bc:	0000 0000 3231 3133 3332 3231 3133 3332     ....123123123123
  40b5cc:	0000 0000 0a0d 2a2a 2a2a 6669 2820 7349     ......****if (Is
  40b5dc:	755f 6464 655f 646e 6f70 6e69 5f74 7473     _udd_endpoint_st
  40b5ec:	6c61 5f6c 6572 7571 7365 6574 2864 7065     all_requested(ep
  40b5fc:	2a29 2a2a 2d2a 2d2d 7065 253a 0d64 000a     )****---ep:%d...
  40b60c:	0a0d 2d2d 752d 6464 645f 7369 6261 656c     ..---udd_disable
  40b61c:	735f 6174 6c6c 685f 6e61 7364 6168 656b     _stall_handshake
  40b62c:	6528 2970 2d3b 2d2d 7065 253a 0d64 000a     (ep);---ep:%d...
  40b63c:	0a0d 2d2d 752d 6464 725f 7365 7465 655f     ..---udd_reset_e
  40b64c:	646e 6f70 6e69 2874 7065 3b29 2d2d 652d     ndpoint(ep);---e
  40b65c:	3a70 6425 0a0d 0000 0a0d 2d2d 752d 6464     p:%d......---udd
  40b66c:	615f 6b63 735f 6174 6c6c 6528 2970 2d3b     _ack_stall(ep);-
  40b67c:	2d2d 7065 253a 0d64 000a 0000 0a0d 2a2a     --ep:%d.......**
  40b68c:	2a2a 7845 7469 2d20 2d2d 6920 2066 4928     **Exit --- if (I
  40b69c:	5f73 6475 5f64 6e65 7064 696f 746e 735f     s_udd_endpoint_s
  40b6ac:	6174 6c6c 725f 7165 6575 7473 6465 6528     tall_requested(e
  40b6bc:	2970 2a2a 2a2a 2d2d 652d 3a70 6425 0a0d     p)****---ep:%d..
  40b6cc:	0000 0000 0a0d 2a2a 2a2a 6669 2820 5f62     ......****if (b_
  40b6dc:	6964 5f72 6e69 2620 2026 4928 5f73 6475     dir_in && (Is_ud
  40b6ec:	5f64 7274 6e61 6d73 7469 725f 6165 7964     d_transmit_ready
  40b6fc:	6528 5f70 6e69 6564 2978 7c20 207c 7470     (ep_index) || pt
  40b70c:	5f72 6f6a 2d62 623e 6e61 206b 203e 2931     r_job->bank > 1)
  40b71c:	2029 6c65 6573 2a2a 2a2a 2d2d 652d 5f70     ) else****---ep_
  40b72c:	6e69 6564 3a78 6425 0a0d 0000 0a0d 2d2d     index:%d......--
  40b73c:	752d 6464 655f 616e 6c62 5f65 7473 6c61     -udd_enable_stal
  40b74c:	5f6c 6168 646e 6873 6b61 2865 7065 695f     l_handshake(ep_i
  40b75c:	646e 7865 3b29 2d2d 652d 5f70 6e69 6564     ndex);---ep_inde
  40b76c:	3a78 6425 0a0d 0000 6542 6f66 6572 7020     x:%d....Before p
  40b77c:	6f72 6563 7373 6e69 2d67 2d2d 4455 2d50     rocessing---UDP-
  40b78c:	553e 5044 435f 5253 255b 5d64 303a 2578     >UDP_CSR[%d]:0x%
  40b79c:	3830 0d58 000a 0000 6641 6574 2072 7270     08X.....After pr
  40b7ac:	636f 7365 6973 676e 2d2d 552d 5044 3e2d     ocessing---UDP->
  40b7bc:	4455 5f50 5343 5b52 6425 3a5d 7830 3025     UDP_CSR[%d]:0x%0
  40b7cc:	5838 0a0d 0000 0000 0a0d 2a2a 2a2a 7845     8X........****Ex
  40b7dc:	7469 2d20 202d 6669 2820 5f62 6964 5f72     it -- if (b_dir_
  40b7ec:	6e69 2620 2026 4928 5f73 6475 5f64 7274     in && (Is_udd_tr
  40b7fc:	6e61 6d73 7469 725f 6165 7964 6528 5f70     ansmit_ready(ep_
  40b80c:	6e69 6564 2978 7c20 207c 7470 5f72 6f6a     index) || ptr_jo
  40b81c:	2d62 623e 6e61 206b 203e 2931 2029 6c65     b->bank > 1)) el
  40b82c:	6573 2a2a 2a2a 2d2d 652d 5f70 6e69 6564     se****---ep_inde
  40b83c:	3a78 6425 0a0d 0000                         x:%d....

0040b844 <LfnOfs>:
  40b844:	0301 0705 0e09 1210 1614 1c18 001e 0000     ................

0040b854 <cst.5949>:
  40b854:	8000 4000 2000 1000 0800 4000 2000 1000     ...@. .....@. ..
  40b864:	0800 0400 0200 0000                         ........

0040b86c <excvt.5682>:
  40b86c:	9a80 b690 b78e 808f d3d2 d8d4 ded7 8f8e     ................
  40b87c:	9290 e292 e399 ebea 9959 9d9a 9d9c 9f9e     ........Y.......
  40b88c:	d6b5 e9e0 a5a5 a7a6 a9a8 abaa 21ac afae     .............!..
  40b89c:	b1b0 b3b2 b5b4 b7b6 b9b8 bbba bdbc bfbe     ................
  40b8ac:	c1c0 c3c2 c5c4 c7c7 c9c8 cbca cdcc cfce     ................
  40b8bc:	d1d0 d3d2 d5d4 d7d6 d9d8 dbda dddc dfde     ................
  40b8cc:	e1e0 e3e2 e5e5 e7e6 e9e7 ebea eded efee     ................
  40b8dc:	f1f0 f3f2 f5f4 f7f6 f9f8 fbfa fdfc fffe     ................
  40b8ec:	feeb 4d90 4453 534f 2e35 0030 4f4e 4e20     ...MSDOS5.0.NO N
  40b8fc:	4d41 2045 2020 4620 5441 3233 2020 0020     AME    FAT32   .
  40b90c:	4f4e 4e20 4d41 2045 2020 4620 5441 2020     NO NAME    FAT  
  40b91c:	2020 0020 2a22 3c3a 3f3e 7f7c 0000 0000        ."*:<>?|.....
  40b92c:	2c2b 3d3b 5d5b 0000                         +,;=[]..

0040b934 <vst.5948>:
  40b934:	0400 0200 0100 0080 0040 0020 0010 0008     ........@. .....
  40b944:	0004 0002 0000 0000                         ........

0040b94c <Tbl>:
  40b94c:	00c7 00fc 00e9 00e2 00e4 00e0 00e5 00e7     ................
  40b95c:	00ea 00eb 00e8 00ef 00ee 00ec 00c4 00c5     ................
  40b96c:	00c9 00e6 00c6 00f4 00f6 00f2 00fb 00f9     ................
  40b97c:	00ff 00d6 00dc 00f8 00a3 00d8 00d7 0192     ................
  40b98c:	00e1 00ed 00f3 00fa 00f1 00d1 00aa 00ba     ................
  40b99c:	00bf 00ae 00ac 00bd 00bc 00a1 00ab 00bb     ................
  40b9ac:	2591 2592 2593 2502 2524 00c1 00c2 00c0     .%.%.%.%$%......
  40b9bc:	00a9 2563 2551 2557 255d 00a2 00a5 2510     ..c%Q%W%]%.....%
  40b9cc:	2514 2534 252c 251c 2500 253c 00e3 00c3     .%4%,%.%.%<%....
  40b9dc:	255a 2554 2569 2566 2560 2550 256c 00a4     Z%T%i%f%`%P%l%..
  40b9ec:	00f0 00d0 00ca 00cb 00c8 0131 00cd 00ce     ..........1.....
  40b9fc:	00cf 2518 250c 2588 2584 00a6 00cc 2580     ...%.%.%.%.....%
  40ba0c:	00d3 00df 00d4 00d2 00f5 00d5 00b5 00fe     ................
  40ba1c:	00de 00da 00db 00d9 00fd 00dd 00af 00b4     ................
  40ba2c:	00ad 00b1 2017 00be 00b6 00a7 00f7 00b8     ..... ..........
  40ba3c:	00b0 00a8 00b7 00b9 00b3 00b2 25a0 00a0     .............%..

0040ba4c <tbl_lower.5432>:
  40ba4c:	0061 0062 0063 0064 0065 0066 0067 0068     a.b.c.d.e.f.g.h.
  40ba5c:	0069 006a 006b 006c 006d 006e 006f 0070     i.j.k.l.m.n.o.p.
  40ba6c:	0071 0072 0073 0074 0075 0076 0077 0078     q.r.s.t.u.v.w.x.
  40ba7c:	0079 007a 00a1 00a2 00a3 00a5 00ac 00af     y.z.............
  40ba8c:	00e0 00e1 00e2 00e3 00e4 00e5 00e6 00e7     ................
  40ba9c:	00e8 00e9 00ea 00eb 00ec 00ed 00ee 00ef     ................
  40baac:	00f0 00f1 00f2 00f3 00f4 00f5 00f6 00f8     ................
  40babc:	00f9 00fa 00fb 00fc 00fd 00fe 00ff 0101     ................
  40bacc:	0103 0105 0107 0109 010b 010d 010f 0111     ................
  40badc:	0113 0115 0117 0119 011b 011d 011f 0121     ..............!.
  40baec:	0123 0125 0127 0129 012b 012d 012f 0131     #.%.'.).+.-./.1.
  40bafc:	0133 0135 0137 013a 013c 013e 0140 0142     3.5.7.:.<.>.@.B.
  40bb0c:	0144 0146 0148 014b 014d 014f 0151 0153     D.F.H.K.M.O.Q.S.
  40bb1c:	0155 0157 0159 015b 015d 015f 0161 0163     U.W.Y.[.]._.a.c.
  40bb2c:	0165 0167 0169 016b 016d 016f 0171 0173     e.g.i.k.m.o.q.s.
  40bb3c:	0175 0177 017a 017c 017e 0192 03b1 03b2     u.w.z.|.~.......
  40bb4c:	03b3 03b4 03b5 03b6 03b7 03b8 03b9 03ba     ................
  40bb5c:	03bb 03bc 03bd 03be 03bf 03c0 03c1 03c3     ................
  40bb6c:	03c4 03c5 03c6 03c7 03c8 03c9 03ca 0430     ..............0.
  40bb7c:	0431 0432 0433 0434 0435 0436 0437 0438     1.2.3.4.5.6.7.8.
  40bb8c:	0439 043a 043b 043c 043d 043e 043f 0440     9.:.;.<.=.>.?.@.
  40bb9c:	0441 0442 0443 0444 0445 0446 0447 0448     A.B.C.D.E.F.G.H.
  40bbac:	0449 044a 044b 044c 044d 044e 044f 0451     I.J.K.L.M.N.O.Q.
  40bbbc:	0452 0453 0454 0455 0456 0457 0458 0459     R.S.T.U.V.W.X.Y.
  40bbcc:	045a 045b 045c 045e 045f 2170 2171 2172     Z.[.\.^._.p!q!r!
  40bbdc:	2173 2174 2175 2176 2177 2178 2179 217a     s!t!u!v!w!x!y!z!
  40bbec:	217b 217c 217d 217e 217f ff41 ff42 ff43     {!|!}!~!.!A.B.C.
  40bbfc:	ff44 ff45 ff46 ff47 ff48 ff49 ff4a ff4b     D.E.F.G.H.I.J.K.
  40bc0c:	ff4c ff4d ff4e ff4f ff50 ff51 ff52 ff53     L.M.N.O.P.Q.R.S.
  40bc1c:	ff54 ff55 ff56 ff57 ff58 ff59 ff5a 0000     T.U.V.W.X.Y.Z...

0040bc2c <tbl_upper.5433>:
  40bc2c:	0041 0042 0043 0044 0045 0046 0047 0048     A.B.C.D.E.F.G.H.
  40bc3c:	0049 004a 004b 004c 004d 004e 004f 0050     I.J.K.L.M.N.O.P.
  40bc4c:	0051 0052 0053 0054 0055 0056 0057 0058     Q.R.S.T.U.V.W.X.
  40bc5c:	0059 005a 0021 ffe0 ffe1 ffe5 ffe2 ffe3     Y.Z.!...........
  40bc6c:	00c0 00c1 00c2 00c3 00c4 00c5 00c6 00c7     ................
  40bc7c:	00c8 00c9 00ca 00cb 00cc 00cd 00ce 00cf     ................
  40bc8c:	00d0 00d1 00d2 00d3 00d4 00d5 00d6 00d8     ................
  40bc9c:	00d9 00da 00db 00dc 00dd 00de 0178 0100     ............x...
  40bcac:	0102 0104 0106 0108 010a 010c 010e 0110     ................
  40bcbc:	0112 0114 0116 0118 011a 011c 011e 0120     .............. .
  40bccc:	0122 0124 0126 0128 012a 012c 012e 0130     ".$.&.(.*.,...0.
  40bcdc:	0132 0134 0136 0139 013b 013d 013f 0141     2.4.6.9.;.=.?.A.
  40bcec:	0143 0145 0147 014a 014c 014e 0150 0152     C.E.G.J.L.N.P.R.
  40bcfc:	0154 0156 0158 015a 015c 015e 0160 0162     T.V.X.Z.\.^.`.b.
  40bd0c:	0164 0166 0168 016a 016c 016e 0170 0172     d.f.h.j.l.n.p.r.
  40bd1c:	0174 0176 0179 017b 017d 0191 0391 0392     t.v.y.{.}.......
  40bd2c:	0393 0394 0395 0396 0397 0398 0399 039a     ................
  40bd3c:	039b 039c 039d 039e 039f 03a0 03a1 03a3     ................
  40bd4c:	03a4 03a5 03a6 03a7 03a8 03a9 03aa 0410     ................
  40bd5c:	0411 0412 0413 0414 0415 0416 0417 0418     ................
  40bd6c:	0419 041a 041b 041c 041d 041e 041f 0420     .............. .
  40bd7c:	0421 0422 0423 0424 0425 0426 0427 0428     !.".#.$.%.&.'.(.
  40bd8c:	0429 042a 042b 042c 042d 042e 042f 0401     ).*.+.,.-.../...
  40bd9c:	0402 0403 0404 0405 0406 0407 0408 0409     ................
  40bdac:	040a 040b 040c 040e 040f 2160 2161 2162     ..........`!a!b!
  40bdbc:	2163 2164 2165 2166 2167 2168 2169 216a     c!d!e!f!g!h!i!j!
  40bdcc:	216b 216c 216d 216e 216f ff21 ff22 ff23     k!l!m!n!o!!.".#.
  40bddc:	ff24 ff25 ff26 ff27 ff28 ff29 ff2a ff2b     $.%.&.'.(.).*.+.
  40bdec:	ff2c ff2d ff2e ff2f ff30 ff31 ff32 ff33     ,.-.../.0.1.2.3.
  40bdfc:	ff34 ff35 ff36 ff37 ff38 ff39 ff3a 0000     4.5.6.7.8.9.:...
  40be0c:	2d2d 5320 4d41 3547 2035 5355 2042 614d     -- SAMG55 USB Ma
  40be1c:	7373 5320 6f74 6172 6567 5420 7365 2074     ss Storage Test 
  40be2c:	2d2d 0a0d 2d2d 5320 4d41 3547 5f35 5058     --..-- SAMG55_XP
  40be3c:	414c 4e49 4445 505f 4f52 2d20 0d2d 2d0a     LAINED_PRO --..-
  40be4c:	202d 4443 5f43 534d 3143 535f 4d41 3547     - CDC_MSC1_SAMG5
  40be5c:	5f35 5058 414c 4e49 325f 3031 3335 2031     5_XPLAIN_210531 
  40be6c:	2d2d 0a0d 2d2d 4320 6d6f 6970 656c 3a64     --..-- Compiled:
  40be7c:	4a20 6e75 2020 2032 3032 3132 3020 3a39      Jun  2 2021 09:
  40be8c:	3233 313a 2030 2d2d 0a0d 0a0d 0000 0000     32:10 --........
  40be9c:	6f4d 6e75 2074 6964 6b73 2820 5f66 6f6d     Mount disk (f_mo
  40beac:	6e75 2974 2e2e 0d2e 000a 0000 465b 4941     unt)........[FAI
  40bebc:	5d4c 7220 7365 2520 0d64 000a 4f5b 5d4b     L] res %d...[OK]
  40becc:	0a0d 0000 6f46 6d72 7461 7420 6568 7620     ....Format the v
  40bedc:	7269 7574 6c61 6420 7369 0d6b 000a 0000     irtual disk.....
  40beec:	6c50 6165 6573 7020 756c 2067 6e61 5320     Please plug an S
  40befc:	2c44 4d20 434d 6f20 2072 4453 4f49 6320     D, MMC or SDIO c
  40bf0c:	7261 2064 6e69 7320 6f6c 2e74 0d0a 0000     ard in slot.....
  40bf1c:	6143 6472 6920 736e 6174 6c6c 4620 4941     Card install FAI
  40bf2c:	0a4c 000d 6c50 6165 6573 7520 706e 756c     L...Please unplu
  40bf3c:	2067 6e61 2064 6572 702d 756c 2067 6874     g and re-plug th
  40bf4c:	2065 6163 6472 0a2e 000d 0000 4453 202c     e card......SD, 
  40bf5c:	4d4d 2043 726f 5320 4944 204f 6163 6472     MMC or SDIO card
  40bf6c:	6920 2073 6e69 7420 6568 7320 6f6c 0a74      is in the slot.
  40bf7c:	000d 0000 7243 6165 6574 6120 6620 6c69     ....Create a fil
  40bf8c:	2065 6628 6f5f 6570 296e 2e2e 0d2e 000a     e (f_open)......
  40bf9c:	6f4e 6620 6c69 2065 7973 7473 6d65 202c     No file system, 
  40bfac:	6f66 6d72 7461 7420 6568 6420 7369 0d6b     format the disk.
  40bfbc:	000a 0000 6554 7473 5320 2f44 4d4d 2043     ....Test SD/MMC 
  40bfcc:	7473 6361 0a6b 0000 465b 4941 5d4c 0a0d     stack...[FAIL]..
  40bfdc:	0000 0000 6554 7473 6920 2073 7573 6363     ....Test is succ
  40bfec:	7365 6673 6c75 0a2e 000d 0000 0a0d 534d     essful........MS
  40bffc:	2043 6e45 6261 656c 2164 4320 756f 746e     C Enabled! Count
  40c00c:	2520 0d64 000a 0000 0a0d 534d 2043 6944      %d.......MSC Di
  40c01c:	6173 6c62 6465 0d21 000a 0000 6c50 6165     sabled!.....Plea
  40c02c:	6573 7520 706e 756c 2067 6874 2065 6163     se unplug the ca
  40c03c:	6472 0a2e 000d 0000 3a30 6473 6d5f 636d     rd......0:sd_mmc
  40c04c:	745f 7365 2e74 7874 0074 0000               _test.txt...

0040c058 <_global_impure_ptr>:
  40c058:	0248 2000 3130 3332 3534 3736 3938 4241     H.. 0123456789AB
  40c068:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  40c078:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  40c088:	296c 0000                                   l)..

0040c08c <blanks.7217>:
  40c08c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040c09c <zeroes.7218>:
  40c09c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40c0ac:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

0040c0bc <_ctype_>:
  40c0bc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40c0cc:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40c0dc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40c0ec:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40c0fc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40c10c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40c11c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40c12c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40c13c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

0040c1c0 <_init>:
  40c1c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40c1c2:	bf00      	nop
  40c1c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40c1c6:	bc08      	pop	{r3}
  40c1c8:	469e      	mov	lr, r3
  40c1ca:	4770      	bx	lr

0040c1cc <__init_array_start>:
  40c1cc:	00409589 	.word	0x00409589

0040c1d0 <__frame_dummy_init_array_entry>:
  40c1d0:	0040016d                                m.@.

0040c1d4 <_fini>:
  40c1d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40c1d6:	bf00      	nop
  40c1d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40c1da:	bc08      	pop	{r3}
  40c1dc:	469e      	mov	lr, r3
  40c1de:	4770      	bx	lr

0040c1e0 <__fini_array_start>:
  40c1e0:	00400149 	.word	0x00400149

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <efc_perform_read_sequence>:
2000000c:	b430      	push	{r4, r5}
2000000e:	b082      	sub	sp, #8
20000010:	9d04      	ldr	r5, [sp, #16]
20000012:	b35b      	cbz	r3, 2000006c <efc_perform_read_sequence+0x60>
20000014:	461c      	mov	r4, r3
20000016:	6803      	ldr	r3, [r0, #0]
20000018:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2000001c:	6003      	str	r3, [r0, #0]
2000001e:	b2c9      	uxtb	r1, r1
20000020:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
20000024:	6041      	str	r1, [r0, #4]
20000026:	6883      	ldr	r3, [r0, #8]
20000028:	9301      	str	r3, [sp, #4]
2000002a:	9b01      	ldr	r3, [sp, #4]
2000002c:	f013 0f01 	tst.w	r3, #1
20000030:	d1f9      	bne.n	20000026 <efc_perform_read_sequence+0x1a>
20000032:	b14d      	cbz	r5, 20000048 <efc_perform_read_sequence+0x3c>
20000034:	4621      	mov	r1, r4
20000036:	eb04 0385 	add.w	r3, r4, r5, lsl #2
2000003a:	4c0d      	ldr	r4, [pc, #52]	; (20000070 <efc_perform_read_sequence+0x64>)
2000003c:	f854 5f04 	ldr.w	r5, [r4, #4]!
20000040:	f841 5b04 	str.w	r5, [r1], #4
20000044:	4299      	cmp	r1, r3
20000046:	d1f9      	bne.n	2000003c <efc_perform_read_sequence+0x30>
20000048:	b2d2      	uxtb	r2, r2
2000004a:	f042 42b4 	orr.w	r2, r2, #1509949440	; 0x5a000000
2000004e:	6042      	str	r2, [r0, #4]
20000050:	6883      	ldr	r3, [r0, #8]
20000052:	9301      	str	r3, [sp, #4]
20000054:	9b01      	ldr	r3, [sp, #4]
20000056:	f013 0f01 	tst.w	r3, #1
2000005a:	d0f9      	beq.n	20000050 <efc_perform_read_sequence+0x44>
2000005c:	6803      	ldr	r3, [r0, #0]
2000005e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
20000062:	6003      	str	r3, [r0, #0]
20000064:	2000      	movs	r0, #0
20000066:	b002      	add	sp, #8
20000068:	bc30      	pop	{r4, r5}
2000006a:	4770      	bx	lr
2000006c:	2002      	movs	r0, #2
2000006e:	e7fa      	b.n	20000066 <efc_perform_read_sequence+0x5a>
20000070:	003ffffc 	.word	0x003ffffc

20000074 <efc_write_fmr>:
20000074:	6001      	str	r1, [r0, #0]
20000076:	4770      	bx	lr

20000078 <efc_perform_fcr>:
20000078:	b082      	sub	sp, #8
2000007a:	6041      	str	r1, [r0, #4]
2000007c:	6883      	ldr	r3, [r0, #8]
2000007e:	9301      	str	r3, [sp, #4]
20000080:	9b01      	ldr	r3, [sp, #4]
20000082:	f013 0f01 	tst.w	r3, #1
20000086:	d0f9      	beq.n	2000007c <efc_perform_fcr+0x4>
20000088:	9801      	ldr	r0, [sp, #4]
2000008a:	f000 000e 	and.w	r0, r0, #14
2000008e:	b002      	add	sp, #8
20000090:	4770      	bx	lr
20000092:	bf00      	nop

20000094 <sd_mmc_cards>:
	...
2000009c:	001d 0000 0000 0000 0000 0000 0000 0000     ................
	...

200000b8 <udi_api_cdc_comm>:
200000b8:	1ce5 0040 1cc9 0040 1efd 0040 1cdd 0040     ..@...@...@...@.
200000c8:	0000 0000                                   ....

200000cc <udi_api_cdc_data>:
200000cc:	20bd 0040 1ed5 0040 1cd9 0040 1cdd 0040     . @...@...@...@.
200000dc:	1ec5 0040                                   ..@.

200000e0 <udc_config>:
200000e0:	0158 2000 00ec 2000 0000 0000               X.. ... ....

200000ec <udc_config_lsfs>:
200000ec:	00f4 2000 016c 2000                         ... l.. 

200000f4 <udc_desc_fs>:
200000f4:	0209 0062 0103 c000 0832 000b 0202 0102     ..b.....2.......
20000104:	0900 0004 0100 0202 0001 2405 1000 0401     ...........$....
20000114:	0224 0502 0624 0100 2405 0301 0701 8305     $...$....$......
20000124:	4003 1000 0409 0001 0a02 0000 0700 8405     .@..............
20000134:	4002 0000 0507 0205 0040 0900 0204 0200     .@......@.......
20000144:	0608 0550 0507 0281 0040 0700 0205 4002     ..P.....@......@
20000154:	0000 0000                                   ....

20000158 <udc_device_desc>:
20000158:	0112 0200 0000 4000 03eb 2424 0100 0201     .......@..$$....
20000168:	0103 0000                                   ....

2000016c <udi_apis>:
2000016c:	00b8 2000 00cc 2000 0178 2000               ... ... x.. 

20000178 <udi_api_msc>:
20000178:	220d 0040 292d 0040 2955 0040 21b5 0040     ."@.-)@.U)@..!@.
20000188:	0000 0000                                   ....

2000018c <udi_msc_b_ack_trans>:
2000018c:	0101                                             .

2000018d <udi_msc_b_reset_trans>:
2000018d:	0001 5500                                        ...

20000190 <udi_msc_csw>:
20000190:	5355 5342 0000 0000 0000 0000 0000 0000     USBS............

200001a0 <udi_msc_inquiry_data.9603>:
200001a0:	0000 0203 001f 0000 5441 454d 204c 2020     ........ATMEL   
	...
200001c0:	2e31 3030                                   1.00

200001c4 <udc_string_desc>:
200001c4:	0300 0000 0000 0000 0000 0000 0000 0000     ................
	...

200001e0 <udc_string_desc_languageid>:
200001e0:	0304 0409                                   ....

200001e4 <udc_string_manufacturer_name>:
200001e4:	5441 454d 204c 5341 0046 0000               ATMEL ASF...

200001f0 <udc_string_product_name>:
200001f0:	4443 2043 6e61 2064 534d 0043               CDC and MSC.

200001fc <g_interrupt_enabled>:
200001fc:	0001 0000                                   ....

20000200 <SystemCoreClock>:
20000200:	1200 007a                                   ..z.

20000204 <extra_strings_desc.11075>:
20000204:	0300 0000 0000 0000 0000 0000 0000 0000     ................
	...

20000220 <udi_cdc_name.11070>:
20000220:	4443 2043 6e69 6574 6672 6361 0065 0000     CDC interface...

20000230 <udi_msc_name.11071>:
20000230:	534d 2043 6e69 6574 6672 6361 0065 0000     MSC interface...

20000240 <_impure_ptr>:
20000240:	0248 2000 0000 0000                         H.. ....

20000248 <impure_data>:
20000248:	0000 0000 0534 2000 059c 2000 0604 2000     ....4.. ... ... 
	...
200002f0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20000300:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000670 <__atexit_recursive_mutex>:
20000670:	ab5c 2001                                   \.. 

20000674 <__global_locale>:
20000674:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000694:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200006b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200006d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200006f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000714:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000734:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000754:	ad21 0040 a581 0040 0000 0000 c0bc 0040     !.@...@.......@.
20000764:	c0b8 0040 be98 0040 be98 0040 be98 0040     ..@...@...@...@.
20000774:	be98 0040 be98 0040 be98 0040 be98 0040     ..@...@...@...@.
20000784:	be98 0040 be98 0040 ffff ffff ffff ffff     ..@...@.........
20000794:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
200007bc:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

200007e0 <__malloc_av_>:
	...
200007e8:	07e0 2000 07e0 2000 07e8 2000 07e8 2000     ... ... ... ... 
200007f8:	07f0 2000 07f0 2000 07f8 2000 07f8 2000     ... ... ... ... 
20000808:	0800 2000 0800 2000 0808 2000 0808 2000     ... ... ... ... 
20000818:	0810 2000 0810 2000 0818 2000 0818 2000     ... ... ... ... 
20000828:	0820 2000 0820 2000 0828 2000 0828 2000      ..  .. (.. (.. 
20000838:	0830 2000 0830 2000 0838 2000 0838 2000     0.. 0.. 8.. 8.. 
20000848:	0840 2000 0840 2000 0848 2000 0848 2000     @.. @.. H.. H.. 
20000858:	0850 2000 0850 2000 0858 2000 0858 2000     P.. P.. X.. X.. 
20000868:	0860 2000 0860 2000 0868 2000 0868 2000     `.. `.. h.. h.. 
20000878:	0870 2000 0870 2000 0878 2000 0878 2000     p.. p.. x.. x.. 
20000888:	0880 2000 0880 2000 0888 2000 0888 2000     ... ... ... ... 
20000898:	0890 2000 0890 2000 0898 2000 0898 2000     ... ... ... ... 
200008a8:	08a0 2000 08a0 2000 08a8 2000 08a8 2000     ... ... ... ... 
200008b8:	08b0 2000 08b0 2000 08b8 2000 08b8 2000     ... ... ... ... 
200008c8:	08c0 2000 08c0 2000 08c8 2000 08c8 2000     ... ... ... ... 
200008d8:	08d0 2000 08d0 2000 08d8 2000 08d8 2000     ... ... ... ... 
200008e8:	08e0 2000 08e0 2000 08e8 2000 08e8 2000     ... ... ... ... 
200008f8:	08f0 2000 08f0 2000 08f8 2000 08f8 2000     ... ... ... ... 
20000908:	0900 2000 0900 2000 0908 2000 0908 2000     ... ... ... ... 
20000918:	0910 2000 0910 2000 0918 2000 0918 2000     ... ... ... ... 
20000928:	0920 2000 0920 2000 0928 2000 0928 2000      ..  .. (.. (.. 
20000938:	0930 2000 0930 2000 0938 2000 0938 2000     0.. 0.. 8.. 8.. 
20000948:	0940 2000 0940 2000 0948 2000 0948 2000     @.. @.. H.. H.. 
20000958:	0950 2000 0950 2000 0958 2000 0958 2000     P.. P.. X.. X.. 
20000968:	0960 2000 0960 2000 0968 2000 0968 2000     `.. `.. h.. h.. 
20000978:	0970 2000 0970 2000 0978 2000 0978 2000     p.. p.. x.. x.. 
20000988:	0980 2000 0980 2000 0988 2000 0988 2000     ... ... ... ... 
20000998:	0990 2000 0990 2000 0998 2000 0998 2000     ... ... ... ... 
200009a8:	09a0 2000 09a0 2000 09a8 2000 09a8 2000     ... ... ... ... 
200009b8:	09b0 2000 09b0 2000 09b8 2000 09b8 2000     ... ... ... ... 
200009c8:	09c0 2000 09c0 2000 09c8 2000 09c8 2000     ... ... ... ... 
200009d8:	09d0 2000 09d0 2000 09d8 2000 09d8 2000     ... ... ... ... 
200009e8:	09e0 2000 09e0 2000 09e8 2000 09e8 2000     ... ... ... ... 
200009f8:	09f0 2000 09f0 2000 09f8 2000 09f8 2000     ... ... ... ... 
20000a08:	0a00 2000 0a00 2000 0a08 2000 0a08 2000     ... ... ... ... 
20000a18:	0a10 2000 0a10 2000 0a18 2000 0a18 2000     ... ... ... ... 
20000a28:	0a20 2000 0a20 2000 0a28 2000 0a28 2000      ..  .. (.. (.. 
20000a38:	0a30 2000 0a30 2000 0a38 2000 0a38 2000     0.. 0.. 8.. 8.. 
20000a48:	0a40 2000 0a40 2000 0a48 2000 0a48 2000     @.. @.. H.. H.. 
20000a58:	0a50 2000 0a50 2000 0a58 2000 0a58 2000     P.. P.. X.. X.. 
20000a68:	0a60 2000 0a60 2000 0a68 2000 0a68 2000     `.. `.. h.. h.. 
20000a78:	0a70 2000 0a70 2000 0a78 2000 0a78 2000     p.. p.. x.. x.. 
20000a88:	0a80 2000 0a80 2000 0a88 2000 0a88 2000     ... ... ... ... 
20000a98:	0a90 2000 0a90 2000 0a98 2000 0a98 2000     ... ... ... ... 
20000aa8:	0aa0 2000 0aa0 2000 0aa8 2000 0aa8 2000     ... ... ... ... 
20000ab8:	0ab0 2000 0ab0 2000 0ab8 2000 0ab8 2000     ... ... ... ... 
20000ac8:	0ac0 2000 0ac0 2000 0ac8 2000 0ac8 2000     ... ... ... ... 
20000ad8:	0ad0 2000 0ad0 2000 0ad8 2000 0ad8 2000     ... ... ... ... 
20000ae8:	0ae0 2000 0ae0 2000 0ae8 2000 0ae8 2000     ... ... ... ... 
20000af8:	0af0 2000 0af0 2000 0af8 2000 0af8 2000     ... ... ... ... 
20000b08:	0b00 2000 0b00 2000 0b08 2000 0b08 2000     ... ... ... ... 
20000b18:	0b10 2000 0b10 2000 0b18 2000 0b18 2000     ... ... ... ... 
20000b28:	0b20 2000 0b20 2000 0b28 2000 0b28 2000      ..  .. (.. (.. 
20000b38:	0b30 2000 0b30 2000 0b38 2000 0b38 2000     0.. 0.. 8.. 8.. 
20000b48:	0b40 2000 0b40 2000 0b48 2000 0b48 2000     @.. @.. H.. H.. 
20000b58:	0b50 2000 0b50 2000 0b58 2000 0b58 2000     P.. P.. X.. X.. 
20000b68:	0b60 2000 0b60 2000 0b68 2000 0b68 2000     `.. `.. h.. h.. 
20000b78:	0b70 2000 0b70 2000 0b78 2000 0b78 2000     p.. p.. x.. x.. 
20000b88:	0b80 2000 0b80 2000 0b88 2000 0b88 2000     ... ... ... ... 
20000b98:	0b90 2000 0b90 2000 0b98 2000 0b98 2000     ... ... ... ... 
20000ba8:	0ba0 2000 0ba0 2000 0ba8 2000 0ba8 2000     ... ... ... ... 
20000bb8:	0bb0 2000 0bb0 2000 0bb8 2000 0bb8 2000     ... ... ... ... 
20000bc8:	0bc0 2000 0bc0 2000 0bc8 2000 0bc8 2000     ... ... ... ... 
20000bd8:	0bd0 2000 0bd0 2000 0bd8 2000 0bd8 2000     ... ... ... ... 

20000be8 <__malloc_sbrk_base>:
20000be8:	ffff ffff                                   ....

20000bec <__malloc_trim_threshold>:
20000bec:	0000 0002                                   ....
